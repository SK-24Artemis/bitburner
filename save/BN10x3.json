{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"current\":10,\"max\":10},\"skills\":{\"hacking\":1,\"strength\":1,\"defense\":1,\"dexterity\":1,\"agility\":1,\"charisma\":1,\"intelligence\":0},\"exp\":{\"hacking\":0,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":0,\"intelligence\":0},\"mults\":{\"hacking_chance\":1.28,\"hacking_speed\":1.28,\"hacking_money\":1.28,\"hacking_grow\":1.28,\"hacking\":1.28,\"hacking_exp\":1.28,\"strength\":1.28,\"strength_exp\":1.28,\"defense\":1.28,\"defense_exp\":1.28,\"dexterity\":1.28,\"dexterity_exp\":1.28,\"agility\":1.28,\"agility_exp\":1.28,\"charisma\":1.28,\"charisma_exp\":1.28,\"hacknet_node_money\":1.28,\"hacknet_node_purchase_cost\":0.72,\"hacknet_node_ram_cost\":0.72,\"hacknet_node_core_cost\":0.72,\"hacknet_node_level_cost\":0.72,\"company_rep\":1.28,\"faction_rep\":1.28,\"work_money\":1.28,\"crime_success\":1.28,\"crime_money\":1.28,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"money\":1030,\"city\":\"Sector-12\",\"location\":\"Travel Agency\",\"jobs\":{},\"currentServer\":\"home\",\"purchasedServers\":[],\"hacknetNodes\":[],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[],\"factionInvitations\":[],\"queuedAugmentations\":[],\"augmentations\":[],\"sourceFiles\":[{\"lvl\":3,\"n\":1},{\"lvl\":3,\"n\":4},{\"lvl\":2,\"n\":10}],\"numPeopleKilled\":0,\"karma\":0,\"hasWseAccount\":false,\"hasTixApiAccess\":false,\"has4SData\":false,\"has4SDataTixApi\":false,\"gang\":null,\"corporation\":null,\"bladeburner\":null,\"sleeves\":[{\"ctor\":\"Sleeve\",\"data\":{\"hp\":{\"current\":11,\"max\":11},\"skills\":{\"hacking\":2,\"strength\":16,\"defense\":13,\"dexterity\":5,\"agility\":4,\"charisma\":1,\"intelligence\":0},\"exp\":{\"hacking\":0,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":0,\"intelligence\":0},\"mults\":{\"hacking_chance\":1,\"hacking_speed\":1,\"hacking_money\":1,\"hacking_grow\":1,\"hacking\":1,\"hacking_exp\":1,\"strength\":1,\"strength_exp\":1,\"defense\":1,\"defense_exp\":1,\"dexterity\":1,\"dexterity_exp\":1,\"agility\":1,\"agility_exp\":1,\"charisma\":1,\"charisma_exp\":1,\"hacknet_node_money\":1,\"hacknet_node_purchase_cost\":1,\"hacknet_node_ram_cost\":1,\"hacknet_node_core_cost\":1,\"hacknet_node_level_cost\":1,\"company_rep\":1,\"faction_rep\":1,\"work_money\":1,\"crime_success\":1,\"crime_money\":1,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[],\"city\":\"Sector-12\",\"currentWork\":{\"ctor\":\"SleeveRecoveryWork\",\"data\":{\"type\":\"RECOVERY\"}},\"memory\":1,\"shock\":25.052200000000003,\"storedCycles\":4,\"sync\":25}},{\"ctor\":\"Sleeve\",\"data\":{\"hp\":{\"current\":11,\"max\":11},\"skills\":{\"hacking\":2,\"strength\":16,\"defense\":13,\"dexterity\":5,\"agility\":4,\"charisma\":1,\"intelligence\":0},\"exp\":{\"hacking\":0,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":0,\"intelligence\":0},\"mults\":{\"hacking_chance\":1,\"hacking_speed\":1,\"hacking_money\":1,\"hacking_grow\":1,\"hacking\":1,\"hacking_exp\":1,\"strength\":1,\"strength_exp\":1,\"defense\":1,\"defense_exp\":1,\"dexterity\":1,\"dexterity_exp\":1,\"agility\":1,\"agility_exp\":1,\"charisma\":1,\"charisma_exp\":1,\"hacknet_node_money\":1,\"hacknet_node_purchase_cost\":1,\"hacknet_node_ram_cost\":1,\"hacknet_node_core_cost\":1,\"hacknet_node_level_cost\":1,\"company_rep\":1,\"faction_rep\":1,\"work_money\":1,\"crime_success\":1,\"crime_money\":1,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[],\"city\":\"Sector-12\",\"currentWork\":{\"ctor\":\"SleeveRecoveryWork\",\"data\":{\"type\":\"RECOVERY\"}},\"memory\":1,\"shock\":25.052200000000003,\"storedCycles\":4,\"sync\":25}},{\"ctor\":\"Sleeve\",\"data\":{\"hp\":{\"current\":10,\"max\":10},\"skills\":{\"hacking\":1,\"strength\":1,\"defense\":1,\"dexterity\":1,\"agility\":1,\"charisma\":1,\"intelligence\":0},\"exp\":{\"hacking\":0,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":0,\"intelligence\":0},\"mults\":{\"hacking_chance\":1,\"hacking_speed\":1,\"hacking_money\":1,\"hacking_grow\":1,\"hacking\":1,\"hacking_exp\":1,\"strength\":1,\"strength_exp\":1,\"defense\":1,\"defense_exp\":1,\"dexterity\":1,\"dexterity_exp\":1,\"agility\":1,\"agility_exp\":1,\"charisma\":1,\"charisma_exp\":1,\"hacknet_node_money\":1,\"hacknet_node_purchase_cost\":1,\"hacknet_node_ram_cost\":1,\"hacknet_node_core_cost\":1,\"hacknet_node_level_cost\":1,\"company_rep\":1,\"faction_rep\":1,\"work_money\":1,\"crime_success\":1,\"crime_money\":1,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[],\"city\":\"Sector-12\",\"currentWork\":{\"ctor\":\"SleeveRecoveryWork\",\"data\":{\"type\":\"RECOVERY\"}},\"memory\":1,\"shock\":25.052200000000003,\"storedCycles\":4,\"sync\":25}}],\"sleevesFromCovenant\":0,\"bitNodeN\":10,\"entropy\":0,\"lastUpdate\":1670804047553,\"lastSave\":1670803695642,\"totalPlaytime\":9042894600,\"playtimeSinceLastAug\":35600,\"playtimeSinceLastBitnode\":35600,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":0,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":0,\"work\":0,\"servers\":0,\"other\":0,\"augmentations\":0}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":0,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":0,\"work\":0,\"servers\":0,\"other\":0,\"augmentations\":0}},\"scriptProdSinceLastAug\":0,\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1661761388993},{\"ID\":\"SCRIPTS_30\",\"unlockedOn\":1661761881624},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1661762183236},{\"ID\":\"WORKOUT\",\"unlockedOn\":1661762303207},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1661765120590},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1661770690149},{\"ID\":\"TOR\",\"unlockedOn\":1661780463188},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1661781121094},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1661781180988},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1661785440704},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1661818557143},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1661819946917},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1661848004107},{\"ID\":\"TRAVEL\",\"unlockedOn\":1661863303135},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1661922964325},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1661922964349},{\"ID\":\"4S\",\"unlockedOn\":1661922964351},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1661923116721},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1661923621337},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1662029814503},{\"ID\":\"DONATION\",\"unlockedOn\":1662080416604},{\"ID\":\"NITESEC\",\"unlockedOn\":1662127206582},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1662155663262},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1662164489662},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1662208804869},{\"ID\":\"SF1.1\",\"unlockedOn\":1662296637383},{\"ID\":\"COMBAT_3000\",\"unlockedOn\":1663290095193},{\"ID\":\"ILLUMINATI\",\"unlockedOn\":1663894814728},{\"ID\":\"THE_COVENANT\",\"unlockedOn\":1663900010454},{\"ID\":\"SF4.1\",\"unlockedOn\":1663905279519},{\"ID\":\"MAX_CORES\",\"unlockedOn\":1669369605375},{\"ID\":\"SF10.1\",\"unlockedOn\":1669369966258},{\"ID\":\"KARMA_1000000\",\"unlockedOn\":1670493098970}],\"terminalCommandHistory\":[\"kill 153\",\"run share.js -t 16350\",\"kill 154\",\"run share.js -t 16370\",\"run share.js -t 16360\",\"run share.js -t 16355\",\"run share.js -t 16354\",\"run share.js -t 16353\",\"run share.js -t 16352\",\"clear\",\"run go.js\",\"clear\",\"free\",\"clear\",\"run share.js -t 10000\",\"kill 134\",\"run share.js -t 30000\",\"kill 135\",\"run share.js -t 50000\",\"run share.js -t 40000\",\"run share.js -t 35000\",\"run share.js -t 34000\",\"run share.js -t 33000\",\"run share.js -t 32000\",\"kill 136\",\"run share.js -t 32500\",\"kill 137\",\"run share.js -t 32700\",\"kill 138\",\"run share.js -t 32900\",\"run share.js -t 32800\",\"run share.js -t 32750\",\"run share.js -t 32740\",\"run share.js -t 32730\",\"kill 139\",\"run share.js -t 32735\",\"kill 140\",\"run share.js -t 32737\",\"run share.js -t 32736\",\"clear\",\"free\",\"clear\",\"run go.js\",\"ls\",\"cd chain/\",\"ls\",\"nano faction.js\",\"home\",\"clear\",\"run go.js\"],\"focus\":false,\"currentWork\":null,\"identifier\":\"a6ea82f80ca8d\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"47.5.8.7\",\"isConnectedTo\":true,\"maxRam\":32,\"messages\":[\"hackers-starting-handbook.lit\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\"],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// NOTE: Do not import anything into this script.  The script should be\\n// self-contained and independent.\\n\\n/**\\n * A function for assertion.\\n *\\n * @param cond Assert that this condition is true.\\n * @return Throw an assertion error if the given condition is false.\\n */\\nfunction assert(cond) {\\n    if (!cond) {\\n        throw new Error(\\\"Assertion failed.\\\");\\n    }\\n}\\n\\n/**\\n * Scripts for managing a load chain.\\n */\\nfunction dir_chain() {\\n    const chain = [\\n        \\\"chain/faction.js\\\",\\n        \\\"chain/home.js\\\",\\n        \\\"chain/install.js\\\",\\n        \\\"chain/misc.js\\\",\\n        \\\"chain/money.js\\\",\\n        \\\"chain/study.js\\\",\\n    ];\\n    return chain;\\n}\\n\\n/**\\n * Scripts for solving Coding Contracts.\\n */\\nfunction dir_cct() {\\n    const cct = [\\n        \\\"cct/bipartite.js\\\",\\n        \\\"cct/caesar.js\\\",\\n        \\\"cct/grid.js\\\",\\n        \\\"cct/grid2.js\\\",\\n        \\\"cct/grid3.js\\\",\\n        \\\"cct/hamming.js\\\",\\n        \\\"cct/hamming2.js\\\",\\n        \\\"cct/interval.js\\\",\\n        \\\"cct/ip.js\\\",\\n        \\\"cct/jump.js\\\",\\n        \\\"cct/jump2.js\\\",\\n        \\\"cct/lzc.js\\\",\\n        \\\"cct/lzd.js\\\",\\n        \\\"cct/maths.js\\\",\\n        \\\"cct/parenthesis.js\\\",\\n        \\\"cct/prime.js\\\",\\n        \\\"cct/rle.js\\\",\\n        \\\"cct/solver.js\\\",\\n        \\\"cct/spiral.js\\\",\\n        \\\"cct/subarray.js\\\",\\n        \\\"cct/sum.js\\\",\\n        \\\"cct/sum2.js\\\",\\n        \\\"cct/trader.js\\\",\\n        \\\"cct/trader2.js\\\",\\n        \\\"cct/trader3.js\\\",\\n        \\\"cct/trader4.js\\\",\\n        \\\"cct/triangle.js\\\",\\n        \\\"cct/vigenere.js\\\",\\n    ];\\n    return cct;\\n}\\n\\n/**\\n * Scripts for managing a corporation.\\n */\\nfunction dir_corporation() {\\n    const corp = [\\\"corporation/corp.js\\\"];\\n    return corp;\\n}\\n\\n/**\\n * Scripts to automate gangs.\\n */\\nfunction dir_gang() {\\n    const gang = [\\n        \\\"gang/augment.js\\\",\\n        \\\"gang/crime.js\\\",\\n        \\\"gang/dead-speakers.js\\\",\\n        \\\"gang/go.js\\\",\\n        \\\"gang/program.js\\\",\\n        \\\"gang/slum-snakes.js\\\",\\n    ];\\n    return gang;\\n}\\n\\n/**\\n * Library files whose functionalities are used in various scripts.\\n */\\nfunction dir_lib() {\\n    const lib = [\\n        \\\"lib/array.js\\\",\\n        \\\"lib/cct.js\\\",\\n        \\\"lib/constant/bn.js\\\",\\n        \\\"lib/constant/bool.js\\\",\\n        \\\"lib/constant/cct.js\\\",\\n        \\\"lib/constant/corp.js\\\",\\n        \\\"lib/constant/crime.js\\\",\\n        \\\"lib/constant/exe.js\\\",\\n        \\\"lib/constant/faction.js\\\",\\n        \\\"lib/constant/gang.js\\\",\\n        \\\"lib/constant/hacknet.js\\\",\\n        \\\"lib/constant/io.js\\\",\\n        \\\"lib/constant/location.js\\\",\\n        \\\"lib/constant/misc.js\\\",\\n        \\\"lib/constant/pserv.js\\\",\\n        \\\"lib/constant/server.js\\\",\\n        \\\"lib/constant/sleeve.js\\\",\\n        \\\"lib/constant/study.js\\\",\\n        \\\"lib/constant/time.js\\\",\\n        \\\"lib/constant/work.js\\\",\\n        \\\"lib/constant/wse.js\\\",\\n        \\\"lib/corporation/corp.js\\\",\\n        \\\"lib/gang/gangster.js\\\",\\n        \\\"lib/gang/util.js\\\",\\n        \\\"lib/io.js\\\",\\n        \\\"lib/money.js\\\",\\n        \\\"lib/network.js\\\",\\n        \\\"lib/player.js\\\",\\n        \\\"lib/pserv.js\\\",\\n        \\\"lib/random.js\\\",\\n        \\\"lib/server.js\\\",\\n        \\\"lib/singularity/augment.js\\\",\\n        \\\"lib/singularity/crime.js\\\",\\n        \\\"lib/singularity/faction.js\\\",\\n        \\\"lib/singularity/network.js\\\",\\n        \\\"lib/singularity/program.js\\\",\\n        \\\"lib/singularity/study.js\\\",\\n        \\\"lib/singularity/util.js\\\",\\n        \\\"lib/singularity/work.js\\\",\\n        \\\"lib/sleeve/cc.js\\\",\\n        \\\"lib/sleeve/util.js\\\",\\n        \\\"lib/source.js\\\",\\n        \\\"lib/util.js\\\",\\n    ];\\n    return lib;\\n}\\n\\n/**\\n * Scripts at the top-most directory.\\n */\\nfunction dir_root() {\\n    const root = [\\n        \\\"buy-server.js\\\",\\n        \\\"find-cct.js\\\",\\n        \\\"go-high.js\\\",\\n        \\\"go-low.js\\\",\\n        \\\"go-mid.js\\\",\\n        \\\"go.js\\\",\\n        \\\"hack.js\\\",\\n        \\\"hnet-farm.js\\\",\\n        \\\"hram.js\\\",\\n        \\\"karma.js\\\",\\n        \\\"kill-script.js\\\",\\n        \\\"kill-server.js\\\",\\n        \\\"low-end.js\\\",\\n        \\\"nmap.js\\\",\\n        \\\"restart-server.js\\\",\\n        \\\"share.js\\\",\\n        \\\"shortest-path.js\\\",\\n        \\\"trade-bot.js\\\",\\n        \\\"world-server.js\\\",\\n    ];\\n    return root;\\n}\\n\\n/**\\n * Scripts that use the Singularity API.\\n */\\nfunction dir_singularity() {\\n    const dir = [\\n        \\\"singularity/crime.js\\\",\\n        \\\"singularity/daemon.js\\\",\\n        \\\"singularity/faction-city.js\\\",\\n        \\\"singularity/faction-crime.js\\\",\\n        \\\"singularity/faction-early.js\\\",\\n        \\\"singularity/faction-end.js\\\",\\n        \\\"singularity/faction-hack.js\\\",\\n        \\\"singularity/faction-megacorp.js\\\",\\n        \\\"singularity/faction.js\\\",\\n        \\\"singularity/home.js\\\",\\n        \\\"singularity/install.js\\\",\\n        \\\"singularity/int-farm.js\\\",\\n        \\\"singularity/money.js\\\",\\n        \\\"singularity/program.js\\\",\\n        \\\"singularity/study.js\\\",\\n    ];\\n    return dir;\\n}\\n\\n/**\\n * Scripts that use the Sleeve API.\\n */\\nfunction dir_sleeve() {\\n    const dir = [\\\"sleeve/cc.js\\\", \\\"sleeve/money.js\\\", \\\"sleeve/study.js\\\"];\\n    return dir;\\n}\\n\\n/**\\n * Scripts to test various aspects of the game.\\n */\\nfunction dir_test() {\\n    const dir = [\\n        // Scripts used to gather data on karma and stat gains for each crime.\\n        \\\"test/crime/crime.js\\\",\\n        \\\"test/crime/crime-int.js\\\",\\n        // Scripts that are used to determine the gain in Intelligence XP from\\n        // various actions.\\n        \\\"test/intelligence/augment-buy.js\\\",\\n        \\\"test/intelligence/augment-install.js\\\",\\n        \\\"test/intelligence/augment-post-install.js\\\",\\n        \\\"test/intelligence/crime.js\\\",\\n        \\\"test/intelligence/daemon.js\\\",\\n        \\\"test/intelligence/faction-join-all.js\\\",\\n        \\\"test/intelligence/faction-join.js\\\",\\n        \\\"test/intelligence/home.js\\\",\\n        \\\"test/intelligence/int.js\\\",\\n        \\\"test/intelligence/program.js\\\",\\n        \\\"test/intelligence/relocate.js\\\",\\n        \\\"test/intelligence/study.js\\\",\\n        \\\"test/intelligence/tor-program.js\\\",\\n        \\\"test/intelligence/tor.js\\\",\\n        \\\"test/intelligence/travel.js\\\",\\n        \\\"test/intelligence/util.js\\\",\\n    ];\\n    return dir;\\n}\\n\\n/**\\n * The directory structure under \\\"src/\\\" on github.com.\\n *\\n * @return All files under \\\"src/\\\" on github.com.\\n */\\nfunction dir_structure() {\\n    const filesystem = [\\n        dir_root(),\\n        dir_chain(),\\n        dir_cct(),\\n        dir_corporation(),\\n        dir_gang(),\\n        dir_lib(),\\n        dir_singularity(),\\n        dir_sleeve(),\\n        dir_test(),\\n    ].flat();\\n    assert(filesystem.length > 0);\\n    return filesystem;\\n}\\n\\n/**\\n * A formatted name of the file where we want to save the downloaded file.  The\\n * terminal command \\\"wget\\\" behaves differently from the API function\\n * \\\"ns.wget()\\\".  The command \\\"wget\\\" is happy to create the required directory\\n * if we do any of the following:\\n *\\n * wget /URL/to/src/file.js src/file.js\\n * wget /URL/to/src/file.js /src/file.js\\n *\\n * The API function \\\"ns.wget()\\\" is happy with this\\n *\\n * await ns.wget(\\\"/URL/to/src/file.js\\\", \\\"/src/file.js\\\", \\\"home\\\");\\n *\\n * but cannot handle this\\n *\\n * await ns.wget(\\\"/URL/to/src/file.js\\\", \\\"src/file.js\\\", \\\"home\\\");\\n *\\n * That is, we must have the leading forward slash \\\"/\\\" character for the\\n * function to work properly.  Here are the relevant issues on github.com:\\n *\\n * https://github.com/danielyxie/bitburner/issues/1935\\n * https://github.com/danielyxie/bitburner/issues/2115\\n *\\n * @param f A file name.  Cannot be empty string.\\n * @return A possibly new file name with the leading forward slash \\\"/\\\"\\n *     character added.\\n */\\nfunction target_name(f) {\\n    assert(f.length > 0);\\n    // Remove any leading forward slash \\\"/\\\" character.\\n    let fname = f.toString();\\n    const slash = \\\"/\\\";\\n    if (f.startsWith(slash)) {\\n        fname = f.substring(1, f.length);\\n    }\\n    // If the file should be at the root directory of the home server, then it\\n    // is just a file name without any other parent directory.  Something like\\n    // \\\"file.js\\\" would be saved to the root directory.  If the file has a\\n    // parent directory under root, then it would be something like\\n    // \\\"src/file.js\\\".  When we split the string according to \\\"/\\\", we should end\\n    // up with an array of at least 2 elements.\\n    const newf = fname.split(slash);\\n    if (newf.length === 1) {\\n        return fname;\\n    }\\n    assert(newf.length > 1);\\n    return slash + fname;\\n}\\n\\n/**\\n * Print the usage information.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction usage(ns) {\\n    const msg = \\\"Usage: run pull.js\\\";\\n    ns.tprint(msg);\\n}\\n\\n/**\\n * Pull all files (on github.com) under the directory quacksouls/bitburner/src\\n * into the game.\\n *\\n * Usage: run pull.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Sanity check.\\n    // The script does not accept any command line arguments.\\n    if (ns.args.length > 0) {\\n        usage(ns);\\n        return;\\n    }\\n    // Pull files into our home server.\\n    const home = \\\"home\\\";\\n    // The base URL where files are found.\\n    const github = \\\"https://raw.githubusercontent.com/\\\";\\n    const quack = \\\"quacksouls/bitburner/main/src/\\\";\\n    const prefix = github + quack;\\n    // Pull files into home server.\\n    for (const f of dir_structure()) {\\n        const file = prefix + f;\\n        const target = target_name(f);\\n        const success = await ns.wget(file, target, home);\\n        if (success) {\\n            ns.tprint(file);\\n        }\\n    }\\n    ns.tprint(\\\"Download complete.\\\");\\n}\\n\",\"filename\":\"pull.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"pull.js\",\"url\":\"blob:https://danielyxie.github.io/a1394588-372e-44f0-bbd7-2ec4780848c8\",\"moduleSequenceNumber\":121161}],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725291,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { pserv } from \\\"/lib/constant/pserv.js\\\";\\nimport { home_t } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { PurchasedServer } from \\\"/lib/pserv.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport {\\n    assert,\\n    choose_best_server,\\n    choose_targets,\\n    filter_bankrupt_servers,\\n    is_bankrupt,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Buy servers, each having as high an amount of RAM as we can afford.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function buy_servers(ns) {\\n    // The amount of RAM for each purchased server.  If 0, we try to purchase\\n    // servers where the amount of RAM allows us to run our hack script using\\n    // 2 threads.\\n    const psv = new PurchasedServer(ns);\\n    const default_ram = psv.default_ram();\\n    // By default, we want to purchase pserv.MIN servers.  As for the remaining\\n    // servers that make up the number to reach the maximum number of purchased\\n    // servers, we wait until we have enough money to purchase each of them.\\n    // The constant pserv.MIN should be a small number so we can bootstrap a\\n    // source of passive income and Hack XP.\\n    let ram = pserv_ram(ns, pserv.MIN);\\n    if (ram <= default_ram) {\\n        // Try to purchase servers, each with the default amount of ram.\\n        await stage_one(ns);\\n        return;\\n    }\\n    // Here we assume we already have purchased servers, each with the default\\n    // amount of RAM.  Now try to purchase servers, each with a higher amount\\n    // of RAM than the default amount.  We wait to accumulate enough money to\\n    // purchase the maximum number of servers.\\n    ram = pserv_ram(ns, psv.limit());\\n    if (ram <= default_ram) {\\n        return;\\n    }\\n    assert(ram > default_ram);\\n    await next_stage(ns, ram);\\n}\\n\\n/**\\n * Whether we have the maximum number of purchased servers.\\n *\\n * @param ns The Netscript API.\\n * @return true if we already have the maximum number of purchased servers;\\n *     false otherwise.\\n */\\nfunction has_max_pserv(ns) {\\n    const player = new Player(ns);\\n    const psv = new PurchasedServer(ns);\\n    return player.pserv().length === psv.limit();\\n}\\n\\n/**\\n * Purchase servers that have more than the default amount of RAM.  Call this\\n * function multiple times with different arguments to upgrade our purchased\\n * servers to higher RAM.\\n *\\n * @param ns The Netscript API.\\n * @param ram The amount of RAM for each purchased server.\\n */\\nasync function next_stage(ns, ram) {\\n    const psv = new PurchasedServer(ns);\\n    assert(psv.is_valid_ram(ram));\\n    // If we have zero purchased servers, then buy servers with the given\\n    // amount of RAM.\\n    const player = new Player(ns);\\n    const current_pserv = player.pserv();\\n    const msg = `Buy servers with RAM: ${ram}`;\\n    if (current_pserv.length < 1) {\\n        ns.print(msg);\\n        await update(ns, ram);\\n        return;\\n    }\\n    // Assume we have at least 1 purchased server.\\n    assert(current_pserv.length > 0);\\n    const server = new Server(ns, current_pserv[0]);\\n    if (server.ram_max() < ram) {\\n        // If each purchased server has less than the given amount of RAM, then\\n        // delete the servers and purchase servers with the given amount of RAM.\\n        ns.print(msg);\\n        psv.kill_all();\\n        await update(ns, ram);\\n    } else if (server.ram_max() === ram) {\\n        // The current purchased servers have the same amount of RAM as our\\n        // target RAM.  Continue purchasing more servers with the current\\n        // amount of RAM.\\n        ns.print(msg);\\n        await update(ns, ram);\\n    } else {\\n        // Each current purchased server has more RAM than the given amount of\\n        // RAM.\\n        assert(ram < server.ram_max());\\n    }\\n}\\n\\n/**\\n * The possible amount of RAM for each purchased server.\\n *\\n * @param ns The Netscript API.\\n * @param minserv The minimum number of servers to buy.  Must be a positive\\n *     integer.\\n * @return The amount of RAM for each purchased server.  Return 0 if we cannot\\n *     afford the given number of purchased servers.\\n */\\nfunction pserv_ram(ns, minserv) {\\n    assert(minserv > 0);\\n    // The possible amount of RAM for a purchased server.  We want the lowest\\n    // value to be the default amount of RAM.\\n    const psv = new PurchasedServer(ns);\\n    const default_ram = psv.default_ram();\\n    let ram = [default_ram];\\n    for (const r of psv.valid_ram()) {\\n        if (r > default_ram) {\\n            ram.push(r);\\n        }\\n    }\\n    ram = MyArray.sort_descending(ram);\\n    // Let's see whether we can purchase servers, each having the given amount\\n    // of RAM.  Start with the highest amount of RAM.  See if we can buy at\\n    // least minserv servers, each with the given amount of RAM.  If not, then\\n    // decrease the amount of RAM and repeat the above process.\\n    const player = new Player(ns);\\n    let psram = 0;\\n    for (const r of ram) {\\n        const cost = minserv * psv.cost(r);\\n        if (cost > player.money()) {\\n            continue;\\n        }\\n        psram = r;\\n        break;\\n    }\\n    return psram;\\n}\\n\\n/**\\n * Obtain a new batch of target servers to hack.  Exclude bankrupt servers.\\n *\\n * @param ns The Netscript API.\\n * @param target An array of current targets.\\n * @return A possibly new array of more targets to hack.\\n */\\nfunction renew_targets(ns, target) {\\n    let new_target = Array.from(target);\\n    if (new_target.length < 1) {\\n        new_target = filter_bankrupt_servers(\\n            ns,\\n            choose_targets(ns, network(ns))\\n        );\\n        assert(new_target.length > 0);\\n    }\\n    return new_target;\\n}\\n\\n/**\\n * This is the early stage, where it is assumed we are starting the game or\\n * have just installed a bunch of Augmentations.  Each purchased server should\\n * have a small amount of RAM, enough to run our hacking script using at least\\n * 2 threads.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function stage_one(ns) {\\n    // Do we already have the maximum number of purchased servers?\\n    const psv = new PurchasedServer(ns);\\n    const default_ram = psv.default_ram();\\n    if (has_max_pserv(ns)) {\\n        const msg = `RAM: ${default_ram}. Already has max pserv.`;\\n        ns.print(msg);\\n        return;\\n    }\\n    // If we have zero purchased servers, then start with purchased servers\\n    // that have the default amount of RAM.\\n    const player = new Player(ns);\\n    const current_pserv = player.pserv();\\n    const msg = `Buy servers with default RAM: ${default_ram}`;\\n    if (current_pserv.length < 1) {\\n        ns.print(msg);\\n        await update(ns, default_ram);\\n        return;\\n    }\\n    // Assume we have at least 1 purchased server.\\n    assert(current_pserv.length > 0);\\n    assert(current_pserv.length < psv.limit());\\n    const server = new Server(ns, current_pserv[0]);\\n    // Skip the stage if a current purchased server has more than the default\\n    // amount of RAM.\\n    if (default_ram < server.ram_max()) {\\n        return;\\n    }\\n    assert(server.ram_max() === default_ram);\\n    ns.print(msg);\\n    await update(ns, default_ram);\\n}\\n\\n/**\\n * Purchase the maximum number of servers and run our hack script on those\\n * servers.  The function chooses the \\\"best\\\" targets to hack.\\n *\\n * @param ns The Netscript API.\\n * @param ram The amount of RAM for each purchased server.  Must be a positive\\n *     integer and a power of 2.\\n */\\nasync function update(ns, ram) {\\n    // The amount of RAM must be a power of 2.  RAM is assumed to be in GB.\\n    const psv = new PurchasedServer(ns);\\n    const server_ram = Math.floor(ram);\\n    assert(psv.is_valid_ram(server_ram));\\n    // Continuously try to purchase a new server until we have reached the\\n    // maximum number of servers we can buy.\\n    const player = new Player(ns);\\n    let i = player.pserv().length;\\n    let target = [];\\n    // Choose a static target against which all purchased servers would attack.\\n    // Depending on the amount of RAM on our home server, we would direct all\\n    // purchased servers to attack one target.\\n    const static_target = choose_best_server(ns, renew_targets(ns, target));\\n    while (i < psv.limit()) {\\n        // Do we have enough money to buy a new server?\\n        if (player.money() > psv.cost(server_ram)) {\\n            // Purchase a new server.\\n            const hostname = psv.purchase(pserv.PREFIX, server_ram);\\n            const server = new Server(ns, hostname);\\n            // Choose the best target server.\\n            let s = \\\"\\\";\\n            if (ns.getServerMaxRam(player.home()) <= home_t.RAM_HIGH) {\\n                // We want all purchased servers to attack 1 server.\\n                s = static_target;\\n            } else {\\n                // Each purchased server attacks its own target.\\n                target = renew_targets(ns, target);\\n                s = choose_best_server(ns, target);\\n            }\\n            assert(!is_bankrupt(ns, s));\\n            const target_server = new Server(ns, s);\\n            target = target.filter((t) => t !== target_server.hostname());\\n            // Let the purchased server attack the chosen target.\\n            assert(await target_server.gain_root_access());\\n            assert(await server.deploy(target_server.hostname()));\\n            i++;\\n        }\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n}\\n\\n/**\\n * Continuously try to purchase servers and use those to hack world servers.\\n * If our funds are sufficient, try to upgrade to servers with higher amounts\\n * of RAM.\\n *\\n * Usage: run buy-server.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"getServerUsedRam\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Continuously try to purchase servers.\\n    for (;;) {\\n        await buy_servers(ns);\\n        await ns.sleep(wait_t.MINUTE);\\n    }\\n}\\n\",\"filename\":\"buy-server.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0adca831-7c0a-4233-8a0b-b4ce1b5b84a7\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/42cabf01-be70-4f8d-b503-02e2153e85b9\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0abcd309-11f1-4b8c-9981-8897c19fceca\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8a51fb99-88df-49fa-8621-281b608e99ac\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e13ac14c-438f-4dae-93d9-242688a321ae\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/52a30720-381d-4386-b4ff-26b30538af14\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/710e14fd-55db-456b-bea0-30f55d8d69a3\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c5f0f907-26e7-455c-86fa-32b2f9eab289\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a3692fa4-8292-458d-89ac-d7f5b725a074\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/133da014-2b48-413c-a620-825503dc6945\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/116bff07-5244-46d5-ab5e-cb3b88282949\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9a054799-8800-42c1-95f6-655018392a70\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fefac466-287e-4f20-bf2e-7fa53741857e\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/591d3495-40e0-47d5-89be-285ec746f34c\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8c692457-5573-4cfa-b79b-c70c88568b6c\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3ff03779-fa17-48c2-85fe-67c0aed68c4a\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3ea0c6d3-c908-43e9-9cb0-eb23461ddbf4\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/562869b6-3173-4aeb-8913-d620029c8af2\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/64ffad91-46d8-478c-97b7-01fe005c5b24\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9aeb34aa-7e69-418f-9df8-5d4f43e34f7b\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/1ae4584a-8f6e-4226-8ef1-c8164e0bd893\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/09c8388e-84f2-49f9-9a29-217936a3b5a6\",\"moduleSequenceNumber\":724840},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5c1b6e47-5b7b-4608-b571-a1fa69c3a26d\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e90f5332-ad5e-431e-83f2-2439bbec7893\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ae526f06-6cda-47df-a9bd-e384c1ab2df1\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/78ecf65f-138e-4502-a40d-a56ffabb9b3e\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1f18ea58-ec81-4d41-9613-e0f564093b3a\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/aa3a3aac-9807-4134-8ca1-67dfcfbef8ac\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b988bc94-0082-4496-b459-bbad44afb1c2\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/73578cba-b6d1-46b6-adc8-9821e167c288\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8f77b1c6-97d4-444a-96e5-b207e0eaa7a7\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f541e1a0-ff26-4ca1-9f71-973bf043750e\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/pserv.js\",\"url\":\"blob:https://danielyxie.github.io/5c428db0-d4ca-4ede-9ae9-c3c121db4532\",\"moduleSequenceNumber\":724824},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/948bcac3-c2b8-4507-9c07-f6d3c8c1a07c\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/pserv.js\",\"url\":\"blob:https://danielyxie.github.io/365a061b-054e-4a5b-bb7a-9ba885bb245c\",\"moduleSequenceNumber\":724838},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0affd461-fc79-48fa-b8c0-0c0b48272875\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/054e9a12-1e1e-4fbc-836d-5969d93437af\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fdfd16f7-eae8-4450-bbd7-52255f17ab81\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f0ea5ad6-8e1f-4e8b-b829-e0166cb8a0b8\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/72e934ea-454c-4b13-85b7-285a474b37dc\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5f1f0d99-b54e-444e-9f19-3adb1ac89f26\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9afcadd0-de69-471e-9da5-89fb0d2d6c11\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ae3b8d17-72f4-4c16-9f74-35a2983d6616\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3cd6bafb-aab1-49f2-af75-84862c72407d\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/004521d6-d46b-4976-8af8-a43b9dd303a2\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a3d2862e-3587-49f3-94a9-a2a51bb03cae\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/796143ff-a97b-4430-87f0-2039625e0828\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/e1b07a7d-3b59-4d74-91cf-789076b2a813\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/854e50d5-f679-44df-a687-c1cdf44e2e34\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e1c95472-5940-45a9-81c9-d3c7dc1e50dd\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e9374712-06c0-487b-936e-cda47ef0018b\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/15a19ffd-dc6d-4138-a2a5-06cb69628cc8\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/08e45b56-9991-4a62-9cc4-610faf3ed7bf\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a64ee6eb-382c-4055-8cfd-bc45d063655e\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fc4e1b68-e978-401c-a9f6-2207c00added\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/47768350-3400-4292-907a-7a9c5848c161\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fb1a65de-62a1-491a-9a3a-8b55e8b81955\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/32dbf7b4-8b90-4732-a59a-fba03a98c261\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/3b420164-7161-4301-b9b3-9da628730634\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/1926c4e7-4c5d-4b15-b433-623e0cc3e396\",\"moduleSequenceNumber\":724836},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/55d4fae2-04db-4d99-a499-bbf6a053d069\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f96df305-43a9-418a-a579-e03c33142666\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/pserv.js\",\"url\":\"blob:https://danielyxie.github.io/d070e9f7-b6b0-4c30-b65f-16a8fc29d333\",\"moduleSequenceNumber\":724824},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e1fd18e1-da07-411d-b31f-c022ffd2fb49\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9fb645a0-c481-4818-8f4c-e4c296a4206e\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5a9dbff4-6b99-4c8c-b549-19e7fee7f67e\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/268d42e4-b165-4cf7-9540-662c7de4c3dc\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/73f25719-95d3-457e-b395-f7dc61d47c15\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/099798a3-11ac-4e5b-be3b-02d6b4735e24\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ed81c91f-6c11-4a69-a0b7-2be402301713\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7b437b27-551d-4d8b-81e7-851006e14265\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/71ff52bc-f290-427c-b27e-994b0eb21346\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/ee1196b9-e830-497e-b1d1-cb7caaab0275\",\"moduleSequenceNumber\":724810},{\"filename\":\"buy-server.js\",\"url\":\"blob:https://danielyxie.github.io/4553092a-bd53-42d1-bbe0-7c8b00b8bcca\",\"moduleSequenceNumber\":724893}],\"dependents\":[],\"ramUsage\":16.05,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725292,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { cct } from \\\"/lib/constant/cct.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\n\\n/**\\n * Find coding contracts on world servers.  This script essentially searches\\n * the network of world servers to find coding contracts.\\n *\\n * Usage: run find-cct.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const server = network(ns);\\n    server.push(home);\\n    for (const host of server) {\\n        const file = ns.ls(host, cct.SUFFIX);\\n        if (file.length < 1) {\\n            continue;\\n        }\\n        // Print the name of the coding contract, together with its type.\\n        for (const f of file) {\\n            const type = ns.codingcontract.getContractType(f, host);\\n            ns.tprint(`${host}: ${f}, ${type}`);\\n        }\\n    }\\n}\\n\",\"filename\":\"find-cct.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":9.25,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725293,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"codingcontract.getContractType\",\"cost\":5},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_singularity_api } from \\\"/lib/source.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * This function should be run immediately after the soft reset of installing a\\n * bunch of Augmentations.  Our purpose is to gain some money and Hack XP\\n * early on when our stats are low.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reboot(ns) {\\n    let extra = \\\"low-end.js\\\";\\n    if (ns.getServerMaxRam(home) > home_t.RAM_HIGH) {\\n        extra = \\\"world-server.js\\\";\\n    }\\n    const script = [\\n        extra,\\n        \\\"hnet-farm.js\\\",\\n        \\\"buy-server.js\\\",\\n        \\\"trade-bot.js\\\",\\n        \\\"/cct/solver.js\\\",\\n        \\\"hram.js\\\",\\n    ];\\n    script.forEach((s) => exec(ns, s));\\n}\\n\\n/**\\n * NOTE: Assume our home server to have at least 512GB RAM.\\n *\\n * Restart our source of income and Hack XP.  This script is useful whenever we\\n * have installed a bunch of Augmentations and we want to automatically restart\\n * scripts to:\\n *\\n * (1) Purchase Hacknet nodes and manage our farm of nodes.\\n * (2) Buy servers and use each purchased server to hack a target server in the\\n *     game world.\\n * (3) Gain root access to servers in the game world (excluding purchased\\n *     servers) and use each server to hack itself or a low-end server.\\n *\\n * Usage: run go-high.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    log(ns, \\\"Home server is high-end. Bootstrap with all scripts.\\\");\\n    reboot(ns);\\n    assert(has_singularity_api(ns));\\n    exec(ns, \\\"/chain/study.js\\\");\\n}\\n\",\"filename\":\"go-high.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b77c8005-7ec9-4637-a1e2-3b4de3b77c4a\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4d4b7762-874c-40e2-a2e0-a1b1a984dfd3\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e53a8774-aee3-488e-9fdc-5720fbedd0c9\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/12a08c06-433c-4686-b628-73b01d767f95\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2ffd0ec6-ad8b-4bae-b8a5-40000f8824b3\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/545be46a-fa20-4018-9196-4c1b02cbccc7\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b21726b9-0731-481f-bf0d-5466072727a4\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/53fde541-d1dc-4c49-90f1-09a89f0ddebb\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/95fb0cc1-acbd-4274-b3a6-63ec7417b74e\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8f3ea5cb-efcf-42a1-aefe-a108354d2ee4\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/51e5058c-3962-4ae2-bb24-55434a9916a5\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a250bf50-5aaf-481b-8a0b-f3ff5f6c8317\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/987ef4c5-1be5-405b-afe8-60b7b1d7299d\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a2f015f3-2d49-439a-948b-0e11f6c3ede2\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/45e087c5-dfcf-4020-9579-a2cfdf678f33\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/581fbbca-3762-442c-bfa9-7cbbfa9e06f2\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bbca8c30-1f6c-4efd-9f58-f7d74c8a50ce\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0f10d565-8b06-4965-9eb9-4d76a26ba2a9\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/415d31e6-9fc3-41d4-a2ed-0a9938b36b2d\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/434b2548-c728-4d11-bd94-5cba7fc8784c\",\"moduleSequenceNumber\":724812},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/711269f3-fc4b-4543-becd-0bcf1ca70478\",\"moduleSequenceNumber\":724851},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/83593953-568f-422a-912d-5f388f9de9e1\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/451e08a8-6125-4562-9a78-115858f97b19\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6b9e3a2a-ca35-4012-9e71-35c9d5f7edd4\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e25bf047-1515-4efc-9320-11505a2af83b\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/689ba392-f693-44b4-8687-ea4cc861e225\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0def7f62-5aac-4270-870d-ddb36c4d1e39\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4ca14f26-e76c-4195-9f72-4f0d97e604e9\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e0bee67d-c13f-4ace-a1fc-15687a4c390b\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3de88356-faec-4847-9e9e-f926fdbbd84c\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d99598dd-787a-414f-a405-3b0a76b1f7d2\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/25c65355-8936-47ad-a1e6-056f8d3962c1\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6e1abd1d-c64f-408e-9e48-0bd25bd76fb4\",\"moduleSequenceNumber\":724825},{\"filename\":\"go-high.js\",\"url\":\"blob:https://danielyxie.github.io/d6126a6a-07f3-48ac-afba-9f5e7b445c12\",\"moduleSequenceNumber\":724890}],\"dependents\":[],\"ramUsage\":3.05,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725294,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_singularity_api } from \\\"/lib/source.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * This function should be run immediately after the soft reset of installing a\\n * bunch of Augmentations or after visiting a new BitNode.  Our purpose is to\\n * gain some money and Hack XP early on when our stats are low.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function reboot(ns) {\\n    // Execute a script, let it run for a while, kill the script, and run\\n    // another script.  Assume we do not have enough RAM to let multiple\\n    // scripts running at the same time.\\n    const script = [\\\"hnet-farm.js\\\", \\\"low-end.js\\\"];\\n    for (const s of script) {\\n        exec(ns, s);\\n        await ns.sleep(wait_t.DEFAULT);\\n        assert(ns.kill(s, home));\\n    }\\n}\\n\\n/**\\n * NOTE: This script assumes our home server has a small amount of RAM,\\n * possibly less than 64GB RAM.\\n *\\n * Restart our source of income and Hack XP.  This script is useful whenever we\\n * have installed a bunch of Augmentations and we want to automatically restart\\n * scripts to:\\n *\\n * (1) Purchase Hacknet nodes and manage our farm of nodes.\\n * (2) Buy servers and use each purchased server to hack a target server in the\\n *     game world.\\n * (3) Gain root access to servers in the game world (excluding purchased\\n *     servers) and use each server to hack itself or a low-end server.\\n *\\n * Our goal in this script is to raise the amount of RAM on our home server to\\n * at least 512GB.\\n *\\n * Usage: run go-low.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    log(\\n        ns,\\n        \\\"Home server is low-end. Bootstrap with a small number of scripts.\\\"\\n    );\\n    await reboot(ns);\\n    assert(has_singularity_api(ns));\\n    exec(ns, \\\"/chain/study.js\\\");\\n}\\n\",\"filename\":\"go-low.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e25683ed-4272-4418-a041-bafe81090d73\",\"moduleSequenceNumber\":222},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/168fb8bc-61b5-4e86-8e8c-a82ad57be0b1\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a6de98c2-7ba8-442b-b48e-2f7c496766dd\",\"moduleSequenceNumber\":217},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2cb436a1-2ea4-4505-ba16-71968a4d8b08\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/eaabda3c-522c-487a-8ab5-0ee902cfb939\",\"moduleSequenceNumber\":214},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d85c7b30-7381-4dec-a713-614ba0296319\",\"moduleSequenceNumber\":213},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bf94d581-5e1f-4d7f-815f-4e552edfda90\",\"moduleSequenceNumber\":210},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c11fc172-ba17-480e-8b08-9091efa67c54\",\"moduleSequenceNumber\":209},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d987bf5d-b78d-4767-a1c1-e1dae66bc1ee\",\"moduleSequenceNumber\":244},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/78a4503d-85e5-48ab-9591-38eaddb65938\",\"moduleSequenceNumber\":222},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a6911ff9-0a7c-4a67-bc24-2647ef3a6be3\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cbd4a564-78c7-48bc-91d2-a0391cb508e1\",\"moduleSequenceNumber\":217},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/eb792a13-2afb-4d13-8c4a-3b66441ed95c\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8a0fbc54-3ef5-40f2-b541-419a04e9f9ae\",\"moduleSequenceNumber\":214},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1af5b630-13b1-445f-94f4-5bb4fb5db907\",\"moduleSequenceNumber\":213},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e7dc9427-0aea-44a2-b6fc-e92ef553e046\",\"moduleSequenceNumber\":210},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8df7bd88-1763-4539-9807-12df33e62cc9\",\"moduleSequenceNumber\":209},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bf390adc-7513-4573-baca-740b048278cd\",\"moduleSequenceNumber\":244},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/1a8a4082-7fa4-4c8d-a495-a8082e9f1ce6\",\"moduleSequenceNumber\":205},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/f5ad155d-6b2e-4ccb-8e99-592f24a111f6\",\"moduleSequenceNumber\":204},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/7e491f92-3060-4554-8bbd-0bef78842ca6\",\"moduleSequenceNumber\":243},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c0229012-ac1e-4c25-88a4-22b3ae6625d3\",\"moduleSequenceNumber\":222},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0aea2205-a676-44a6-af4a-fff7adc4512f\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0b207e16-e7d1-4e0d-85e3-32993ca22378\",\"moduleSequenceNumber\":217},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/61cd04ce-6ebc-49d3-86c5-0e73dfa7a990\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a2a4756b-d2c4-4ef6-ab27-b4ebe169eee3\",\"moduleSequenceNumber\":214},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8fc13b31-185a-473e-9242-385c713ad8bd\",\"moduleSequenceNumber\":213},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/739257d7-9009-4da8-9082-6f0fbb207604\",\"moduleSequenceNumber\":210},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cbb021fd-1795-481b-88ca-fbd763d6f259\",\"moduleSequenceNumber\":209},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e49db9aa-76f4-4d55-a25b-cac4e67110d8\",\"moduleSequenceNumber\":244},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7de72c43-e5c0-4d35-af9e-a2c0d850a8f1\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/7f8ad344-6582-4068-bcb2-60bf179b51ee\",\"moduleSequenceNumber\":226},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5223d773-9c48-47e6-a6c7-45877e2ae60b\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/604c4072-1b46-4e86-8dc0-7d11d7e9822f\",\"moduleSequenceNumber\":217},{\"filename\":\"go-low.js\",\"url\":\"blob:https://danielyxie.github.io/54dd18db-2e3b-496c-b50e-b842465341b5\",\"moduleSequenceNumber\":282}],\"dependents\":[],\"ramUsage\":3.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725295,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_singularity_api } from \\\"/lib/source.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * This function should be run immediately after the soft reset of installing a\\n * bunch of Augmentations.  Our purpose is to gain some money and Hack XP\\n * early on when our stats are low.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function reboot(ns) {\\n    const target = \\\"low-end.js\\\";\\n    const script = [\\\"hnet-farm.js\\\", target, \\\"buy-server.js\\\", \\\"/cct/solver.js\\\"];\\n    script.forEach((s) => exec(ns, s));\\n    // Wait a while and then kill a script to free up some RAM on the home\\n    // server.\\n    await ns.sleep(wait_t.MINUTE);\\n    script.filter((s) => s !== target).forEach((t) => assert(ns.kill(t, home)));\\n}\\n\\n/**\\n * NOTE: Assume our home server has at least 128GB RAM.\\n *\\n * Restart our source of income and Hack XP.  This script is useful whenever we\\n * have installed a bunch of Augmentations and we want to automatically restart\\n * scripts to:\\n *\\n * (1) Purchase Hacknet nodes and manage our farm of nodes.\\n * (2) Buy servers and use each purchased server to hack a target server in the\\n *     game world.\\n * (3) Gain root access to servers in the game world (excluding purchased\\n *     servers) and use each server to hack itself or a low-end server.\\n *\\n * Usage: run go-mid.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    log(ns, \\\"Home server is mid-end. Bootstrap with some scripts.\\\");\\n    await reboot(ns);\\n    assert(has_singularity_api(ns));\\n    exec(ns, \\\"/chain/study.js\\\");\\n}\\n\",\"filename\":\"go-mid.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ed36f810-f73a-488a-9fa0-290303926642\",\"moduleSequenceNumber\":222},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ea7c3d1f-0eff-4c3a-973e-a082f5a9e02b\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/73022399-fc57-4b41-a3b8-923d6a88e1a6\",\"moduleSequenceNumber\":217},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7e319d08-2942-4df3-91be-68a42426f071\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/02c5a54a-b790-408a-9e9c-85f75f8b7ad1\",\"moduleSequenceNumber\":214},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d78a43f5-fa60-4bd3-893c-93ff7a3070c4\",\"moduleSequenceNumber\":213},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/361cfca1-c1d6-44e6-994c-b5c6d58c88be\",\"moduleSequenceNumber\":210},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6da5aeca-ddf5-4d49-909f-17f6a6d2b7d0\",\"moduleSequenceNumber\":209},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f3aa4ff6-c3f1-431d-b073-0f463246ad42\",\"moduleSequenceNumber\":244},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b2ab18aa-90d8-4588-a884-0344bac8f257\",\"moduleSequenceNumber\":222},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5314e984-0534-477b-a0ba-f145007c67b3\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8a5a9c80-0161-49f8-afdc-a1295b4c9946\",\"moduleSequenceNumber\":217},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ae35e7fb-f042-4fbb-94e0-0a5e1be07df1\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7d4e98fc-1b38-4c76-b1f8-19302a07cf09\",\"moduleSequenceNumber\":214},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cb8f1041-610e-4291-90c7-cb8e94388907\",\"moduleSequenceNumber\":213},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4844c564-b71b-4c95-b6eb-155a3416b816\",\"moduleSequenceNumber\":210},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e2e18539-8c3f-49ad-b8a0-5cf25bc31c32\",\"moduleSequenceNumber\":209},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4c8862d8-c01b-49fe-9df2-fb62dd0562b3\",\"moduleSequenceNumber\":244},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/136a8a5c-44a3-403d-8dbd-376658ec9b74\",\"moduleSequenceNumber\":205},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/42eb0140-3d3c-41a6-a08b-5ae6e365bed8\",\"moduleSequenceNumber\":204},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/4f66aebe-9794-4944-8419-dd9920b05707\",\"moduleSequenceNumber\":243},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fa58eb47-6d47-402d-ac99-d2d295e722e9\",\"moduleSequenceNumber\":222},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8ea14f4f-f66e-4314-9550-80970112f27c\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f97ce7da-672b-4501-81a0-dff8a1035809\",\"moduleSequenceNumber\":217},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e20f148f-2548-49ee-9889-784b37dfba3b\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/121cd95d-9b9b-4099-8e5e-a29c5452b2e1\",\"moduleSequenceNumber\":214},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/23ed7cdd-65c2-4494-b311-f5aee5837dc0\",\"moduleSequenceNumber\":213},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fd6fee31-592b-417e-b308-0630b48ce353\",\"moduleSequenceNumber\":210},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cfc97561-7686-4c24-803a-3eb4f5de3755\",\"moduleSequenceNumber\":209},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/495d83a5-2143-40b6-abe3-eef78c42abab\",\"moduleSequenceNumber\":244},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/119c568c-2331-440e-b29f-f364f678db5c\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/640557a6-4dab-4f5d-a398-5e27e09f7aeb\",\"moduleSequenceNumber\":226},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/158a2ca3-406e-4fe0-a47d-4ecd5b330478\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f8cc7c62-e0ca-4d0e-b771-721a744700c9\",\"moduleSequenceNumber\":217},{\"filename\":\"go-mid.js\",\"url\":\"blob:https://danielyxie.github.io/f308328b-0b95-44b3-9ee0-57a8b2597246\",\"moduleSequenceNumber\":25249}],\"dependents\":[],\"ramUsage\":3.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725296,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_singularity_api } from \\\"/lib/source.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Restart our source of income and Hack XP.  This script is useful whenever we\\n * have installed a bunch of Augmentations and we want to automatically restart\\n * scripts to:\\n *\\n * (1) Purchase Hacknet nodes and manage our farm of nodes.\\n * (2) Buy servers and use each purchased server to hack a target server in the\\n *     game world.\\n * (3) Gain root access to servers in the game world (excluding purchased\\n *     servers) and use each server to hack itself or a low-end server.\\n *\\n * Usage: run go.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Check whether we have access to the Singularity API.  If the check fails,\\n    // then we cannot automate the game play so we exit the script.\\n    if (!has_singularity_api(ns)) {\\n        log(\\n            ns,\\n            \\\"No access to Singularity API. Cannot automate game play.\\\",\\n            colour.RED\\n        );\\n        return;\\n    }\\n    // Run some or all utility scripts, depending on the amount of RAM on our\\n    // home server.\\n    const server = ns.getServer(home);\\n    let script = \\\"\\\";\\n    if (server.maxRam >= home_t.RAM_HIGH) {\\n        script = \\\"go-high.js\\\";\\n    } else if (server.maxRam >= home_t.RAM_MID) {\\n        script = \\\"go-mid.js\\\";\\n    } else {\\n        assert(server.maxRam < home_t.RAM_MID);\\n        script = \\\"go-low.js\\\";\\n    }\\n    assert(script !== \\\"\\\");\\n    exec(ns, script);\\n}\\n\",\"filename\":\"go.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7850bf7c-746c-4901-90f2-a45e99fcc158\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/68ca166c-00e5-4524-b0f9-a996d64f3227\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2d589da5-d5e4-4951-b165-cb16bed2ba57\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e194d3f9-f371-40b7-9d23-aa66b71d2703\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7e82ac36-47da-401a-a2ac-8e02841d9f3c\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c86bf038-6ed4-4270-bae8-9d9c2838b816\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a8401bb7-4a4c-4c7e-a59f-4b16c4332637\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d0fa1ecb-2eeb-4160-9e43-877c1000ef60\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c2c23b06-501b-44a7-ae77-12210cfce4b3\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c6a488a8-53b7-48bd-be53-3f96ce4f67b4\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/65878471-81a9-442e-a3c2-74f5719a024c\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6ab61e92-3be7-4a04-a99a-b94e1eee0534\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/516b182a-9f8c-4c3c-b3cb-bf1ddf62724e\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7add0612-6d7e-490e-9dea-9491e88ce8dd\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c9462303-eab4-4efd-ba99-008bce558d53\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2bb52a0a-8217-4370-8ec7-f76a56c9866c\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dda2aa61-ded4-4f96-9a8a-0aef5f12cae0\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/539972d1-0682-4d06-821d-09d0208696ea\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ba50e932-01da-498a-97a5-cb6ba513b60c\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/69ae8769-f521-493a-a8e2-a2a691a11aab\",\"moduleSequenceNumber\":724812},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/059136ae-6a60-4956-90eb-39e363abcebc\",\"moduleSequenceNumber\":724851},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8930b45a-1375-40ee-9c3a-98b6d966ad61\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/80b161ac-0a94-43ba-aadf-8b528603ce57\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/363653c9-0ad2-45d0-aed9-b74e5fe09f41\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/aedbdd52-83c2-4ed0-99f4-6943417361cf\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c6ab5390-0fd7-4f75-a840-0e681d0a63dd\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3e722972-377e-4c0e-9462-298ca696ec8f\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/cc3ec8f6-bd13-4ffe-94f2-06d4e393f10d\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/91a82eab-bda7-40b0-b8a0-f49aa75ec684\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/71c8dbcb-b06a-4841-95f1-c5644360ccde\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2a7069a6-977b-4e0c-8273-36deca4a0de2\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/551b3316-edbf-4e4a-8673-3e1c5f9b8991\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e1310701-8dea-4655-8d84-f9ed6fb20b39\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f8e9122a-1eb4-4b35-9794-800b997ce910\",\"moduleSequenceNumber\":724823},{\"filename\":\"go.js\",\"url\":\"blob:https://danielyxie.github.io/927ecb7c-e275-4b87-b098-9c851f858786\",\"moduleSequenceNumber\":724889}],\"dependents\":[],\"ramUsage\":5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725297,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// NOTE: Keep this script as independent and small as possible so that its RAM\\n// requirement is as low as possible.  Avoid importing anything into this\\n// script.\\n\\n/**\\n * NOTE: Assume that we have root access on the target server.\\n *\\n * Hack a server and steal its money.  We weaken the server's security as\\n * necessary, grow the server in case the amount of money on the server is\\n * below our threshold, and hack the server when all conditions are met.  We\\n * want one command line argument, i.e. the name of the server to hack.\\n *\\n * Usage: run hack.js [targetServer]\\n * Example: run hack.js n00dles\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The target server, i.e. the server to hack.\\n    const target = ns.args[0];\\n    // How much money a server should have before we hack it.  Even if the\\n    // server is bankrupt, successfully hacking it would increase our Hack XP,\\n    // although we would not receive any money.  Set the money threshold at 75%\\n    // of the server's maximum money.\\n    const money_threshold = Math.floor(ns.getServerMaxMoney(target) * 0.75);\\n    // The threshold for the server's security level.  If the target's\\n    // security level is higher than the threshold, weaken the target\\n    // before doing anything else.\\n    const security_threshold = ns.getServerMinSecurityLevel(target) + 5;\\n    // Continuously hack/grow/weaken the target server.\\n    const time = 1; // One millisecond.\\n    for (;;) {\\n        const money = ns.getServerMoneyAvailable(target);\\n        if (ns.getServerSecurityLevel(target) > security_threshold) {\\n            await ns.weaken(target);\\n        } else if (money < money_threshold) {\\n            await ns.grow(target);\\n        } else {\\n            await ns.hack(target);\\n        }\\n        await ns.sleep(time);\\n    }\\n}\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:https://danielyxie.github.io/592ea1ab-a4f5-4dec-b79c-c508141e9018\",\"moduleSequenceNumber\":724911}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725298,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { hnet_t } from \\\"/lib/constant/hacknet.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Assume we have millions or even billions of dollars.  Add more nodes to our\\n * Hacknet farm.\\n *\\n * @param ns The Netscript API.\\n * @param n Increase the number of nodes to this amount.  Must be a positive\\n *     integer.\\n */\\nasync function expand_farm(ns, n) {\\n    const nNode = Math.floor(n);\\n    assert(nNode > 0);\\n    await setup_farm(ns, nNode);\\n}\\n\\n/**\\n * All nodes in our Hacknet farm.\\n *\\n * @param ns The Netscript API.\\n * @return An array of node IDs.  An empty array if we have zero nodes.\\n */\\nfunction hacknet_nodes(ns) {\\n    const nNode = ns.hacknet.numNodes();\\n    if (nNode < 1) {\\n        return [];\\n    }\\n    return MyArray.sequence(nNode);\\n}\\n\\n/**\\n * Whether it is time to upgrade the Cores and RAM of a Hacknet node.\\n * Upgrading either the Cores or RAM is many times more expensive than\\n * upgrading the Level of a Hacknet node.  Make sure we upgrade the Cores or\\n * RAM sparingly.  That is, the interval between successive upgrades of the\\n * Cores or RAM should usually be longer than the corresponding interval for\\n * Level.\\n *\\n * @param ns The Netscript API.\\n * @param idx Whether to upgrade the Cores and RAM of the Hacknet node having\\n *     this ID.\\n * @return true if it is time to upgrade the Cores and RAM; false otherwise.\\n */\\nfunction is_upgrade_core_ram(ns, idx) {\\n    // Each time we upgrade the RAM by one unit, we effectively double the\\n    // current amount of RAM.  Starting from 1GB, upgrading the RAM once would\\n    // result in 2GB.  Upgrading the RAM another time would result in 4GB.  And\\n    // so on until we have reached 64GB.  Therefore we can upgrade the RAM 6\\n    // times.  Divide these 6 upgrades into the 200 Levels, we get the upgrade\\n    // schedule:\\n    //\\n    // (1) 1st upgrade at 30 Level\\n    // (2) 2nd upgrade at 60 Level\\n    // (3) 3rd upgrade at 90 Level\\n    // (4) 4th upgrade at 120 Level\\n    // (5) 5th upgrade at 150 Level\\n    // (6) 6th upgrade at 180 Level\\n    //\\n    // On the other hand, upgrading the Cores once would add one point to the\\n    // current number of Cores.  As we have a maximum of 16 Cores and we start\\n    // with 1 Core, we can upgrade the Cores a total of 15 times.  We follow\\n    // the same upgrade schedule as per the schedule for upgrading RAM.\\n    //\\n    // Whenever it is time to upgrade the Cores and RAM, it might happen that\\n    // we do not have sufficient funds to finance the upgrades.  In that case,\\n    // we must skip the upgrade.  It is very likely that the Level of a Hacknet\\n    // node is at maximum whereas its Cores and RAM are yet to be maxed out.\\n    // Thus 200 Level is also part of the upgrade schedule for Cores and RAM.\\n    if (node_level(ns, idx) === hnet_t.MAX_LEVEL) {\\n        return bool.IS_TIME;\\n    }\\n    const interval = 30;\\n    const remainder = node_level(ns, idx) % interval;\\n    return remainder === 0;\\n}\\n\\n/**\\n * The Level of a Hacknet node.\\n *\\n * @param ns The Netscript API.\\n * @param i The ID of a Hacknet node.  Must be non-negative.\\n * @return The Level of the Hacknet node whose ID is i.\\n */\\nfunction node_level(ns, i) {\\n    assert(i >= 0);\\n    return ns.hacknet.getNodeStats(i).level;\\n}\\n\\n/**\\n * Setup our farm of Hacknet nodes.  We leave each node at Level 1, 1GB RAM,\\n * and 1 Core.  Our objective is to setup a farm of n Hacknet nodes, each node\\n * at base stat.\\n *\\n * @param ns The Netscript API.\\n * @param n How many Hacknet nodes in our farm.  Must be a positive integer.\\n */\\nasync function setup_farm(ns, n) {\\n    const nNode = Math.floor(n);\\n    assert(nNode > 0);\\n    assert(nNode < ns.hacknet.maxNumNodes());\\n    const player = new Player(ns);\\n    const time = update_interval();\\n    // We already have a farm of n or more Hacknet nodes.\\n    if (ns.hacknet.numNodes() >= nNode) {\\n        return;\\n    }\\n    // Purchase Hacknet nodes for our farm.\\n    for (let i = ns.hacknet.numNodes(); i < nNode; i++) {\\n        if (player.money() < ns.hacknet.getPurchaseNodeCost()) {\\n            await ns.sleep(time);\\n            continue;\\n        }\\n        const id = ns.hacknet.purchaseNode();\\n        assert(id !== -1);\\n        log(ns, `Purchased Hacknet node: ${id}`);\\n    }\\n}\\n\\n/**\\n * The interval between successive updates.\\n */\\nfunction update_interval() {\\n    return wait_t.MINUTE;\\n}\\n\\n/**\\n * Upgrade the stats of each Hacknet node by one point.  Assume we have at\\n * least one node.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction upgrade(ns) {\\n    upgrade_level(ns);\\n    // Should we also upgrade the Cores and RAM?\\n    const farm = hacknet_nodes(ns);\\n    assert(farm.length > 0);\\n    for (const node of farm) {\\n        if (is_upgrade_core_ram(ns, node)) {\\n            upgrade_core(ns, node);\\n            upgrade_ram(ns, node);\\n        }\\n    }\\n}\\n\\n/**\\n * Upgrade the Cores of a Hacknet node in our farm.  Our objective is to\\n * upgrade the Cores of the node by one point.  Call this function multiple\\n * times to max out the number of Cores.\\n *\\n * @param ns The Netscript API.\\n * @param idx We want to upgrade the Cores of the Hacknet node having this ID.\\n */\\nfunction upgrade_core(ns, idx) {\\n    const farm = new Set(hacknet_nodes(ns));\\n    assert(farm.has(idx));\\n    // Add another Core to the Hacknet node.  The number of Cores of a node is\\n    // at maximum if the cost of upgrading to another Core is Infinity.\\n    const player = new Player(ns);\\n    const howmany = 1; // Upgrade this many Cores at a time.\\n    const cost = ns.hacknet.getCoreUpgradeCost(idx, howmany);\\n    if (Number.isFinite(cost)) {\\n        if (player.money() < cost) {\\n            return;\\n        }\\n        assert(ns.hacknet.upgradeCore(idx, howmany));\\n    }\\n}\\n\\n/**\\n * Upgrade the Level of each Hacknet node in our farm.  Our objective is to\\n * upgrade the Level of each node by one point.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction upgrade_level(ns) {\\n    const farm = hacknet_nodes(ns);\\n    assert(farm.length > 0);\\n    const player = new Player(ns);\\n    const level = 1; // Upgrade this many Levels at a time.\\n    // Add another Level to each Hacknet node.\\n    for (const node of farm) {\\n        // The Level of a node is at maximum if the cost of upgrading to\\n        // another Level is Infinity.\\n        const cost = ns.hacknet.getLevelUpgradeCost(node, level);\\n        if (Number.isFinite(cost)) {\\n            if (player.money() < cost) {\\n                continue;\\n            }\\n            assert(ns.hacknet.upgradeLevel(node, level));\\n        }\\n    }\\n}\\n\\n/**\\n * Upgrade the RAM of a Hacknet node in our farm.\\n *\\n * @param ns The Netscript API.\\n * @param idx We want to upgrade the RAM of the Hacknet node having this ID.\\n */\\nfunction upgrade_ram(ns, idx) {\\n    const farm = new Set(hacknet_nodes(ns));\\n    assert(farm.has(idx));\\n    // Double the current RAM of the given Hacknet node.  The amount of RAM of\\n    // a node is at maximum if the cost of upgrading the RAM is Infinity.\\n    const player = new Player(ns);\\n    const howmany = 1; // Upgrade the RAM this many times.\\n    const cost = ns.hacknet.getRamUpgradeCost(idx, howmany);\\n    if (Number.isFinite(cost)) {\\n        if (player.money() < cost) {\\n            return;\\n        }\\n        assert(ns.hacknet.upgradeRam(idx, howmany));\\n    }\\n}\\n\\n/**\\n * Purchase and manage a farm of Hacknet nodes.\\n *\\n * Usage: run hnet-farm.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Various money thresholds.\\n    const threshold = Array.from(hnet_t.MONEY);\\n    const node = Array.from(hnet_t.NODE);\\n    // Bootstrap our Hacknet farm with a small number of nodes.\\n    await setup_farm(ns, hnet_t.SEED_NODE);\\n    // Add increasingly more nodes to the farm.  Also upgrade the nodes.\\n    const time = update_interval();\\n    const player = new Player(ns);\\n    for (;;) {\\n        if (threshold.length > 0) {\\n            if (player.money() > threshold[0]) {\\n                await expand_farm(ns, node[0]);\\n                // Ensure our Hacknet farm has at least the given number of\\n                // nodes before moving on to the next money/node thresholds.\\n                if (ns.hacknet.numNodes() >= node[0]) {\\n                    threshold.shift();\\n                    node.shift();\\n                }\\n            }\\n        }\\n        upgrade(ns);\\n        await ns.sleep(time);\\n    }\\n}\\n\",\"filename\":\"hnet-farm.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/401ffe20-98a6-4083-9aa1-edd2ccbdc89f\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/37b144e9-5e63-40b8-bf59-a5a8ce11a7a4\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c3d2526a-f267-4ff2-b6e7-13d4752c0cbc\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fdf680ab-0dce-4d3a-94e4-399fc213e732\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1a1b9413-56b2-4c41-a6f5-f59d3173e89a\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/dc11ab42-1ada-4e9f-baa1-6fe7d0808064\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0d7ac60e-6b1e-4398-be97-7222743f78d2\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/24e4fd34-8142-4ead-a541-f2299269b160\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6019ce95-f899-44b1-a4cc-4873e8bbcf44\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a8d9a259-5e66-4236-99c9-c7ae9508475d\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d9ca46bd-970a-4279-90c4-67bbf2637471\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0438e727-f8a7-41ba-9e59-a180704282bf\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7bbf91b4-779b-4d55-a82c-deba68707ff0\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8bb3d49c-2b63-4e03-a55a-e2d657dbf4f7\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4bc00219-8301-44b7-94be-11ecadc6f479\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e376df90-8d2f-4e02-a4e3-33664ef73b2d\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/41aad774-9aab-48b2-b25e-42db10f30c42\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a10838b0-404d-46c5-a51f-17b8907ffd95\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/87296b3b-1f4c-4ec8-a50e-52a8f423d404\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/97fc7f9f-bf35-413b-93f2-87e08442347b\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4124a428-2741-450f-b6cc-b518cfff717f\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/c1fda80b-f442-48fd-8ab1-17e4e8d8923c\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1786b762-a177-48e2-b803-6e4dfdda7e16\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/882c19bd-6076-4382-8d83-3ccdbf5a137d\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f6bde697-5a4e-4812-8c65-023387c1e4d7\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/50116b5e-b36a-44c2-97c7-b27a13dcaeb8\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6bffbf5f-8332-4252-ae1b-4f5fb048bcd1\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f87ae976-c6b7-428e-baf7-607e53b944e6\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/853e2880-f600-426a-9f02-d380ecc319fc\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/db083d60-cfa3-4ac6-9ec5-8f9bd2858a4f\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ff4cf3b7-faa9-4a96-b4f7-2232ae928e22\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e0b14a94-05c0-4f65-b363-45fe23e6b5d6\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/816b33fd-c9a8-41fa-bdd8-1281a10517c1\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2329258f-ae15-4953-a635-42f2d5e58613\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/hacknet.js\",\"url\":\"blob:https://danielyxie.github.io/a670534c-0e02-4f18-8600-b24faa95fd60\",\"moduleSequenceNumber\":724820},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/395c8068-c0a1-47a8-a36c-16a458263c61\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/788890df-372c-418e-b9dc-d009c901cf6c\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bf6a0d8d-2a02-416d-902f-3824007aebf1\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f8ba94fe-6945-4670-aee5-14e312806005\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7ea6b9d7-6baf-49b3-a72f-01732ebd96e6\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/648a264f-d555-438d-8135-c96140745be1\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/efb1e11f-44a2-4d4e-a655-9def4d0ff024\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/84166b7e-286a-4171-a0b4-b2279ee5afd2\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9586e6fa-01b7-4f33-a864-67a94863fcc8\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4fa9a1c8-5af1-4194-abae-51cc320a0c6c\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/12d459ab-2fef-4f97-bd4e-ab640e855b98\",\"moduleSequenceNumber\":724810},{\"filename\":\"hnet-farm.js\",\"url\":\"blob:https://danielyxie.github.io/1249279f-c623-4535-b065-cd95f0ca07d7\",\"moduleSequenceNumber\":724892}],\"dependents\":[],\"ramUsage\":8.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725299,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { io } from \\\"/lib/constant/io.js\\\";\\nimport { script } from \\\"/lib/constant/misc.js\\\";\\nimport { home, server } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { assert, choose_targets, filter_bankrupt_servers } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Choose the \\\"best\\\" world server to hack.  The definition of \\\"best\\\" is\\n * subjective.  However, for our purposes the best target is the server that\\n * meet these criteria:\\n *\\n * (1) The server having the highest Hack stat requirement not exceeding our\\n *     Hack stat.\\n * (2) We can open all ports on the given server.\\n * (3) The server is not bankrupt.\\n * (4) Is not a purchased server.\\n *\\n * If multiple servers meet the above criteria, then we choose the server that\\n * has the highest maximum money.\\n *\\n * @param ns The Netscript API.\\n * @return The best server to target.\\n */\\nfunction best_target(ns) {\\n    const target = choose_targets(ns, filter_bankrupt_servers(ns, network(ns)));\\n    if (target.length === 1) {\\n        return target[0];\\n    }\\n    // If we have multiple best targets, choose the target having the highest\\n    // maximum money.\\n    let host = \\\"\\\";\\n    let max_money = -Infinity;\\n    target.forEach((s) => {\\n        if (ns.getServerMaxMoney(s) > max_money) {\\n            max_money = ns.getServerMaxMoney(s);\\n            host = s;\\n        }\\n    });\\n    return host;\\n}\\n\\n/**\\n * The number of threads we can use to run a script on our home server.\\n *\\n * @param ns The Netscript API.\\n * @return The number of threads to use.  Always at least 1.\\n */\\nfunction home_num_threads(ns) {\\n    const home_serv = new Server(ns, home);\\n    const nthread = home_serv.num_threads(script);\\n    return nthread < 1 ? 1 : nthread;\\n}\\n\\n/**\\n * Constantly update the target to hack.\\n *\\n * @param ns The Netscript API.\\n * @param t A string representing the name of the current target.\\n * @return The hostname of the (possibly new) server currently being targeted.\\n */\\nasync function update(ns, t) {\\n    // Ensure we have root access on the chosen target.\\n    const target = best_target(ns);\\n    assert(target !== \\\"\\\");\\n    const serv = new Server(ns, target);\\n    if (!serv.has_root_access()) {\\n        await serv.gain_root_access();\\n    }\\n    // No new target.  Hack the current target if it is not already being\\n    // targeted.\\n    if (t === target) {\\n        if (!ns.isRunning(script, home, target)) {\\n            const nthread = home_num_threads(ns);\\n            ns.exec(script, home, nthread, target);\\n            ns.write(server.HRAM, target, io.WRITE);\\n        }\\n        return target;\\n    }\\n    // We have found a better target.  Hack this better server.\\n    assert(t !== target);\\n    if (ns.isRunning(script, home, t)) {\\n        assert(ns.kill(script, home, t));\\n    }\\n    const nthread = home_num_threads(ns);\\n    ns.exec(script, home, nthread, target);\\n    ns.write(server.HRAM, target, io.WRITE);\\n    return target;\\n}\\n\\n/**\\n * Use the RAM of our home server for miscellaneous tasks.  For now, use the\\n * home RAM to hack a world server.  If at some later time we need to devote the\\n * home RAM to another task, then this script should be suspended to free up\\n * some RAM.\\n *\\n * Usage: run hram.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMaxMoney\\\");\\n    ns.disableLog(\\\"getServerUsedRam\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Periodically search for a better target.  Suspend this script, and kill\\n    // the spawned script, if we need to share our home server with a faction.\\n    let target = await update(ns, \\\"\\\");\\n    for (;;) {\\n        // Do we need to suspend the script?\\n        if (ns.fileExists(server.SHARE, home)) {\\n            if (target !== \\\"\\\" && ns.isRunning(script, home, target)) {\\n                assert(ns.kill(script, home, target));\\n            }\\n            await ns.sleep(wait_t.DEFAULT);\\n            continue;\\n        }\\n        // Find a better target.\\n        target = await update(ns, target);\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n}\\n\",\"filename\":\"hram.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f8c74d25-2cb7-4b50-bb67-b830ac463b0e\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ffd5f3b5-f059-4d86-96b2-8aa95a5f51e6\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/62d75214-8712-487c-b566-e172bf22e4b4\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9837bc47-0782-4946-b219-4aad856bfa6e\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c4596037-54e6-4241-8d03-5afb03c7d5d9\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/df61c0e5-1b29-48c2-bd67-3326154b20dd\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/11336c34-8d9f-4767-af49-4bb6ff81f0fb\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b3ac010e-2f70-4a1c-940a-359387d6dcf0\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cedf7cc4-16aa-4144-a6d5-d65fe89f2262\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f8679c66-72f2-440f-90a4-08097726a13b\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1df38631-4a13-49f0-8331-a22e9c144bf7\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dcb42a98-1ed3-4815-873b-0ea1d9a88bc7\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/35ab0066-95b3-437f-afc8-9c8d10ab1358\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cb72a619-a43e-4d92-9964-274301d6f38a\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ed4d5aad-e35b-4853-b2ae-65b9f8769d7b\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/880a7fc3-6526-4799-bd6e-c780d2d4b3af\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/564117e8-9267-4212-bfe4-0f4f2ed74b05\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/854093f0-20f8-40ca-90ae-ed539cea58c0\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/90fbc0b3-4784-4231-a669-15ca04127157\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b744e9eb-86b5-4fad-b5ca-8953196586b2\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f02f2dc7-885c-476c-870d-78556424ef82\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/d72107bb-1eeb-47a2-b723-063ced625b31\",\"moduleSequenceNumber\":724840},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d9e9733e-f4b6-430e-974b-b7e676ac8f8d\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ae5c47c0-61e0-431d-a0d5-d53933425fb9\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/524952f4-10ae-4336-a2da-b802195d12ba\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4a2821c2-2bb1-4d12-a9a4-fdfa9b8ecf61\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d954983b-45ba-4489-8b0e-958e1b7bd7ca\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f61f03c1-ff99-4f6f-849b-a1c5cf64a5e5\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dded546e-7ca6-4138-8938-8b84dd367231\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/89fbd472-8fa0-46f8-bdec-3f8d878abb2a\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ee8579aa-53a4-43a6-8a2b-e7a5a136c847\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8d460c5b-daa7-44d7-a7f3-8e6626418372\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6c492a54-69ab-4c4c-9c3a-d0c9ad35e6f7\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/4fed16b1-ea2f-4fc7-bda3-fc973196ae62\",\"moduleSequenceNumber\":724836},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f687f0a6-9cd9-48bc-b05b-bb0348284a5d\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/09ad1ec0-06ee-465a-9727-bf3afbaeac01\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bc9ce880-9f78-4934-9716-768c52741cac\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/92688e72-5b25-4b28-8838-de042e746261\",\"moduleSequenceNumber\":724821},{\"filename\":\"hram.js\",\"url\":\"blob:https://danielyxie.github.io/304284ad-f714-4919-853e-a54c64a8a4ca\",\"moduleSequenceNumber\":724896}],\"dependents\":[],\"ramUsage\":10.9,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725300,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { Player } from \\\"/lib/player.js\\\";\\n\\n/**\\n * The player's karma.\\n *\\n * Usage: run karma.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const player = new Player(ns);\\n    ns.tprint(`Karma: ${player.karma()}`);\\n}\\n\",\"filename\":\"karma.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cccef734-ff9c-4eea-8f27-f4d43a38a09b\",\"moduleSequenceNumber\":12345},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/39a5333f-927c-4629-a3a4-ea4a64b4cb0c\",\"moduleSequenceNumber\":12343},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/95c314b0-43ff-4739-aeb0-daf82084173d\",\"moduleSequenceNumber\":12340},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7e62621f-6eb1-48d3-a915-2a0d884cf047\",\"moduleSequenceNumber\":12338},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/52bf952d-6efb-401b-aa72-3c33b63c44f6\",\"moduleSequenceNumber\":12337},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c8b9f21c-0446-4775-be05-dede743ecd95\",\"moduleSequenceNumber\":12336},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9ac2df8e-1ab5-4995-8a1b-6f908cc6e327\",\"moduleSequenceNumber\":12333},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ba99f4e9-0efe-4221-8e66-2e10b3059335\",\"moduleSequenceNumber\":12332},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b073157b-c5bb-421d-9829-a1a63fb8b8cd\",\"moduleSequenceNumber\":12367},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b0e2b95f-e1d6-4464-8c27-22cebc92c352\",\"moduleSequenceNumber\":12340},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5338731d-7fd6-4cc5-90da-e019fa08c7bb\",\"moduleSequenceNumber\":12338},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a1158d30-e284-4abc-b4a8-0efd8b0c6572\",\"moduleSequenceNumber\":12332},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/2f105f7d-1b8e-4a03-98de-be6c8c564d05\",\"moduleSequenceNumber\":12352},{\"filename\":\"karma.js\",\"url\":\"blob:https://danielyxie.github.io/c749f91a-d389-4fb2-8e72-53ebc6d8cf46\",\"moduleSequenceNumber\":13668}],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725301,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\n\\n/**\\n * Kill all scripts on world or purchased servers.  Must provide one of the\\n * following at the command line:\\n *\\n * (1) pserv := Kill all scripts on all purchased servers.\\n * (2) world := Kill all scripts on all world servers where we have root access.\\n *\\n * Usage: run kill-script.js [pserv | world]\\n * Example: run kill-script.js pserv\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const error_msg = \\\"Must provide one command line argument: pserv | world\\\";\\n    // Must provide a command line argument to this script.\\n    if (ns.args.length < 1) {\\n        ns.tprint(error_msg);\\n        return;\\n    }\\n    const stype = ns.args[0];\\n    const player = new Player(ns);\\n    if (stype === \\\"pserv\\\") {\\n        // Kill all scripts on purchased servers.\\n        player.pserv().forEach((s) => ns.killall(s));\\n    } else if (stype === \\\"world\\\") {\\n        // Kill all scripts on world servers where we have root access.\\n        const server = network(ns).filter((s) => ns.hasRootAccess(s));\\n        server.forEach((s) => ns.killall(s));\\n    } else {\\n        ns.tprint(error_msg);\\n    }\\n}\\n\",\"filename\":\"kill-script.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.35,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725302,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { Player } from \\\"/lib/player.js\\\";\\n\\n/**\\n * Delete all purchased servers.  This would also kill all scripts running\\n * on each purchased server.\\n *\\n * Usage: run kill-server.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const player = new Player(ns);\\n    player.pserv().forEach((s) => {\\n        ns.killall(s);\\n        ns.deleteServer(s);\\n    });\\n}\\n\",\"filename\":\"kill-server.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":7.35,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725303,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport {\\n    home, home_t, server, server_t,\\n} from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { assert, filter_bankrupt_servers, filter_pserv } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Determine which servers in the game world have been compromised.  We\\n * exclude all purchased servers.  A server in the game world is said to be\\n * compromised provided that:\\n *\\n * (1) We have root access to the server.\\n * (2) Our hack script is currently running on the server.\\n *\\n * @param ns The Netscript API.\\n * @param script A hack script.  We want to check whether a server is running\\n *     this script.\\n * @return An array of servers that have been compromised.\\n */\\nfunction compromised_servers(ns, script) {\\n    const compromised = [];\\n    for (const s of filter_pserv(ns, network(ns))) {\\n        const serv = new Server(ns, s);\\n        if (serv.has_root_access() && serv.is_running_script(script)) {\\n            compromised.push(s);\\n        }\\n    }\\n    return compromised;\\n}\\n\\n/**\\n * The low-end servers to target.  We exclude bankrupt servers and purchased\\n * servers.  A server is said to be bankrupt if the maximum amount of money it\\n * can hold is zero.\\n *\\n * @param ns The Netscript API.\\n * @return An array of hostnames of low-end servers.  This array is never empty.\\n */\\nfunction low_end(ns) {\\n    // Sort the servers in ascending order of hack difficulty,\\n    // i.e. security level.\\n    let lowend = [];\\n    const candidate = filter_bankrupt_servers(\\n        ns,\\n        filter_pserv(ns, network(ns))\\n    ).filter((s) => s !== server.ONION);\\n    candidate.forEach((s) => {\\n        const security_lvl = ns.getServer(s).hackDifficulty;\\n        lowend.push([security_lvl, s]);\\n    });\\n    lowend = MyArray.sort_ascending_tuple(lowend);\\n    // Choose how many low-end servers to target.\\n    const home_ram = ns.getServer(home).maxRam;\\n    let ntarget = 0;\\n    if (home_ram >= 3 * home_t.RAM_HIGH) {\\n        ntarget = server_t.lowend.HIGH;\\n    } else if (home_ram > home_t.RAM_HIGH) {\\n        ntarget = server_t.lowend.MID;\\n    } else {\\n        assert(home_ram <= home_t.RAM_HIGH);\\n        ntarget = server_t.lowend.LOW;\\n    }\\n    // Get the hostnames of low-end servers to target.\\n    lowend = lowend.slice(0, ntarget).map((a) => a[1]);\\n    assert(lowend.length > 0);\\n    return lowend;\\n}\\n\\n/**\\n * Try to gain root access to a bunch of servers in the game world.  We exclude\\n * purchased servers.\\n *\\n * @param ns The Netscript API.\\n * @return An array of newly nuked servers.  We gained root access to these\\n *     servers during this update.\\n */\\nasync function nuke_servers(ns) {\\n    // A list of servers that were successfully nuked during this update.\\n    const nuked = [];\\n    // Gain root access to as many new servers as possible on the network.\\n    const player = new Player(ns);\\n    for (const s of filter_pserv(ns, network(ns))) {\\n        // Should we skip this server?\\n        if (skip_server(ns, s, player.script())) {\\n            continue;\\n        }\\n        // Gain root access to the server.\\n        const serv = new Server(ns, s);\\n        assert(player.hacking_skill() >= serv.hacking_skill());\\n        await serv.gain_root_access();\\n        nuked.push(s);\\n        log(ns, `Compromised server: ${s}`);\\n    }\\n    return nuked;\\n}\\n\\n/**\\n * Whether we should skip the server.  A server might be skipped over for\\n * various reasons.\\n *\\n * @param ns The Netscript API.\\n * @param s Should we skip this server?\\n * @param script The name of our hacking script.\\n * @return true if we are to skip over the given server; false otherwise.\\n */\\nfunction skip_server(ns, s, script) {\\n    const serv = new Server(ns, s);\\n    const player = new Player(ns);\\n    // Determine the maximum number of ports we can open on a server.\\n    const nport = player.num_ports();\\n    assert(nport >= 0);\\n    // Skip over a server that requires more ports than we can open.\\n    if (serv.num_ports_required() > nport) {\\n        return bool.SKIP;\\n    }\\n    // If our hack script is already running on the server, then skip the\\n    // server.\\n    if (serv.is_running_script(script)) {\\n        return bool.SKIP;\\n    }\\n    // Determine how many threads we can run our script on a server.  If we\\n    // can't run our script on the server, then we skip the server.\\n    const nthread = serv.num_threads(script);\\n    if (nthread < 1) {\\n        return bool.SKIP;\\n    }\\n    // Skip over a server if its hacking skill requirement is too high.\\n    if (player.hacking_skill() < serv.hacking_skill()) {\\n        return bool.SKIP;\\n    }\\n    return bool.NO_SKIP;\\n}\\n\\n/**\\n * Search for world servers and direct them to hack low-end servers.  We exclude\\n * purchased servers.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function update(ns) {\\n    // A list of servers that have been successfully nuked.\\n    const player = new Player(ns);\\n    const compromised = compromised_servers(ns, player.script());\\n    // Gain root access to new servers in the game world.  Exclude all purchased\\n    // servers.\\n    const new_nuked = await nuke_servers(ns);\\n    if (new_nuked.length < 1) {\\n        return;\\n    }\\n    // Direct all nuked servers to target a small number of low-end servers.\\n    // First, kill all scripts on the compromised servers.  Then redirect the\\n    // compromised and newly nuked servers to target some low-end servers.\\n    compromised.forEach((s) => ns.killall(s));\\n    const lowend = low_end(ns);\\n    let n = 0;\\n    for (const s of compromised.concat(new_nuked)) {\\n        const serv = new Server(ns, s);\\n        const i = n % lowend.length;\\n        await serv.deploy(lowend[i]);\\n        log(ns, `Redirect ${s} to hack low-end server: ${lowend[i]}`);\\n        n++;\\n    }\\n}\\n\\n/**\\n * Use each server in the game world to hack low-end servers.  We exclude\\n * purchased servers.  A server is low-end if its Hack stat requirement is low,\\n * possibly less than 10 Hack requirement.  Early in a BitNode when our stats\\n * and money are low, we need a good source of passive income.  Hacking low-end\\n * servers provides a good source of income.  We do not target all low-end\\n * servers, only a small number of these.\\n *\\n * Usage: run low-end.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerUsedRam\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Continuously look for world servers to hack low-end servers.\\n    log(ns, \\\"Hacking low-end servers\\\");\\n    for (;;) {\\n        await update(ns);\\n        await ns.sleep(wait_t.MINUTE);\\n    }\\n}\\n\",\"filename\":\"low-end.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9a7d502a-ee0c-4d7c-bd7e-a95623663127\",\"moduleSequenceNumber\":107591},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/52947096-3a4c-4b9d-a85d-5a901b36fdd8\",\"moduleSequenceNumber\":107589},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/567b9c84-cf2b-4bc1-a483-844bb67ab6c3\",\"moduleSequenceNumber\":107586},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e1a47a49-eac6-4122-bd69-4b6050d75881\",\"moduleSequenceNumber\":107584},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2b16b1ef-f592-4fc1-9793-22f9257dad6d\",\"moduleSequenceNumber\":107583},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/09ea47dc-3682-4d62-babc-05de333b593c\",\"moduleSequenceNumber\":107582},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b2451ea1-bef3-4a21-9e4d-193fc2469857\",\"moduleSequenceNumber\":107579},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/de3a08a8-bba8-44aa-a123-acc7cf30b54c\",\"moduleSequenceNumber\":107578},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/35a94aed-495c-466f-8afa-633064dd1f5e\",\"moduleSequenceNumber\":107613},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9319a27c-162a-4a26-a4fe-2b98fc79b7cf\",\"moduleSequenceNumber\":107591},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/79402e8f-4b50-4158-9d48-ea5e53f93ce5\",\"moduleSequenceNumber\":107589},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ded76f13-ccb3-45df-b139-5bfc97298fdc\",\"moduleSequenceNumber\":107586},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/be830520-4d56-4bd8-88c5-27ee96c4c03c\",\"moduleSequenceNumber\":107584},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3f04f324-49f9-4721-8a97-452084377916\",\"moduleSequenceNumber\":107583},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8b299e56-ed32-4af0-a495-929c23d70def\",\"moduleSequenceNumber\":107582},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8d1e7326-522e-4496-b07f-277682145112\",\"moduleSequenceNumber\":107579},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/78548cc9-ea2c-4c7c-b23c-87391e285b6c\",\"moduleSequenceNumber\":107578},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8a1e6deb-ca85-4c08-874e-1c511b44162a\",\"moduleSequenceNumber\":107613},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c9eade09-6768-4738-b26a-492d348a4d01\",\"moduleSequenceNumber\":107586},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a3cbfb44-930b-4d80-bc0d-f20182307e7c\",\"moduleSequenceNumber\":107584},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/af7cda5e-1b8f-418d-ac9c-150f98303e9f\",\"moduleSequenceNumber\":107574},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/b58d1db3-7aef-457c-9a71-6fcf526f6f45\",\"moduleSequenceNumber\":107601},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5a12a1dc-2011-43bb-8f89-641eb1e899b7\",\"moduleSequenceNumber\":107591},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cb257a5f-0cbd-47c3-b2ee-e28ec4904756\",\"moduleSequenceNumber\":107589},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/de14fe14-1f09-45f1-abb2-8cd5ea11c6bf\",\"moduleSequenceNumber\":107586},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b1d9a807-59a2-43bc-9e5f-3a7341310a12\",\"moduleSequenceNumber\":107584},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1a319f5b-1866-4f3b-bbe9-a241368c7443\",\"moduleSequenceNumber\":107583},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c8058fe4-3aa2-4f74-9eb4-4bf4c14af304\",\"moduleSequenceNumber\":107582},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/619be93c-8981-4cec-8b2d-f681fd2777e7\",\"moduleSequenceNumber\":107579},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/aece91e8-d491-44e5-be24-ba49798243bb\",\"moduleSequenceNumber\":107578},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/71cae404-5def-40dc-800a-a63f23db10db\",\"moduleSequenceNumber\":107613},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3d18ae86-268e-4c00-b21c-8fb352cc5a39\",\"moduleSequenceNumber\":107586},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/675b829c-7557-4a79-bf2e-057802ad520f\",\"moduleSequenceNumber\":107584},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dcf7c630-eb3b-4393-a637-9f6020394d4e\",\"moduleSequenceNumber\":107578},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/116727cd-2320-4283-8fc1-900b44ff9cab\",\"moduleSequenceNumber\":107598},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/309eda85-304b-45d1-a953-c384e4df7523\",\"moduleSequenceNumber\":107591},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3b8411b1-8e20-476c-a77c-1bf1571f1fea\",\"moduleSequenceNumber\":107589},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c43cf66b-3d7e-4459-afbd-353889b0e548\",\"moduleSequenceNumber\":107586},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f8996a30-5c80-4c28-aa4d-d9f2ad609367\",\"moduleSequenceNumber\":107584},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9b47c284-2c42-4caa-b586-b8126df63488\",\"moduleSequenceNumber\":107583},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/58c0d87a-eef7-44d2-afe7-fa0ca3e10a8d\",\"moduleSequenceNumber\":107582},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/cea43521-81dc-4afd-9c7f-2bd2ffe72da2\",\"moduleSequenceNumber\":107579},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d7253704-8a1e-4422-8c23-7bbd839548b4\",\"moduleSequenceNumber\":107578},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b34b9a52-0f2c-45dd-8816-8cf3924e602f\",\"moduleSequenceNumber\":107613},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d607f531-87bc-445a-ab97-584093ca1fae\",\"moduleSequenceNumber\":107586},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a7805473-f3b1-496e-af6d-7fe2956a954c\",\"moduleSequenceNumber\":107574},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/18b45372-f611-45a4-b6fb-4ac99d25169e\",\"moduleSequenceNumber\":107597},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/78293475-6071-4413-898f-6d7d5bc257e8\",\"moduleSequenceNumber\":107591},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3481a1d3-7dd6-4e1f-851d-83e7e25b35b0\",\"moduleSequenceNumber\":107589},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/72da71b6-00df-4f4d-82cc-3a9141cd5fe7\",\"moduleSequenceNumber\":107586},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e75a3fd4-afcc-4c5b-9859-7f93b9c40739\",\"moduleSequenceNumber\":107584},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3ab51b0e-7905-4991-a195-066fda0b247e\",\"moduleSequenceNumber\":107583},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/33ffbb55-1d30-408e-a667-70a39ab55852\",\"moduleSequenceNumber\":107582},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ae6d3116-bf9e-451d-b35b-0a820cccdc69\",\"moduleSequenceNumber\":107579},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e6ef2feb-7e94-4031-b883-7976670209fc\",\"moduleSequenceNumber\":107578},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/97e70e69-3c7f-48ad-b052-05a27c15f938\",\"moduleSequenceNumber\":107613},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/354bf149-72fa-490f-ba53-19df0821c5a4\",\"moduleSequenceNumber\":107584},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/e3a145d0-5e2a-4159-921e-c9de75070a67\",\"moduleSequenceNumber\":107595},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5c1a1bbc-3f2a-47ad-9d76-619d6d5511f2\",\"moduleSequenceNumber\":107589},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/817ba8d6-475d-47f4-8509-5685aca61d1f\",\"moduleSequenceNumber\":107586},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/501fda27-d9b2-4a07-82e2-6216b09e2a92\",\"moduleSequenceNumber\":107574},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/59c068b4-95dc-4bbf-b5b2-272129dbc1d8\",\"moduleSequenceNumber\":107591},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b50b2370-6424-46a5-a31f-57bfd3da1eed\",\"moduleSequenceNumber\":107589},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c9bc56be-8e04-4e27-b875-1504ee35478a\",\"moduleSequenceNumber\":107586},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/280a1501-6d56-43c7-aaf7-f1450d7b03e3\",\"moduleSequenceNumber\":107584},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/253a7abc-cf68-4729-8268-133c83fedc27\",\"moduleSequenceNumber\":107583},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ace1ad50-8ca4-4745-a9ee-376004e32b9e\",\"moduleSequenceNumber\":107582},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5347e8bc-5fc9-4136-b56b-537423ce1724\",\"moduleSequenceNumber\":107579},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/187cbeed-5a63-4815-9c03-73eda39e5bcd\",\"moduleSequenceNumber\":107578},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/86872a78-0f21-4d2b-b6e5-6b17eaadb2f2\",\"moduleSequenceNumber\":107613},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/36e2dbaf-6a77-4f36-9956-1f3942449e80\",\"moduleSequenceNumber\":107571},{\"filename\":\"low-end.js\",\"url\":\"blob:https://danielyxie.github.io/94a2e328-afa7-48e2-af98-d27f101c9fe6\",\"moduleSequenceNumber\":107652}],\"dependents\":[],\"ramUsage\":11.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725304,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { program as popen } from \\\"/lib/constant/exe.js\\\";\\nimport { io } from \\\"/lib/constant/io.js\\\";\\nimport { base, colour } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { network, shortest_path } from \\\"/lib/network.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Insert forks.  Each fork indicates a child node.\\n *\\n * @param matrix The ASCII art of the network of world servers.\\n * @return The same matrix, but forks are inserted where necessary.\\n */\\nfunction add_fork(matrix) {\\n    assert(matrix.length > 0);\\n    assert(matrix[0].length > 0);\\n    // A shallow copy so we don't modify the parameter directly.  We still\\n    // modify it indirectly.\\n    const mat = Array.from(matrix);\\n    // Start from the second row onward because the first row is for the home\\n    // server.\\n    for (let i = 1; i < mat.length; i++) {\\n        const j = mat[i].length - 1;\\n        assert(leaf() === mat[i][j]);\\n        assert(branch() === mat[i][j - 1]);\\n        mat[i][j - 1] = fork();\\n    }\\n    return mat;\\n}\\n\\n/**\\n * Replace each leaf with the corresponding server name.\\n *\\n * @param matrix The ASCII art of the network of world servers.  The function\\n *     modifies this argument.\\n * @param map A translation from coordinates in the grid to server name.\\n * @return The same matrix, but with server names added.\\n */\\nfunction add_server_name(ns, matrix, map) {\\n    assert(matrix.length > 0);\\n    assert(matrix[0].length > 0);\\n    assert(map.size > 0);\\n    // A shallow copy so we don't modify the parameter directly.  We still\\n    // modify it indirectly.\\n    const mat = Array.from(matrix);\\n    // Add the server names.\\n    for (const [coord, server] of map) {\\n        const [i, j] = coord\\n            .split(delimiter())\\n            .map((k) => parseInt(k, base.DECIMAL));\\n        mat[i][j] = decorate(ns, server);\\n    }\\n    return mat;\\n}\\n\\n/**\\n * Insert T junctions into the ASCII art.\\n *\\n * @param matrix The ASCII art of the network of world servers.  The function\\n *     modifies this argument.\\n * @return The same matrix, but with T junctions inserted.\\n */\\nfunction add_tee_junction(matrix) {\\n    assert(matrix.length > 0);\\n    assert(matrix[0].length > 0);\\n    // A shallow copy so we don't modify the parameter directly.  We still\\n    // modify it indirectly.\\n    const mat = Array.from(matrix);\\n    // Start from the second row and work our way downward.\\n    for (let i = 1; i < mat.length; i++) {\\n        const j = mat[i].length - 1;\\n        assert(leaf() === mat[i][j]);\\n        assert(fork() === mat[i][j - 1]);\\n        if (fork() === mat[i - 1][j - 1]) {\\n            mat[i - 1][j - 1] = tee();\\n        }\\n        if (i < mat.length - 2) {\\n            if (branch() === mat[i + 1][j - 1]) {\\n                mat[i][j - 1] = tee();\\n            }\\n        }\\n    }\\n    return mat;\\n}\\n\\n/**\\n * All shortest paths from our home server to each server in the game world.\\n *\\n * @param ns The Netscript API.\\n * @return An array of shortest paths from the home server to each server in\\n *     the game world.  Each element is a string formatted as\\n *\\n *     home,serv1,serv2,serv3,...,servk\\n *\\n *     which shows a shortest path from \\\"home\\\" to the server \\\"servk\\\".  The\\n *     elements are sorted in lexicographic order.\\n */\\nfunction all_shortest_paths(ns) {\\n    const delim = delimiter();\\n    // prettier-ignore\\n    const path = network(ns).map(\\n        (destination) => shortest_path(ns, home, destination).join(delim)\\n    );\\n    return path.sort();\\n}\\n\\n/**\\n * Tidy up the ASCII art representation of the network of world servers.  We\\n * do various clean-ups such as removing dead branches and redundant (or\\n * unnecessary) branches.\\n *\\n * @param grid An ASCII art representation of the network of world servers.\\n *     This should be the output of the function to_ascii_art().\\n * @param map A translation from coordinates in the grid to server name.\\n * @return A string representation of the ASCII art.\\n */\\nfunction beautify(ns, grid, map) {\\n    assert(grid.length > 0);\\n    assert(grid[0].length > 0);\\n    assert(map.size > 0);\\n    let matrix = Array.from(grid);\\n    // Remove dead branches in the visualization.  A branch is said to be dead\\n    // if it does not lead to a server.\\n    for (let i = 0; i < matrix.length - 1; i++) {\\n        const diff = matrix[i].length - matrix[i + 1].length;\\n        if (diff < 3) {\\n            continue;\\n        }\\n        matrix = prune_branch(matrix, i);\\n    }\\n    // Remove dead branches from the last row.\\n    matrix = prune_branch(matrix, matrix.length - 1);\\n    // Some final touches.\\n    matrix = add_fork(matrix);\\n    matrix = prune_sibling_branch(matrix);\\n    matrix = add_tee_junction(matrix);\\n    matrix = add_server_name(ns, matrix, map);\\n    return to_string(matrix);\\n}\\n\\n/**\\n * Internal representation for a branch.  Each branch represents an alternate\\n * path that may lead to other servers.\\n */\\nfunction branch() {\\n    return \\\"│  \\\";\\n}\\n\\n/**\\n * Add various decorations to a server name.\\n *\\n * @param ns The Netscript API.\\n * @param server We want to add various decorations to this server name.\\n * @return The same server name, but with added decoration.\\n */\\nfunction decorate(ns, server) {\\n    // We do not need any other decoration for the home server, apart from\\n    // adding a colour.\\n    if (home === server) {\\n        return colour.GREEN + server + colour.RESET;\\n    }\\n    // Add some more decorations to other servers.\\n    const serv = ns.getServer(server);\\n    const player = ns.getPlayer();\\n    const hack_lvl = player.skills.hacking;\\n    const required_hack_lvl = serv.requiredHackingSkill;\\n    const nhack = `(${required_hack_lvl})`;\\n    const nport = `[${serv.numOpenPortsRequired}]`;\\n    // Do we have root access on the server?\\n    if (serv.hasAdminRights) {\\n        const s = `${server} ${nhack}${nport}`;\\n        return colour.GREEN + s + colour.RESET;\\n    }\\n    // Do we have the minimum required Hack stat?\\n    let s = `${server} ${nhack}`;\\n    if (hack_lvl < required_hack_lvl) {\\n        s = colour.RED + s + colour.RESET;\\n    } else {\\n        s = colour.DARK_GREEN + s + colour.RESET;\\n    }\\n    // Can we open all ports on the server?\\n    if (num_ports(ns) < serv.numOpenPortsRequired) {\\n        s += colour.RED + nport + colour.RESET;\\n    } else {\\n        s += colour.DARK_GREEN + nport + colour.RESET;\\n    }\\n    return s;\\n}\\n\\n/**\\n * The character used to delimit two servers in a path.\\n */\\nfunction delimiter() {\\n    return \\\",\\\";\\n}\\n\\n/**\\n * Print the tree structure of the network of world servers.\\n *\\n * @param ns The Netscript API.\\n * @param path An array of shortest paths from the home server to each server\\n *     in the game world.  This array should be the output of the function\\n *     all_shortest_paths().\\n */\\nfunction display_tree(ns, path) {\\n    assert(path.length > 0);\\n    // Internal representation of the tree structure.  Visualize this\\n    // representation as a matrix or grid.  Each row represents a shortest path.\\n    const delim = delimiter();\\n    const root = [[home]];\\n    const tree = root.concat(path.map((p) => p.split(delim)));\\n    // Convert internal representation to ASCII art.\\n    const [grid, map] = to_ascii_art(tree);\\n    const art = beautify(ns, grid, map);\\n    ns.tprint(art);\\n}\\n\\n/**\\n * Internal representation of a fork.  A fork is immediately followed by a leaf.\\n */\\nfunction fork() {\\n    return \\\"└╴\\\";\\n}\\n\\n/**\\n * Internal representation for a leaf, i.e. a destination server.\\n */\\nfunction leaf() {\\n    return \\\"+\\\";\\n}\\n\\n/**\\n * Determine the number of ports a player can currently open on servers in\\n * the game world.  This depends on whether the player has the necessary\\n * hacking programs on the home server.\\n *\\n * @param ns The Netscript API.\\n * @return How many ports we can open on a world server.\\n */\\nfunction num_ports(ns) {\\n    let program = Array.from(popen);\\n    program = program.filter((p) => ns.fileExists(p, home));\\n    return program.length;\\n}\\n\\n/**\\n * Internal representation for a whitespace.\\n */\\nfunction placeholder() {\\n    return \\\".\\\";\\n}\\n\\n/**\\n * Remove a dead branch.\\n *\\n * @param matrix The ASCII art of the network of world servers.  The function\\n *     modifies this argument.\\n * @param r Start the pruning from this row upward.\\n * @return The same matrix, but with dead branches removed.\\n */\\nfunction prune_branch(matrix, r) {\\n    assert(matrix.length > 0);\\n    assert(matrix[0].length > 0);\\n    assert(r >= 0);\\n    // A shallow copy so we don't modify the parameter directly.  Still modify\\n    // it indirectly.\\n    const mat = Array.from(matrix);\\n    let col = mat[r].length - 3;\\n    const maxidx = mat.length - 1;\\n    while (col >= 0) {\\n        if (maxidx !== r && leaf() === mat[r + 1][col]) {\\n            return mat;\\n        }\\n        let row = Math.floor(r);\\n        while (row > 0) {\\n            if (leaf() === mat[row][col + 1]) {\\n                break;\\n            }\\n            mat[row][col] = placeholder();\\n            row--;\\n        }\\n        col--;\\n    }\\n    return mat;\\n}\\n\\n/**\\n * Prune branches that connect two siblings.  We do not need such branches.\\n * We can work out which servers are siblings by following the branch lines\\n * that connect two forks.\\n *\\n * @param matrix The ASCII art of the network of world servers.  The function\\n *     modifies this argument.\\n * @return The same matrix, but with sibling branches removed.\\n */\\nfunction prune_sibling_branch(matrix) {\\n    assert(matrix.length > 0);\\n    assert(matrix[0].length > 0);\\n    // A shallow copy so we don't modify the parameter directly.  We still\\n    // modify it indirectly.\\n    const mat = Array.from(matrix);\\n    // Start from the second row onward.\\n    for (let i = 1; i < mat.length; i++) {\\n        // Top row is shorter than bottom row.\\n        if (mat[i - 1].length < mat[i].length) {\\n            continue;\\n        }\\n        // There is a leaf immediately above the current leaf.\\n        const j = mat[i].length - 1;\\n        if (leaf() === mat[i - 1][j]) {\\n            continue;\\n        }\\n        // Start pruning from this row and work upward.\\n        let row = i - 1;\\n        while (row > 0) {\\n            if (fork() === mat[row][j]) {\\n                break;\\n            }\\n            assert(branch() === mat[row][j]);\\n            mat[row][j] = placeholder();\\n            row--;\\n        }\\n    }\\n    return mat;\\n}\\n\\n/**\\n * A T junction.\\n */\\nfunction tee() {\\n    return \\\"├╴\\\";\\n}\\n\\n/**\\n * Translate the internal representation of the network of servers into ASCII\\n * art.\\n *\\n * @param tree A matrix containing the internal representation of the network\\n *     of servers.\\n * @return An array [grid, map] as follows.\\n *\\n *     grid := The internal representation as ASCII art.\\n *     map := Converts a pair of coordinates in grid to a server name.\\n */\\nfunction to_ascii_art(tree) {\\n    assert(tree.length > 0);\\n    assert(tree[0].length > 0);\\n    // Start from the second row.  The first row has only the home server.\\n    const grid = []; // ASCII art.\\n    const map = new Map(); // Coordinates to server name.\\n    assert(tree[0].length === 1);\\n    assert(home === tree[0][0]);\\n    grid.push([leaf()]);\\n    const delim = delimiter();\\n    map.set(`0${delim}0`, home);\\n    for (let i = 1; i < tree.length; i++) {\\n        const previous = tree[i - 1];\\n        const current = tree[i];\\n        const row = [];\\n        // The first element is always the home server.\\n        assert(home === current[0]);\\n        for (let j = 0; j < current.length; j++) {\\n            // A leaf, i.e. the destination server in a shortest path.\\n            if (j >= previous.length || previous[j] !== current[j]) {\\n                row.push(leaf());\\n                const coord = i + delim + j;\\n                map.set(coord, current[j]);\\n                continue;\\n            }\\n            // A branch.\\n            assert(previous[j] === current[j]);\\n            row.push(branch());\\n        }\\n        grid.push(row);\\n    }\\n    return [grid, map];\\n}\\n\\n/**\\n * Convert the matrix representation of the ASCII art into a string.\\n *\\n * @param matrix The ASCII art of the network of world servers.  The function\\n *     modifies this argument.\\n * @return A string representation of the ASCII art.\\n */\\nfunction to_string(matrix) {\\n    assert(matrix.length > 0);\\n    assert(matrix[0].length > 0);\\n    // A shallow copy so we don't modify the parameter directly.  We still\\n    // modify it indirectly.\\n    const mat = Array.from(matrix);\\n    // Substitute a place holder with a whitespace.\\n    const whitespace = \\\"   \\\";\\n    for (let i = 0; i < mat.length; i++) {\\n        for (let j = 0; j < mat[i].length; j++) {\\n            if (placeholder() === mat[i][j]) {\\n                mat[i][j] = whitespace;\\n            }\\n        }\\n    }\\n    // Entries in the matrix as a string.\\n    let art = io.NEWLINE;\\n    for (const row of mat) {\\n        art += row.join(\\\"\\\") + io.NEWLINE;\\n    }\\n    return art;\\n}\\n\\n/**\\n * A tree structure of the servers in the game world.  If our home server is\\n * called \\\"home\\\", we might have the network map:\\n *\\n * home\\n * ├╴servA (1)[0]\\n * │  ├╴servD (15)[2]\\n * │  ├╴servE (100)[2]\\n * │  │  └╴servG (302)[3]\\n * │  └╴servG (256)[2]\\n * ├╴servB (101)[1]\\n * └╴servC (150)[2]\\n *\\n * The above network map tells us various information about the servers in the\\n * game world, apart from how these servers are structured relative to each\\n * other.  For example, the line \\\"serverName (n)[k]\\\" tells us the name of a\\n * server (i.e. serverName), the minimum Hack stat we must have in order to\\n * hack this server (i.e. n), and the number of ports that must be opened on\\n * the server (i.e. k) so we can nuke the server.  The server servA requires us\\n * to have a minimum of 1 Hack and we do not need to open any ports on the\\n * server.  As we always start with 1 Hack, we can immediately nuke servA and\\n * gain root access on that server.  On the other hand, servG requires a\\n * minimum of 302 Hack and we must open 3 ports on the server.\\n *\\n * How do we reach a particular server?  To reach servG, we start from our\\n * home server and connect to servA.  From there, we connect to servE and\\n * finally connect to servG.  The network map printed by the script shows a\\n * shortest path from the home server to each server in the game world.  There\\n * might be more than one shortest path from home to a particular server.  The\\n * script chooses to print only one of these shortest paths.\\n *\\n * When printed to the terminal, various colours are used to signify the status\\n * of each server, as explained below.\\n *\\n * 1. The whole line \\\"serverName (n)[k]\\\" is coloured green.  We have nuked\\n *    serverName and now have root access on the server.\\n * 2. The whole line \\\"serverName (n)[k]\\\" is coloured dark green.  We have\\n *    enough Hack stat to meet the minimum hacking skill requirement and we can\\n *    open all ports on the server.  However, we do not have root access on the\\n *    server because the server is yet to be nuked.\\n * 3. The whole line \\\"serverName (n)[k]\\\" is coloured red.  Our Hack stat is\\n *    less than the required minimum hacking skill and we cannot open all ports\\n *    on the server.\\n * 4. The part \\\"serverName (n)\\\" is coloured dark green whereas \\\"[k]\\\" is\\n *    coloured red.  We meet the minimum Hack stat required by the server, but\\n *    we cannot open all ports on the server.\\n * 5. The part \\\"serverName (n)\\\" is coloured red whereas \\\"[k]\\\" is coloured dark\\n *    green.  Our Hack stat is less than the minimum hacking skill required by\\n *    the server, but we can open all ports on the server.\\n *\\n * This script does not implement the functionalities of https://nmap.org.\\n * However, it serves the same purpose as the script\\n *\\n * https://github.com/alainbryden/bitburner-scripts/blob/main/scan.js\\n *\\n * We do not include purchased servers.  The script accepts a command line\\n * argument, i.e. the hostname of the server for which we want a status report.\\n * Without a command line argument, the script prints a map of the whole\\n * network of world servers.\\n *\\n * Usage: run nmap.js [hostname]\\n * Example: run nmap.js\\n * Example: run nmap.js n00dles\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Sanity check.\\n    if (ns.args.length > 1) {\\n        let msg = \\\"Usage: run nmap.js [hostname]\\\\n\\\\n\\\";\\n        msg += \\\"hostname -- (optional) Hostname of target server.\\\";\\n        ns.tprint(msg);\\n        return;\\n    }\\n    // Print the status of a server.\\n    if (ns.args.length === 1) {\\n        const host = ns.args[0];\\n        const server = new Set(network(ns));\\n        if (!server.has(host)) {\\n            ns.tprint(`Server not found: ${host}`);\\n            return;\\n        }\\n        ns.tprint(decorate(ns, host));\\n        return;\\n    }\\n    // A network map with status of each server.\\n    const path = all_shortest_paths(ns);\\n    display_tree(ns, path);\\n}\\n\",\"filename\":\"nmap.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/806a80f2-8149-4569-9397-d909a3e12456\",\"moduleSequenceNumber\":349995},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/01744a45-2bca-4668-960f-6fab0c85ef6d\",\"moduleSequenceNumber\":349993},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3e364296-d04d-4214-a712-5a86ad79c165\",\"moduleSequenceNumber\":349990},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/87ca0302-4b9c-4aa1-ac51-917105362133\",\"moduleSequenceNumber\":349988},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/dcef34d7-9002-4b84-99b2-c46b1d1589a9\",\"moduleSequenceNumber\":349987},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/58833c81-d1c2-4ab0-bdcf-3df7457677fd\",\"moduleSequenceNumber\":349986},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ca31bf82-7157-4f24-bb75-0215bb9805b6\",\"moduleSequenceNumber\":349983},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/467352ea-f29c-4b1b-b8c0-4d7605118603\",\"moduleSequenceNumber\":349982},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b1aed2a7-dde1-4f48-a61f-8ab0cdb8381a\",\"moduleSequenceNumber\":350017},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5396c795-2a47-4f91-bbbe-4d7a5162114e\",\"moduleSequenceNumber\":349995},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d36e61a4-aeab-480b-9fbe-f261c7753cec\",\"moduleSequenceNumber\":349993},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f70dac5b-d8e3-4ac1-9e1c-c45cf0692bdf\",\"moduleSequenceNumber\":349990},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c6f56e0a-05af-4810-813d-68faa0af62c5\",\"moduleSequenceNumber\":349988},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b2c4dd23-8479-4b79-b6db-591bfb3aa76c\",\"moduleSequenceNumber\":349987},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c56fa40b-5db3-42c6-a538-18a4da76d34c\",\"moduleSequenceNumber\":349986},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7efba022-1d73-4f1c-93c7-84b96936affb\",\"moduleSequenceNumber\":349983},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/49bd467e-cab2-4c6a-ae34-0e954925d9e3\",\"moduleSequenceNumber\":349982},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3d32f2d2-8de9-4568-a913-fc5d27da2eb1\",\"moduleSequenceNumber\":350017},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/34e4aed0-f88f-4626-a5e0-1601e9bf9480\",\"moduleSequenceNumber\":349990},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/833c6b03-9366-4f65-a353-db9e1029c0d2\",\"moduleSequenceNumber\":349978},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/35487904-ab0f-4f0c-b94f-f2977d296bcc\",\"moduleSequenceNumber\":350001},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/65554f36-9c0e-48a8-b219-28344e840f60\",\"moduleSequenceNumber\":349990},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5529a8e4-03ef-4cb3-b04a-117e19c32dcc\",\"moduleSequenceNumber\":349988},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/33e56e1e-ac00-4421-80da-25ac398bda41\",\"moduleSequenceNumber\":349986},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a8199da3-3447-45b6-bce0-1c8d970adf32\",\"moduleSequenceNumber\":349982},{\"filename\":\"nmap.js\",\"url\":\"blob:https://danielyxie.github.io/a7bd419d-14ce-4c87-b260-db393f689333\",\"moduleSequenceNumber\":351487}],\"dependents\":[],\"ramUsage\":6.65,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725305,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { network } from \\\"/lib/network.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport {\\n    assert,\\n    choose_best_server,\\n    choose_targets,\\n    filter_bankrupt_servers,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Restart all scripts on a purchased server.  This is useful in the case where\\n * all scripts running on a purchased server have been killed.  We start running\\n * those scripts again.  This script chooses the \\\"best\\\" servers to hack.\\n *\\n * Usage: run restart-server.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Cycle through our purchased servers to see whether to restart our\\n    // hack script.\\n    const player = new Player(ns);\\n    let target = [];\\n    for (const s of player.pserv()) {\\n        // Determine the target servers to hack.  There are always at least 2\\n        // targets because at least 2 servers in the game world require only\\n        // 1 Hack stat and zero opened ports.\\n        // Assume that each target is not bankrupt.\\n        if (target.length < 1) {\\n            target = filter_bankrupt_servers(\\n                ns,\\n                choose_targets(ns, network(ns))\\n            );\\n            assert(target.length > 0);\\n        }\\n        const server = new Server(ns, s);\\n        if (!server.is_running_script(player.script())) {\\n            // Choose the best target server that is not bankrupt.  Run our\\n            // hack script against this target server.\\n            const t = choose_best_server(ns, target);\\n            target = target.filter((r) => r !== t);\\n            const target_server = new Server(ns, t);\\n            assert(await target_server.gain_root_access());\\n            assert(await server.deploy(target_server.hostname()));\\n        }\\n    }\\n}\\n\",\"filename\":\"restart-server.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":10.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725306,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n/**\\n * Share our home server with a faction.  Doing so would increase our\\n * reputation gains within that faction.  Run this script using as high a number\\n * of threads as possible to increase our reputation gains even further.\\n *\\n * Usage: run share.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    for (;;) {\\n        await ns.share();\\n    }\\n}\\n\",\"filename\":\"share.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"share.js\",\"url\":\"blob:https://danielyxie.github.io/ace88636-bf35-41b2-809f-4aeb9be8f48b\",\"moduleSequenceNumber\":719907}],\"dependents\":[],\"ramUsage\":4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725307,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { network, shortest_path } from \\\"/lib/network.js\\\";\\n\\n/**\\n * Determine a shortest path from our home server to a target server.  Must\\n * provide the target server from the command line.  The script will print a\\n * chain of commands that allows us to connect to the target server.\\n *\\n * Usage: run shortest-path.js [targetServer]\\n * Example: run shortest-path.js run4theh111z\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Must provide a command line argument.\\n    const error_msg = \\\"Must provide the name of the target server.\\\";\\n    if (ns.args.length < 1) {\\n        ns.tprint(error_msg);\\n        return;\\n    }\\n    // Not a server in the game world.  Exclude purchased servers.\\n    const target = ns.args[0];\\n    const server = new Set(network(ns));\\n    if (!server.has(target)) {\\n        ns.tprint(`Server not found: ${target}`);\\n        return;\\n    }\\n    // Find shortest path.\\n    let path = shortest_path(ns, home, target);\\n    if (path.length < 1) {\\n        ns.tprint(`Target server must be reachable from ${home}.`);\\n        return;\\n    }\\n    // Print commands to connect to target server.\\n    path = path.filter((s) => s !== home);\\n    ns.tprint(`connect ${path.join(\\\"; connect \\\")}`);\\n}\\n\",\"filename\":\"shortest-path.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3ed96db7-12d8-4305-9982-06d76a742001\",\"moduleSequenceNumber\":349995},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f3ae8f0d-3ce6-4ca0-bc1f-7c4b73cbb105\",\"moduleSequenceNumber\":349993},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0f9e199d-2c92-4917-b534-78c183651556\",\"moduleSequenceNumber\":349990},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cbb6bf01-8018-424b-9270-60aa956444c0\",\"moduleSequenceNumber\":349988},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/365ddff2-49c8-4668-9b82-a2e22d0e0628\",\"moduleSequenceNumber\":349987},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/38776187-9467-4a81-b991-4b1b517ed3a8\",\"moduleSequenceNumber\":349986},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9f4e73f9-3302-4013-b06c-e7e926f11df1\",\"moduleSequenceNumber\":349983},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a955c7a9-3177-4b8f-bc44-88b2fe527c36\",\"moduleSequenceNumber\":349982},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/96766a22-fa59-496d-a9d4-39d7c30218cc\",\"moduleSequenceNumber\":350017},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3d31a0d9-67fa-4926-a77d-217d8922b8cf\",\"moduleSequenceNumber\":349990},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b756ed56-84eb-4756-8c58-85f23654d01a\",\"moduleSequenceNumber\":349978},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/cd18936c-f933-433e-8c37-596fb8bcf8c9\",\"moduleSequenceNumber\":350001},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d9bef327-7538-4e8a-ad70-71dc8b931d5f\",\"moduleSequenceNumber\":349990},{\"filename\":\"shortest-path.js\",\"url\":\"blob:https://danielyxie.github.io/c5e74fe1-0d63-4de5-bf07-a4468c6fcdc2\",\"moduleSequenceNumber\":351488}],\"dependents\":[],\"ramUsage\":4.05,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725308,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { money_reserve } from \\\"/lib/constant/misc.js\\\";\\nimport { pserv } from \\\"/lib/constant/pserv.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { forecast, wse } from \\\"/lib/constant/wse.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Wait until we have all prerequisites before we do anything related to the\\n * dark web.  For now, we wait until the following conditions are met:\\n *\\n * (1) We have all port opener programs.\\n * (2) Have at least a certain amount of money.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function await_prerequisites(ns) {\\n    // Must acquire all port opener programs.\\n    const player = new Player(ns);\\n    while (!player.has_all_port_openers()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    // Our farm of purchased servers must meet certain minimum requirements.\\n    while (!has_minimum_pserv(ns)) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    // Wait until we have a large amount of money before trading on the Stock\\n    // Market.  Gambling on the Stock Market requires huge wealth.\\n    while (!meet_money_threshold(ns)) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n}\\n\\n/**\\n * Purchase shares of a stock.\\n *\\n * @param ns The Netscript API.\\n * @param stk We want to purchase shares of this stock.\\n */\\nfunction buy_stock(ns, stk) {\\n    // Do we skip buying shares of this stock?\\n    if (skip_stock(ns, stk)) {\\n        return;\\n    }\\n    // Purchase shares of a stock.\\n    const nshare = num_shares(ns, stk);\\n    assert(nshare > 0);\\n    ns.stock.buyStock(stk, nshare);\\n}\\n\\n/**\\n * Whether we have access to Stock Market data and APIs.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have access to all Stock Market data and APIs;\\n *     false otherwise.\\n */\\nfunction has_api_access(ns) {\\n    if (!ns.stock.purchaseWseAccount()) {\\n        return bool.NOT;\\n    }\\n    if (!ns.stock.purchaseTixApi()) {\\n        return bool.NOT;\\n    }\\n    if (!ns.stock.purchase4SMarketData()) {\\n        return bool.NOT;\\n    }\\n    if (!ns.stock.purchase4SMarketDataTixApi()) {\\n        return bool.NOT;\\n    }\\n    return bool.HAS;\\n}\\n\\n/**\\n * Whether we have sufficient funds for purchasing stocks.  This function\\n * takes into account the minimum amount of money that should be held in\\n * reserve whenever we trade on the Stock Market.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have enough money to buy stocks; false otherwise.\\n */\\nfunction has_funds(ns) {\\n    const player = new Player(ns);\\n    return player.money() > wse.RESERVE_MULT * money_reserve;\\n}\\n\\n/**\\n * Whether we have a minimum running farm of purchased servers.  To meet this\\n * condition, our farm must satisfy the following:\\n *\\n * (1) Each purchased server in the farm must have at least 16,384GB RAM.\\n * (2) Our farm must have the maximum number of purchased server.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have a minimum running purchased server farm;\\n *     false otherwise.\\n */\\nfunction has_minimum_pserv(ns) {\\n    // Do we have the maximum number of purchased servers?\\n    const player = new Player(ns);\\n    if (player.pserv().length < ns.getPurchasedServerLimit()) {\\n        return bool.NOT;\\n    }\\n    // Does each purchased server have at least the given amount of RAM?\\n    const server = ns.getServer(pserv.PREFIX);\\n    assert(server.purchasedByPlayer);\\n    if (server.maxRam < pserv.HIGH_RAM) {\\n        return bool.NOT;\\n    }\\n    return bool.HAS;\\n}\\n\\n/**\\n * Whether it is profitable to sell all shares of a given stock.\\n *\\n * @param ns The Netscript API.\\n * @param stk Is there any profit in selling all shares of this stock?\\n * @return true if we can make a profit by selling all our shares of this\\n *     stock; false otherwise.\\n */\\nfunction is_profitable(ns, stk) {\\n    const position = ns.stock.getPosition(stk);\\n    const nlong = position[0];\\n    // Assume we have at least 1 share of the stock.\\n    assert(nlong > 0);\\n    return ns.stock.getSaleGain(stk, nlong, \\\"Long\\\") > 0;\\n}\\n\\n/**\\n * Whether we meet the money threshold.  Must have at least a certain amount\\n * of money before we start dabbling on the Stock Market.\\n *\\n * @param ns The Netscript API.\\n * @return true if our funds is at least the money threshold; false otherwise.\\n */\\nfunction meet_money_threshold(ns) {\\n    const player = new Player(ns);\\n    return player.money() >= money_reserve;\\n}\\n\\n/**\\n * How many shares of a stock we can purchase.\\n *\\n * @param ns The Netscript API.\\n * @param stk We want to buy shares of this stock.\\n * @return The number of shares of this stock that we can buy.  Must be at\\n *     least zero.  If 0, then we can't buy any shares of the given stock.\\n */\\nfunction num_shares(ns, stk) {\\n    // We don't have enough money to buy stocks.\\n    if (!has_funds(ns)) {\\n        return 0;\\n    }\\n    // Our funds is less than the spending threshold.\\n    const player = new Player(ns);\\n    const funds = player.money() - money_reserve;\\n    if (funds < wse.SPEND_T) {\\n        return 0;\\n    }\\n    // The maximum number of shares of the stock we can buy.  This takes into\\n    // account the number of shares we already own.\\n    const position = ns.stock.getPosition(stk);\\n    const nlong = position[0];\\n    const max_share = ns.stock.getMaxShares(stk) - nlong;\\n    if (max_share < 1) {\\n        return 0;\\n    }\\n    // Calculate how many shares of the stock we can buy.\\n    const price = ns.stock.getAskPrice(stk);\\n    const nshare = Math.floor(funds / price);\\n    return Math.min(nshare, max_share);\\n}\\n\\n/**\\n * Purchase access to Stock Market data and APIs.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function purchase_api_access(ns) {\\n    while (!has_api_access(ns)) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    log(ns, \\\"Purchased access to Stock Market data and APIs\\\");\\n}\\n\\n/**\\n * Sell shares of a stock.\\n *\\n * @param ns The Netscript API.\\n * @param stk We want to sell shares of this stock.\\n */\\nfunction sell_stock(ns, stk) {\\n    const position = ns.stock.getPosition(stk);\\n    const nlong = position[0];\\n    // Skip the stock if we don't have any shares of the stock.\\n    if (nlong < 1) {\\n        return;\\n    }\\n    // Sell all shares of the stock if the forecast is below the threshold.\\n    if (ns.stock.getForecast(stk) < forecast.SELL) {\\n        if (is_profitable(ns, stk)) {\\n            ns.stock.sellStock(stk, nlong);\\n        }\\n    }\\n}\\n\\n/**\\n * Whether to skip the purchase of shares.  There are various reasons why we\\n * might want to skip the buying of shares, even though we have sufficient\\n * funds.  One reason is that we want to sell our shares to raise a huge amount\\n * of money for various purposes.\\n *\\n * @param ns The Netscript API.\\n * @return true if the trade bot should skip buying shares during this tick;\\n *     false otherwise.\\n */\\nfunction skip_buy(ns) {\\n    return ns.fileExists(wse.STOP_BUY, home);\\n}\\n\\n/**\\n * Whether to skip buying shares of a stock.\\n *\\n * @param ns The Netscript API.\\n * @param stk Do we want to skip over this stock?\\n * @return true if we are to skip this stock; false otherwise.\\n */\\nfunction skip_stock(ns, stk) {\\n    // Skip if there is a low chance of increase in the next tick.\\n    if (ns.stock.getForecast(stk) < forecast.BUY) {\\n        return bool.SKIP;\\n    }\\n    // Skip if the stock is too volatile.\\n    if (ns.stock.getVolatility(stk) > forecast.VOLATILITY) {\\n        return bool.SKIP;\\n    }\\n    // Skip if we cannot afford to purchase any shares of the stock.\\n    const nshare = num_shares(ns, stk);\\n    if (nshare < 1) {\\n        return bool.SKIP;\\n    }\\n    return bool.NO_SKIP;\\n}\\n\\n/**\\n * Automate our trading on the World Stock Exchange.  This is our trade bot.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"sleep\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    // Prepare to trade.\\n    await await_prerequisites(ns);\\n    await purchase_api_access(ns);\\n    // Continuously trade on the Stock Market.\\n    log(ns, \\\"Trading on the Stock Market\\\");\\n    for (;;) {\\n        // Iterate over each stock.  Decide whether to buy or sell.\\n        for (const stk of ns.stock.getSymbols()) {\\n            sell_stock(ns, stk);\\n            if (!has_minimum_pserv(ns)) {\\n                continue;\\n            }\\n            if (skip_buy(ns)) {\\n                continue;\\n            }\\n            buy_stock(ns, stk);\\n        }\\n        await ns.sleep(wse.TICK);\\n    }\\n}\\n\",\"filename\":\"trade-bot.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/eb5ef68a-9ca4-4873-bc97-eddbdf756724\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1860e8cf-223e-4a2b-939b-93eeb2ec77b5\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/14abbbc1-747f-41b4-8e95-068f8560acbf\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/da1dbb89-477d-49c9-ba85-4dd0fd99a433\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/21109c61-3c60-4d21-8880-4295cee918b5\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d0d0632c-60f8-438f-bbbb-7817368a8ffe\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7bfacc4a-1b98-48ec-abc4-d2c5f8da43e1\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/70cb7287-f08b-44d6-ab3f-2175773732a2\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ac426837-761b-4552-a283-08fe5a857ed9\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/93162b82-847f-4d46-a5ed-47b6f3235e8f\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c0dc0417-2c83-4168-a796-ab3d244f7c9c\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4d8cb02c-80cb-4ab7-bf82-392286a44440\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3b31852f-5f15-4840-a4bf-e6d733a8af11\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8f6ca52d-0fac-4b4f-b807-ba7085ac4c68\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/41c74ae9-c7ae-40a3-be95-7a3581ae3118\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/de73f4f2-9abe-4ae5-8656-16208e067e7e\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5317d653-bfd0-4170-981c-c68bee6b2352\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5c9e8152-908d-40d1-9e7b-e712a0bc1126\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/80b7ebed-4f40-4f49-8834-0c7dee23897b\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d4ff5a34-48ac-45b4-96ab-88a5b9a42ab6\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2196f6ad-3840-4ac7-a133-e384ad9b334c\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/a1531350-0561-4396-b574-3760fa74cb0e\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e646d747-ba33-469d-8185-3c00d5835b72\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/79bac370-8209-421f-bd52-7a33ca644f8e\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4648a1b4-1844-4f89-95a3-888c81cad742\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f9b7cd3b-209a-4402-8e8e-52073a81130f\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0f6f93f7-5341-4018-9079-bbfa801494ae\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4a18c442-cc46-490b-85b4-1d323b25d45f\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6ca79f2a-5c1f-4157-a128-88ee6aff5032\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e4b1e2a1-7522-4554-a673-cbf3b95c516d\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/677e47e0-a3b1-42c5-a091-b8cb0883f6a1\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/aa380a1f-89bf-411a-82f6-6dc16d7c307e\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/36c76f11-98a7-4ed9-8a3d-0abd61ddd6e3\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c330e4d3-5fe4-42f3-a708-81f67f01a539\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f0089c1a-a0d5-4e02-b75a-e463974a7619\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/933afd65-870d-43ab-abc1-11586f442ccf\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/pserv.js\",\"url\":\"blob:https://danielyxie.github.io/751f7846-c5f6-41a5-be8e-f3b5d17a9e63\",\"moduleSequenceNumber\":724824},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0ead1d5e-bb02-4101-91ac-07414736c3ba\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/45e66d17-731f-4bb0-b266-8abb0eb7d5a6\",\"moduleSequenceNumber\":724813},{\"filename\":\"trade-bot.js\",\"url\":\"blob:https://danielyxie.github.io/f0d380c3-f7cd-4adf-808b-b4f1174b29e3\",\"moduleSequenceNumber\":724894}],\"dependents\":[],\"ramUsage\":36.65,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725309,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.buyStock\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.purchaseWseAccount\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.purchaseTixApi\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.purchase4SMarketData\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.purchase4SMarketDataTixApi\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getSaleGain\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getMaxShares\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.sellStock\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stock.getVolatility\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport {\\n    assert,\\n    choose_best_server,\\n    filter_bankrupt_servers,\\n    filter_pserv,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Determine which servers in the game world have been compromised.  We\\n * exclude all purchased servers.  A server in the game world is said to be\\n * compromised provided that:\\n *\\n * (1) We have root access to the server.\\n * (2) Our hack scripts are currently running on the server.\\n *\\n * @param ns The Netscript API.\\n * @param script A hack script.  We want to check whether a server is running\\n *     this script.\\n * @param server An array of server names.\\n * @return An array of servers that have been compromised.\\n */\\nfunction compromised_servers(ns, script, server) {\\n    assert(server.length > 0);\\n    const compromised = [];\\n    for (const s of filter_pserv(ns, server)) {\\n        const serv = new Server(ns, s);\\n        if (serv.has_root_access() && serv.is_running_script(script)) {\\n            compromised.push(s);\\n        }\\n    }\\n    return compromised;\\n}\\n\\n/**\\n * Gain root access to a server, copy our hack scripts over to the server, and\\n * use the server to hack a target.\\n *\\n * @param ns The Netscript API.\\n * @param server Use this server to hack a target.\\n * @param target Hack this server.\\n */\\nasync function hack_a_server(ns, server, target) {\\n    const serv = new Server(ns, server);\\n    const targ = new Server(ns, target);\\n    // Ensure we have root access on both servers.\\n    if (!serv.has_root_access()) {\\n        await serv.gain_root_access();\\n    }\\n    if (!targ.has_root_access()) {\\n        await targ.gain_root_access();\\n    }\\n    // Copy our hack script over to a server.  Use the server to hack a target.\\n    assert(await serv.deploy(targ.hostname()));\\n}\\n\\n/**\\n * Try to hack a bunch of servers in the game world.\\n *\\n * @param ns The Netscript API.\\n * @param target Try to hack one or more servers on this list.  Can't be\\n *     an empty array.\\n * @return An array [reject, hacked] as follows.\\n *     (1) reject := An array of servers we can't hack at the moment.\\n *     (2) hacked := An array of servers that have been hacked.\\n */\\nasync function hack_servers(ns, target) {\\n    // Sanity check.\\n    assert(target.length > 0);\\n    // Determine the maximum number of ports we can open on a server.\\n    const player = new Player(ns);\\n    const nport = player.num_ports();\\n    assert(nport >= 0);\\n    // A list of servers that were successfully hacked.\\n    const hacked_server = [];\\n    // Gain root access to as many servers as possible on the network.  Copy\\n    // our hack script to each server and use the server to hack itself.\\n    const reject = []; // Servers we can't hack at the moment.\\n    // A Hack stat margin: 1% of our Hack stat, plus another 5 points.\\n    const margin = Math.floor(0.01 * player.hacking_skill() + 5);\\n    for (const s of target) {\\n        // Should we skip this server?\\n        if (skip_server(ns, s, player.script(), margin)) {\\n            continue;\\n        }\\n        const server = new Server(ns, s);\\n        const hack_lvl = player.hacking_skill();\\n        const required_lvl = server.hacking_skill();\\n        // If the hacking skill requirement of the server is within the margin\\n        // of our Hack stat, skip the server for now but make a note to attempt\\n        // at a later time.\\n        if (hack_lvl < required_lvl) {\\n            if (tolerate_margin(ns, margin, s)) {\\n                reject.push(s);\\n                continue;\\n            }\\n        }\\n        assert(hack_lvl >= required_lvl);\\n        // If the server is bankrupt, skip the server for now and add it to\\n        // the list of rejects.\\n        if (server.is_bankrupt()) {\\n            reject.push(s);\\n            continue;\\n        }\\n        // Use the server to hack itself.\\n        await hack_a_server(ns, s, s);\\n        hacked_server.push(s);\\n        log(ns, `Compromised server: ${s}`);\\n    }\\n    return [reject, hacked_server];\\n}\\n\\n/**\\n * Use a bankrupt server to hack a server that can hold money.\\n *\\n * @param ns The Netscript API.\\n * @param candidate Scan this array of servers to see whether any is bankrupt.\\n * @param hacked_server Each server in this array has been successfully hacked.\\n *     The implication is that each server is not bankrupt, i.e. can hold money.\\n * @return An array of servers we cannot redirect at the moment.\\n */\\nasync function redirect_bankrupt_server(ns, candidate, hacked_server) {\\n    // Sanity checks.\\n    assert(candidate.length > 0);\\n    assert(hacked_server.length > 0);\\n    // An array of hacked servers.  We remove bankrupt servers from this list.\\n    let hserver = filter_bankrupt_servers(ns, Array.from(hacked_server));\\n    const reject = [];\\n    const player = new Player(ns);\\n    for (const s of candidate) {\\n        const server = new Server(ns, s);\\n        if (player.hacking_skill() >= server.hacking_skill()) {\\n            // Redirect a bankrupt server to hack a target.\\n            if (server.is_bankrupt()) {\\n                // Choose a target server from a list of servers that have\\n                // been hacked.\\n                const target = new Server(ns, choose_best_server(ns, hserver));\\n                assert(!target.is_bankrupt());\\n                hserver = hserver.filter((hs) => hs !== target.hostname());\\n                // Redirect the bankrupt server to hack the target server.\\n                await hack_a_server(ns, s, target.hostname());\\n                log(ns, `Compromised server: ${s}`);\\n                continue;\\n            }\\n        }\\n        reject.push(s);\\n    }\\n    return reject;\\n}\\n\\n/**\\n * Whether we should skip the server.  A server might be skipped over for\\n * various reasons.\\n *\\n * @param ns The Netscript API.\\n * @param server Should we skip this server?\\n * @param script The name of our hacking script.\\n * @param margin The Hack stat margin.  For servers whose hacking skill\\n *     requirement is higher than our current Hack stat, the margin is the\\n *     extra Hack stat we are willing to wait to acquire.  Let h be our Hack\\n *     stat, let m be the margin, and r the required hacking skill requirement\\n *     of the server.  If h + m < r, then the hacking skill requirement of the\\n *     server is too high and we should skip over this server.  In case\\n *     h < r and h + m >= r, we are willing to wait for our Hack stat to\\n *     increase by an extra m points.\\n * @return true if we are to skip over the given server; false otherwise.\\n */\\nfunction skip_server(ns, server, script, margin) {\\n    const serv = new Server(ns, server);\\n    const player = new Player(ns);\\n    const m = Math.floor(margin);\\n    assert(m > 0);\\n    // Determine the maximum number of ports we can open on a server.\\n    const nport = player.num_ports();\\n    assert(nport >= 0);\\n    // Skip over a server that requires more ports than we can open.\\n    if (serv.num_ports_required() > nport) {\\n        return bool.SKIP;\\n    }\\n    // If our hack script is already running on the server, then skip the\\n    // server.\\n    if (serv.is_running_script(script)) {\\n        return bool.SKIP;\\n    }\\n    // Determine how many threads we can run our script on a server.  If we\\n    // can't run our script on the server, then we skip the server.\\n    const nthread = serv.num_threads(script);\\n    if (nthread < 1) {\\n        return bool.SKIP;\\n    }\\n    // Skip over a server if its hacking skill requirement is too high.\\n    if (player.hacking_skill() + m < serv.hacking_skill()) {\\n        return bool.SKIP;\\n    }\\n    return bool.NO_SKIP;\\n}\\n\\n/**\\n * Whether to tolerate the given margin with respect to the hacking skill\\n * requirement of a server.  Let h be our Hack stat, m the margin, and r the\\n * hacking skill requirement of a server.  Suppose that h < r.  We are willing\\n * to tolerate the margin, i.e. wait for our Hack stat to increase by an extra\\n * m points, provided that h + m >= r.\\n *\\n * @param ns The Netscript API.\\n * @param margin The Hack stat margin.\\n * @param server The target server.\\n * @return true if we are willing to tolerate the margin; false otherwise.\\n */\\nfunction tolerate_margin(ns, margin, server) {\\n    const serv = new Server(ns, server);\\n    const player = new Player(ns);\\n    const h = player.hacking_skill();\\n    const m = Math.floor(margin);\\n    assert(m > 0);\\n    const requirement = serv.hacking_skill();\\n    assert(h < requirement);\\n    return h + m >= requirement;\\n}\\n\\n/**\\n * Search for world servers to hack.  We exclude purchased servers.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function update(ns) {\\n    let server = network(ns);\\n    // A list of servers that have been successfully hacked.\\n    const player = new Player(ns);\\n    let hacked_server = compromised_servers(ns, player.script(), server);\\n    // Continuously try to gain root access to servers in the game world and\\n    // let each server hack itself.  Exclude all purchased servers.\\n    while (server.length > 0) {\\n        const [reject, hacked] = await hack_servers(ns, server);\\n        hacked_server = [...new Set(hacked_server.concat(hacked))];\\n        assert(hacked_server.length > 0);\\n        // Redirect a bankrupt server to hack another target.\\n        server = reject;\\n        if (reject.length > 0) {\\n            server = await redirect_bankrupt_server(ns, server, hacked_server);\\n        }\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n}\\n\\n/**\\n * Use each server in the game world to hack itself.  We exclude purchased\\n * servers.  A bankrupt server is used to hack another world server that\\n * isn't bankrupt.\\n *\\n * Usage: run world-server.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerUsedRam\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Continuously look for world servers to hack.\\n    log(ns, \\\"Searching for world servers to nuke and hack\\\");\\n    for (;;) {\\n        await update(ns);\\n        await ns.sleep(wait_t.MINUTE);\\n    }\\n}\\n\",\"filename\":\"world-server.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/518f49a4-ad23-466e-b81a-adb98932c876\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/79c7f400-813c-49a5-bd94-129827f68302\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dffc181e-1ec3-4f1b-84f2-958c3ff4666a\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9706c31e-d42c-4244-9ce6-d078afd55326\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c89113db-3ee0-48ad-af12-798b59971cf7\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/78644f71-9962-4f09-b17d-01604aff287d\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/60cfc0c5-d4d2-4f73-8884-929d7873f2a9\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/83eef646-b6cd-4662-9844-8bdad06178c3\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b23aee51-9aec-4e88-9a89-b63ac63cf0bf\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ffd08fce-4d58-44e4-a629-f48859d62336\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b0e09c84-b8cd-4d2e-98ab-7596c0a1d28a\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a693b345-0dcc-4945-8a02-f51e53505ab6\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0c37782b-27bc-443f-98e7-46055035aca8\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/047ef48d-173d-4d00-937e-754ec89e2006\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/da7b75bf-5551-4b83-9566-f5923e1b0b5f\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/643388da-0da7-425d-a5e4-9926eed1ec27\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b621c5cf-d605-4196-97ee-5ae32e5263a1\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/269fba66-ce5c-45c3-b807-8e47e26bd81b\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8cc57780-7eed-40bc-8106-10b80123cf2b\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f08ed82f-9998-40ea-adf1-833047a3bcca\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/565112b1-e8e2-4e58-9a42-211a17068c63\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/434310e3-9a6e-472c-9099-5a0728b24ba4\",\"moduleSequenceNumber\":724840},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9a8b7a48-7df4-4b59-932a-d6d3f2738f7c\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/29b290ff-1f64-4b2e-973b-16020f555b3e\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/949fb3c6-225d-4af6-adac-2ffb2e8d1425\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/276a1830-4b42-46d4-a3da-8862786947e8\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d1cc4ec7-15d8-4402-b714-9d2779cb2317\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8fc670a1-7123-4ffb-8485-07cfd5a89c01\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0e230c48-02fb-4b3b-a780-da0be736fa89\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d8c6ef4e-3d85-4ca3-9911-2df58b169a81\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/11bbd077-5b85-4c76-943e-357727babeac\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fad65ff6-cdc9-4806-97a6-82563b378b85\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f08d32af-5773-4c3b-a813-871a125a18f8\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bd9c2d64-f85d-458f-8080-d8b6c9c545b2\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/b944ba16-b4e9-47de-bb3c-0a240f1b96e3\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7c5e1174-55f7-4812-8ef7-4a58774573fd\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8c7eb8dc-82fe-461e-a6bc-e7a97c8c1bb3\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8c327eeb-c207-4286-8bd8-0cef7064ea3b\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d0d1d563-5cc0-4c3c-937c-86bf7901a9bf\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0cd1edd3-9b42-4c6d-b541-9d21e62f1de5\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/572c24f1-f5d5-4849-8307-b8071287ad2d\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/30b7e78c-87fd-4449-b06f-3296e4b61bff\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/10681b03-0ddb-4ef1-9b00-ca672e794613\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/aaac6344-79f1-420f-b40d-486a9f1c48fa\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bb2f5b18-8bab-41f6-9a52-8b2963642888\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/40c4cc6b-6c69-4882-875f-c3ded491719c\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/d24e3285-df2f-43d6-87bf-33bce5a9988d\",\"moduleSequenceNumber\":724836},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/daabd152-cdea-4869-9fbd-d43ba51815b0\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8527f8c4-2252-4fff-a876-2a76cddb6017\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/06c327a9-ef50-450d-8ec9-7b642025ba50\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/10767ead-380d-4668-8def-57bf85d0dda1\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2348c2a7-44eb-4f70-a454-886ae3042f44\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e6f63433-cce9-4633-b029-75e590d9b251\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/394b4eb5-8513-4bdf-9977-6dd3a2f2fd1b\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0c87c647-b329-452f-afa0-e0d0a0fa4cdb\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/07027d3f-04f6-4b9a-a967-297926cbfe65\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6f447b51-2313-4eab-aedf-55fb68f0ef35\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/f5670834-bab8-4d4b-9904-4b9860f076cd\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6e3dfeb0-554a-425e-a78e-83d7437d043f\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/1ccc1690-735f-406f-a02f-a37906302e71\",\"moduleSequenceNumber\":724813},{\"filename\":\"world-server.js\",\"url\":\"blob:https://danielyxie.github.io/dffcd262-9414-47a4-aace-e8f8a8202595\",\"moduleSequenceNumber\":724891}],\"dependents\":[],\"ramUsage\":10.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725310,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { exec, hram_resume, hram_suspend } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Start a load chain to run scripts related to factions.\\n *\\n * Usage: run chain/faction.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress some log messages.\\n    ns.disableLog(\\\"sleep\\\");\\n    // Try to free up some RAM on home server so we can run the script below.\\n    await hram_suspend(ns);\\n    while (ns.isRunning(\\\"/singularity/program.js\\\", home)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    exec(ns, \\\"/singularity/faction.js\\\");\\n    hram_resume(ns);\\n}\",\"filename\":\"/chain/faction.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8c2fe4bc-5db2-4f53-9309-b74bed966073\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4afab740-bc5c-47f0-841b-e6d7d7926b8b\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7cefa07a-42b9-4e28-8a15-a2540fdc096c\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1505a73f-3a91-4c7a-be72-433bb8a657db\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b9d60c91-cc9d-4980-a9fb-389aa1307638\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/97ff75fc-9e40-4f7e-8ec8-d9d4edeff73d\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e29569f8-db13-4f5f-8416-34354c011173\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c75728ab-6554-462f-9a19-4c2def362006\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0c72017b-d30b-4711-beb3-3e9b3532c37a\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e4fe4162-750e-4714-a08b-4606b8261ad1\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/212938da-0e3e-4910-8f7a-863177df0c44\",\"moduleSequenceNumber\":724825},{\"filename\":\"/chain/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7ad0ad16-fb0c-4b9b-ad69-7870e1661b85\",\"moduleSequenceNumber\":725187}],\"dependents\":[],\"ramUsage\":4.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725311,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { exec, hram_resume, hram_suspend } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Start a load chain to run scripts to upgrade our home server.\\n *\\n * Usage: run chain/home.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress some log messages.\\n    ns.disableLog(\\\"sleep\\\");\\n    // Try to free up some RAM on home server so we can run the script below.\\n    await hram_suspend(ns);\\n    exec(ns, \\\"/singularity/home.js\\\");\\n    hram_resume(ns);\\n}\\n\",\"filename\":\"/chain/home.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/073d7db9-cc77-4d2a-8d00-9abc1431d4e7\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/63a68935-3887-4349-9d78-8b97ebfb48b8\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e42d5ccd-5392-4b56-b869-ad22074ad41b\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/301432b4-e5eb-4b96-b429-280543b36d28\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/638ce9f0-38a8-420c-8e76-431e053f0d62\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ef895ea4-ef8a-4a41-92b7-d324fbda1a30\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a273f2e9-1d3b-4acb-b89b-60a73b22dea6\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5cc3707b-e64a-4ca3-a548-31cc097a9818\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cae743bc-2c99-4b64-8af6-947977974350\",\"moduleSequenceNumber\":719436},{\"filename\":\"/chain/home.js\",\"url\":\"blob:https://danielyxie.github.io/450e31d0-01e6-4b18-a5c8-4b7374ea62e5\",\"moduleSequenceNumber\":724745}],\"dependents\":[],\"ramUsage\":4.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725312,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { exec, hram_resume, hram_suspend } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Start a load chain to run scripts to install Augmentations and soft reset.\\n *\\n * Usage: run chain/install.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress some log messages.\\n    ns.disableLog(\\\"sleep\\\");\\n    // Try to free up some RAM on home server so we can run the script below.\\n    await hram_suspend(ns);\\n    exec(ns, \\\"/singularity/install.js\\\");\\n    hram_resume(ns);\\n}\\n\",\"filename\":\"/chain/install.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/be892138-506a-488f-8b79-e9689dc36e04\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cd92efba-4f80-4b63-b70f-c1b270ab4e43\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ddaedab7-2dbb-40ff-8055-dbf035683d24\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2941d5bb-9cc2-4bb7-be23-e8f3d0c79b3d\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3c13838e-770b-4b8b-8b9a-6ebfdcf2ed5a\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fa0fd0ce-c6c3-426f-8be5-747d25d29dca\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c7278498-488b-4901-bb64-ec97a558306e\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d275699e-d218-4a37-a2b3-c776f4d2e68b\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5ff73b6c-6fac-4c3d-a9fa-e8b701a1350b\",\"moduleSequenceNumber\":719436},{\"filename\":\"/chain/install.js\",\"url\":\"blob:https://danielyxie.github.io/4f7250a4-6516-4c6d-84cd-02f5a62e6565\",\"moduleSequenceNumber\":724747}],\"dependents\":[],\"ramUsage\":4.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725313,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { exec, hram_resume, hram_suspend } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Start a load chain to run various scripts.\\n *\\n * Usage: run chain/misc.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress some log messages.\\n    ns.disableLog(\\\"sleep\\\");\\n    // Try to free up some RAM on home server so we can run the scripts below.\\n    await hram_suspend(ns);\\n    while (ns.isRunning(\\\"/singularity/money.js\\\", home)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    // Assume our home server is high-end and has enough RAM to run multiple\\n    // scripts at the same time.  Here is a brief description of the purpose of\\n    // each script.\\n    //\\n    // (1) /corporation/corp.js := This script creates and manage our\\n    //     corporation.  Along with our gang, a corporation can be a source of\\n    //     significant income.\\n    // (2) /gang/go.js := This utility script helps us to decide which faction\\n    //     to join so we can create a gang within that faction.\\n    // (3) /singularity/daemon.js := This script determines whether we should be\\n    //     hacking the w0r1d_d43m0n server.  It terminates if the conditions are\\n    //     not met for the server to appear in the game world.\\n    // (4) /singularity/int-farm.js := This script passively farms Intelligence\\n    //     XP.\\n    // (5) /singularity/program.js := This script attempts to purchase port\\n    //     opener programs.  We need all five port opener programs so we can\\n    //     open all ports of each server.\\n    // (6) /sleeve/cc.js := Our sleeve manager.\\n    const gang_script = [\\n        \\\"/gang/go.js\\\",\\n        \\\"/gang/slum-snakes.js\\\",\\n        \\\"/gang/dead-speakers.js\\\",\\n    ];\\n    const script = [\\n        \\\"/corporation/corp.js\\\",\\n        \\\"/singularity/daemon.js\\\",\\n        \\\"/singularity/int-farm.js\\\",\\n        \\\"/sleeve/cc.js\\\",\\n        gang_script[0],\\n    ];\\n    script.forEach((s) => exec(ns, s));\\n    // Wait until we have joined a criminal faction.  Then launch another\\n    // script.  We must wait because the script launched by \\\"/gang/go.sh\\\" needs\\n    // to perform tasks that require focus.  The script\\n    // \\\"/singularity/program.js\\\" also requires focus.  We can only focus on one\\n    // task at a time.\\n    let is_running = true;\\n    while (is_running) {\\n        is_running = false;\\n        for (const s of gang_script) {\\n            if (ns.scriptRunning(s, home)) {\\n                is_running = true;\\n                break;\\n            }\\n        }\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    exec(ns, \\\"/singularity/program.js\\\");\\n    hram_resume(ns);\\n}\\n\",\"filename\":\"/chain/misc.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/38ac2dd8-89b2-4002-b178-7e27bad756ca\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6b194a1b-934e-4ae9-8e55-87633e947eab\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/56dbbfbc-80e0-42f9-b928-a367c49651c8\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c73b9de6-6e15-46d4-ab5f-170a2fe50590\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6acadf20-83b3-47ba-93ef-e16321d756a0\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0075126f-1198-410b-897b-8b6b215a1815\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7c6a7865-0f87-419d-8c59-e302c776a1f3\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/df6e9b18-2f1c-47e0-88e7-0225e5684801\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e7988e5c-7dad-4acf-9fe0-e9702004fae1\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/232dbf56-cc81-4335-8909-a3d368282af7\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d2d3fd44-4ba9-43d0-a449-72d977d3de86\",\"moduleSequenceNumber\":724825},{\"filename\":\"/chain/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4b5ae78c-8394-415e-bce7-f78f45e94745\",\"moduleSequenceNumber\":724921}],\"dependents\":[],\"ramUsage\":5.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725314,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { exec, hram_resume, hram_suspend } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Start a load chain for raising money.\\n *\\n * Usage: run chain/money.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Try to free up some RAM on home server so we can run the scripts below.\\n    await hram_suspend(ns);\\n    while (ns.isRunning(\\\"/singularity/study.js\\\", home)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    // Assume our home server has limited RAM.  The server cannot run multiple\\n    // scripts at the same time.  Load a sleeve script and let it run until\\n    // completion.  Then start another script.\\n    let pid = exec(ns, \\\"/sleeve/money.js\\\");\\n    while (ns.isRunning(pid)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    // See whether any Coding Contracts have appeared and solve them.\\n    const script = \\\"/cct/solver.js\\\";\\n    if (!ns.isRunning(script, home)) {\\n        log(ns, \\\"Solve Coding Contracts to raise some money\\\");\\n        const ntry = 3;\\n        for (let i = 0; i < ntry; i++) {\\n            pid = exec(ns, script);\\n            await ns.sleep(wait_t.DEFAULT);\\n            ns.kill(pid);\\n        }\\n    }\\n    // Now launch the main script for raising money.\\n    exec(ns, \\\"/singularity/money.js\\\");\\n    hram_resume(ns);\\n}\\n\",\"filename\":\"/chain/money.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/20e5f51c-083c-4070-b364-383936a359c0\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ce21a2b0-2b2d-4e70-8079-c1e4089f5e5d\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d1e9604f-4fcd-409a-a4cd-9fc93901600d\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3122a114-2d83-41d1-a579-d428f6714d6b\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7ca6ed20-adad-4422-bfd6-bfa3ec50d35e\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/be038313-5ded-4354-913b-e645d6ab9f12\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fb13a870-ca1d-4668-8de1-bd0a09db87b0\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6a876a09-c581-43e2-b924-e1fcfce7021e\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6e32912b-6eed-49da-bc11-534b81e8e3fd\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/29833fcb-d82d-4f07-93cb-110d984e08ee\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/86a711dc-52b0-48a2-adef-3299a9463396\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/da09ef4e-95f9-4137-bff9-bcbaf8cdb383\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/07aa40b6-51cd-4488-bd5c-71e2a1c3d949\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/57fba4f3-b913-48d2-ad05-c890e83aeec2\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e34641a8-f531-4a56-b132-28d819f738e8\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c2fc066b-6833-4c09-a816-bd99f4280159\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9dbf8004-7477-4170-bc80-bec25f95590e\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/99b13a57-b897-4c5c-8dcc-105b7815b465\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/763a03bb-9f34-45db-a816-dba36d756a80\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/5c0de4b6-e9f2-46ca-a108-225f14a81c16\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fa90fc33-f41e-4dd2-a14e-147465308ce9\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ba079a13-b608-4ee6-a13f-066a4bbb5bc7\",\"moduleSequenceNumber\":724825},{\"filename\":\"/chain/money.js\",\"url\":\"blob:https://danielyxie.github.io/164f31ef-24f3-45c9-b4fc-4c6925e5669d\",\"moduleSequenceNumber\":724914}],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725315,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { exec, hram_resume, hram_suspend } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Start a load chain for studying at a university.  A script in the chain would\\n * likely use functions from the Singularity API.  Each function from this API\\n * tends to use a huge amount of RAM.\\n *\\n * Usage: run chain/study.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Try to free up some RAM on home server so we can run the scripts below.\\n    await hram_suspend(ns);\\n    // Assume our home server has limited RAM.  The server cannot run multiple\\n    // scripts at the same time.  Load a sleeve script and let it run until\\n    // completion.  Then start another script.\\n    const pid = exec(ns, \\\"/sleeve/study.js\\\");\\n    while (ns.isRunning(pid)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    exec(ns, \\\"/singularity/study.js\\\");\\n    if (ns.getServer(home).maxRam >= home_t.RAM_HIGH) {\\n        exec(ns, \\\"/gang/program.js\\\");\\n    }\\n    hram_resume(ns);\\n}\\n\",\"filename\":\"/chain/study.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/46d43158-e78e-424c-bff1-c3205538ecb6\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bbd46a6f-54d9-41b3-9bd4-7686b586dd2f\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2c642147-5062-4e23-91e6-890e12f6eeeb\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c9e7aca6-2790-413a-ad72-9094eab0461c\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/97694f28-78b8-4c01-85d3-3a8bd4e88d90\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e7ebb6b2-3e22-44e0-9e09-95821be80c5c\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b5335858-bcf6-405e-b94a-54eedf53550a\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d9a60896-db6b-4586-9f16-7beadd3b107f\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/82af53c0-4157-4dee-a08f-971522b4c2dc\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0285a9a8-a6c8-4343-9c6a-9e70c0a15725\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f8eb6fed-299e-43df-8fae-2f80dec3e227\",\"moduleSequenceNumber\":724825},{\"filename\":\"/chain/study.js\",\"url\":\"blob:https://danielyxie.github.io/a8be0c31-59c3-46bf-868b-bea68877faa2\",\"moduleSequenceNumber\":724897}],\"dependents\":[],\"ramUsage\":6.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725316,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport {\\n    log_cct_failure,\\n    matrix_to_string,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { colour } from \\\"/lib/constant/cct.js\\\";\\nimport { Graph } from \\\"/lib/network.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether an undirected graph is bipartite.  Do not assume the graph is\\n * connected, i.e. each node is reachable from any other node.\\n *\\n * @param n The number of nodes in the graph.  Must be positive.\\n * @param edge An array of edges of the graph.  Each array element is an\\n *     edge of the form [u, v], where u and v are nodes of the graph.\\n * @return An array having n elements.  If i is an index of the array a,\\n *     then a[i] represents the colour of node i in the graph, assuming\\n *     the graph to have a 2-colouring.  In case the graph is not\\n *     bipartite, then return an empty array.\\n */\\nfunction bipartite(n, edge) {\\n    assert(n > 0);\\n    // In Bitburner v1.7.0, the game does not accept an empty array as [].\\n    // The empty array must be formatted as a string representation.\\n    const empty_array = \\\"[]\\\";\\n    // The graph must have at least one edge.  A graph with nodes only and\\n    // no edges is not bipartite.\\n    if (edge.length === 0) {\\n        return empty_array;\\n    }\\n    // Use breath-first search to colour each node of the graph.\\n    const graph = to_graph(n, edge);\\n    let colr = new Array(n).fill(colour.WHITE);\\n    let v = choose_white_node(colr);\\n    // All root nodes of trees.  If the graph is disconnected, then it has\\n    // a number of subgraphs each of which can be considered a tree by\\n    // means of breath-first search.\\n    const root = [];\\n    // Colour all nodes of the graph.\\n    while (v >= 0) {\\n        root.push(v);\\n        const col = colouring(graph, v);\\n        if (col.length === 0) {\\n            return empty_array;\\n        }\\n        colr = update_colouring(colr, col);\\n        v = choose_white_node(colr);\\n    }\\n    // Determine whether the graph has a 2-colouring.\\n    for (const r of root) {\\n        if (!is_bipartite(graph, r, colr)) {\\n            return empty_array;\\n        }\\n    }\\n    return colr;\\n}\\n\\n/**\\n * Choose a white node from a graph.\\n *\\n * @param colr A colouring of the nodes of a graph, where colour[i]\\n *     represents the colour of node i.\\n * @return A node that is white.  Return -1 if each node has been coloured.\\n */\\nfunction choose_white_node(colr) {\\n    assert(colr.length > 0);\\n    for (let i = 0; i < colr.length; i++) {\\n        if (colour.WHITE === colr[i]) {\\n            return i;\\n        }\\n    }\\n    return -1;\\n}\\n\\n/**\\n * Attempt to colour a graph by using 2 colours.  Each node is coloured such\\n * that the endpoints of an edge have different colours.\\n *\\n * @param graph We want to colour this graph.\\n * @param root Start the colouring from this node.\\n * @return An array a where the element a[i] represents the colour of node i\\n *     in the graph.  An empty array if the graph cannot be coloured with the\\n *     given colours such that the endpoints of each edge have different\\n *     colours.  Even if the returned array is not empty, we must still test\\n *     to see whether the graph has a 2-colouring.\\n */\\nfunction colouring(graph, root) {\\n    // colour[i] := the colour of node i in the graph.\\n    const n = graph.nodes().length;\\n    const colr = new Array(n).fill(colour.WHITE);\\n    // Colour the root node.\\n    assert(graph.has_node(root));\\n    const stack = [];\\n    stack.push(root);\\n    const visit = new Set();\\n    visit.add(root);\\n    colr[root] = colour.BLUE;\\n    // Use breath-first search to colour each node.  We do not assume the graph\\n    // to be connected.\\n    while (stack.length > 0) {\\n        const u = stack.pop();\\n        for (const v of graph.neighbour(u)) {\\n            if (visit.has(v)) {\\n                continue;\\n            }\\n            // Colour the neighbours of u.\\n            visit.add(v);\\n            stack.push(v);\\n            if (colour.BLUE === colr[u]) {\\n                colr[v] = colour.RED;\\n                continue;\\n            }\\n            assert(colour.RED === colr[u]);\\n            colr[v] = colour.BLUE;\\n            // Determine whether v is connected to any node of the same colour.\\n            for (const w of graph.neighbour(v)) {\\n                // The graph is not bipartite because v is neighbour with a\\n                // node that has the same colour.\\n                if (colr[v] === colr[w]) {\\n                    return [];\\n                }\\n            }\\n        }\\n    }\\n    return colr;\\n}\\n\\n/**\\n * Whether a graph is bipartite.\\n *\\n * @param graph Check this graph to see whether it is bipartite.\\n * @param root Start our breath-first search from this node.\\n * @param colr A colouring of the nodes of the graph.\\n * @return true if the graph is bipartite; false otherwise.\\n */\\nfunction is_bipartite(graph, root, colr) {\\n    // Mark the root node as visited.\\n    const stack = [];\\n    const visit = new Set();\\n    stack.push(root);\\n    visit.add(root);\\n    // Use breath-first search to help us determine whether the\\n    // graph has a 2-colouring.\\n    while (stack.length > 0) {\\n        const u = stack.pop();\\n        assert(colr[u] === colour.BLUE || colr[u] === colour.RED);\\n        for (const v of graph.neighbour(u)) {\\n            if (colr[u] === colr[v]) {\\n                return bool.NOT_BIPARTITE;\\n            }\\n            if (visit.has(v)) {\\n                continue;\\n            }\\n            stack.push(v);\\n            visit.add(v);\\n        }\\n    }\\n    return bool.BIPARTITE;\\n}\\n\\n/**\\n * Construct an undirected graph given the number of nodes and an edge set.\\n *\\n * @param n The number of nodes in the graph.\\n * @param edge An array of edges of the graph.  Each array element is an\\n *     edge of the form [u, v], where u and v are nodes of the graph.\\n * @return An undirected graph having n nodes and the given edge set.\\n */\\nfunction to_graph(n, edge) {\\n    assert(n > 0);\\n    assert(edge.length > 0);\\n    const node = new Set(MyArray.sequence(n));\\n    const graph = new Graph(bool.UNDIRECTED);\\n    // First, add the edges.\\n    for (let i = 0; i < edge.length; i++) {\\n        const [u, v] = edge[i];\\n        graph.add_edge(u, v);\\n        node.delete(u);\\n        node.delete(v);\\n    }\\n    // Add any nodes not listed in the edge set.\\n    node.forEach((v) => assert(graph.add_node(v)));\\n    assert(n === graph.nodes().length);\\n    return graph;\\n}\\n\\n/**\\n * Update the colouring array.\\n *\\n * @param prev_colour The current colouring of the nodes of a graph.\\n * @param new_colour The new colouring of the nodes.\\n * @return An array representing the updated colouring.\\n */\\nfunction update_colouring(prev_colour, new_colour) {\\n    assert(prev_colour.length > 0);\\n    assert(prev_colour.length === new_colour.length);\\n    const colr = Array.from(prev_colour);\\n    for (let i = 0; i < prev_colour.length; i++) {\\n        // Find a white node.\\n        if (colour.WHITE !== prev_colour[i]) {\\n            continue;\\n        }\\n        if (colour.WHITE === new_colour[i]) {\\n            continue;\\n        }\\n        // Previously node i was white, but now has been coloured.\\n        assert(colour.WHITE === prev_colour[i]);\\n        assert(colour.WHITE !== new_colour[i]);\\n        colr[i] = new_colour[i];\\n    }\\n    return colr;\\n}\\n\\n/**\\n * Proper 2-Coloring of a Graph: You are given data, representing a graph.\\n * Note that \\\"graph\\\", as used here, refers to the field of graph theory and\\n * has no relation to statistics or plotting.  The first element of the data\\n * represents the number of vertices in the graph.  Each vertex is a unique\\n * number between 0 and data[0] - 1.  The next element of the data represents\\n * the edges of the graph.  Two vertices u, v in a graph are said to be\\n * adjacent if there exists an edge [u, v].  Note that an edge [u, v] is the\\n * same as an edge [v, u], as order does not matter.  You must construct a\\n * 2-coloring of the graph, meaning that you have to assign each vertex in the\\n * graph a \\\"color\\\", either 0 or 1, such that no two adjacent vertices have the\\n * same color.  Submit your answer in the form of an array, where element i\\n * represents the color of vertex i.  If it is impossible to construct a\\n * 2-coloring of the given graph, submit an empty array.\\n *\\n * This problem is equivalent to determining whether a graph is bipartite.\\n * From the problem description, we only need to deal with undirected graphs.\\n *\\n * Usage: run cct/bipartite.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [n, edge] = ns.codingcontract.getData(cct, host);\\n    const colr = bipartite(n, edge);\\n    const result = ns.codingcontract.attempt(colr, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/bipartite.txt\\\";\\n        const data = `[${n}, ${matrix_to_string(edge)}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/bipartite.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1bd3dae0-a470-423a-be52-b0460093902a\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a2259728-bf58-4ab1-913e-b34e5dc12619\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/caac859b-c7a5-432e-a44a-bd1fe70f88b4\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/98497761-a318-487b-8be3-778f2a6688e0\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8858e30d-758f-4e22-8732-fc504cf39924\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cb4d6ae6-5fa9-4de9-b2a5-8a4d3b6da21e\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dc0a680a-b723-4e62-94f3-872c20b359a7\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/40d5bc3c-8046-4867-b561-b5fc43299d5b\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0bd7a007-5c60-4d30-879e-d9fb58ad0a96\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/18e2a319-ef70-4070-b9dd-dab502f4ea12\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/05defa48-9683-46dc-80a8-536920af28d1\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8f552296-c1e5-4df3-b1ab-71f46e3d1387\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2f719563-b550-4089-845c-8d57c82d5ac3\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7c1114c8-e6a4-457b-9827-7b15aa4670fc\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a3984276-7e57-40c7-9c75-4aa016050f49\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3a047a03-19c9-4bc7-8b4d-f2e51db29b58\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7c256b68-a6e4-4231-b501-1d95db2baf77\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8d6f8665-155d-400b-9e08-9e77908a084c\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d0b0bdce-c2fb-4741-a646-498ab443ac45\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a34c8ff6-da00-49f8-9962-fada41559a15\",\"moduleSequenceNumber\":668084},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/5f9124dd-9579-4532-bdcd-479de556330b\",\"moduleSequenceNumber\":668107},{\"filename\":\"/lib/constant/cct.js\",\"url\":\"blob:https://danielyxie.github.io/4b53e929-4dd4-41e6-ae86-2d877963ab50\",\"moduleSequenceNumber\":668085},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/077f17ba-567d-4fd6-b6b7-b35cbe17f818\",\"moduleSequenceNumber\":668084},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4748c1f2-dca8-4799-9266-4e3799c0ed8d\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2ee19231-627a-464b-9f01-e8eab4e60662\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0e2ea2c7-fb7f-4b64-81c6-b3392a34e7c2\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e57995d4-3757-4f4a-b1ba-725e6f5718b0\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b90ce535-5e87-40cb-8291-e214cc8f3d0e\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7219e8a2-71a0-4992-9fdb-986822770fc4\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b974a458-9171-432d-8ab6-6963e713fecc\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/73f0e256-3603-41d7-b9ec-4f53fc2ca36b\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8d4719c1-8399-4466-a0b9-e2a03273e101\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9b1b6133-b26e-4f8c-8949-75f156ee06b8\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6dc788c3-bb7c-4d98-b4a1-8505870aa1d8\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f785a6bb-16c3-4360-9aa6-225f00a718bc\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1af48050-a49f-46d1-a4cd-79a8e834ee29\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/66af4df1-6a71-4ec5-96da-fc8fbfa9fb2d\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f744d918-0332-409b-8076-653d5f0ff037\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/148cfa71-1413-4483-9709-f08e9104f692\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/55e84512-4f19-4427-a44b-096c74660046\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ada39508-5849-4238-8304-4cdee7030c5e\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4ac03562-c045-4182-8b36-c957e83bcedd\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/e19f6e48-4a4c-4179-b580-3d2d014fcc72\",\"moduleSequenceNumber\":668105},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/edbb5ec0-7f10-460b-9043-313187f2b155\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/20375aef-d740-488e-bc91-7fa41b83553e\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/f7f67f03-b6c3-402e-805f-60c7a59042c6\",\"moduleSequenceNumber\":668082},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2df2fb30-5f30-403b-ad56-d1799cd82868\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f478e49f-4227-477b-b97a-10c3f4657ce8\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/63df5e4f-56e0-4152-90e5-9c6f8ce4cf25\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d86027d6-c3ae-45d3-be83-2775e0f6b300\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/612164da-1c16-4974-8abb-3afa21ad1837\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/58f2861b-2450-4959-aa77-cbeeab2a45a1\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/24d7c6d4-3d86-483f-a89e-2f666d7adf0d\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a0f8d992-470e-4ead-a82d-9608cb97729e\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a28d6b11-d09f-4d2e-989d-56071fdb0dd2\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/017cc624-e36f-4c93-8b40-bcd95745bacd\",\"moduleSequenceNumber\":668081},{\"filename\":\"/cct/bipartite.js\",\"url\":\"blob:https://danielyxie.github.io/7abf5819-2323-439e-9c5a-e4678b536542\",\"moduleSequenceNumber\":673634}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725317,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    english_alphabet,\\n    char_index,\\n    is_alphabetic,\\n    log_cct_failure,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The Caesar cipher on the given plaintext and left shift length k.  Suppose\\n * letters of the plaintext are uppercase characters in the English alphabet.\\n * Given a left shift of k, each alphabetic character in the plaintext is\\n * substituted with an alphabetic character found by left shifting by k\\n * positions along the alphabet.  For example, using k := 3 we have the\\n * encryption:\\n *\\n * DEF -> ABC\\n * ABC -> XYZ\\n * CAT DOG. -> ZXQ ALD.\\n *\\n * As shown in the above examples, we wrap around the alphabet whenever\\n * necessary.  Furthermore, the substitution only applies to characters of the\\n * plaintext alphabet.  Punctuation, whitespace, and special characters are\\n * ignored.\\n *\\n * @param plaintext Encrypt this string using the Caesar cipher.  Cannot be\\n *     empty string.\\n * @param k The left shift length.  We shift to the left by this many\\n *     characters, taking into account rotation (wrap around).  Must be a\\n *     non-negative integer.\\n * @return The ciphertext corresponding to the plaintext, encrypted using the\\n *     Caesar cipher having a left shift of k positions.\\n */\\nfunction caesar(plaintext, k) {\\n    // Sanity checks.\\n    const ell = Math.floor(k);\\n    assert(plaintext.length > 0);\\n    assert(ell >= 0);\\n    // Encryption.\\n    const alphabet = english_alphabet();\\n    const n = alphabet.length;\\n    const ptxt = plaintext.toUpperCase();\\n    let ciphertext = \\\"\\\";\\n    for (let i = 0; i < ptxt.length; i++) {\\n        if (!is_alphabetic(ptxt[i])) {\\n            ciphertext += ptxt[i];\\n            continue;\\n        }\\n        // Index of the ciphertext character.\\n        let j = char_index(ptxt[i]) - ell;\\n        if (j < 0) {\\n            j += n;\\n        }\\n        ciphertext += alphabet[j];\\n    }\\n    return ciphertext;\\n}\\n\\n/**\\n * Encryption I: Caesar Cipher: Caesar cipher is one of the simplest encryption\\n * techniques.  It is a type of substitution cipher in which each letter in the\\n * plaintext is replaced by a letter some fixed number of positions down the\\n * alphabet.  For example, with a left shift of 3, D would be replaced by A, E\\n * would become B, and A would become X (because of rotation).  You are given\\n * an array with two elements.  The first element is the plaintext, the second\\n * element is the left shift value.  Return the ciphertext as uppercase string.\\n * Spaces remain the same.\\n *\\n * This is Caesar cipher encryption, where the plaintext alphabet is the\\n * uppercase characters of the English alphabet.\\n *\\n * Usage: run cct/caesar.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [plaintext, k] = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(caesar(plaintext, k), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/caesar.txt\\\";\\n        const data = `[${plaintext}, ${k}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/caesar.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/eb36785d-b6c4-4107-adda-66a834688b41\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/813dfaed-e19c-40cb-8db4-6c86d8582b93\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/03459c97-7071-4327-aab0-838d03487fb3\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ae73253f-002f-4b05-bb10-ff8100c2463e\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/22ce1d82-6bc4-4ca4-ae4e-4373dfa08119\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e82b2e19-9026-4296-90bd-cb5d9cec106c\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ea64d217-2f2f-4feb-8d28-dae1b9c35441\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ad4e07e3-a3d7-42bb-891f-dcb5bec84492\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1adde102-f133-476b-8282-9e94ca45c50f\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/93b796b8-df7f-441e-a649-0436a3c790d1\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9d977953-3d9a-401f-810a-29471f4b2ca3\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f3b1a477-2f8b-4684-831c-57aaba67c8d4\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d3263dc2-1e28-4a45-a531-8501a310b92f\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/92a7afa3-c192-4e5a-becb-1d94f4844046\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d5376374-eaad-488b-a678-cdd0da936db9\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b3d16ea5-9f99-4c1f-9026-94c4e421acaa\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/81f3d2b7-f126-4f2f-90f6-45305ea2718b\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1e551b47-b4ae-4475-bc30-69ae7d78ce60\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1f989f04-0c07-4f2a-a8e8-6556a13999c5\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0c741720-6192-4b85-b6bf-2952da54c2b3\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5c9a7ad4-e2ad-4aa0-ac90-7ac7ebd1a58e\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/461fd8f7-fbeb-404d-9a19-4238609a7434\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e839fd64-d7a9-4fd8-a93c-bed801f68087\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0ab046c1-ef29-4a24-86f3-7937c74f9ed1\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/01b7deb7-4ac4-4258-8bae-17a74ffee2d1\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5892d9a2-3d35-47f1-b8ea-55b54260f8ee\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/04cba522-7815-4a84-84a3-5183abbbc1e2\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/24959a04-b5ea-4615-9f32-1ae7f7e5af3c\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/6d38c065-9cdc-48b7-9a6b-dd5b2a8e40be\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/22bfd1d9-4498-487c-bf40-007450e796da\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/aa1f0faa-4685-435f-b21d-2268d0850805\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/42fdd3c2-300e-4a96-a129-0a58f8756346\",\"moduleSequenceNumber\":719395},{\"filename\":\"/cct/caesar.js\",\"url\":\"blob:https://danielyxie.github.io/9c764832-06d7-4fef-94a8-6610f2e04482\",\"moduleSequenceNumber\":723159}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725318,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The number of unique paths from top-left to bottom-right in an m x n\\n * grid.  Consider the grid below.  The problem statement is ambiguous\\n * regarding what is considered the top-left corner and the bottom-right\\n * corner.  If we are moving from vertex to vertex, then position A in the\\n * grid is the top-left corner, B in the grid is the bottom-right corner,\\n * and our grid is 5 x 7.  This is a vertex-based grid.  If we are moving\\n * from square to square, then X in the grid is the top-left corner, Y is\\n * the bottom-right corner, and our grid is 4 x 6.  This square-based grid\\n * can be transformed into a vertex-based grid by treating each square as\\n * a vertex and the connection between two adjacent squares as an edge.\\n *\\n * A-o-o-o-o-o-o\\n * |X| | | | | |\\n * o-o-o-o-o-o-o\\n * | | | | | | |\\n * o-o-o-o-o-o-o\\n * | | | | | | |\\n * o-o-o-o-o-o-o\\n * | | | | | |Y|\\n * o-o-o-o-o-o-B\\n *\\n * Consider an r x c vertex-based grid, where r is the number of rows and\\n * c is the number of columns.  We want to calculate the number of unique\\n * paths from the top-left corner to the bottom-right corner.  At each\\n * vertex we are allowed to move either down or right.  Each path must have\\n * n = (r - 1) + (c - 1) = r + c - 2 segments, i.e. r - 1 downward segments\\n * and c - 1 rightward segments.  Choose k := r - 1 of the n segments to be\\n * downward segments.  The remaining n - k = c - 1 segments must be\\n * rightward segments.  The total number of unique paths is the combination\\n * number C(n, k), which is read as \\\"n choose k\\\" or as a k-combination of a\\n * set of n segments.  The combination number is also known as the\\n * binomial coefficient.\\n *\\n * @param n The total number of segments.\\n * @param k How many segments are downward segments.\\n * @return The combination number C(n, k).\\n */\\nfunction unique_paths(n, k) {\\n    // Sanity checks.\\n    assert(n >= 0);\\n    assert(k >= 0);\\n    // Edge cases.\\n    if (k === 0 || n === k) {\\n        return 1;\\n    }\\n    if (k > n) {\\n        return 0;\\n    }\\n    // Use the recurrence relation\\n    //\\n    // C(n, k) := C(n - 1, k - 1) + C(n - 1, k)\\n    //\\n    // which can be read off Pascal's triangle.  Or use the more\\n    // efficient multiplicative rule\\n    //\\n    // C(n, k) := (n / k) * C(n - 1, k - 1)\\n    //\\n    // which can be directly translated to an iterative program.\\n    assert(k > 0);\\n    assert(k < n);\\n    // By symmetry, we have C(n, k) = C(n, n - k).\\n    const mink = Math.min(k, n - k);\\n    let result = 1;\\n    for (let i = 0; i < mink; i++) {\\n        // This line of code can result in a floating point number:\\n        //\\n        // result *= (n - 1) / (i + 1);\\n        //\\n        // because (n - 1) / (i + 1) is not necessarily an integer.\\n        // Safer to first calculate the product\\n        //\\n        // result * (n - i)\\n        result = (result * (n - i)) / (i + 1);\\n    }\\n    return result;\\n}\\n\\n/**\\n * Unique Paths in a Grid I: You are given an array with two numbers: [m, n].\\n * These numbers represent an m x n grid.  Assume you are initially positioned\\n * in the top-left corner of that grid and that you are trying to reach the\\n * bottom-right corner.  On each step, you may only move down or to the right.\\n * Determine how many unique paths there are from start to finish.\\n *\\n * See the function unique_paths() for more details.\\n *\\n * Usage: run cct/grid.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [row, column] = ns.codingcontract.getData(cct, host);\\n    const k = column - 1;\\n    const n = row - 1 + k;\\n    const result = ns.codingcontract.attempt(unique_paths(n, k), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/grid.txt\\\";\\n        const data = `[${row}, ${column}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/grid.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fdc12c12-641b-4ad4-92f8-7f2f7c8306cd\",\"moduleSequenceNumber\":715963},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/72fd6485-5cf5-4c03-894f-06a7166d61f0\",\"moduleSequenceNumber\":715961},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c3d4bbef-a0d8-4e2e-ad7c-d6db88d70b2a\",\"moduleSequenceNumber\":715958},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/66da229f-548b-46ac-909e-d2456770f77c\",\"moduleSequenceNumber\":715956},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6d0c8239-643e-40a5-933a-3eb953107b81\",\"moduleSequenceNumber\":715955},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bea1585e-8453-455b-ae8d-14a9776d3d6d\",\"moduleSequenceNumber\":715954},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b86b640b-d51e-4fd9-a2f2-b1f6e6db692f\",\"moduleSequenceNumber\":715951},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5cc50b05-8f08-4ca9-87c7-8ab12a3ee3e6\",\"moduleSequenceNumber\":715950},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f26499ac-9a05-4578-ae39-0590f1e75078\",\"moduleSequenceNumber\":715985},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ba7bbb20-a63a-4810-b8df-df811ce2b93b\",\"moduleSequenceNumber\":715963},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2a8c3402-e4a2-49a2-9f50-7f9d492bdc28\",\"moduleSequenceNumber\":715961},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ccc4fc70-9c1e-4211-a06f-49f326c63299\",\"moduleSequenceNumber\":715958},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3b14e90f-eb84-49d6-8038-6a2e1f2e6574\",\"moduleSequenceNumber\":715956},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/727c4237-8b24-4723-aa6d-da9631a32993\",\"moduleSequenceNumber\":715955},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/74af26ef-71be-45ad-8b63-4b1b9cee161c\",\"moduleSequenceNumber\":715954},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/290a6d32-2202-4624-ade0-051c122da991\",\"moduleSequenceNumber\":715951},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f17ff34c-42d4-43a0-905c-dffd35cd918e\",\"moduleSequenceNumber\":715950},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a9df50b8-db3c-4883-9114-6f0a2f68bac9\",\"moduleSequenceNumber\":715985},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4c833e5c-b501-4b07-bab9-8dc30b91c110\",\"moduleSequenceNumber\":715963},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9ec8ebcd-3f1e-4366-8a51-bc51cc8ba9c3\",\"moduleSequenceNumber\":715961},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dc558973-8d96-4075-969e-a199f3141276\",\"moduleSequenceNumber\":715958},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5bea800f-8f65-4bc5-8679-ae02632fb85c\",\"moduleSequenceNumber\":715956},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c84ecb31-cbda-4765-9efa-1302c09f7103\",\"moduleSequenceNumber\":715955},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b61b4b08-3be3-4ef3-a482-27d7603590de\",\"moduleSequenceNumber\":715954},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f6a284a6-e598-4366-8f89-94a231ae00f2\",\"moduleSequenceNumber\":715951},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4e0f29b3-ab4d-49be-bcab-100051681b34\",\"moduleSequenceNumber\":715950},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3a03f4d5-fb14-476d-9e66-d72318176247\",\"moduleSequenceNumber\":715985},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cd4539f9-e95e-4f0e-b174-ce59e61706bb\",\"moduleSequenceNumber\":715956},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/459093f8-22dd-4b06-9ac7-102b41e1ba71\",\"moduleSequenceNumber\":715967},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7dd2d359-5787-4726-bb52-d4c7a33c0ff2\",\"moduleSequenceNumber\":715956},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4ca5a958-b5aa-47a9-a899-2e3e3dacd663\",\"moduleSequenceNumber\":715954},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/7925b4c0-0a37-4c3f-87be-233ef416c899\",\"moduleSequenceNumber\":715944},{\"filename\":\"/cct/grid.js\",\"url\":\"blob:https://danielyxie.github.io/f4f8c8b2-adfd-45af-b179-ea3d4184c43a\",\"moduleSequenceNumber\":718338}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725319,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    matrix_to_string,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether an obstacle is found at the coordinates (r, c).\\n *\\n * @param grid A grid of m x n squares.\\n * @param r, c A pair of coordinates in the grid.\\n * @return true if an obstacle is located at (r, c); false otherwise.\\n */\\nfunction is_obstacle(grid, r, c) {\\n    return grid[r][c] === 1;\\n}\\n\\n/**\\n * The number of unique paths from the top-left square to the bottom-right\\n * square in an m x n grid, while avoiding obstacles.  Consider the grid below.\\n *\\n * 00000\\n * 01000\\n * 00010\\n * 10000\\n *\\n * Interpret each number as a square.  The entire grid is made up of m x n\\n * squares.  We can occupy a square that has the symbol '0', whereas a square\\n * having the symbol '1' is interpreted as an obstacle that cannot be occupied.\\n * Starting from the top-left square, we can move either to the square\\n * immediately to the right or the square immediately below, but never to a\\n * square that has an obstacle.\\n *\\n * Use the following row-column coordinate system for the above grid.\\n *\\n *   0 1 2 3 4\\n * 0 0-0-0-0-0\\n *   | | | | |\\n * 1 0-1-0-0-0\\n *   | | | | |\\n * 2 0-0-0-1-0\\n *   | | | | |\\n * 3 1-0-0-0-0\\n *\\n * The obstacles are located at the coordinates a := (1, 1), b := (2, 3), and\\n * c := (3, 0).  Let A be the set of paths passing through obstacle a, let B be\\n * the set of paths passing through obstacle b, and let C be the set of paths\\n * passing through obstacle c.  Let P be the set of paths from (0, 0) to\\n * (3, 4).  The number of paths that avoid the obstacles is written as\\n *\\n * |P| = |X| - |A union B union C|\\n *\\n * where \\\"union\\\" refers to set union.  The number |A union B union C| can\\n * be calculated by using the principle of inclusion-exclusion.\\n *\\n * The problem can also be solved in a recursive manner.  Define p[i][j] as the\\n * number of paths starting from (0, 0), end at (i, j), and do not include any\\n * obstacles.  Since our movement is restricted to only right or down, we can\\n * reach (i, j) in either of two ways:\\n *\\n * (1) From (i-1, j) to (i, j).\\n * (2) From (i, j-1) to (i, j).\\n *\\n * Thus we have the recurrence relation\\n *\\n * p[i][j] := p[i-1][j] + p[i][j-1]\\n *\\n * where i >= 1 and j >= 1.  There are 3 other possibilities for the values of\\n * i and j.\\n *\\n * (1) If i = 0 and j >=1, then (0, j) can be reached from (0, j-1) so we have\\n *     p[0][j] = p[0][j-1].  There is only 1 path along the top-most row, but\\n *     this does not necessarily mean that p[0][j] = 1.  The reason is that any\\n *     square with coordinates (0, j) can be an obstacle.\\n * (2) If i >= 1 and j = 0, then (i, 0) is reached from (i-1, 0), hence\\n *     p[i][0] = p[i-1][0].  There is only 1 path along the left-most column,\\n *     but this does not mean we must have p[i][0] = 1.  The reason is that one\\n *     of the coordinates (i, 0) might be an obstacle.\\n * (3) If i = 0 and j = 0, then p[0][0] = 1 because the number of paths from\\n *     (0, 0) to itself is 1.\\n *\\n * The edge case is when (i, j) is an obstacle so we set p[i][j] = 0.\\n *\\n * @param grid A grid of m x n squares.\\n * @return The number of different paths from (0, 0) to (m-1, n-1) without\\n *     passing through any obstacles.\\n */\\nfunction unique_paths(grid) {\\n    // Sanity checks.\\n    const nrow = grid.length;\\n    const ncol = grid[0].length;\\n    assert(nrow > 0);\\n    assert(ncol > 0);\\n    // The table of path counts.\\n    const path = [];\\n    for (let i = 0; i < nrow; i++) {\\n        assert(ncol === grid[i].length);\\n        path.push(new Array(ncol));\\n    }\\n    // Start from (0, 0) and work our way to (m-1, n-1).\\n    for (let r = 0; r < nrow; r++) {\\n        for (let c = 0; c < ncol; c++) {\\n            // Is (r, c) an obstacle?\\n            if (is_obstacle(grid, r, c)) {\\n                path[r][c] = 0;\\n                continue;\\n            }\\n            // r = 0, c = 0\\n            if (r === 0 && c === 0) {\\n                path[r][c] = 1;\\n                continue;\\n            }\\n            // r = 0, c >= 1\\n            if (r === 0 && c >= 1) {\\n                path[r][c] = path[r][c - 1];\\n                continue;\\n            }\\n            // r >= 1, c = 0\\n            if (r >= 1 && c === 0) {\\n                path[r][c] = path[r - 1][c];\\n                continue;\\n            }\\n            // A pair of coordinates not located along the top-most row or the\\n            // left-most column.\\n            // r >= 1, c >= 1\\n            assert(r > 0);\\n            assert(c > 0);\\n            path[r][c] = path[r - 1][c] + path[r][c - 1];\\n        }\\n    }\\n    return path[nrow - 1][ncol - 1];\\n}\\n\\n/**\\n * Unique Paths in a Grid II: You are given a 2-D array of numbers (array of\\n * arrays of numbers) representing a grid, i.e. a 2-D matrix.  The 2-D array\\n * contains 1s and 0s, where 1 represents an obstacle and 0 represents a free\\n * space.  Assume you are initially positioned in the top-left square of that\\n * grid and that you are trying to reach the bottom-right square.  In each step,\\n * you may only move down or to the right.  Furthermore, you cannot move onto a\\n * square that has an obstacle.  Determine how many unique paths there are from\\n * start to finish.\\n *\\n * See the function unique_paths() for more details.\\n *\\n * Usage: run cct/grid2.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const grid = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(unique_paths(grid), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/grid2.txt\\\";\\n        const data = matrix_to_string(grid);\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/grid2.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e0c20b42-2d76-4dbc-83c2-889819868408\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/06bb4a11-fcd9-428a-9bd1-3371d47540b9\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7a2791c1-4f55-4afd-8aa8-679a212cf50e\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6fb9f97b-cf48-4c46-8075-74061f2f268a\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/725a9a76-f991-4980-8273-235402e229fb\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/731cb70b-05ab-45e5-96f1-787ede663886\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6185d711-d860-4032-9145-e7c2d9e21784\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5d420b16-58ad-439c-a86a-0b4e774ee938\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/66253e22-ed9d-4615-81e9-e6897869f789\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/afb5bf35-b24f-4762-93b1-9906a4497fe7\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/95beca93-3016-421a-8ac2-71c667f9ee8c\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/90da3d37-1818-43b8-aec4-c1601a115d75\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5666a7cd-6986-42ce-9a0e-3e33591ade90\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0a6a9127-4a09-4a60-9da0-8184b53a947f\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f40983c4-cf76-4b1a-a79c-563421db6a9d\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/60251887-8e64-4967-a621-9175f2c987cc\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/26f1ea2a-8175-41bf-a618-e84700b2dfd7\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/87d424e2-acd9-471b-97f9-0bed05c0c526\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7b7aa1b6-b96e-435a-af0c-9cfaa39a0b21\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/624e1590-daf4-4893-836d-fc620898c60b\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c8bb0457-af59-463e-b7b0-b8e0aa7003af\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0d2b282b-8533-4225-8c79-84609a9c1fde\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/876a3282-3cab-4947-8868-efe41702981a\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7484a378-6472-499e-a3f7-8121df8149d2\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0ed106c8-e5f7-4ebd-b0eb-4a43bda6c149\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8e385d15-4801-4e12-a183-626c5566c33b\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dc2cda2b-2349-4687-b3a3-2ea944a73f27\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a18cced7-2c6f-43c8-bb6f-6a68d4aadb14\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/484c560c-faf4-4fe9-b6b3-bc3b447edccb\",\"moduleSequenceNumber\":647536},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/abdff2e9-6472-4155-b30c-78683164a1a1\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4bf04488-e7a4-42e5-9598-46a837d9a51e\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/866498fb-e9d7-4b8a-98b1-c52e155754d9\",\"moduleSequenceNumber\":647513},{\"filename\":\"/cct/grid2.js\",\"url\":\"blob:https://danielyxie.github.io/bb100c91-f247-493c-be66-b8c953537654\",\"moduleSequenceNumber\":659186}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725320,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    matrix_to_string,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { Graph } from \\\"/lib/network.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether we can move one step down from our current position on a grid.\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @param r, c Our current location (r, c) on the grid.\\n * @return true if we can move from (r, c) one step down; false otherwise.\\n */\\nfunction can_move_down(grid, r, c) {\\n    // Are we at the bottom-most edge of the grid?\\n    const lastidx = grid.length - 1;\\n    if (lastidx === r) {\\n        return bool.NOT_MOVE;\\n    }\\n    // Below us is an obstacle.\\n    assert(r >= 0);\\n    assert(r < lastidx);\\n    if (is_obstacle(grid, r + 1, c)) {\\n        return bool.NOT_MOVE;\\n    }\\n    // We can move one step down.\\n    return bool.MOVE;\\n}\\n\\n/**\\n * Whether we can move one step to the left from our current position on\\n * a grid.\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @param r, c Our current location (r, c) on the grid.\\n * @return true if we can move from (r, c) one step to the left;\\n *     false otherwise.\\n */\\nfunction can_move_left(grid, r, c) {\\n    // Are we at the left-most edge of the grid?\\n    if (c === 0) {\\n        return bool.NOT_MOVE;\\n    }\\n    // To our left is an obstacle.\\n    assert(c > 0);\\n    assert(c < grid[r].length);\\n    if (is_obstacle(grid, r, c - 1)) {\\n        return bool.NOT_MOVE;\\n    }\\n    // We can move to the left.\\n    return bool.MOVE;\\n}\\n\\n/**\\n * Whether we can move one step to the right from our current position on\\n * a grid.\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @param r, c Our current location (r, c) on the grid.\\n * @return true if we can move from (r, c) one step to the right;\\n *     false otherwise.\\n */\\nfunction can_move_right(grid, r, c) {\\n    const lastidx = grid[r].length - 1;\\n    // Are we at the right-most edge of the grid?\\n    if (lastidx === c) {\\n        return bool.NOT_MOVE;\\n    }\\n    // To our right is an obstacle.\\n    assert(c >= 0);\\n    assert(c < lastidx);\\n    if (is_obstacle(grid, r, c + 1)) {\\n        return bool.NOT_MOVE;\\n    }\\n    // We can move to the right.\\n    return bool.MOVE;\\n}\\n\\n/**\\n * Whether we can move one step up from our current position on a grid.\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @param r, c Our current location (r, c) on the grid.\\n * @return true if we can move from (r, c) one step up; false otherwise.\\n */\\nfunction can_move_up(grid, r, c) {\\n    // Are we at the top-most edge of the grid?\\n    if (r === 0) {\\n        return bool.NOT_MOVE;\\n    }\\n    // Above us is an obstacle.\\n    assert(r > 0);\\n    assert(r < grid.length);\\n    if (is_obstacle(grid, r - 1, c)) {\\n        return bool.NOT_MOVE;\\n    }\\n    // We can move one step up.\\n    return bool.MOVE;\\n}\\n\\n/**\\n * Is the given location an obstacle?\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @param r, c A location on the grid.\\n * @return true if the given location is an obstacle on the grid;\\n *     false otherwise.\\n */\\nfunction is_obstacle(grid, r, c) {\\n    return grid[r][c] === 1;\\n}\\n\\n/**\\n * Use the Cantor pairing function to assign a unique non-negative integer\\n * to a pair of coordinates.\\n *\\n * @param x, y A pair of coordinates (x, y), each number being a\\n *     non-negative integer.\\n * @return A unique non-negative integer associated with the coordinates\\n *     (x, y).\\n */\\nfunction pairing(x, y) {\\n    assert(x >= 0);\\n    assert(y >= 0);\\n    // One of a and b is even, while the other is odd.  The product ab is even,\\n    // therefore (1/2) * ab is an integer.\\n    const a = x + y;\\n    const b = a + 1;\\n    return (1 / 2) * (a * b) + y;\\n}\\n\\n/**\\n * A shortest path in a 2-D grid.  Consider the following grid\\n *\\n * 0010\\n * 0100\\n * 0000\\n *\\n * which can be represented as the following map.\\n *\\n *   0 1 2 3\\n * 0 0-0-1-0\\n *   | | | |\\n * 1 0-1-0-0\\n *   | | | |\\n * 2 0-0-0-0\\n *\\n * The top-left corner has the coordinates (0, 0) and the bottom-right\\n * corner has the coordinates (2, 3).  We have 2 obstacles at the\\n * coordinates (0, 2) and (1, 1).  Our task is to determine a shortest\\n * path from the top-left corner to the bottom-right corner, using as\\n * few moves as possible.  At any point on the map, we can move one step\\n * either up, down, left, or right but only to a pair of coordinates that\\n * represents 0.  We cannot move to a pair of coordinates that represents\\n * an obstacle.\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @return A string representing a shortest path in the grid, from the\\n *     top-left corner to the bottom-right corner.  Each character of the\\n *     string is either U, D, L, R.  An empty string if there are no paths\\n *     from the top-left to the bottom-right.\\n */\\nfunction shortest_path(grid) {\\n    // Represent the grid as an undirected graph.  Find a shortest path from\\n    // the top-left corner to the bottom-right corner.\\n    const graph = to_graph(grid);\\n    const a = pairing(0, 0);\\n    const b = pairing(grid.length - 1, grid[0].length - 1);\\n    if (!graph.has_node(a) || !graph.has_node(b)) {\\n        return \\\"\\\";\\n    }\\n    const path = graph.shortest_path(a, b);\\n    return path_to_string(path);\\n}\\n\\n/**\\n * A representation of a grid as an unweighted, undirected graph.\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @return An undirected graph representation of the grid.  Each vertex is\\n *     a non-negative integer n that is uniquely associated with a location\\n *     (r, c) on the grid.  We use the Cantor pairing function (and its\\n *     inverse) to map between n and (r, c).\\n */\\nfunction to_graph(grid) {\\n    assert(grid.length > 0);\\n    const ncol = grid[0].length;\\n    const graph = new Graph(bool.UNDIRECTED);\\n    for (let r = 0; r < grid.length; r++) {\\n        assert(ncol === grid[r].length);\\n        for (let c = 0; c < ncol; c++) {\\n            // Our current location is u := (r, c).\\n            const u = pairing(r, c);\\n            // Is this an obstacle?\\n            if (is_obstacle(grid, r, c)) {\\n                continue;\\n            }\\n            // Can we move one step left?\\n            assert(grid[r][c] === 0);\\n            if (can_move_left(grid, r, c)) {\\n                const v = pairing(r, c - 1);\\n                graph.add_edge(u, v);\\n            }\\n            // Can we move one step right?\\n            if (can_move_right(grid, r, c)) {\\n                const v = pairing(r, c + 1);\\n                graph.add_edge(u, v);\\n            }\\n            // Can we move one step up?\\n            if (can_move_up(grid, r, c)) {\\n                const v = pairing(r - 1, c);\\n                graph.add_edge(u, v);\\n            }\\n            // Can we move one step down?\\n            if (can_move_down(grid, r, c)) {\\n                const v = pairing(r + 1, c);\\n                graph.add_edge(u, v);\\n            }\\n        }\\n    }\\n    return graph;\\n}\\n\\n/**\\n * Convert from a graph-theoretic path to a path given in terms of the\\n * following directions.\\n *\\n * * U := move up by one step.\\n * * D := move down by one step.\\n * * L := move left by one step.\\n * * R := move right by one step.\\n *\\n * @param gpath An array of nodes representing a path in a graph.\\n * @return A string comprised of the characters U, D, L, R to indicate\\n *     a path.  An empty string if gpath is an empty array.\\n */\\nfunction path_to_string(gpath) {\\n    // No shortest paths in the grid.\\n    if (gpath.length === 0) {\\n        return \\\"\\\";\\n    }\\n    // We have a shortest path in the grid.\\n    const path = [];\\n    let [rold, cold] = unpairing(gpath[0]);\\n    for (const v of gpath.slice(1, gpath.length)) {\\n        const [r, c] = unpairing(v);\\n        // Are we moving up?\\n        if (rold - 1 === r) {\\n            path.push(\\\"U\\\");\\n        }\\n        // Are we moving down?\\n        if (rold + 1 === r) {\\n            path.push(\\\"D\\\");\\n        }\\n        // Are we moving left?\\n        if (cold - 1 === c) {\\n            path.push(\\\"L\\\");\\n        }\\n        // Are we moving right?\\n        if (cold + 1 === c) {\\n            path.push(\\\"R\\\");\\n        }\\n        [rold, cold] = [r, c];\\n    }\\n    return path.join(\\\"\\\");\\n}\\n\\n/**\\n * Use the inverse of the Cantor pairing function to break a non-negative\\n * integer into a pair of coordinates (x, y).\\n *\\n * @param z A non-negative integer.\\n * @return A pair of coordinates (x, y) that is uniquely associated with z.\\n */\\nfunction unpairing(z) {\\n    assert(z >= 0);\\n    const numer = Math.sqrt(8 * z + 1) - 1;\\n    const w = Math.floor(numer / 2);\\n    const t = (w ** 2 + w) / 2;\\n    const y = z - t;\\n    const x = w - y;\\n    return [x, y];\\n}\\n\\n/**\\n * Shortest Path in a Grid: You are given a 2-D array of numbers (array of\\n * arrays) representing a grid, i.e. a 2-D matrix.  The 2-D array contains 1s\\n * and 0s, where 1 represents an obstacle and 0 represents a free space.\\n * Assume you are initially positioned at the top-left square of the grid and\\n * you are trying to reach the bottom-right square.  In each step, you may move\\n * up, down, left, or right.  Furthermore, you cannot move onto spaces that\\n * have obstacles.  Determine a shortest path from start to finish, if one\\n * exists.  The answer should be given as a string of UDLR characters,\\n * indicating the moves along the path.\\n *\\n * NOTE: If there are multiple equally short paths, any of them is accepted as\\n * answer.  If there are no paths, the answer should be an empty string.\\n *\\n * Usage: run cct/grid3.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const grid = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(shortest_path(grid), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/grid3.txt\\\";\\n        const data = matrix_to_string(grid);\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/grid3.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7ffb8db5-95b6-4e16-8767-b5cf94d1b692\",\"moduleSequenceNumber\":693069},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f175d6ab-ca81-4867-a8d1-25c4b1f222b5\",\"moduleSequenceNumber\":693067},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/623b597b-580e-479a-bc18-780e8bb0f0ed\",\"moduleSequenceNumber\":693064},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d917aeb9-87b2-4185-90bf-eb9f72dedf0b\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/93705e3c-4cb7-4916-84db-3bda9a00d37a\",\"moduleSequenceNumber\":693061},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/47738047-8051-485c-a15e-e0fbbec8ddb6\",\"moduleSequenceNumber\":693060},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5645b30d-24d0-45d7-b255-756978f9f5e3\",\"moduleSequenceNumber\":693057},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/edf5c27a-095d-45ab-a45b-0f6b9653a0a1\",\"moduleSequenceNumber\":693056},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e460471e-4b39-477c-8aab-bca85b8a02fa\",\"moduleSequenceNumber\":693091},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/34bc71c4-8e70-4dd1-be90-0511b272b26c\",\"moduleSequenceNumber\":693069},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ef801bbd-c958-4d55-a6b2-198e4401c4ac\",\"moduleSequenceNumber\":693067},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8a2a35b6-a366-4681-a3b2-7f0e37605472\",\"moduleSequenceNumber\":693064},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1a860592-b4c7-44db-9eb7-0bbe64dfbea4\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/81ecf173-08ff-4646-b993-6f8d44559076\",\"moduleSequenceNumber\":693061},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8ce53abb-f88b-481b-916b-7fc87995430d\",\"moduleSequenceNumber\":693060},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fad3736f-4232-40b8-929c-8d2561b1c614\",\"moduleSequenceNumber\":693057},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9c7a49fa-d754-4522-a19b-668a6137443c\",\"moduleSequenceNumber\":693056},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/40016e5d-c9e8-4745-b392-c431504460d2\",\"moduleSequenceNumber\":693091},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f92fab9c-6952-4f63-b69c-479145f6c2a8\",\"moduleSequenceNumber\":693064},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/27fa9d5c-b6c3-43e2-8b5d-20fb24c30998\",\"moduleSequenceNumber\":693052},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/a2d66abd-2490-43e2-8e7b-05eede1361ca\",\"moduleSequenceNumber\":693075},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/93cdce9e-fef4-44e9-b074-d9fb929eef5c\",\"moduleSequenceNumber\":693052},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/95126a82-de13-44ea-9817-1afc7f490d6d\",\"moduleSequenceNumber\":693069},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9896fde1-993b-473c-af69-766c0b9eed76\",\"moduleSequenceNumber\":693067},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2b713fb1-e0e4-46c3-ae2a-36731c62ee55\",\"moduleSequenceNumber\":693064},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b068fa34-9b2b-447e-8594-d6faaa312cda\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9cbb8ddc-db7a-476b-9dfe-812b2f55b4df\",\"moduleSequenceNumber\":693061},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/73f179ba-bde1-49d7-b987-cc967d34638a\",\"moduleSequenceNumber\":693060},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7598fa35-8442-453c-aabc-749f528a629b\",\"moduleSequenceNumber\":693057},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b5eeecbf-3012-4123-a33c-5d095069c6ec\",\"moduleSequenceNumber\":693056},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ab66af4e-2605-42cd-b9de-00f053a330c4\",\"moduleSequenceNumber\":693091},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/25c94cda-7cee-4362-9bd0-b97f4619564d\",\"moduleSequenceNumber\":693069},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8b5b7497-9696-4a68-a260-eb03b165b1e4\",\"moduleSequenceNumber\":693067},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f6f1c766-d5af-471d-bf90-1863b7150392\",\"moduleSequenceNumber\":693064},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d28f0b5e-b350-4e05-bf96-868a95a4de9b\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cc1bca7d-37e5-466c-86fe-876cf6abe938\",\"moduleSequenceNumber\":693061},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ca43261d-2a3c-4bec-ab0e-0d457e12bc1d\",\"moduleSequenceNumber\":693060},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d9715508-0c10-432e-b8ee-32e07c7ca6e7\",\"moduleSequenceNumber\":693057},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6420134b-b4c4-4979-bf7d-0211bf86f0d2\",\"moduleSequenceNumber\":693056},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/01150bd6-0412-4b5c-a73c-47bb52d5271f\",\"moduleSequenceNumber\":693091},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/54654179-5217-474f-b272-4264abb9bd6b\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/7d1c4e56-a8fc-421a-9518-eb81695a7bc3\",\"moduleSequenceNumber\":693073},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/20c31f5b-fac4-4500-9b31-36a612fa93f5\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8af23d92-e04d-4f8c-a118-eea0db90f2bb\",\"moduleSequenceNumber\":693060},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/3d8b28a8-d6e6-4d0a-bc07-424977b444dc\",\"moduleSequenceNumber\":693050},{\"filename\":\"/cct/grid3.js\",\"url\":\"blob:https://danielyxie.github.io/a52913a3-b488-44c5-874c-6d64a23371e8\",\"moduleSequenceNumber\":696943}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725321,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport {\\n    count_one,\\n    log_cct_failure,\\n    parity_position,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { base } from \\\"/lib/constant/misc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Use Hamming code to encode a string of bits.\\n *\\n * @param n A positive integer.  This is our data.\\n * @return A bit string representing the Hamming encoding of the given data.\\n */\\nfunction encode(n) {\\n    assert(n > 0);\\n    // Convert from decimal to binary.  A decimal number is expressed in\\n    // base 10, whereas a binary number is expressed in base 2.\\n    const data = n\\n        .toString(base.BINARY)\\n        .split(\\\"\\\")\\n        .map((s) => parseInt(s, base.DECIMAL));\\n    // Determine the number of parity bits.\\n    const nparity = num_parity(data);\\n    assert(nparity > 0);\\n    // Lay out the data bits in the incomplete encoded message.  Set each\\n    // redundant bit as well as the overall parity bit.\\n    const TRASH = -1;\\n    let msg = lay_data_bits(data, nparity, TRASH);\\n    msg = set_parity(msg, nparity);\\n    return msg.join(\\\"\\\");\\n}\\n\\n/**\\n * Lay out the data bits in the encoded message.  Position 0 in the message\\n * is reserved for the overall parity bit.  Position 2^i in the message is\\n * reserved for a parity (or redundant) bit, where i = 0, 1, 2, ...\\n *\\n * @param data An array of bits, representing the bit string of the data.\\n * @param p The number of parity bits in the encoded message.  This number\\n *     does not include the overall parity bit.\\n * @param trash Rubbish placed at positions not occupied by a data bit.\\n * @return An incomplete bit string, where only the data bits are placed.\\n *     A position not occupied by a data bit is filled with rubbish whose\\n *     value is determined by trash.\\n */\\nfunction lay_data_bits(data, p, trash) {\\n    // The number of bits in our encoded message.  The extra one bit\\n    // is the overall parity bit, which is used to check the parity\\n    // of the whole message.\\n    const m = data.length + p + 1;\\n    // Determine the positions where the parity (i.e. redundant) bits are\\n    // to be placed.\\n    const pos = new Set(parity_position(p));\\n    // Lay out the data bits.\\n    const msg = Array(m).fill(trash);\\n    const _data = Array.from(data);\\n    // Index 0 is reserved for the overall parity bit.  Indices 1 and 2 are\\n    // for parity (i.e. redundant) bits.  So we start at index 3.\\n    for (let k = 3; k < m; k++) {\\n        if (pos.has(k)) {\\n            continue;\\n        }\\n        msg[k] = _data.shift();\\n    }\\n    return msg;\\n}\\n\\n/**\\n * Determine the number of parity bits.  Let p be the number of parity bits\\n * and k the number of bits in the data.  The number of parity bits must\\n * satisfy the inequality\\n *\\n * 2^p >= k + p + 1\\n *\\n * @param data The bit string to be encoded using Hamming code.\\n * @return The number of parity bits.  This number does not include the overall\\n *     parity bit.\\n */\\nfunction num_parity(data) {\\n    assert(data.length > 0);\\n    let p = 0;\\n    let max;\\n    const k = data.length;\\n    do {\\n        p++;\\n        max = 2 ** p;\\n    } while (max < k + p + 1);\\n    // The encoded message has m := k + p + 1 bits, as explained below.\\n    //\\n    // k := The number of bits in the data, represented as a bit string.\\n    // p := The number of parity (i.e. redundant) bits.\\n    // 1 := The extra bit reserved for the overall parity bit.\\n    //\\n    // The number p of parity (i.e. redundant) bits is\\n    //\\n    // p = [log(m)]\\n    //\\n    // where the operator [] means the ceiling function and log() is the\\n    // logarithm using base 2.\\n    const m = k + p + 1;\\n    assert(p === Math.ceil(Math.log2(m)));\\n    return p;\\n}\\n\\n/**\\n * Set each parity bit.  The encoded message has a number of locations\\n * that are reserved for parity bits.  We set each of these locations to\\n * 1 or 0.\\n *\\n * @param msg An incomplete encoded message.  Assume only the data bits\\n *     to have been laid out.\\n * @param nparity The number of parity bits in the encoded message.  This\\n *     number does not include the overall parity bit.\\n * @return The same as the input msg array, but the location of parity\\n *     bits have been set.  We do not modify msg.  We also set the\\n *     overall parity bit.\\n */\\nfunction set_parity(msg, nparity) {\\n    assert(msg.length > 0);\\n    assert(nparity > 0);\\n    // The positions where the parity bits are placed.  Do not include the\\n    // position of the overall parity bit.\\n    const pos = parity_position(nparity);\\n    // Set each parity bit.\\n    const _msg = Array.from(msg);\\n    for (const p of pos) {\\n        assert(p > 0);\\n        const n1 = count_one(_msg, p);\\n        // Is the number of 1s even or odd?  If the total number of 1s is\\n        // even, then the parity is 0.  Otherwise the parity is 1.\\n        _msg[p] = n1 % 2;\\n    }\\n    // Count the number of 1s in the encoded message, excluding the\\n    // very first position.\\n    const _msga = _msg.slice(1, _msg.length);\\n    const n1 = MyArray.sum(_msga);\\n    // Set the overall parity bit.\\n    _msg[0] = n1 % 2;\\n    return _msg;\\n}\\n\\n/**\\n * HammingCodes: Integer to Encoded Binary: You are given a decimal value.\\n * Convert it into a binary string and encode it as a Hamming code.  For\\n * example, the decimal value 8 will result in the binary string 1000, which\\n * will be encoded with the pattern 'pppdpddd', where p is a parity bit and d\\n * a data bit.  As another example, the binary representation of the decimal\\n * value 21 is '10101'.  The binary string is encoded as the pattern\\n * 'pppdpdddpd' to result in '1001101011'.\\n * NOTE: You need a parity bit at index 0 as an overall parity bit.  Important\\n * rule for encoding: Not allowed to add additional leading 0s to the binary\\n * value, i.e. the binary value has to be encoded as is.\\n *\\n * This is the problem of using Hamming code to encode a binary string, i.e.\\n * a string of bits.  The Hamming code is extended with an additional overall\\n * parity bit, which is located at index 0 in the encoded bit string.  The\\n * original paper where Hamming code is described:\\n *\\n * R. W. Hamming.  Error detecting and error correcting codes.  The Bell System\\n * Technical Journal, volume 29, issue 2, 1950, pp.147--160.\\n * DOI: 10.1002/j.1538-7305.1950.tb00463.x\\n *\\n * Expository notes here:\\n *\\n * https://en.wikipedia.org/wiki/Hamming_code\\n * https://medium.com/swlh/hamming-code-generation-correction-with-explanations-using-c-codes-38e700493280\\n * https://users.cs.fiu.edu/~downeyt/cop3402/hamming.html\\n * https://www.youtube.com/watch?v=X8jsijhllIA\\n * https://harryli0088.github.io/hamming-code/\\n *\\n * Usage: run cct/hamming.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const n = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(encode(n), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/hamming.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, n);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/hamming.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4e216d9c-992c-4646-b4ef-5f9d9b4abe36\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ae84ea07-58d6-4170-b6e1-1b0edda18a12\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7a3abf59-2a75-4f73-bb25-65204f47d490\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cf8c0d08-6392-46c1-9051-a41d469976d1\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/43ab3e47-8bc1-408f-8952-24da4af722d2\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b5b1ef98-1e3a-423c-b29d-9d641c6ab6dc\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a31187da-71b9-4987-b0a7-d88a855cc122\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e5653b19-74c3-4b5b-9329-9f9971661773\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c04f63f6-5598-46f1-ba4f-4e1f7f218481\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/10d9382a-f1c6-45cc-bd05-ceebab4a29d4\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4af29c5f-6e07-4db9-820c-a99d7b9f9da8\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/70be106c-bb9e-44b6-84c5-5f5dee2182a0\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ee20279a-d879-4445-a1d2-488d2bfcd62e\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/32739d88-e93f-44a6-9bc8-36c5a95e83b8\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f87030ee-61ee-4540-835f-e99e2601f2ec\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c7ad3d1b-d1ea-4c34-bba1-5d7d385085a8\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2fe9a5c9-72bf-4894-885b-3c4a8e353b16\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ab0afbaa-029b-4175-8a6f-857438b97e2e\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/db09b853-af4f-48ee-9033-0bb05742ef69\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/697b8bc8-b203-4936-a1b4-8db003ca5e2f\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8d18adfb-c1ac-48ec-a5a6-1933fe9fb035\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f7d7cec9-3727-487f-9e7c-d94c9456ad88\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/51209989-8cfd-44b5-9d0e-cde82538223c\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/be8a1c6e-5657-4dcd-af2f-cab4769778e1\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2e6e7288-7b03-406e-884d-03ad6326c655\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fd7e920e-a482-44b9-8d49-4220198f1d73\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3129c2de-6325-4d8c-989e-51ab35814bef\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/20900fc1-1eb2-48f6-9553-24508fcb620b\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0234d44b-325b-44b6-96f6-2478c314346f\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/42c54464-053b-4b8c-92e7-257a78bdceda\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/30904433-a620-4f6c-8a04-879c9aa8edab\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/18974d80-ec12-40b0-b5e6-5dc1cc497225\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/86cccf3a-7220-46ca-9b1c-51b04230daa9\",\"moduleSequenceNumber\":719395},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f4b5b3cb-d428-4425-9139-13c93cb522d3\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8669b170-d390-4a99-85c1-1795c806877d\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c7bf2653-5023-4184-98e6-970c522a0046\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3e6404a4-061d-4f73-bdd0-adb21de9cae9\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b1042295-f2ad-4397-ad24-76ce5d8ebc29\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/81c1a323-f08d-4c18-805a-a1a37a48d17e\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9064c3e7-3ab7-4e9e-ad80-293a4362cb2d\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b507ff1d-336a-4a6c-aa0d-1f32d4e5d466\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fbbef72f-6256-4bfa-ae63-b6dc8582e69e\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/8892df89-e0f5-4a2f-87fe-c59f88164e6d\",\"moduleSequenceNumber\":719394},{\"filename\":\"/cct/hamming.js\",\"url\":\"blob:https://danielyxie.github.io/c7be875c-8e34-4200-ab15-e0cd7ddf40bb\",\"moduleSequenceNumber\":720583}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725322,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport {\\n    count_one,\\n    log_cct_failure,\\n    parity_position,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { base } from \\\"/lib/constant/misc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Check the parity bits.\\n *\\n * @param msg An encoded message as a bit string.\\n * @param nparity The number of parity bits in the encoded message.\\n * @return An array of indices where the parity bit has detected an error.\\n *     Each index is the location of a parity (i.e. redundant) bit.  The\\n *     value of this parity bit is different from the parity of the\\n *     positions that the bit is meant to check.  An empty array if there\\n *     are no errors in the parity check.\\n */\\nfunction check_parity(msg, nparity) {\\n    // The positions where the parity bits are placed.\\n    const pos = parity_position(nparity);\\n    // Locations of error.  Each location is an index of the bit string.\\n    // Each index is the position of a parity (i.e. redundant) bit.\\n    const error = [];\\n    // Check each parity (i.e. redundant) bit.\\n    for (const p of pos) {\\n        assert(p > 0);\\n        // The function count_one() also counts the value of the parity\\n        // bit located at index p in the bit string.  If the value of\\n        // msg[p] is 1, we must subtract 1 from the result of the\\n        // count_one() function.\\n        let n1 = count_one(msg, p);\\n        if (msg[p] === 1) {\\n            n1--;\\n        }\\n        // Is there an error?\\n        const parity = n1 % 2;\\n        if (parity !== msg[p]) {\\n            error.push(p);\\n        }\\n    }\\n    return error;\\n}\\n\\n/**\\n * Decode a binary string to an integer.\\n *\\n * @param msg A bit string that has been encoded using Hamming code.\\n *     Going from left to right, the very first bit is the overall\\n *     parity bit.  This is the extended Hamming code with an additional\\n *     parity bit, also known as \\\"single error correction, double error\\n *     detection\\\" (SECDED).\\n * @return The integer corresponding to the encoded bit string.\\n */\\nfunction decode(msg) {\\n    assert(msg.length > 0);\\n    const _msg = Array.from(msg).map((s) => parseInt(s, base.DECIMAL));\\n    const nparity = num_parity(_msg);\\n    const _msgc = secded(_msg, nparity);\\n    return to_integer(_msgc, nparity);\\n}\\n\\n/**\\n * The number of parity (or redundant) bits.  Let p be the number of parity\\n * bits, excluding the overall parity bit.  Let m be the number of message\\n * bits.  These numbers satisfy the inequality\\n *\\n * 2^p >= m + p + 1\\n *\\n * @param msg A bit string that has been encoded using Hamming code.\\n *     The 0-th position is reserved for the overall parity bit.  The first\\n *     parity (or redundant) bit is at index 1.  The second parity bit is at\\n *     index 2.  Index 3 is the first index where a data bit is located.\\n *     Assuming the message string has at least 1 bit, the encoded bit string\\n *     has at least 4 bits.\\n * @return The number of redundant bits, excluding the overall parity bit.\\n */\\nfunction num_parity(msg) {\\n    const lower_bound = 4;\\n    assert(msg.length >= lower_bound);\\n    let i = 0; // How many parity bits.\\n    let pos = 2 ** i; // Position of a parity bit.\\n    while (pos < msg.length) {\\n        i++;\\n        pos = 2 ** i;\\n    }\\n    assert(i === Math.ceil(Math.log2(msg.length)));\\n    return i;\\n}\\n\\n/**\\n * Correct a single error and detect two errors.  Also known as \\\"single error\\n * correction, double error detection\\\" (SECDED).\\n *\\n * @param msg A bit string that has been encoded using the extended Hamming\\n *     code.\\n * @param nparity The number of parity (i.e. redundant) bits in the bit string.\\n * @return The same bit string as msg, but with a single error corrected if\\n *     there is an error in the bit string.\\n */\\nfunction secded(msg, nparity) {\\n    // Check for errors in the parity (i.e. redundant) bits.\\n    const error = check_parity(msg, nparity);\\n    // No errors in the bit string.\\n    if (error.length === 0) {\\n        return msg;\\n    }\\n    // We have an error in the bit string.  Calculate the sum of the indices of\\n    // the erroneous parity bits.  This sum gives the index of where an error\\n    // occurs.  Correct one error.\\n    const i = MyArray.sum(error);\\n    const _msg = Array.from(msg);\\n    _msg[i] = (_msg[i] + 1) % 2;\\n    // Check the overall parity bit.  This allows us to check for the presence\\n    // of a second error, but we would not be able to correct the second error.\\n    const n1 = MyArray.sum(_msg.slice(1, _msg.length));\\n    assert(_msg[0] === n1 % 2);\\n    return _msg;\\n}\\n\\n/**\\n * Convert a Hamming code to an integer.\\n *\\n * @param msg A bit string encoded using Hamming code.\\n * @param nparity The number of parity (i.e. redundant) bits in the\\n *     bit string.  This does not include the overall parity bit, which is\\n *     assumed to be at index 0 of msg.\\n * @return An integer representation of the Hamming encoded bit string.\\n */\\nfunction to_integer(msg, nparity) {\\n    assert(msg.length > 3);\\n    assert(nparity > 0);\\n    // Extract data bits, i.e. those bits that are not redundant bits and not\\n    // the overall parity bit.  Index 0 is reserved for the overall parity bit.\\n    // Index 1 is reserved for a redundant bit, so is index 2.  Therefore, we\\n    // start at index 3.\\n    const pos = new Set(parity_position(nparity));\\n    const data = [];\\n    for (let i = 3; i < msg.length; i++) {\\n        if (pos.has(i)) {\\n            continue;\\n        }\\n        data.push(msg[i]);\\n    }\\n    // The number is a binary representation of an integer.  Convert the binary\\n    // representation to a decimal representation.\\n    return parseInt(data.join(\\\"\\\"), base.BINARY);\\n}\\n\\n/**\\n * HammingCodes: Encoded Binary to Integer: You are given an encoded binary\\n * string.  Treat it as a Hamming code with 1 possible error at a random index.\\n * Find the possible wrong bit, fix it, and extract the decimal value from\\n * the string.  Return the decimal value as a string.\\n *\\n * Note 1: The length of the binary string is dynamic, but its encoding/decoding\\n *     follows Hamming's rule.\\n * Note 2: Index 0 has an overall parity bit.\\n * Note 3: There's a ~55% chance of having an altered bit.\\n *\\n * Usage: run cct/hamming2.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const msg = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(decode(msg), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/hamming2.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, msg);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/hamming2.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8075caf5-5f02-487e-adf2-87a7547d087e\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f9112807-81f3-49eb-bd79-d0910ff3cd44\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/85689db8-cdb5-49a7-b9a4-cff788f1c675\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0348e292-55c5-433b-9dd0-4cec135df4a5\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1a9b327b-aa0e-4102-9a30-c6435f8c504e\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a8974fb5-b513-49e5-8a2a-48c0080273d3\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bf3c00c7-e997-4fa2-93cc-880baa2498ae\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/26f44d43-4ff8-48aa-b9f4-2cee32312897\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e38cd053-8f3e-4aa4-b9c1-39f97b3dc3b9\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/810121db-1fb5-4949-943f-db56831fb7af\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/453713bd-3bc4-4b98-9d3c-948b390993ae\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c7c7286a-13bd-4e77-8272-97fb0fc2769b\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5496d104-dd5c-4cd9-99d9-133622e85137\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/147aafc5-a9c6-4d40-b695-bba58f4bee73\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5e764175-7f33-449a-a20c-cb650781429f\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5cf2a761-0512-4583-b724-6ef91fbe882a\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1d16d1fa-192e-4dff-b5ce-44f90bc32824\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ebb8396d-20da-4e02-a86c-5c839601fcfa\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3c657a5c-1f42-481b-ae01-98e8a7c0492b\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/22796e7f-414b-4ad3-af41-2f9221bdc9a7\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b4b8fd43-74bc-449c-8681-fc2f87a3c10e\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/80ee1770-7556-416b-8685-bf2584ef7fda\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fb58bf0a-98b0-4bdd-92aa-315a185f7847\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d721827e-48b2-43ee-8279-e3931316cf4d\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8958f807-ff5a-4591-b231-c86fb32781fe\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d22dc947-b71b-4c8b-b03b-a129b1a99e6d\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d4ee35a3-05d4-493a-a15a-a48941f88597\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6a9bf56d-ca90-495c-8339-61f19c9fa56f\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a9acd1bf-27ce-4db3-b1ff-d6d76772700c\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/7e254eb9-dbf8-4616-98a5-8e3c63e47182\",\"moduleSequenceNumber\":707220},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dd6741ed-203c-4dc5-8612-7db6d0fa9767\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1a54c68a-3c24-49a4-8af8-d5cc5653ee85\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/f002b8d6-52ba-4bfa-b846-dbae21813ce0\",\"moduleSequenceNumber\":707197},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/28e27d55-78ca-4f1d-a7ac-153e119abec7\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6a8e7f47-d194-405c-9829-7db89e3aad8c\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/063d48be-d3be-41c2-8371-0a096fc7b12a\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/096f362a-c6e0-484e-8fca-cc5a7252aa83\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ca3a2539-51fa-4ac5-918c-0058d656b31c\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3508305e-893a-4550-8170-f32be9287d16\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3609a0e5-aaa7-4b0f-9345-09831d0dda89\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/66f2a625-21b0-4b8d-9f9c-12c6b301639e\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d0c21c68-21ac-4c85-a0cd-5f137fa4e83a\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/e571c692-16b1-4c90-b203-589827405422\",\"moduleSequenceNumber\":707196},{\"filename\":\"/cct/hamming2.js\",\"url\":\"blob:https://danielyxie.github.io/4c25dee1-6723-4623-9dae-a5b307a80a7d\",\"moduleSequenceNumber\":709736}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725323,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Merge overlapping intervals.\\n *\\n * @param interval An array of intervals.  Each interval is represented as an\\n *     array [a, b] of two elements, where a < b.  So this is an array of\\n *     arrays.\\n * @return An array of intervals, where all overlapping intervals have\\n *     been merged.  Intervals in the array are sorted in ascending order.\\n */\\nfunction merge(interval) {\\n    // Sanity checks.\\n    assert(interval.length > 0);\\n    assert(valid_interval(interval));\\n    // Sort the array in ascending order using the first element of\\n    // each subarray.\\n    const array = MyArray.sort_ascending_tuple(interval);\\n    // Compare two intervals and merge them as necessary.\\n    let i = 0;\\n    let j = i + 1;\\n    const start = 0;\\n    const end = 1;\\n    const howmany = 1; // How many elements to delete.\\n    while (j < array.length) {\\n        if (merge_interval(array[i], array[j])) {\\n            // Merge intervals i and j.\\n            const a = array[i][start];\\n            const b = Math.max(array[i][end], array[j][end]);\\n            array[i] = [a, b];\\n            // Delete interval j.\\n            array.splice(j, howmany);\\n            continue;\\n        }\\n        i++;\\n        j = i + 1;\\n    }\\n    return array;\\n}\\n\\n/**\\n * Whether to merge two intervals.\\n *\\n * @param intA An interval, represented as an array [x, y] of two elements.\\n * @param intB Another interval.\\n * @return true if the given intervals should be merged; false otherwise.\\n */\\nfunction merge_interval(intA, intB) {\\n    const start = 0;\\n    const end = 1;\\n    const a = intA[end];\\n    const b = intB[start];\\n    // The end of the previous interval is smaller than the start\\n    // of the current interval.\\n    if (a < b) {\\n        return bool.NO_MERGE;\\n    }\\n    // The end of the previous interval is greater than or equal\\n    // to the start of the current interval.\\n    assert(a >= b);\\n    return bool.MERGE;\\n}\\n\\n/**\\n * Whether each interval is valid.\\n *\\n * @param array An array of intervals.  Cannot be an empty array.\\n * @return true if each interval is valid; false otherwise.\\n */\\nfunction valid_interval(array) {\\n    assert(array.length > 0);\\n    for (let i = 0; i < array.length; i++) {\\n        const arr = array[i];\\n        if (arr.length !== 2) {\\n            return bool.INVALID;\\n        }\\n        const [a, b] = arr;\\n        if (a >= b) {\\n            return bool.INVALID;\\n        }\\n    }\\n    return bool.VALID;\\n}\\n\\n/**\\n * Merge Overlapping Intervals: Given an array of intervals, merge all\\n * overlapping intervals.  An interval is an array with two numbers, where\\n * the first number is always less than the second (e.g. [1, 5]).  The\\n * intervals must be returned in ASCENDING order.\\n *\\n * Usage: run cct/interval.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(merge(array), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/interval.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/interval.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/084e9ce1-72cb-4553-a75b-1ae4a306a747\",\"moduleSequenceNumber\":685629},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b8cce246-1065-42c8-abdf-9e6f9324eb81\",\"moduleSequenceNumber\":685627},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6fd7bc56-f78a-42b5-afa3-728d0b9f7d8f\",\"moduleSequenceNumber\":685624},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6bd448e6-bedb-4803-8bb7-2e2b50d33609\",\"moduleSequenceNumber\":685622},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/81d197d3-5ba1-4e28-916e-03f0270ec56f\",\"moduleSequenceNumber\":685621},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bf450194-8dfe-40e1-b280-028274c4e9be\",\"moduleSequenceNumber\":685620},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f6a60a26-5fb0-406d-9655-09268b22440e\",\"moduleSequenceNumber\":685617},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d0312ed6-2893-4192-b6e6-c8d5c629f76a\",\"moduleSequenceNumber\":685616},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/aaec3dda-4cb2-4b42-b3e1-147e6b918593\",\"moduleSequenceNumber\":685651},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/92e59ff0-6705-459e-ae02-43adcc2d0202\",\"moduleSequenceNumber\":685612},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/100221fb-3809-46e9-9c49-45b27893958d\",\"moduleSequenceNumber\":685629},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/653ff7c8-35d0-4a6e-aa86-b6269d5af307\",\"moduleSequenceNumber\":685627},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/86a3e4a7-85e2-45be-9650-3e0dde0e5680\",\"moduleSequenceNumber\":685624},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3293c0c9-dfb1-41b5-ac9a-ce0e5a86c220\",\"moduleSequenceNumber\":685622},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4cfee883-980c-477a-8052-31510be3338d\",\"moduleSequenceNumber\":685621},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/72b36c78-c3d9-47b0-ba66-3f3978a211ff\",\"moduleSequenceNumber\":685620},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/27c74d6c-7a38-4c8e-94ec-f8eb76d68627\",\"moduleSequenceNumber\":685617},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2b8999cc-be14-4893-9e0a-7858db0ab6d1\",\"moduleSequenceNumber\":685616},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b1996b16-b401-412d-9e80-0a29477a3584\",\"moduleSequenceNumber\":685651},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/35048e10-c339-4e45-b7cd-8ffb6d6d5f63\",\"moduleSequenceNumber\":685629},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ce056abf-9008-429a-a6e5-e0d62691a721\",\"moduleSequenceNumber\":685627},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ea7328d7-0f71-40f8-93ce-a10b3f983943\",\"moduleSequenceNumber\":685624},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c53c3fd9-ad8e-4507-9b08-0684c419bd90\",\"moduleSequenceNumber\":685622},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3e6466e2-e2c9-4b19-ab5e-3a6a010429d7\",\"moduleSequenceNumber\":685621},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c904886f-f9b1-46d9-8199-92f3f9e5f242\",\"moduleSequenceNumber\":685620},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b5cc49aa-c688-4cd1-a9d8-ef06888afd33\",\"moduleSequenceNumber\":685617},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/250a598b-78a3-49b3-afbc-dc13b4a1a71f\",\"moduleSequenceNumber\":685616},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/24c357a6-233d-4623-9de6-3af09195b9ac\",\"moduleSequenceNumber\":685651},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8178fd69-cc3d-4a30-9f5d-3323db7b8e3c\",\"moduleSequenceNumber\":685622},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/ad10a1c8-977c-4c6b-87b2-1a04b30d71ec\",\"moduleSequenceNumber\":685633},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c9b3d65a-d34a-4bda-b884-2f7dd0939be7\",\"moduleSequenceNumber\":685622},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fafc4530-7fd7-48fa-a494-060e24aefda4\",\"moduleSequenceNumber\":685620},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/1bca8095-4c52-4321-8f37-1673de53b50f\",\"moduleSequenceNumber\":685610},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a2171be8-3bae-468a-a79f-1440feea9a33\",\"moduleSequenceNumber\":685629},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/98588b4c-e43c-4b4a-b440-42f7a72e9a57\",\"moduleSequenceNumber\":685627},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d960da34-a0c2-4ba7-b015-f73be584df2d\",\"moduleSequenceNumber\":685624},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8eb70831-cd6d-4e2e-ba87-b2f597988b30\",\"moduleSequenceNumber\":685622},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9d1226ac-c29d-44ce-9805-a8288acd656d\",\"moduleSequenceNumber\":685621},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/36f772c8-4697-48a0-8c69-6f6340e98fc7\",\"moduleSequenceNumber\":685620},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6456d506-f639-4755-8e9b-4f42f597d0de\",\"moduleSequenceNumber\":685617},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b36d9dfc-a3aa-4262-b05d-dad720a80738\",\"moduleSequenceNumber\":685616},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c9e87d2a-8f49-49bb-8df5-702384eaf97f\",\"moduleSequenceNumber\":685651},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/46a40ad5-7cbf-41a7-8e6c-ba8e5ae990ea\",\"moduleSequenceNumber\":685609},{\"filename\":\"/cct/interval.js\",\"url\":\"blob:https://danielyxie.github.io/cd8ba1fd-e223-44ed-be17-ebe1d93679e2\",\"moduleSequenceNumber\":686579}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725324,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { base } from \\\"/lib/constant/misc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * All valid IPv4 addresses from a string of digits.\\n *\\n * @param string A string of decimal digits.  Cannot be an empty string.\\n * @return An array where each element is a string representing a valid\\n *     IPv4 address.  An empty array if no valid IPv4 addresses can be\\n *     generated from the given string.\\n */\\nfunction all_ip(string) {\\n    assert(string.length > 0);\\n    // An IPv4 address has 4 octets, each of which is a segment of the digit\\n    // string.  No two segments overlap.  Each segment contains at most 3\\n    // digits.  The total length of all segments must be the same as the number\\n    // of digits in the digit string.\\n    const max_octet_length = 3;\\n    const ip_length = string.length;\\n    const ip = [];\\n    for (let i = 1; i <= max_octet_length; i++) {\\n        for (let j = 1; j <= max_octet_length; j++) {\\n            for (let k = 1; k <= max_octet_length; k++) {\\n                for (let ell = 1; ell <= max_octet_length; ell++) {\\n                    // Ensure the length of each octet sums to the length of a\\n                    // valid IPv4 address.\\n                    if (ip_length !== i + j + k + ell) {\\n                        continue;\\n                    }\\n                    // Extract each segment.\\n                    const octet = extract_octets(string, i, j, k);\\n                    // Is each segment a valid octet in an IPv4 address?\\n                    if (!is_valid_ip(octet)) {\\n                        continue;\\n                    }\\n                    // We have found a valid IPv4 address.  Octets in an IPv4\\n                    // address are delimited by a period.\\n                    ip.push(octet.join(\\\".\\\"));\\n                }\\n            }\\n        }\\n    }\\n    // Since v2.1.0, the game wants the array as a string.\\n    return ip.toString();\\n}\\n\\n/**\\n * Extract 4 octets from a digit string.\\n *\\n * @param string A string of decimal digits.\\n * @param i, j, k The boundary of each octet, where the boundary is with\\n *     respect to the digit string.  Going from left to right in the digit\\n *     string, the first octet starts from index 0 and ends at index i - 1,\\n *     inclusive.  The range of indices of the first octet can be written as\\n *     the closed interval [0, i - 1], meaning that digits in the first octet\\n *     are digits found at the given range of indices in the digit string.\\n *     The second octet has the range of indices [i, i + j - 1].  The third\\n *     octet has the range of indices [i + j, i + j + k - 1].  Finally, the\\n *     fourth octet has the range of indices [i + j + k, n - 1], where n is\\n *     the length of the digit string.\\n * @return An array where each element is a string of digits representing an\\n *     octet of the digit string.\\n */\\nfunction extract_octets(string, i, j, k) {\\n    assert(string.length > 0);\\n    assert(i > 0);\\n    assert(j > 0);\\n    assert(k > 0);\\n    const a = string.substring(0, i);\\n    const b = string.substring(i, i + j);\\n    const c = string.substring(i + j, i + j + k);\\n    const d = string.substring(i + j + k, string.length);\\n    return [a, b, c, d];\\n}\\n\\n/**\\n * Whether a given sequence of octets forms a valid IPv4 address.\\n * A valid IPv4 address has 4 valid octets.\\n *\\n * @param octet An array of candidate octets to test.\\n * @return true if each octet is valid; false otherwise.\\n */\\nfunction is_valid_ip(octet) {\\n    assert(octet.length === 4);\\n    for (const seg of octet) {\\n        if (!is_valid_octet(seg)) {\\n            return bool.INVALID;\\n        }\\n    }\\n    return bool.VALID;\\n}\\n\\n/**\\n * Whether a given segment is a valid octet in an IPv4 address.\\n *\\n * @param octet A digit string.  Cannot be an empty string.\\n * @return true if the given segment is a valid IPv4 octet; false otherwise.\\n */\\nfunction is_valid_octet(octet) {\\n    assert(octet.length > 0);\\n    // An octet cannot begin with '0'.  The exception to this rule\\n    // is when the octet itself represents the number 0.\\n    if (octet[0] === \\\"0\\\") {\\n        if (octet !== \\\"0\\\") {\\n            return bool.INVALID;\\n        }\\n    }\\n    // An octet represents an integer between 0 and 255, inclusive.\\n    const n = parseInt(octet, base.DECIMAL);\\n    const min = 0;\\n    const max = 255;\\n    if (min <= n && n <= max) {\\n        return bool.VALID;\\n    }\\n    return bool.INVALID;\\n}\\n\\n/**\\n * Generate IP Addresses: Given a string containing only digits, return an\\n * array with all possible valid IP address combinations that can be created\\n * from the string.  An octet in the IP address cannot begin with '0' unless\\n * the number itself is actually 0.  For example, '192.168.010.1' is NOT\\n * a valid IP.\\n *\\n * From the problem description, we only need to consider IPv4 addresses.\\n * Don't need to handle IPv6 addresses.\\n *\\n * Usage: run cct/ip.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const string = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(all_ip(string), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/ip.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, string);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/ip.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d0e54a0f-b66f-4438-a12d-d557873f4fef\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/775e6f5d-a178-43c1-aed9-78acee52d779\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6f32d260-db37-4551-af55-a6ea67ca6f09\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3fd2fc76-7734-4403-9aab-eba9d94f6627\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/75f5fbb9-0540-4ddb-b45f-f0a4417cde06\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5f03e5bf-345d-4ddc-bd02-6af39563a54e\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/db8c2caa-4105-4d97-9218-fc2393578146\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/63f999fd-c511-409f-b2b0-d76c1aba928a\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/38b1ab0b-57e3-49a3-b09c-8c31d3f6b47b\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/93657e79-2b29-4277-be23-c32a819258e0\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/46c42d4e-cb9c-4339-9681-38f931edbace\",\"moduleSequenceNumber\":707199},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/955e6b11-60c0-45a9-8f64-b2cdbb90359e\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e41317e7-621b-49d9-ba80-d8585c1e892e\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b2bd663d-2d2b-41ce-89d8-1f30d9e2368f\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8efc058e-f726-4931-8be9-80ddb9dafbef\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f3f192f2-7eb4-4a02-bac6-3c7356d06500\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f49fd916-bae2-42b8-9a96-4409f7f64bab\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/68a8ef45-6d26-45a8-a699-ae671e47626c\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9c0b8062-fa8a-4974-87a8-543820f2a1db\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/adc8dbe9-1abd-422d-9917-99ee5371256c\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d41c41bf-80ee-42ae-8140-7e36bdda5903\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7b9bcce4-3cb7-4669-b134-de63fbb00dbb\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f3b2ebaa-bc2c-4fca-b9ee-6258dc4f3371\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/83437f36-66cc-4a3f-9eb3-652f43c9e50b\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9e0c9772-8eb3-4f18-ba74-34f6ecf34973\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/472c824b-0de4-4fc2-9508-edf123915138\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/16f9498e-9ab6-44d8-9ebb-4ed24d35f594\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c909d4e4-387b-40e4-8c3c-71c0dbbe848c\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dd55dc05-32a4-4fd7-ad8d-e9bc1000fa7b\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a570b54e-ef54-4f7c-bd92-ab743cd0bf1e\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/694cf598-f05b-4d85-844a-46fdf6c7aaba\",\"moduleSequenceNumber\":707220},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/320dddc1-becd-45c3-b522-aa079edb06f7\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/41ca2f38-2688-4d90-a8f1-bfbf9736d9fe\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/bcb8a92b-794f-45e4-91ff-40467dd1f4c3\",\"moduleSequenceNumber\":707197},{\"filename\":\"/cct/ip.js\",\"url\":\"blob:https://danielyxie.github.io/7d056e40-d1b4-450d-8115-8a96ab83e317\",\"moduleSequenceNumber\":711717}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725325,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether we can reach the last cell of an array.  We use a greedy approach.\\n * Try to jump the maximum distance, otherwise backtrack and/or reduce the\\n * jump distance.\\n *\\n * @param array An array of integers.  Cannot be an empty array.\\n * @return 1 if starting from the first array cell we can reach the last array\\n *     cell; 0 otherwise.\\n */\\nfunction end_reachable(array) {\\n    // Sanity check.\\n    assert(MyArray.all_nonnegative(array));\\n    // Use a greedy method to try to reach the last array cell.\\n    let i = 0; // Current array index.\\n    const index = []; // Index of intermediary cells.\\n    const jump = []; // Jump length of array cell index[i].\\n    let reduce_distance = false;\\n    let d; // The jump distance.\\n    while (i < array.length) {\\n        // Do we need to reduce the jump distance?\\n        if (reduce_distance) {\\n            // Decrease by 1 the jump distance.\\n            d = jump.pop();\\n            jump.push(d - 1);\\n            reduce_distance = false;\\n        } else {\\n            // Current maximum jump distance.\\n            d = array[i];\\n            index.push(i);\\n            jump.push(d);\\n        }\\n        assert(index.length === jump.length);\\n        // Are we at the last array cell?\\n        if (is_last_cell(i, array)) {\\n            return bool.REACHABLE;\\n        }\\n        // Zero jump distance.\\n        d = jump[jump.length - 1];\\n        i = index[index.length - 1];\\n        if (d === 0) {\\n            // Does the first array cell have zero as the jump distance?\\n            if (i === 0) {\\n                return bool.NOT_REACHABLE;\\n            }\\n            // Backtrack and reduce jump distance.\\n            index.pop();\\n            jump.pop();\\n            reduce_distance = true;\\n            continue;\\n        }\\n        // Can we jump the given distance?\\n        if (i + d < array.length) {\\n            i += d;\\n            continue;\\n        }\\n        // We cannot jump the given distance.\\n        if (i + d >= array.length) {\\n            reduce_distance = true;\\n            continue;\\n        }\\n    }\\n}\\n\\n/**\\n * Whether we are at the last array cell.\\n *\\n * @param i Index of the current array cell.\\n * @param array An array of integers.  Cannot be an empty array.\\n * @return true if i is the last index of the array;\\n *     false otherwise.\\n */\\nfunction is_last_cell(i, array) {\\n    assert(array.length > 0);\\n    assert(i >= 0);\\n    assert(i < array.length);\\n    return i === array.length - 1;\\n}\\n\\n/**\\n * Array Jumping Game: You are given an array of integers where each element\\n * represents the maximum possible jump distance from that position.  For\\n * example, if you are at position i and your maximum jump length is n, then\\n * you can jump to any position from i to i+n.  Assuming you are initially\\n * positioned at the start of the array, determine whether you are able to\\n * reach the last index of the array.\\n *\\n * The problem statement doesn't say anything about whether the integers are\\n * negative, positive, or zero.  If an array element is a negative integer,\\n * does that mean we jump backward?  Let's make various assumptions to\\n * simplify the problem:\\n *\\n * (1) Each integer in the array is non-negative.\\n * (2) We start from the zeroth index of the array.\\n * (3) Each jump must be to the right, increasing the array index.\\n * (4) If the array element is zero, we cannot jump.\\n *\\n * Submit your answer as 1 (meaning true) or 0 (meaning false).\\n *\\n * Usage: run cct/jump.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(end_reachable(array), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/jump.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/jump.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f63667b6-e6b1-45e4-b86e-81fddbd67554\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/754dbc32-f521-4e19-a372-e0b30ed8834c\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/48d4d964-41b7-4803-aae6-b7528d015a10\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/606cfdfe-2f76-470a-a73b-990b77044da9\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b0491f54-c739-4500-aae4-9b9e2d0e2df6\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9c8a6939-ed47-4a84-878c-e20dc2e965e0\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/430ba9cb-c177-45d8-ba91-f87dadc3b6cc\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ad63bc08-d458-4033-91b5-9ef2882974e7\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/90126d12-c008-4a02-bdc4-b635884474ff\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/44c72e92-f8e7-4c66-884a-71d60d6a1d0a\",\"moduleSequenceNumber\":647515},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8ef691bd-bdf3-4009-a5a6-0f03aa4b6d40\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a4b60ae7-09f0-492f-a2eb-50bf93f7250e\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2ccf6a0b-9e54-434d-953c-57a5b3288577\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/64b5f905-63bb-4393-aab4-d90d09c4aafa\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d3d07a54-7863-4091-8ac7-0c980478d75d\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4caf5239-fcc9-449b-8407-57f7001c8527\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d576fedb-1cf6-4aa3-abed-3c655997a553\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7973f78c-9a55-4af0-91fb-871cb1421565\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/876403b3-d97b-40e8-a59d-6f98011bd7a3\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/04acc006-2d12-45ea-abf4-e3ffca3142f7\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ff643280-4115-4a18-b734-d06e438a2bd8\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fa219815-a2b5-4e50-a518-83c054d69435\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7638b85c-d16a-48d8-a3a5-f947502dbda1\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8d29e414-9af4-4e4f-b3e7-5d707949bc10\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/472da3a1-e909-4793-ae14-87b1b816f2cd\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9d0efefc-0404-4e66-9e01-3a2e9a819461\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b7dbd788-dca3-4f3b-a4dc-2e784a2024b1\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/db305488-9236-4536-976f-6613abee9e10\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bdf771ff-75cf-4490-bff1-ba938a5d9e0f\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/a11d13f6-f008-49cf-96e8-62e6b135830d\",\"moduleSequenceNumber\":647536},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/58818b94-0e73-47ab-a411-1656bb03d026\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3812accf-3dbc-49fc-aa9b-fc8bc4527e7d\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/5a6b5094-4cc5-4fd4-a7e0-64ca216d0f18\",\"moduleSequenceNumber\":647513},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/17995938-bb79-4470-afa2-b405a66f4e0e\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1054e95f-28c0-4d01-8a10-e33941e4f12f\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8a7487b5-d35e-425c-8228-2e79b2497337\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/26bfddaf-5b8d-404a-8092-0c91c710e421\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7fd95dfd-3b95-4322-a8e6-4e399bd17aaf\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4171c8e6-275b-4c82-a956-3eba74216e34\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fcccf154-f0b3-4c89-8b56-6a5fb895a343\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/982038db-bb91-432d-ad89-ae177f992fbb\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b29c952f-77b1-4240-bb13-139cd46d2e15\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/e64d3fa9-c23c-41e7-8594-6e036db22aa7\",\"moduleSequenceNumber\":647512},{\"filename\":\"/cct/jump.js\",\"url\":\"blob:https://danielyxie.github.io/e66c696b-3968-4098-89bf-e0a668c366ac\",\"moduleSequenceNumber\":649188}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725326,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { Graph } from \\\"/lib/network.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether we can jump from the current array cell.\\n *\\n * @param i Index of current array cell.\\n * @param array The array.\\n * @return true if we can jump from the current cell;\\n *     false otherwise;\\n */\\nfunction can_jump(i, array) {\\n    // Sanity checks.\\n    assert(i >= 0);\\n    assert(i < array.length);\\n    // Cannot jump if the maximum number of jumps is zero.\\n    if (array[i] === 0) {\\n        return bool.NO_JUMP;\\n    }\\n    // Cannot jump if we are at the last array cell.\\n    const last_index = array.length - 1;\\n    if (last_index === i) {\\n        return bool.NO_JUMP;\\n    }\\n    return bool.JUMP;\\n}\\n\\n/**\\n * The minimum number of jumps to reach the end of an array.\\n *\\n * @param array An array of non-negative integers.  Cannot be an empty array.\\n * @return The minimum number of jumps from the first to the last cell.  If we\\n *     cannot reach the last cell, then the minimum number is 0.\\n */\\nfunction minimum_jump(array) {\\n    assert(MyArray.all_nonnegative(array));\\n    // We interpret the array and its elements as a directed graph.  The\\n    // minimum jump length is found by computing the shortest path from the\\n    // first cell to the last cell.\\n    const start = 0;\\n    const end = array.length - 1;\\n    const graph = to_graph(array);\\n    const path = graph.shortest_path(start, end);\\n    // Cannot reach the last cell of the given array.\\n    if (path.length === 0) {\\n        return 0;\\n    }\\n    // We can reach the last cell of the array.\\n    assert(path.length > 0);\\n    const min_jump = path.length - 1;\\n    assert(min_jump > 0);\\n    return min_jump;\\n}\\n\\n/**\\n * Construct a directed, unweighted graph from the given array.\\n *\\n * @param array An array of non-negative integers.  Cannot be an empty array.\\n * @return A directed, unweighted graph representation of the given array.\\n */\\nfunction to_graph(array) {\\n    assert(array.length > 0);\\n    // First, add the nodes of the directed graph because the graph might be\\n    // disconnected.  Each node ID is an index of the given array.\\n    const node = MyArray.sequence(array.length);\\n    const graph = new Graph(bool.DIRECTED);\\n    node.forEach((v) => graph.add_node(v));\\n    // Add the directed edges of the graph.\\n    const last_index = array.length - 1;\\n    for (const u of node) {\\n        // Cannot jump from current array cell.\\n        if (!can_jump(u, array)) {\\n            continue;\\n        }\\n        // All possible jumps, where each jump distance is between 1 and\\n        // array[u], inclusive.\\n        const max_distance = array[u];\\n        assert(u < last_index);\\n        assert(max_distance > 0);\\n        for (let i = 1; i <= max_distance; i++) {\\n            const v = u + i;\\n            // Is v a valid index in array?\\n            if (v > last_index) {\\n                continue;\\n            }\\n            graph.add_edge(u, v);\\n        }\\n    }\\n    return graph;\\n}\\n\\n/**\\n * Array Jumping Game II: You are given an array of integers where each\\n * element represents the maximum possible jump distance from that position.\\n * For example, if you are at position i and your maximum jump length is n,\\n * then you can jump to any position from i to i+n.  Assuming you are\\n * initially positioned at the start of the array, determine the minimum\\n * number of jumps to reach the end of the array.  If it's impossible to\\n * reach the end, then the answer should be 0.\\n *\\n * This is similar to Array Jumping Game.  The only difference is that you\\n * must determine the smallest number of jumps to reach the end of the array.\\n * As with Array Jumping Game, we make various assumptions to simplify the\\n * problem:\\n *\\n * (1) Each integer in the array is non-negative.\\n * (2) We start from the zeroth index of the array, i.e. the first element.\\n * (3) Each jump must be to the right, increasing the array index.\\n * (4) If the array element is zero, we cannot jump.\\n *\\n * Usage: run cct/jump2.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const min_jump = minimum_jump(array);\\n    const result = ns.codingcontract.attempt(min_jump, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/jump2.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/jump2.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/597e6504-c508-48f2-9f04-40b840733f81\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/13bcf23e-703d-4ea8-ad89-b32a2156af48\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d167bf0c-2f35-46be-9af7-6b221294d38d\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/80e0c116-d17e-4095-933e-76e0b2889077\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/aca8d14f-f6aa-49da-a687-c4d773fe8c16\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e26108a4-8d10-4183-baea-0d8baa963fe2\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f31f2ab5-fb1c-40ed-8af0-a90fa3d67902\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6f4cc208-6544-4a06-952f-0ab2e2fff0cf\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ecbf9fa9-b1cc-48ed-8448-b8574f1cd8d5\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1bc63fcb-563c-42a4-b8cd-9355d76d37ff\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d523dd69-e9ec-4343-b864-300c079987fb\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6364738a-17cb-44c4-93e5-fedb222c6333\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ba1dc0a7-2545-43c1-96ef-bbe87a8d4a26\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c91c98dd-5f6b-41e3-b56d-09caed4dabf4\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d45241a6-635d-47c1-822d-7047bd3936b7\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/eeb996ac-7c4d-4cdc-9594-86dcde77d666\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bc522d63-cb02-4acc-ba3c-f6c5489a58dc\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ca085ecc-c123-4e66-a4cf-715101cb8aca\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e741b619-d1f8-469e-a7f2-6c4c46304187\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b6681f8f-6235-439a-b2a9-70e9ae127700\",\"moduleSequenceNumber\":668084},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/3e835fc2-f178-4b1d-9d2a-6c766940370f\",\"moduleSequenceNumber\":668107},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8ebd3b1d-f3ae-4ec9-8513-ace52e99a357\",\"moduleSequenceNumber\":668084},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fcd9dfee-9e35-4596-9973-06012f03ef5a\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0036b257-1a2d-4f27-9860-19dbd8fb8c3f\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/adf9b424-9f8c-4cf1-b384-6d05a4c2b3ac\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/70b1c83a-7f7a-46aa-ba5b-21ca912bdf12\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e0336b15-329f-47d5-aa8e-26c22ecd0a51\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/dbf634d6-3e22-49b2-aedb-d14af0795dba\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/69ed803e-51c7-40e7-a949-cd404042ced2\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6eb132b8-3910-4941-a942-60c390a18e14\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/50faf713-d2bf-4e60-93c2-dc583a0ff009\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/745dcfe6-0d32-4421-a006-ba3d347896ba\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4bfe03d0-5e54-4449-8308-635ba52dc6b7\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b8cfad1d-a2e6-45c6-a5b9-5a8790974d51\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/acf7e98f-f58a-4e6e-bafd-b5d4b891ec74\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c7575d38-d530-45c0-96df-b1b439d7282e\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/685c2b99-01c1-4b77-81c8-5ae05682a497\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/010d0f12-da1d-434c-a1ea-5e51697a9d2d\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4031dcda-aff0-49e3-a656-9fd20afb276c\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9f530b45-882a-495b-b7f0-0444192cfe3e\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/205191c5-a1c9-41f1-9ed0-e602697c1d53\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/e89bf1f4-de0e-45d5-8580-e1bc0575b1e0\",\"moduleSequenceNumber\":668105},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3ddc76e9-43ed-48f8-a738-a619a8c9e126\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4ba624fe-f936-4e5d-a7df-8f412e0f4e29\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/10eb9a12-143a-4f15-8771-964eb95a7fa3\",\"moduleSequenceNumber\":668082},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1faa5364-7cc7-447d-95f9-6e04cb84df42\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/513e84fb-fca3-4a1e-8b3b-317391d237ff\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1019b213-4456-49c1-8a3d-fac3f9f78bca\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/45ca48ef-5032-4e1e-bb0f-b1beea879604\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bd94fc02-a06c-4b7e-b95a-ae1f32bd1d68\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ecaee06c-ba0d-4f6f-adb3-6eff1a704113\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c45603f6-aa3e-498d-9640-e7efb13221c2\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4bb2032b-67e6-41d6-aa61-ee91d1fba1a5\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2de33b22-c226-4caf-97ba-37130cdc9b7d\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/35ef596c-45de-46cc-8703-d08c47837294\",\"moduleSequenceNumber\":668081},{\"filename\":\"/cct/jump2.js\",\"url\":\"blob:https://danielyxie.github.io/9d581674-8c62-4f53-bd7d-ecec556ce5b1\",\"moduleSequenceNumber\":677004}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725327,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\n\\n/**\\n * Compress a string using LZ encoding.  This function is due to\\n *\\n * stalefishies\\n * https://github.com/stalefishies\\n * https://github.com/danielyxie/bitburner/commit/174d17a5e20926745993969ede7ad1db9308036c\\n *\\n * Explanation by stalefish#8304 on Discord server of Bitburner:\\n *\\n * The basic idea is to add one character at a time, keeping all possible\\n * routes to optimal compression open. If we have N characters currently\\n * compressed, we can split that into two parts: all the chunks except the\\n * last, and then that last chunk. To add an (N+1)th character to the\\n * compressed string, we are going to either modify that last chunk to include\\n * the new character, or start a new chunk with the new character - we never\\n * modify any chunk except the last. Thus, to keep all possible routes open, we\\n * need to consider every possible final chunk, keeping track of the shortest\\n * 'all chunks except the last' string for each possible final chunk. That's\\n * what the state table keeps track of: the string stored in the table is the\\n * shortest 'all chunks except the last', and each table location corresponds\\n * to each possible last chunk.\\n *\\n * The code of this function is covered by this license:\\n * Apache 2.0 with Commons Clause\\n * https://github.com/danielyxie/bitburner/blob/dev/license.txt\\n *\\n * @param plain We want to compress this string.\\n * @return A compressed version of the input string.\\n */\\nfunction compress(plain) {\\n    // for state[i][j]:\\n    //      if i is 0, we're adding a literal of length j\\n    //      else, we're adding a backreference of offset i and length j\\n    let cur_state = Array.from(Array(10), () => Array(10).fill(null));\\n    let new_state = Array.from(Array(10), () => Array(10));\\n\\n    function set(state, i, j, str) {\\n        const current = state[i][j];\\n        if (current === null || str.length < current.length) {\\n            // eslint-disable-next-line no-param-reassign\\n            state[i][j] = str;\\n        } else if (str.length === current.length && Math.random() < 0.5) {\\n            // if two strings are the same length, pick randomly so that\\n            // we generate more possible inputs to Compression II\\n            // eslint-disable-next-line no-param-reassign\\n            state[i][j] = str;\\n        }\\n    }\\n\\n    // initial state is a literal of length 1\\n    cur_state[0][1] = \\\"\\\";\\n\\n    for (let i = 1; i < plain.length; ++i) {\\n        for (const row of new_state) {\\n            row.fill(null);\\n        }\\n        const c = plain[i];\\n        // handle literals\\n        for (let length = 1; length <= 9; ++length) {\\n            const string = cur_state[0][length];\\n            if (string === null) {\\n                continue;\\n            }\\n            if (length < 9) {\\n                // extend current literal\\n                set(new_state, 0, length + 1, string);\\n            } else {\\n                // start new literal\\n                // prettier-ignore\\n                set(\\n                    new_state,\\n                    0,\\n                    1,\\n                    `${string}9${plain.substring(i - 9, i)}0`\\n                );\\n            }\\n            for (let offset = 1; offset <= Math.min(9, i); ++offset) {\\n                if (plain[i - offset] === c) {\\n                    // start new backreference\\n                    // prettier-ignore\\n                    set(\\n                        new_state,\\n                        offset,\\n                        1,\\n                        string\\n                            + String(length)\\n                            + plain.substring(i - length, i)\\n                    );\\n                }\\n            }\\n        }\\n\\n        // handle backreferences\\n        for (let offset = 1; offset <= 9; ++offset) {\\n            for (let length = 1; length <= 9; ++length) {\\n                const string = cur_state[offset][length];\\n                if (string === null) {\\n                    continue;\\n                }\\n                if (plain[i - offset] === c) {\\n                    if (length < 9) {\\n                        // extend current backreference\\n                        set(new_state, offset, length + 1, string);\\n                    } else {\\n                        // start new backreference\\n                        set(\\n                            new_state,\\n                            offset,\\n                            1,\\n                            `${string}9${String(offset)}0`\\n                        );\\n                    }\\n                }\\n                // start new literal\\n                set(new_state, 0, 1, string + String(length) + String(offset));\\n                // end current backreference and start new backreference\\n                for (\\n                    let new_offset = 1;\\n                    new_offset <= Math.min(9, i);\\n                    ++new_offset\\n                ) {\\n                    if (plain[i - new_offset] === c) {\\n                        set(\\n                            new_state,\\n                            new_offset,\\n                            1,\\n                            `${string + String(length) + String(offset)}0`\\n                        );\\n                    }\\n                }\\n            }\\n        }\\n\\n        const tmp_state = new_state;\\n        new_state = cur_state;\\n        cur_state = tmp_state;\\n    }\\n\\n    let result = null;\\n\\n    for (let len = 1; len <= 9; ++len) {\\n        let string = cur_state[0][len];\\n        if (string === null) {\\n            continue;\\n        }\\n        string\\n            += String(len) + plain.substring(plain.length - len, plain.length);\\n        if (result === null || string.length < result.length) {\\n            result = string;\\n        } else if (string.length === result.length && Math.random() < 0.5) {\\n            result = string;\\n        }\\n    }\\n\\n    for (let offset = 1; offset <= 9; ++offset) {\\n        for (let len = 1; len <= 9; ++len) {\\n            let string = cur_state[offset][len];\\n            if (string === null) {\\n                continue;\\n            }\\n            string += `${String(len)}${String(offset)}`;\\n            if (result === null || string.length < result.length) {\\n                result = string;\\n            } else if (string.length === result.length && Math.random() < 0.5) {\\n                result = string;\\n            }\\n        }\\n    }\\n\\n    return result ?? \\\"\\\";\\n}\\n\\n/**\\n * Compression III: LZ Decompression: Lempel-Ziv (LZ) compression is a data\\n * compression technique that encodes data using references to earlier parts of\\n * the data.  In this variant of LZ, data is encoded as two types of chunk.\\n * Each chunk begins with a length L, encoded as a single ASCII digit from 1 to\\n * 9, followed by the chunk data, which is either:\\n *\\n * 1. Exactly L characters, which are to be copied directly into the\\n *    uncompressed data.\\n * 2. A reference to an earlier part of the uncompressed data.  To do this, the\\n *    length is followed by a second ASCII digit X.  Each of the L output\\n *    characters is a copy of the character X places before it in the\\n *    uncompressed data.\\n *\\n * For both chunk types, a length of 0 instead means the chunk ends\\n * immediately, and the next character is the start of a new chunk.  The two\\n * chunk types alternate, starting with type 1, and the final chunk may be of\\n * either type.  You are given a string as input.  Encode it using Lempel-Ziv\\n * encoding with the minimum possible output length.\\n *\\n * Usage: run cct/lzc.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const data = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(compress(data), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/lzc.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/lzc.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f638d6c1-53e3-4f0a-9787-3a1c82c9cf9b\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/96d63f73-0023-4b50-9292-239092092427\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1a56c7c4-5016-48f2-8ce7-eb262cc9732e\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b22cc8c0-37d2-4210-bb95-5c49eb607b5b\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/44d4439d-b5c5-44a8-be57-4cb1791a6d22\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/37bfc0cd-ac43-4bad-ab78-25f77f87f0a0\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4012f605-89f6-4edd-9ff3-66a70e895be4\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7b0859c5-d7a7-46cb-a047-db149ca0935b\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f20d5a6d-f648-4021-99d0-8c061a53e87e\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2a82d025-3bb1-47b0-b91e-f647a634bb98\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a0adadaf-abba-410c-88d3-809d4fc29698\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/14226a31-9db1-4533-8b8e-0ae396be2d10\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/12020fcc-0479-490a-9abd-9733bec6e517\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ba571599-316e-4040-b6db-2e5f0201473d\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/42f2aa80-e0e1-4f01-94ae-dd611084279b\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e0a15f66-cae7-4e91-8410-d9ea916f44b5\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ae3c4f03-480f-46f4-93be-d53a1c7803f7\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e7fd0abe-0e02-49f4-bde4-349f18e3ec05\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5f221b19-1a14-442e-afa1-00be76d19637\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/1e26e23c-1ea2-4b12-bfc3-f532798c098b\",\"moduleSequenceNumber\":647536},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dbf1d1d4-8fa3-48ab-8172-068fd1509224\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d330769c-9e50-4627-9d81-f62eed288e73\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/d62ec9a3-713a-4d95-bc06-6200552e2fc1\",\"moduleSequenceNumber\":647513},{\"filename\":\"/cct/lzc.js\",\"url\":\"blob:https://danielyxie.github.io/15453ad6-3928-4aa9-9001-9ed625e02c68\",\"moduleSequenceNumber\":654828}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725328,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { lzchunk } from \\\"/lib/constant/cct.js\\\";\\nimport { base } from \\\"/lib/constant/misc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Use a variant of the Lempel-Ziv (LZ) algorithm to decompress a string.  The\\n * string is assumed to follow the format\\n *\\n * C_1 C_2 C_3 ... C_n\\n *\\n * where C_i is the i-th chunk of the string.  Each chunk has two parts:\\n *\\n * (1) L := The length of an uncompressed portion of data.  The length L is an\\n *     integer between 1 and 9, inclusive.  The length number is the first part\\n *     of any chunk.\\n * (2) data := The chunk data, which is the second part of any chunk.  The\\n *     chunk data can be further decomposed into two types:\\n *     (a) Literal characters.  A chunk with this second part is denoted as\\n *         \\\"L<string>\\\", where <string> is a string of L characters.  We append\\n *         these L characters directly into the uncompressed string.  For\\n *         example, given the chunk \\\"3abc\\\", the digit \\\"3\\\" is the first part of\\n *         the chunk and the string \\\"abc\\\" is the second part.  The length 3,\\n *         together with the string, tells us to copy the first 3 characters of\\n *         the string and append the characters to the uncompressed data.  That\\n *         is, we append the string \\\"abc\\\" to our uncompressed data.\\n *     (b) An ASCII digit X.  A chunk having this second part is denoted as\\n *         \\\"LX\\\", where X is a decimal digit between 1 and 9, inclusive.  The\\n *         value of X tells us how many characters in the uncompressed string\\n *         to backtrack.  Going from right to left in the uncompressed string,\\n *         we traverse X locations, copy the character at the X-th location,\\n *         and append the character to our uncompressed string.  Repeat the\\n *         process as many times as necessary until we have appended L\\n *         characters.  For example, suppose we have the chunk \\\"53\\\" and our\\n *         (still incomplete) uncompressed string is \\\"abcd\\\".  The first part\\n *         \\\"5\\\" tells us how many characters to append to the uncompressed\\n *         string.  The second part \\\"3\\\" tells us to backtrack 3 positions in\\n *         the uncompressed string to locate the character to copy and append.\\n *         Here's how to obtain the first character to append.  Going from\\n *         right to left in the uncompressed string \\\"abcd\\\", we backtrack to the\\n *         3rd character, namely \\\"b\\\".  We copy this character and append it to\\n *         our uncompressed string, resulting in the new uncompressed string\\n *         \\\"abcdb\\\".  One down, four to go.  For our second character, we\\n *         backtrack 3 locations in the uncompressed string \\\"abcdb\\\" to arrive\\n *         at \\\"c\\\".  Copy and append this character to produce the new\\n *         uncompressed string \\\"abcdbc\\\".  Two down, three to go.  The third\\n *         character to copy and append is \\\"d\\\", resulting in the uncompressed\\n *         string \\\"abcdbcd\\\".  The fourth character we want is \\\"b\\\" and we now\\n *         have the uncompressed string \\\"abcdbcdb\\\".  Our fifth character is\\n *         \\\"c\\\" and our uncompressed string is \\\"abcdbcdbc\\\".\\n *\\n * The chunk type alternates and we always start with a chunk of the type\\n * L<string>.  The compressed data follows the format\\n *\\n * L<string> LX L<string> LX ...\\n *\\n * If L := 0, the chunk ends immediately and we start a new chunk of the type\\n * different from the previous type.  A portion of the compressed data might be\\n *\\n * ... L<string> 0 L<string> ...\\n *\\n * or, as another example,\\n *\\n * ... LX 0 LX ...\\n *\\n * The above rules help us to make sense of the compressed data \\\"312312021\\\".\\n * We have these chunks: \\\"3123\\\", \\\"12\\\", \\\"0\\\", \\\"21\\\".  The uncompressed string is\\n * \\\"123222\\\".  Refer to the following for more details on the LZ algorithm.\\n *\\n * [1] J. Ziv and A. Lempel.  A universal algorithm for sequential data\\n *     compression.  IEEE Transactions on Information Theory, volume 23,\\n *     issue 3, pp.337--343, 1977.\\n *     DOI: 10.1109/TIT.1977.1055714\\n * [2] Colt McAnlis and Aleks Haecky.  Understanding Compression: Data\\n *     Compression for Modern Developers.  O'Reilly, 2016.\\n * [3] The Hitchhiker's Guide to Compression\\n *     https://go-compression.github.io/\\n *\\n * @param data We want to decompress this string.  The string is assumed to be\\n *     the output of a variant of the LZ compression algorithm.  Cannot be an\\n *     empty string.\\n * @return The decompressed string corresponding to the input data.\\n */\\nfunction decompress(data) {\\n    assert(data.length > 0);\\n    // Always start with the chunk format L<string>.\\n    let chunk_type = lzchunk.LS;\\n    // Where are we in the compressed string?\\n    let i = 0;\\n    // The uncompressed string.\\n    let result = \\\"\\\";\\n    while (i < data.length) {\\n        const ell = parseInt(data[i], base.DECIMAL);\\n        // Is this chunk of type L<string>?\\n        if (lzchunk.LS === chunk_type) {\\n            // Do we end the chunk now?\\n            if (end_now(ell)) {\\n                i++;\\n                chunk_type = lzchunk.LX;\\n                continue;\\n            }\\n            // Copy the following L characters and append them to the\\n            // uncompressed string.\\n            const start = i + 1;\\n            const end = start + ell;\\n            result = result.concat(data.slice(start, end));\\n            chunk_type = lzchunk.LX;\\n            i = end;\\n            continue;\\n        }\\n        // This chunk is of type LX, which has 2 characters.\\n        assert(lzchunk.LX === chunk_type);\\n        // Do we end the chunk now?\\n        if (end_now(ell)) {\\n            i++;\\n            chunk_type = lzchunk.LS;\\n            continue;\\n        }\\n        // Backtrack X characters in the uncompressed string.  Copy and append\\n        // the X-th character to the uncompressed string.  Repeat L times.\\n        const x = parseInt(data[i + 1], base.DECIMAL);\\n        for (let j = 0; j < ell; j++) {\\n            const k = result.length - x;\\n            result = result.concat(result[k]);\\n        }\\n        chunk_type = lzchunk.LS;\\n        i += 2;\\n    }\\n    return result;\\n}\\n\\n/**\\n * Whether to end a chunk now.  Each chunk is either of the formats L<string>\\n * or LX.  Here, L is a decimal digit between 0 and 9, inclusive.\\n *\\n * @param ell The first part of any chunk, denoted as L.  Assumed to be a\\n *     decimal digit between 0 and 9, inclusive.\\n * @return true if a chunk ends now; false otherwise.\\n */\\nfunction end_now(ell) {\\n    return ell === 0;\\n}\\n\\n/**\\n * Compression II: LZ Decompression: Lempel-Ziv (LZ) compression is a data\\n * compression technique that encodes data using references to earlier parts of\\n * the data.  In this variant of LZ, data is encoded as two types of chunk.\\n * Each chunk begins with a length L, encoded as a single ASCII digit from 1 to\\n * 9, followed by the chunk data, which is either:\\n *\\n * 1. Exactly L characters, which are to be copied directly into the\\n *    uncompressed data.\\n * 2. A reference to an earlier part of the uncompressed data.  To do this, the\\n *    length is followed by a second ASCII digit X.  Each of the L output\\n *    characters is a copy of the character X places before it in the\\n *    uncompressed data.\\n *\\n * For both chunk types, a length of 0 instead means the chunk ends\\n * immediately, and the next character is the start of a new chunk.  The two\\n * chunk types alternate, starting with type 1, and the final chunk may be of\\n * either type.  You are given an LZ-encoded string.  Decode it and output the\\n * original string.\\n *\\n * Usage: run cct/lzd.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const data = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(decompress(data), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/lzd.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/lzd.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/508c95d3-f4d3-4f85-984c-aefa00ddfe46\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/70f8a6d8-fb68-4474-b763-154979fb4f0a\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7f5c82c7-ac87-421a-b436-874944651f2a\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0ee9a9ed-a563-4afa-8866-803caa59cb5a\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1c0481cb-4405-4db7-8e2c-fe9cc5fd41e1\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/abf6e967-2b8b-4987-a935-a2235176221c\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4ddcbd83-b4d0-45cf-b1b4-cc98c85935c6\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f6e7168b-752e-49aa-9e92-d6f82ba4ce92\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ae271201-04b5-4c5f-8018-cd1cd333fd65\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/10936d41-d1fc-48e6-8123-58d8ba577330\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/cct.js\",\"url\":\"blob:https://danielyxie.github.io/9e6bffaf-fa51-4660-8172-9dc04cb54dc5\",\"moduleSequenceNumber\":719398},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5e2e60ce-9152-4a00-acca-223c39576cce\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/720f80fd-db7c-4b0e-a480-24f6325ecfbd\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d0f267de-085a-4df8-9c5e-e7a86baf8222\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/152f1229-b5e8-436d-811b-4e46881beeae\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/828373b8-adcb-44e6-ab3d-6499017cf526\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bad288d3-2845-4f20-a402-7f1cdee406e2\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8b000606-3c2e-4a52-b4be-6f50a9429f16\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f576b5db-48a5-410a-bcb7-efbff959bddb\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fdbb982d-65d3-4f4f-a44c-c29c8913484b\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4ef0d9d2-8e93-48e8-a3c8-144a7e3cf5f6\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d79006f4-4623-47e2-91b7-fc3a33c8bfdb\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/649526f5-b10b-45f8-96cd-f3ffd4dcd600\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/26315275-dd89-45aa-bf18-f69c2530f846\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/141f76d0-f7a6-46a7-bdfa-da2f95aca99f\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/036dcf3e-a729-463b-88d6-4fde4946418c\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/319518d3-8f99-4e8e-a27f-e29d896d89aa\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/53acd102-7231-4256-920d-c973dc067807\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2e6594d6-7b2b-4cb4-b96e-caeb8074b0d7\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/490d317f-45d7-49ae-aba7-840cb0d347f8\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/ed16a6eb-a30a-499e-9bce-fc4700eff5ae\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7cb28cfb-99c2-4a57-b9ba-b35edb9ddc8a\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/dd21afda-e096-4051-8809-3ecf79bed54a\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/c71b9f43-d924-4811-8d54-0cec85698cb5\",\"moduleSequenceNumber\":719395},{\"filename\":\"/cct/lzd.js\",\"url\":\"blob:https://danielyxie.github.io/dd1fc418-18bf-44ce-b79a-4fd37e947812\",\"moduleSequenceNumber\":724546}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725329,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { base } from \\\"/lib/constant/misc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * All valid mathematical expressions, each of which evaluates to a target\\n * number.  Each expression results from inserting zero, one, or more of the\\n * following operators between decimal digits: addition (+), subtraction (-),\\n * multiplication (*).\\n *\\n * @param digit A string of decimal digits.  Cannot be empty.\\n * @param target An expression must evaluate to this number.\\n * @returns An array of strings, each of which is an expression that evaluates\\n *     to the target number.\\n */\\nfunction all_expressions(digit, target) {\\n    assert(digit.length > 0);\\n    return Array.from(expressions(digit, target));\\n}\\n\\n/**\\n * Generate all mathematical expressions that evaluate to a target value.  An\\n * expression can use each of these symbols zero, one, or more times:\\n *\\n * (1) addition (+)\\n * (2) subtraction (-)\\n * (3) multiplication (*)\\n *\\n * The algorithm is due to Janne Karila, who provided a Python implementation at\\n *\\n * https://codereview.stackexchange.com/a/163303\\n *\\n * This generator function is a JavaScript translation of Karila's Python code.\\n *\\n * @param digit A string containing a bunch of decimal digits.\\n * @param target Any mathematical expression created from the given digits must\\n *     evaluate to this number.\\n * @param k The multiplication factor.\\n */\\nfunction* expressions(digit, target, k = 1) {\\n    for (let i = 1; i < digit.length; i++) {\\n        // For any given index i in the digit string, we split the string into\\n        // 2 parts:\\n        //\\n        // (1) left := The left part of the digit string consists of all digits\\n        //     from index 0 up to and including index i - 1.  We can think of\\n        //     the left part as already been evaluated, searched, or\\n        //     considered.  The left part is therefore the prefix upon which\\n        //     new expressions can be built.\\n        // (2) right := The right part of the digit string consists of all\\n        //     digits from index i onward.  Think of the right part as digits\\n        //     we have yet to consider.  We use digits in the right part to\\n        //     construct longer expressions based upon the left part.\\n        const left = digit.slice(0, i);\\n        const right = digit.slice(i);\\n        const n = k * parseInt(left, base.DECIMAL);\\n        for (const e of expressions(right, target, n)) {\\n            yield `${left}*${e}`;\\n        }\\n        for (const e of expressions(right, target - n)) {\\n            yield `${left}+${e}`;\\n        }\\n        for (const e of expressions(right, target - n, -1)) {\\n            yield `${left}-${e}`;\\n        }\\n        // Do we have a leading zero?\\n        if (left === \\\"0\\\") {\\n            return;\\n        }\\n    }\\n    if (k * parseInt(digit, base.DECIMAL) === target) {\\n        yield digit;\\n    }\\n}\\n\\n/**\\n * Find All Valid Math Expressions: You are given an array containing two\\n * elements.  The first element is a string that contains only digits between\\n * 0 and 9.  The second element is a target number.  Return all possible ways\\n * you can add the +, -, and * operators to the string of digits such that it\\n * evaluates to the target number.  The answer should be provided as an array\\n * of strings containing the valid expressions.\\n * NOTE: Numbers in an expression cannot have leading 0s.\\n * NOTE: The order of evaluation expects script operator precedence.\\n *\\n * Example 1:\\n * Input: digits = \\\"123\\\", target = 6\\n * Output: [1+2+3, 1*2*3]\\n *\\n * Example 2:\\n * Input: digits = \\\"105\\\", target = 5\\n * Output: [1*0+5, 10-5]\\n *\\n * In Example 1, we have two possible valid solutions.  Note that the\\n * expression \\\"1*-2*-3\\\" also evaluates to 6.  From the problem description, we\\n * infer the following restrictions on any solution we output.\\n *\\n * (1) Each decimal digit is non-negative.\\n * (2) We are not allowed to flip the sign of a digit.  For example, in the\\n *     expression \\\"1*-2*-3\\\" we flipped the sign of the digit \\\"2\\\" from positive\\n *     to negative.  Thus the expression \\\"1*-2*-3\\\" is an invalid solution,\\n *     although it evaluates to the target number.\\n * (3) We are not allowed to insert the operator \\\"-\\\" at index 0 of the digit\\n *     string.\\n * (4) The digit string does not have \\\"0\\\" at index 0.\\n * (5) An operand can be zero, but it cannot have a leading zero.  For example,\\n *     an expression such as \\\"1+0+3\\\" is accepted, but the expression \\\"1+03\\\" is\\n *     invalid because the operand \\\"03\\\" has a leading zero.\\n *\\n * Usage: run cct/maths.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [string, target] = ns.codingcontract.getData(cct, host);\\n    const solution = all_expressions(string, target);\\n    const result = ns.codingcontract.attempt(solution, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/maths.txt\\\";\\n        const data = `${string}, ${target}`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/maths.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1bbe9202-a8cf-4657-a536-a3e50c707300\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d825af7c-4fdc-4d7e-9788-914e083777e2\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b2792aca-f365-4115-bd71-644db2b12a04\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c97495c9-b293-4fe5-ad14-4e747858f3c4\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/43876092-d5de-4ccb-9f66-010ecb637117\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e821f5c1-e5c3-49ce-91fb-f7fcbd5c59f1\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/07e7dfcf-ef10-4a2a-ad3e-5251cccf122c\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9c132051-efe5-488e-bcf2-b37e79b18439\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9fa59252-727a-4b1d-86df-1a06d79d25b4\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8dc6f45e-ba5f-4d40-af0d-11514e468997\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/472cc86d-fbb4-4a4f-8698-b900f2df2f3c\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/140104c8-d51f-48db-8fbc-085bc7d6cd01\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/455af6ae-d702-41a3-8c76-6eeb9db8017f\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8992fd9d-0b85-4a59-9609-f91933e03d48\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/45b5fdfe-c5c9-4c43-b222-ebce64d3e207\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/950e2e2d-63ab-46c5-8b49-a0096ddc05e2\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/01887199-9e2d-48e5-b3b0-fa69a9b69bf1\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/00262ac8-562a-418d-a927-3a6004b96cef\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/59c105c7-6d99-4d8d-96ae-fdd898572425\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/78636234-55d8-48f0-98c2-ac9fcb505e0a\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dcb6daeb-7ac7-47d5-a489-e4383624f95a\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a13f25d6-14b7-43fa-8eab-fc19ab1110c2\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4b28d726-7e53-4a3e-9ae7-544959adc4db\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9e16025e-99e1-43b9-9980-2200665eb78e\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8ca56a4f-5832-4f91-b4c3-b1b2eff0d212\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/97165faa-5e01-4bba-aace-b9f554b7b45c\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/52d0024d-29c9-4259-9130-2cb09be3e130\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6c1e5606-54ad-4284-8b60-f7bb92372178\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8a7527de-1609-490b-b174-077c285ea782\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/5dc72123-f0be-4144-8fad-9d28adc193b2\",\"moduleSequenceNumber\":668105},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e5bc3afd-570b-4961-b4f3-8a36d4c74ff0\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4b4161b6-6f88-4d6d-adbd-ad435c128648\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/77e421b9-c926-423f-a997-f5d9a49797c5\",\"moduleSequenceNumber\":668082},{\"filename\":\"/cct/maths.js\",\"url\":\"blob:https://danielyxie.github.io/1f3c82a1-24bc-409c-95ec-efef97e60b73\",\"moduleSequenceNumber\":675617}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725330,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { parenthesis } from \\\"/lib/constant/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether the parentheses in the given expression are balanced.  An empty\\n * string does not have parentheses, hence its parentheses are unbalanced.\\n *\\n * @param expression A string consisting of parentheses and other characters.\\n *     The parentheses in this string are possibly unbalanced.  Cannot be an\\n *     empty string.\\n * @return true if the parentheses in the given expression are balanced;\\n *     false otherwise.\\n */\\nfunction is_balanced(expression) {\\n    if (expression.length === 0) {\\n        return bool.INVALID;\\n    }\\n    // The stack data structure is perfect for this problem.\\n    const stack = [];\\n    for (const c of expression) {\\n        // Is this character the starting parenthesis?\\n        if (parenthesis.OPEN === c) {\\n            stack.push(c);\\n            continue;\\n        }\\n        // Is this character the ending parenthesis?\\n        if (parenthesis.CLOSE === c) {\\n            // We have an ending parenthesis, but the stack is empty.\\n            if (stack.length === 0) {\\n                return bool.INVALID;\\n            }\\n            // This ending parenthesis must be matched with an opening\\n            // parenthesis at the top of the stack.\\n            if (parenthesis.OPEN === stack[stack.length - 1]) {\\n                stack.pop();\\n                continue;\\n            }\\n            // We encounter a closing parenthesis, but the top of the stack\\n            // does not contain an opening parenthesis.\\n            return bool.INVALID;\\n        }\\n    }\\n    // Every opening parenthesis should be matched with a closing parenthesis.\\n    // If the stack has zero elements, then the expression is balanced.\\n    return stack.length === 0;\\n}\\n\\n/**\\n * Whether a character represents an opening or closing parenthesis.\\n *\\n * @param c A character.\\n * @return true if the given character is a parenthesis; false otherwise.\\n */\\nfunction is_parenthesis(c) {\\n    assert(c.length === 1);\\n    if (parenthesis.OPEN === c || parenthesis.CLOSE === c) {\\n        return true;\\n    }\\n    return false;\\n}\\n\\n/**\\n * Slice an expression by removing a character at the given index.\\n *\\n * @param expr We want to prune one character from this expression.  The\\n *     expression is represented as a string.\\n * @param i Remove the character expr[i] at index i.\\n * @return A sub-expression obtained by removing from expr the character\\n *     at index i.  We do not modify the given expression.\\n */\\nfunction slice(expr, i) {\\n    // Sanity checks.\\n    assert(expr.length > 0);\\n    assert(i >= 0);\\n    assert(i < expr.length);\\n    // Remove the character at index i.\\n    return expr.slice(0, i) + expr.slice(i + 1, expr.length);\\n}\\n\\n/**\\n * Sanitize parentheses in an expression by removing the minimum number of\\n * parentheses such that the resulting expression has balanced parentheses.\\n * The problem can be considered from a combinatorial perspective.  We\\n * determine the minimum number k of parentheses to remove.  Let n be the\\n * number of parentheses in the expression, including both opening and closing\\n * parentheses.  We find all possible k-combinations of the n parentheses.  For\\n * each k-combination, we remove the corresponding parentheses from the\\n * expression and let the resulting expression be expr.  If expr has balanced\\n * parentheses, then add expr to our set of solutions.  The difficult part of\\n * this method is choosing an algorithm for generating all k-combinations from\\n * a set of n objects.  Some algorithms run in exponential time while others\\n * run in factorial time, which is worse than exponential time.  Refer to these\\n * pages for more details:\\n *\\n * https://medium.com/enjoy-algorithm/find-all-possible-combinations-of-k-numbers-from-1-to-n-88f8e3fad33c\\n * https://stackoverflow.com/questions/127704/algorithm-to-return-all-combinations-of-k-elements-from-n\\n *\\n * A simpler method consists of scanning the expression one character at a\\n * time.  For each index i, if the character at index i is a parenthesis, we\\n * form a new expression by removing the character at index i in the current\\n * expression.  Thus we have an array of new expressions, each constructed by\\n * removing one parenthesis from the current expression.  Test each of these\\n * new expressions to see whether any of them have balanced parentheses.  We\\n * have two cases:\\n *\\n * (1) At least one of the new expressions has balanced parentheses.  Our\\n *     solution set consists of all new expressions that have balanced\\n *     parentheses.\\n * (2) None of the new expressions have balanced parentheses.  Apply the above\\n *     scanning algorithm to these new expressions and repeat the above\\n *     process.\\n *\\n * The above method follows a pattern similar to breath-first search.  As soon\\n * as we encounter a sub-expression that has balanced parentheses, we no longer\\n * need to remove one character to form new sub-expressions.\\n *\\n * @param string An expression containing parentheses and other characters.\\n *     The parentheses in the expression are possibly unbalanced.\\n * @return An array of strings.  Each string has balanced parentheses.  We\\n *     removed the same number of parentheses to result in each balanced\\n *     expression.\\n */\\nfunction sanitize(string) {\\n    assert(string.length > 0);\\n    // Test the expression at the start of this array.\\n    const queue = [];\\n    queue.push(string);\\n    // All expressions and sub-expressions we have considered.\\n    const seen = new Set();\\n    seen.add(string);\\n    // All expressions that have balanced parentheses.\\n    const result = [];\\n    // Whether we need to prune one parenthesis from an expression to\\n    // create a new sub-expression.\\n    let prune = true;\\n    // Use a pattern similar to breath-first search to test expressions and\\n    // their sub-expressions.  Let exprA and exprB be expressions.  We consider\\n    // them as nodes in a directed graph.  If exprB can be obtained by removing\\n    // one parenthesis from exprA, then there is a directed edge from exprA\\n    // to exprB.\\n    while (queue.length > 0) {\\n        // Get the first element of the queue.\\n        const expr = queue.shift();\\n        // Does this expression have balanced parentheses?\\n        if (is_balanced(expr)) {\\n            result.push(expr);\\n            // We have removed enough number of parentheses to result in at\\n            // least one sub-expression having balanced parentheses.  No more\\n            // pruning needed.\\n            prune = false;\\n        }\\n        // Do we need to prune a parenthesis from the current sub-expression?\\n        if (!prune) {\\n            continue;\\n        }\\n        // Prune a parenthesis from the current expression.  Each sub-expression\\n        // is obtained by removing a character at index i, provided that the\\n        // character is a parenthesis.\\n        for (let i = 0; i < expr.length; i++) {\\n            if (!is_parenthesis(expr[i])) {\\n                continue;\\n            }\\n            const sub_expr = slice(expr, i);\\n            if (seen.has(sub_expr)) {\\n                continue;\\n            }\\n            queue.push(sub_expr);\\n            seen.add(sub_expr);\\n        }\\n    }\\n    return result;\\n}\\n\\n/**\\n * Sanitize Parentheses in Expression: Given a string with parentheses and\\n * letters, remove the minimum number of invalid parentheses in order to\\n * validate the string.  If there are multiple minimal ways to validate the\\n * string, provide all of the possible results.  The answer should be provided\\n * as an array of strings.  If it is impossible to validate the string, the\\n * result should be an array with only an empty string.\\n *\\n * This is essentially the balanced brackets problem.  The twist is that we\\n * must remove the minimum number of parentheses to balance the parentheses.\\n *\\n * Usage: run cct/parenthesis.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const expression = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(sanitize(expression), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/parenthesis.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, expression);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/parenthesis.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5ca93156-a081-445e-88fd-27c0f06bfefb\",\"moduleSequenceNumber\":680457},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/066cc9e7-787e-4204-8d16-849c292d000e\",\"moduleSequenceNumber\":680455},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d603e33f-7ead-4ab1-a910-30afa4e5e837\",\"moduleSequenceNumber\":680452},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d516285a-aa5a-41c5-b86d-c72f73dc5659\",\"moduleSequenceNumber\":680450},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/dca81d5b-59bf-422b-a855-1092ed6f3ece\",\"moduleSequenceNumber\":680449},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b76770c9-8b55-4192-9739-d8f8c9f874d6\",\"moduleSequenceNumber\":680448},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/730a37ee-06c2-43c0-8ca8-0aab176edddd\",\"moduleSequenceNumber\":680445},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9bb8e085-6f04-4d96-bf69-b2f8c3c83655\",\"moduleSequenceNumber\":680444},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a19d5365-827e-4884-8e0e-b3a30fad3dc1\",\"moduleSequenceNumber\":680479},{\"filename\":\"/lib/constant/cct.js\",\"url\":\"blob:https://danielyxie.github.io/0325b487-4bb9-4869-ace8-0fb9b89a9bb9\",\"moduleSequenceNumber\":680441},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/59979ebe-f665-4187-85fa-7042054b916b\",\"moduleSequenceNumber\":680440},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e2e382ff-c5b4-4edb-a780-fe9b6ee6fdb9\",\"moduleSequenceNumber\":680457},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2410497e-ac3c-45e4-8c21-ce19d9389b10\",\"moduleSequenceNumber\":680455},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0bf6f9b3-55bc-4542-b6e4-4c28500cc2a2\",\"moduleSequenceNumber\":680452},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9c170b32-b96b-42be-b3a1-872f63a2ae7d\",\"moduleSequenceNumber\":680450},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4f980c3a-7e48-4e05-84a8-299a54d8b472\",\"moduleSequenceNumber\":680449},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c4cf7aaa-5b40-479c-87e9-c5c193a3536e\",\"moduleSequenceNumber\":680448},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/252ebe0a-e473-4730-953a-c7b77dd9546c\",\"moduleSequenceNumber\":680445},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6ab1e7c0-0a0d-423e-92c7-de8e09d49146\",\"moduleSequenceNumber\":680444},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/14a25ce3-1475-440a-9839-efb76a93b7a5\",\"moduleSequenceNumber\":680479},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/167537e4-985f-483b-a694-8a4bf032f8d5\",\"moduleSequenceNumber\":680457},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5eb21687-b221-4b11-90e8-a4ddd905804b\",\"moduleSequenceNumber\":680455},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f44fa5b9-32fc-4661-a72c-619c25d9ea31\",\"moduleSequenceNumber\":680452},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/521f6fcd-7881-4eec-8783-b747013cef08\",\"moduleSequenceNumber\":680450},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/45ba5940-39ce-4ef6-a428-34286706ebdf\",\"moduleSequenceNumber\":680449},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5630805a-98e8-434b-8223-dc21d204e563\",\"moduleSequenceNumber\":680448},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/eb4bf971-27ff-443f-a8bc-553726da15f3\",\"moduleSequenceNumber\":680445},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0ec3d087-87b3-4bd9-ab5b-27c6aa977104\",\"moduleSequenceNumber\":680444},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8232f087-d64f-4e0d-9ebc-50cd3412d931\",\"moduleSequenceNumber\":680479},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e09f573a-67b3-417b-8342-01429f687198\",\"moduleSequenceNumber\":680450},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/c96ef8d3-1206-4a31-ba7b-0bfaf569fbb7\",\"moduleSequenceNumber\":680461},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4e1a911b-e553-4582-82ff-d9bacb698a2f\",\"moduleSequenceNumber\":680450},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ad849063-1238-4670-970b-acc85995c02c\",\"moduleSequenceNumber\":680448},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/513bac56-79f8-4fc0-8509-d9420362d3b5\",\"moduleSequenceNumber\":680438},{\"filename\":\"/cct/parenthesis.js\",\"url\":\"blob:https://danielyxie.github.io/91c34a30-ba40-455b-ad5a-10194d4ee6f4\",\"moduleSequenceNumber\":683364}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725331,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The largest prime factor of a positive integer.\\n *\\n * @param n A positive integer greater than 1.\\n * @return The largest prime factor of the given integer.\\n */\\nfunction max_prime_factor(n) {\\n    // Sanity checks.\\n    assert(n > 1);\\n    assert(Number.isSafeInteger(n));\\n    // Determine the largest prime factor.\\n    let k = Number(n);\\n    let p = k;\\n    // Divide n by the prime 2.\\n    while (k % 2 === 0) {\\n        k /= 2;\\n        p = 2;\\n    }\\n    // Use trial division to divide n by increasingly larger primes.  Start with\\n    // the next higher prime, i.e. 3.\\n    let i = 3;\\n    const max = Math.ceil(Math.sqrt(n));\\n    while (i <= max) {\\n        if (i > Math.sqrt(k)) {\\n            return k;\\n        }\\n        // The number i is an odd integer.  If i is a factor of k, then i is the\\n        // highest prime factor of n so far.\\n        while (k % i === 0 && k > 1) {\\n            k /= i;\\n            p = i;\\n        }\\n        i += 2;\\n    }\\n    return p;\\n}\\n\\n/**\\n * Find Largest Prime Factor: Given a number, find its largest prime\\n * factor.  A prime factor is a factor that is a prime number.\\n *\\n * Determine the largest prime factor of an integer.  See Wikipedia for\\n * more details:\\n *\\n * https://en.wikipedia.org/wiki/Integer_factorization\\n *\\n * Usage: run cct/prime.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const n = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(max_prime_factor(n), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/prime.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, n);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/prime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f0ae45a4-f902-42f9-9a10-a55ae01d7edd\",\"moduleSequenceNumber\":639173},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8a907a0a-dc25-441e-9055-aed4afdbfe9c\",\"moduleSequenceNumber\":639171},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f32831ca-52ec-42d3-9a97-f630e1f7e39f\",\"moduleSequenceNumber\":639168},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6556a6e6-d3ee-4bb7-8427-f0aa3de9f58e\",\"moduleSequenceNumber\":639166},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e9b5544d-f7e4-4c46-a040-a31d944cc73b\",\"moduleSequenceNumber\":639165},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/617dc4d0-2fec-4a1f-8f1a-77dc001316d1\",\"moduleSequenceNumber\":639164},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7e307e0e-59a4-4bc9-a337-98c0a3be803f\",\"moduleSequenceNumber\":639161},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8ffefe1e-55f9-40cd-a782-1ea0b4a4cb8e\",\"moduleSequenceNumber\":639160},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/55f35a2a-798d-4e10-b011-c68516bd6886\",\"moduleSequenceNumber\":639195},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2908d822-2c09-405e-8d2d-0b5868d11940\",\"moduleSequenceNumber\":639173},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3c781135-813d-4329-9cb3-d60c78ecbf51\",\"moduleSequenceNumber\":639171},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4fcfb8bc-3950-4c46-83c1-8d44a18db63d\",\"moduleSequenceNumber\":639168},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8c69cc9c-1d31-41bb-97de-df4d085fc0d5\",\"moduleSequenceNumber\":639166},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5ccb4b7f-8637-497d-81c6-43708ce1de37\",\"moduleSequenceNumber\":639165},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/46f250c6-493c-40a6-b0d0-fd8966ac6652\",\"moduleSequenceNumber\":639164},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/780db843-3d64-43c9-bf49-655145888f4c\",\"moduleSequenceNumber\":639161},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7df47f81-299d-4900-ad5e-7c8486ef090a\",\"moduleSequenceNumber\":639160},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8fd131e0-b6b7-4212-88bb-328a8fe69235\",\"moduleSequenceNumber\":639195},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/06f26537-81e3-465a-983f-482e10a4878b\",\"moduleSequenceNumber\":639173},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5599908e-236e-40eb-80a5-a1f2327049fd\",\"moduleSequenceNumber\":639171},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/17830a2f-b7b6-4cbe-911a-ad286e15ffa6\",\"moduleSequenceNumber\":639168},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d4f6921c-e7df-48c0-ab41-829b7a0b3ac1\",\"moduleSequenceNumber\":639166},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/53e216fa-126f-40a7-b6db-dbbd46981f58\",\"moduleSequenceNumber\":639165},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ca492114-ce91-44ff-9b59-6061e2926795\",\"moduleSequenceNumber\":639164},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/853edd4c-68c5-4927-a193-b5000d6f7ee6\",\"moduleSequenceNumber\":639161},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0f937266-3ed8-4392-bf61-ef679f5157d4\",\"moduleSequenceNumber\":639160},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/91e64d01-a736-42f0-b09e-fe34abc0b6a7\",\"moduleSequenceNumber\":639195},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c5caee3b-f62a-4ddf-9d8b-4d6388de895e\",\"moduleSequenceNumber\":639166},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/fc029538-0c77-4255-a6ef-b64b2dc2a430\",\"moduleSequenceNumber\":639177},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1728253d-45c9-4958-940f-639278877d0d\",\"moduleSequenceNumber\":639166},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/478b0540-14d6-481d-834f-8207873d0fb6\",\"moduleSequenceNumber\":639164},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/9f1fba9a-e62b-4edf-997b-dac7980066ac\",\"moduleSequenceNumber\":639154},{\"filename\":\"/cct/prime.js\",\"url\":\"blob:https://danielyxie.github.io/156b6666-a6a3-4ef7-a72d-901f3d37dd86\",\"moduleSequenceNumber\":645663}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725332,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Encode a string that consists of the same character.\\n *\\n * @param c A character.\\n * @param n The run-length of the given character.\\n * @return A run-length encoding of the given character.\\n */\\nfunction encode(c, n) {\\n    assert(c.length === 1);\\n    assert(n > 0);\\n    let k = n;\\n    const max = 9;\\n    if (k <= max) {\\n        return `${k}${c}`;\\n    }\\n    // A run-length of more than 9 is split into multiple runs.\\n    const s = [];\\n    do {\\n        s.push(`${max}${c}`);\\n        k -= max;\\n    } while (k > max);\\n    s.push(`${k}${c}`);\\n    return s.join(\\\"\\\");\\n}\\n\\n/**\\n * The run-length encoding (RLE) of a string.\\n *\\n * @param string We want to compress this string by means of run-length\\n *     encoding.\\n * @return The RLE of the given string.\\n */\\nfunction rle(string) {\\n    const str = string;\\n    let n = 1;\\n    let c = str[0];\\n    const e = [];\\n    const lastidx = string.length - 1;\\n    for (let i = 1; i < str.length; i++) {\\n        // Is this character the same as the previous character?\\n        if (c === str[i]) {\\n            n++;\\n            // Are we at the end of the string?\\n            if (i === lastidx) {\\n                e.push(encode(c, n));\\n                break;\\n            }\\n            continue;\\n        }\\n        // The current character is different from the previous character.\\n        e.push(encode(c, n));\\n        n = 1;\\n        c = str[i];\\n        // Are we at the end of the string?\\n        if (i === lastidx) {\\n            e.push(encode(c, n));\\n        }\\n    }\\n    return e.join(\\\"\\\");\\n}\\n\\n/**\\n * Compression I: RLE Compression: Run-length encoding (RLE) is a data\\n * compression technique which encodes data as a series of runs of a repeated\\n * single character.  Runs are encoded as a length, followed by the character\\n * itself.  Lengths are encoded as a single ASCII digit.  Runs of 10 characters\\n * or more are encoded by splitting them into multiple runs.  You are given a\\n * string as input.  Encode it using run-length encoding with the minimum\\n * possible output length.\\n *\\n * Usage: run cct/rle.js [cct] [hostname]\\n *\\n * @param ns\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const string = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(rle(string), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/rle.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, string);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/rle.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2dd9273e-6277-478b-9520-0cac206a82d6\",\"moduleSequenceNumber\":693069},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6c5c4ce6-e8fb-49e0-8fa9-bf34bcf2de03\",\"moduleSequenceNumber\":693067},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4a5ede29-3f91-4fe7-a0ed-e5cdcc18c48f\",\"moduleSequenceNumber\":693064},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e68e3912-40af-4c87-87bc-e2a1f236d42f\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d980c2d2-d0e2-4bd6-82d4-1b256a1484f5\",\"moduleSequenceNumber\":693061},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/30ef1400-73c3-4cf2-ac1e-816482a0f4a6\",\"moduleSequenceNumber\":693060},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/814de77d-94c5-4308-b1c5-b35c25c0fca1\",\"moduleSequenceNumber\":693057},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dbf3936d-b519-4406-87b8-694b45132259\",\"moduleSequenceNumber\":693056},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1f9829d5-c5a9-45cf-ae04-5d71363e3ed2\",\"moduleSequenceNumber\":693091},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cf0b30a3-caa6-4ca8-bd72-2849e6a162d6\",\"moduleSequenceNumber\":693069},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b95dcb5e-1000-4849-901c-3dd6392a03e5\",\"moduleSequenceNumber\":693067},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/108f509b-3759-4e90-9a0e-c4be90a5ba08\",\"moduleSequenceNumber\":693064},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c848e1be-448d-4fd7-8e92-9f3cbf2c29c5\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/16828240-fdd6-49d6-b8fc-aefb56db5060\",\"moduleSequenceNumber\":693061},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7d87acc6-c0f2-4c31-a402-d681626ec683\",\"moduleSequenceNumber\":693060},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4352f406-69d7-4c84-b601-7172a26f6f0a\",\"moduleSequenceNumber\":693057},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/158fd687-5779-4e85-8ed8-c5634a0e6ba1\",\"moduleSequenceNumber\":693056},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/94cd4a85-8bcb-4275-8231-ffd6a4c28115\",\"moduleSequenceNumber\":693091},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ca424588-07f6-4870-965f-99cdd691059b\",\"moduleSequenceNumber\":693069},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5a28d80d-09b5-4428-87bc-01bc0c68ca34\",\"moduleSequenceNumber\":693067},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/423e10a3-6892-473f-b6e6-05c139453704\",\"moduleSequenceNumber\":693064},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9fced90d-63bf-4687-ba9b-0fc1f43aba12\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c2c2956e-92b9-422c-8189-2555476dd9d2\",\"moduleSequenceNumber\":693061},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/aeca8dad-feaa-4f37-9650-bd84b3198577\",\"moduleSequenceNumber\":693060},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a5c40e9e-fac7-4286-b3df-132d5e629c9c\",\"moduleSequenceNumber\":693057},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9c12476e-0b2b-4397-9ca6-2f89e1ed19c6\",\"moduleSequenceNumber\":693056},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e34b5f9a-019c-484c-82ff-d3c8574add2f\",\"moduleSequenceNumber\":693091},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/75f0fcc2-cead-4567-8f54-cecd8b444036\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/24e4deb0-5929-470a-ab03-0481bd06a446\",\"moduleSequenceNumber\":693073},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1dc9b91f-f212-41c7-aec9-57785e0a4295\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f6b524ba-6c9b-4b6b-ae31-e3dc5fb15669\",\"moduleSequenceNumber\":693060},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/f1e2cd55-ffc4-46d6-a310-81c4c189f64f\",\"moduleSequenceNumber\":693050},{\"filename\":\"/cct/rle.js\",\"url\":\"blob:https://danielyxie.github.io/9d52bfdc-835a-4744-be6d-d54d34f0bf46\",\"moduleSequenceNumber\":695753}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725333,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { cct } from \\\"/lib/constant/cct.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\n\\n/**\\n * Do we have enough free RAM on the home server to run the given script?\\n *\\n * @param ns The Netscript API.\\n * @param script We want to run this script on our home server.\\n * @return true if enough free RAM is available to execute the script;\\n *     false otherwise.\\n */\\nfunction can_run_script(ns, script) {\\n    const server = new Server(ns, home);\\n    return server.can_run_script(script);\\n}\\n\\n/**\\n * Solve a coding contract.\\n *\\n * @param ns The Netscript API.\\n * @param fname The file name of the coding contract.\\n * @param host The hostname of the server on which the coding contract is\\n *     located.\\n */\\nfunction solve(ns, fname, host) {\\n    const nthread = 1;\\n    const type = ns.codingcontract.getContractType(fname, host);\\n    // Determine the type of the coding contract and set the appropriate\\n    // solution script.\\n    let script = \\\"\\\";\\n    const prefix = \\\"/cct/\\\";\\n    switch (type) {\\n        case \\\"Algorithmic Stock Trader I\\\":\\n            script = `${prefix}trader.js`;\\n            break;\\n        case \\\"Algorithmic Stock Trader II\\\":\\n            script = `${prefix}trader2.js`;\\n            break;\\n        case \\\"Algorithmic Stock Trader III\\\":\\n            script = `${prefix}trader3.js`;\\n            break;\\n        case \\\"Algorithmic Stock Trader IV\\\":\\n            script = `${prefix}trader4.js`;\\n            break;\\n        case \\\"Array Jumping Game\\\":\\n            script = `${prefix}jump.js`;\\n            break;\\n        case \\\"Array Jumping Game II\\\":\\n            script = `${prefix}jump2.js`;\\n            break;\\n        case \\\"Compression I: RLE Compression\\\":\\n            script = `${prefix}rle.js`;\\n            break;\\n        case \\\"Compression II: LZ Decompression\\\":\\n            script = `${prefix}lzd.js`;\\n            break;\\n        case \\\"Compression III: LZ Compression\\\":\\n            script = `${prefix}lzc.js`;\\n            break;\\n        case \\\"Encryption I: Caesar Cipher\\\":\\n            script = `${prefix}caesar.js`;\\n            break;\\n        case \\\"Encryption II: Vigenère Cipher\\\":\\n            script = `${prefix}vigenere.js`;\\n            break;\\n        case \\\"Find All Valid Math Expressions\\\":\\n            script = `${prefix}maths.js`;\\n            break;\\n        case \\\"Find Largest Prime Factor\\\":\\n            script = `${prefix}prime.js`;\\n            break;\\n        case \\\"Generate IP Addresses\\\":\\n            script = `${prefix}ip.js`;\\n            break;\\n        case \\\"HammingCodes: Encoded Binary to Integer\\\":\\n            script = `${prefix}hamming2.js`;\\n            break;\\n        case \\\"HammingCodes: Integer to Encoded Binary\\\":\\n            script = `${prefix}hamming.js`;\\n            break;\\n        case \\\"Merge Overlapping Intervals\\\":\\n            script = `${prefix}interval.js`;\\n            break;\\n        case \\\"Minimum Path Sum in a Triangle\\\":\\n            script = `${prefix}triangle.js`;\\n            break;\\n        case \\\"Proper 2-Coloring of a Graph\\\":\\n            script = `${prefix}bipartite.js`;\\n            break;\\n        case \\\"Sanitize Parentheses in Expression\\\":\\n            script = `${prefix}parenthesis.js`;\\n            break;\\n        case \\\"Shortest Path in a Grid\\\":\\n            script = `${prefix}grid3.js`;\\n            break;\\n        case \\\"Spiralize Matrix\\\":\\n            script = `${prefix}spiral.js`;\\n            break;\\n        case \\\"Subarray with Maximum Sum\\\":\\n            script = `${prefix}subarray.js`;\\n            break;\\n        case \\\"Total Ways to Sum\\\":\\n            script = `${prefix}sum.js`;\\n            break;\\n        case \\\"Total Ways to Sum II\\\":\\n            script = `${prefix}sum2.js`;\\n            break;\\n        case \\\"Unique Paths in a Grid I\\\":\\n            script = `${prefix}grid.js`;\\n            break;\\n        case \\\"Unique Paths in a Grid II\\\":\\n            script = `${prefix}grid2.js`;\\n            break;\\n        default:\\n            script = \\\"\\\";\\n            break;\\n    }\\n    // No script to run, possibly because there are no coding contracts on any\\n    // of the world servers.\\n    if (script.length < 1) {\\n        return;\\n    }\\n    // Run the appropriate script to solve the coding contract.\\n    if (can_run_script(ns, script)) {\\n        ns.exec(script, home, nthread, fname, host);\\n        return;\\n    }\\n    // prettier-ignore\\n    const err_msg = `${host\\n    }: ${\\n        fname\\n    }: No free RAM to run ${\\n        script\\n    } on server ${\\n        home}`;\\n    ns.print(err_msg);\\n}\\n\\n/**\\n * Find coding contracts on world servers.  This script essentially searches\\n * the network of world servers to find coding contracts.\\n *\\n * Usage: run cct/solver.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getServerUsedRam\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n\\n    const server = network(ns);\\n    server.push(home);\\n    // Continuously search for coding contracts.  Solve a coding contract,\\n    // provided we have a solution script.\\n    for (;;) {\\n        for (const s of server) {\\n            const file = ns.ls(s, cct.SUFFIX);\\n            // No coding contracts on this server.\\n            if (file.length < 1) {\\n                continue;\\n            }\\n            // Solve all coding contracts on this server.\\n            file.forEach((f) => solve(ns, f, s));\\n        }\\n        await ns.sleep(cct.UPDATE_TIME);\\n    }\\n}\\n\",\"filename\":\"/cct/solver.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e225f24f-f0e5-40cf-bbe8-cafdd7967c2a\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fa2298eb-0078-49db-801e-099c41e6be7b\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c6aef62f-eb3b-4ff6-bd38-3b00987428db\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c906504d-67b6-40b0-9e2b-38b7f311db7b\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/da399953-3dbe-4ae2-916c-4efb275b2286\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/805d0464-bf9e-43f0-90d6-42f4725b4000\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/166280d7-9f18-45e9-8d88-8cca344b906a\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a1985f25-62e9-4da5-bd45-5d67842816e4\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e0244d08-fcce-4f01-88bc-11478ec0b5c2\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d95ebd68-1d6a-4773-8084-357b540d6507\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f2291da2-492e-4b02-a0ed-a58f6615a6fc\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/756f543d-871c-42dc-a238-a6ccb7af59a7\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/c99411e3-351b-4591-9053-8fce470cedf7\",\"moduleSequenceNumber\":724840},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/20129671-a9bf-46fa-b71f-28e60829d5c7\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8a73df7a-462d-4b55-80c8-45a7de737dd0\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/58fd63ce-63c5-4cf5-b06e-27df18affd13\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7bc9ae2f-0a56-4a1d-9d70-6d5a15adb162\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/da30da73-9d3e-4c6f-9125-a117b08f4f7f\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/34b5212c-a2ce-44fe-ace7-7684c5910f5a\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/edb036bf-c293-4a91-8c0d-4a7c1ad0df1b\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/20d493a0-38ae-4e3c-9583-60d87308d3fe\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4b263148-72b9-4449-a3da-58751366335b\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c94a42ef-a72e-4c4b-858a-76e0242906fd\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6f6dd2f2-c3ab-4704-a573-8053acc67202\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/f864b8d3-8f0d-4abb-9a50-84f205ef00e6\",\"moduleSequenceNumber\":724836},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c137420c-76bd-49d3-9d0b-f5b2c08ae427\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/cct.js\",\"url\":\"blob:https://danielyxie.github.io/f036d511-1bd9-452f-8ab0-95e9dc08d1ba\",\"moduleSequenceNumber\":724814},{\"filename\":\"/cct/solver.js\",\"url\":\"blob:https://danielyxie.github.io/97bdc6f6-6218-4646-9041-daf411b94621\",\"moduleSequenceNumber\":724895}],\"dependents\":[],\"ramUsage\":15.35,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725334,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getContractType\",\"cost\":5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    matrix_to_string,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Trace out a ring inside a 2-D matrix.\\n *\\n * @param m A 2-D matrix, represented as an array of arrays.\\n * @param [tlr, tlc] The coordinates of the top-left element of the ring.\\n *     \\\"r\\\" and \\\"c\\\" mean row and column, respectively.\\n * @param [brr, brc] The coordinates of the bottom-right element of the ring.\\n *     \\\"r\\\" and \\\"c\\\" mean row and column, respectively.\\n */\\nfunction ring(m, tlr, tlc, brr, brc) {\\n    // Top-left to top-right.\\n    let array = [];\\n    let elem = [];\\n    assert(tlc <= brc);\\n    array = m[tlr];\\n    elem = Array.from(array.slice(tlc, brc + 1));\\n    // Is this a matrix of one row?\\n    if (tlr === brr) {\\n        return elem;\\n    }\\n    // Top-right to bottom-right.\\n    assert(tlr < brr);\\n    for (let r = tlr + 1; r <= brr; r++) {\\n        elem.push(m[r][brc]);\\n    }\\n    // Do we have a matrix of one column?\\n    if (tlc === brc) {\\n        return elem;\\n    }\\n    // Bottom-right to bottom-left.\\n    assert(tlc < brc);\\n    array = m[brr];\\n    array = Array.from(array.slice(tlc, brc));\\n    elem = elem.concat(array.reverse());\\n    // Bottom-left to top-left.\\n    array = [];\\n    for (let r = tlr + 1; r < brr; r++) {\\n        array.push(m[r][tlc]);\\n    }\\n    elem = elem.concat(array.reverse());\\n    return elem;\\n}\\n\\n/**\\n * The elements of a 2-D matrix in spiral order, going in clockwise direction.\\n *\\n * @param m A 2-D matrix, represented as an array of arrays.\\n * @return An array representing the elements of the matrix in spiral order.\\n */\\nfunction spiral(m) {\\n    // Sanity checks.\\n    assert(m.length > 0);\\n    const array = m[0];\\n    const nrow = m.length;\\n    const ncol = array.length;\\n    for (const a of m) {\\n        // Ensure each row has the same number of elements.\\n        assert(a.length > 0);\\n        assert(ncol === a.length);\\n    }\\n    // The spiral order of a matrix.\\n    let tlr = 0; // top-left row\\n    let tlc = tlr; // top-left column\\n    let brr = nrow - 1; // bottom-right row\\n    let brc = ncol - 1; // bottom-right column\\n    let elem = [];\\n    while (tlr <= brr && tlc <= brc) {\\n        elem = elem.concat(ring(m, tlr, tlc, brr, brc));\\n        tlr++;\\n        tlc++;\\n        brr--;\\n        brc--;\\n    }\\n    return elem;\\n}\\n\\n/**\\n * Spiralize Matrix: Given an array of array of numbers representing a 2-D\\n * matrix, return the elements of that matrix in clockwise spiral order.\\n *\\n * Output the elements of a 2-D matrix in spiral order, going in clockwise\\n * direction.\\n *\\n * Usage: run cct/spiral.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const matrix = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(spiral(matrix), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/spiral.txt\\\";\\n        const data = matrix_to_string(matrix);\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/spiral.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/44603089-42bd-4470-bff0-1219d80c24e0\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2199f753-caf2-4776-9c75-e339e2cffa1c\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a6085677-a3c3-4103-b215-44bd206aa058\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6d6b0566-07bd-49d7-b089-82d46b765c54\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bff19546-0744-44e8-b018-29e0ab67555d\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4f521261-31cd-40fe-8895-43f931f26689\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ef3875f2-01bb-4cb1-8b7c-a098c3d15278\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f0804077-b066-483c-9672-eb001b5abe02\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/676572c4-530b-45ef-a9e1-fdfc1f0e7ea9\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1319335c-2070-4551-8c69-f6872152bba3\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3facda44-0170-40c2-b84f-192013719372\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/54667246-9704-4d2a-a23d-39f545b4f5ac\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7ac84218-8a8f-4afc-bb83-2bf226fdc143\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/aa0ec364-5ce6-4139-8a25-ff56d8f14dcf\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/876598bc-900e-406d-9f7c-b6cf9095ef6b\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/98f1d1bb-d7f4-46eb-af29-becbaab56436\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/de668c7b-5bf3-46c0-b1bc-cbdb92be1006\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/44f5ac03-c633-4c09-98be-5dc18412952b\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7abb8741-bafc-4de8-9439-d2ca08abd42e\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/672df367-3045-45c6-959c-f4bf5b8052fe\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e7adc36d-c1ba-4d82-bbd1-86fb824c9912\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/929f23e1-504d-4b3d-996a-3ef46f9b0432\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/eee94dda-3142-445d-b4ed-51a94fd552ba\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/445259dc-e5ff-4811-91be-8c06ce6ef1f0\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fc7eb28c-8ab3-4872-bcca-2930926b6ca7\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6608441d-094c-4c42-8518-e19931bbe976\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ecdd2126-ba93-464d-ab07-09a61869cdbd\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6bf6a713-4dab-4e89-8fe4-72b18a4a695f\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/b7a3fcab-2137-4f1e-a633-8ab6310a5562\",\"moduleSequenceNumber\":700993},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ba6716fe-7bbf-4be5-91a9-b3d898a580dc\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/34f06cfc-6b21-4e36-832f-5a05fc4a504d\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/239638f4-877e-430c-8af3-037dfd7bf39b\",\"moduleSequenceNumber\":700970},{\"filename\":\"/cct/spiral.js\",\"url\":\"blob:https://danielyxie.github.io/f3051042-446c-40bc-b9b8-4f5541a5f7dd\",\"moduleSequenceNumber\":702541}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725335,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The largest sum of a non-empty, contiguous subarray.\\n *\\n * @param array An array of integers.\\n * @return The largest sum of any non-empty, contiguous subarray of the given\\n *     array.\\n */\\nfunction subarray_sum(array) {\\n    // Use Kadane's algorithm.\\n    assert(array.length > 0);\\n    let best = Number.NEGATIVE_INFINITY;\\n    let current = 0;\\n    for (const n of array) {\\n        current = Math.max(n, current + n);\\n        best = Math.max(best, current);\\n    }\\n    return best;\\n}\\n\\n/**\\n * Subarray with Maximum Sum: Given an array of integers, find the\\n * contiguous subarray (containing at least one number) which has the\\n * largest sum and return that sum.\\n *\\n * Determine a non-empty, contiguous subarray that has the largest sum\\n * possible.  See Wikipedia for more details:\\n *\\n * https://en.wikipedia.org/wiki/Maximum_subarray_problem\\n *\\n * Usage: run cct/subarray.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(subarray_sum(array), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/subarray.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/subarray.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5ae53f76-bc70-46bb-a776-6d489e33126a\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/615384e6-ab09-4ed9-a24a-e4df18d24705\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/304d79d3-44ae-4fb8-a9a3-e9b122d4223d\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6f4ff743-d56f-4c56-b352-c3dd870dfa47\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b13882c6-0220-4706-b310-4f924ba3f372\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c73756c6-741a-45d7-95ef-7ca2f318bcda\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/cd92f03d-1e36-4d9b-b3cd-67b9ce315d55\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3778e1b2-6d8b-46d4-968d-aeb535c2a485\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f6cb1144-0aa2-44f3-969c-9a0472856d73\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a86f15c6-99a6-4866-b40f-88c482484b3c\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/635483eb-6aef-4c26-b3d6-a79648d82f5b\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/32eb0fd3-d95a-4539-a9ca-ca86926fccc8\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5fb92b19-112a-4fda-9fac-aa1f3bb54ad8\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a0f5b6af-ca7b-4ad7-b9aa-d983938579fe\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0a4cc857-d9a8-4827-8dee-eb8c8a59195b\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2a5b5b14-556f-4d65-b262-0ef06097e6b7\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/65782428-6b39-4621-b4b4-abae518c4157\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5aa9afae-c0cc-454e-861c-79f949b96675\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/eb55af95-0852-46d6-a029-34ef57259f5b\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1a65a2c6-e37d-49ea-b075-08a3f4e1c7a0\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/90ea2059-e152-4db1-8586-e66ae876d4ea\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d529df12-bec4-4a4d-a3e2-feccc39eddd1\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e23167ca-97cd-40ca-9e15-e6b338db6d2a\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/dd50d126-6576-436d-8359-c135b6a9e9f3\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9ac22c81-030d-4426-8686-645c80e6afe5\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9f7a691b-6b96-4430-aaf2-b5883c64858f\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/588bd8d6-2f25-478f-b1cf-389a7e05a09d\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d0d8b518-b887-4098-8ea3-f90a90c33e9b\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/44c56352-3d8c-47b1-a76d-9c82d34c086a\",\"moduleSequenceNumber\":647536},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/be0c8f55-8bae-4965-87d1-fa8c443f88da\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7fcf0bd8-5a76-4d18-baba-90ad312b585a\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/fbad515c-e7d2-495a-91f1-9ad8e20dc043\",\"moduleSequenceNumber\":647513},{\"filename\":\"/cct/subarray.js\",\"url\":\"blob:https://danielyxie.github.io/b3209e2e-0cdb-4f2c-bdac-3ef473829c8a\",\"moduleSequenceNumber\":652847}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725336,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The number of possible partitions of a non-negative integer n.  That is,\\n * the number of ways to write n as a sum of positive integers.  In number\\n * theory, the partition function p(n) solves the problem.  One solution is to\\n * use a recurrence relation due to Euler, derived from using Euler's pentagonal\\n * number theorem.  The recurrence relation is\\n *\\n * p(n) := \\\\sum_{k \\\\in PP} (-1)^{k-1} \\\\{ A + B \\\\}\\n *\\n * where\\n *\\n * A := p(n - k(3k - 1) / 2)\\n * B := p(n - k(3k + 1) / 2)\\n * PP := The set of all positive integers.\\n *\\n * In practice, we only sum up to and including k := n.  Another way to\\n * calculate p(n) is to note that p(n) is the coefficient of z^n in the\\n * generating function\\n *\\n * P(z) = \\\\prod_{i=1}^n \\\\frac{1}{1 - z^i}\\n *\\n * Calculating the coefficient of z^n is straightforward.  Refer to the\\n * following for more details:\\n *\\n * [1] https://en.wikipedia.org/wiki/Pentagonal_number_theorem\\n * [2] On Euler's Pentagonal Theorem\\n *     https://www.mathpages.com/home/kmath623/kmath623.htm\\n * [3] John A. Ewell.  Recurrences for the Partition Function and Its Relatives.\\n *     Rocky Mountain Journal of Mathematics, volume 34, issue 2, pp.619--627,\\n *     2004.\\n *     DOI: 10.1216/rmjm/1181069871\\n *\\n * @param n We want to determine the number of partitions of this number.\\n *     Must be a non-negative integer.\\n * @return Possible values:\\n *     (1) 1 if n = 0.\\n *     (2) 0 if n < 0.\\n *     (3) p(n)\\n */\\nfunction partition(n) {\\n    assert(n >= 0);\\n    if (n === 0) {\\n        return 1;\\n    }\\n    // Use an array of n + 1 elements because we also need to take care of the\\n    // base case.\\n    const cache = Array(n + 1).fill(0);\\n    cache[0] = 1;\\n    for (let i = 1; i <= n; i++) {\\n        for (let j = i; j <= n; j++) {\\n            cache[j] += cache[j - i];\\n        }\\n    }\\n    return cache[n];\\n}\\n\\n/**\\n * Total Ways to Sum: Given a number, how many different distinct ways can\\n * that number be written as a sum of at least two positive integers?\\n *\\n * This is the problem of integer partition, in particular calculating\\n * the partition number of a positive integer.  The problem asks for a\\n * partition that has at least two parts, so we must subtract 1 from\\n * the partition number.  See Wikipedia for more details:\\n *\\n * https://en.wikipedia.org/wiki/Partition_(number_theory)\\n * https://en.wikipedia.org/wiki/Partition_function_(number_theory)\\n *\\n * Use the method of generating function.\\n *\\n * Usage: run cct/sum.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const n = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(partition(n) - 1, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/sum.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, n);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/sum.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/41416ec5-532b-4808-917b-0e487ac82a66\",\"moduleSequenceNumber\":715963},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6011e0d5-cf80-4e7d-a0e8-d478e8af36b3\",\"moduleSequenceNumber\":715961},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b2645757-0444-408d-a039-55053986153b\",\"moduleSequenceNumber\":715958},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e30d1e53-74ce-4e03-9336-6eaab9262aa2\",\"moduleSequenceNumber\":715956},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/881e9966-a07b-450e-ac1b-ac8d8c0e6816\",\"moduleSequenceNumber\":715955},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/be147585-096a-45d4-89d9-481d088c23f3\",\"moduleSequenceNumber\":715954},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/efeb270a-a5d8-42cb-818b-21a2431eaac6\",\"moduleSequenceNumber\":715951},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a115a711-008d-480c-956c-61b97ecaeb26\",\"moduleSequenceNumber\":715950},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2f045f46-3065-49a0-9ff7-63d10f669aa5\",\"moduleSequenceNumber\":715985},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/10f7bfcc-0090-4d44-81a6-2f992ade7a51\",\"moduleSequenceNumber\":715963},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fbf8c91b-9987-4550-8740-e636e3590eec\",\"moduleSequenceNumber\":715961},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2e28f0c9-5a3b-45ec-849a-f46d40f3abbc\",\"moduleSequenceNumber\":715958},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/02a66fa8-8788-4e62-a063-e4b4c1295fe2\",\"moduleSequenceNumber\":715956},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/eceea999-1b7a-4f3c-b8b0-b87993afe0b0\",\"moduleSequenceNumber\":715955},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/53a079b8-e545-42bb-919e-473d8b5c81aa\",\"moduleSequenceNumber\":715954},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/564f7082-8568-4c57-b0cc-0247583344e8\",\"moduleSequenceNumber\":715951},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b518b64d-2643-4b91-b465-8edd8e8f3aa9\",\"moduleSequenceNumber\":715950},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c079f748-6ff2-425e-8f8b-a46f684ce60a\",\"moduleSequenceNumber\":715985},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/759dd373-d1aa-470f-b4a5-466193a754df\",\"moduleSequenceNumber\":715963},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f2aab276-7f0b-4d58-a133-062a96b9c815\",\"moduleSequenceNumber\":715961},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/59646cd6-f3ba-4cd1-80c5-51d0e08e9678\",\"moduleSequenceNumber\":715958},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2eb6e288-1a91-46fa-afd0-2a155ea9dd16\",\"moduleSequenceNumber\":715956},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/43642b3b-5444-4756-ab58-3edbe132720c\",\"moduleSequenceNumber\":715955},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2aa49e05-b09a-4738-935a-8fb27c8bb896\",\"moduleSequenceNumber\":715954},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a0932974-c4f7-4efe-8301-1603e2c4b01a\",\"moduleSequenceNumber\":715951},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/92617e7c-4098-4d74-8e88-cb337e225b06\",\"moduleSequenceNumber\":715950},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fdda63d3-738d-4552-a2ed-c5acc0b16956\",\"moduleSequenceNumber\":715985},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0c2aeee9-450f-40eb-aa7b-505d1f0db589\",\"moduleSequenceNumber\":715956},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/165aae09-4a30-4235-b46a-5c1146b3f67a\",\"moduleSequenceNumber\":715967},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2593ca90-7636-47e0-b7d0-6ba974088272\",\"moduleSequenceNumber\":715956},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6baaffdd-3cc9-4290-ac9c-183cb9672e43\",\"moduleSequenceNumber\":715954},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/e2d4c8f3-c41b-47f6-bb6b-4f1670783952\",\"moduleSequenceNumber\":715944},{\"filename\":\"/cct/sum.js\",\"url\":\"blob:https://danielyxie.github.io/36809724-6c8a-4626-857f-f254b287335f\",\"moduleSequenceNumber\":717941}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725337,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The number of ways to change n using coins in the given set of denominations.\\n *\\n * @param n We want to partition this number.  Must be a positive integer.\\n * @param denom The array of denominations.  An array of positive integers to\\n *     use to partition n.  Elements of the array are unique.\\n * @return The number of ways to change n using the given denominations.\\n */\\nfunction coin_change(n, denom) {\\n    assert(n > 0);\\n    assert(denom.length > 0);\\n    // Sort the array of denominations in ascending order.\\n    let denomination = Array.from(new Set(denom));\\n    denomination = MyArray.sort_ascending(denomination);\\n    // Remove any coin value higher than n.\\n    let i = denomination.length - 1;\\n    while (n < denomination[i]) {\\n        denomination.pop();\\n        i = denomination.length - 1;\\n    }\\n    return partition(n, denomination);\\n}\\n\\n/**\\n * The number of ways to partition an integer using only integers from a given\\n * set.  Let n be our target sum and let our m denominations be\\n * D := [d_0, d_1, ..., d_{m-1}], where d_i < d_j whenever i < j.  We make the\\n * following assumptions:\\n *\\n * (1) n >= 0.\\n * (2) Each d_i > 0.\\n * (3) Each d_i <= n.\\n *\\n * The problem has the following recursive interpretation.  Let C(n) be the\\n * number of ways to partition n using a denomination d.  Then we have the\\n * recurrence relation\\n *\\n * C(n) := C(n) + C(n - d)\\n *\\n * We have the base case C(0) := 1 because there is only one way to make a\\n * change for zero, namely choose no coins at all.  Refer to the following page\\n * for more details:\\n *\\n * https://www.educative.io/m/coin-changing-problem\\n *\\n * @param n We want to partition this integer.\\n * @param denom The array of denominations.  An array of positive integers to\\n *     use to partition n.  Elements of the array are unique and the array is\\n *     assumed to be sorted in ascending order.\\n * @return The number of ways to partition n using only integers from\\n *     the denomination array.\\n */\\nfunction partition(n, denom) {\\n    // Use an array of n + 1 elements because we also need to take care of the\\n    // base case.\\n    const cache = Array(n + 1).fill(0);\\n    cache[0] = 1;\\n    for (const d of denom) {\\n        for (let i = d; i < cache.length; i++) {\\n            cache[i] += cache[i - d];\\n        }\\n    }\\n    return cache[n];\\n}\\n\\n/**\\n * Total Ways to Sum II: You are given an array with two elements.  The first\\n * element is an integer n.  The second element is an array of numbers\\n * representing the set of available integers.  How many different ways can\\n * that number n be written as a sum of integers contained in the given set?\\n * You may use each integer in the set zero or more times.\\n *\\n * This is also known as the money changing problem.  Suppose we have a target\\n * amount of money n.  We have m distinct dollar notes a_0, a_1, ..., a_{m-1}.\\n * How many ways are there to combine one or more notes such that the total\\n * amount is n?  We can use a note zero, one, or more times.  More details here:\\n *\\n * https://algorithmist.com/wiki/Coin_change\\n *\\n * Usage: run cct/sum2.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [n, denomination] = ns.codingcontract.getData(cct, host);\\n    const npart = coin_change(n, denomination);\\n    const result = ns.codingcontract.attempt(npart, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/sum2.txt\\\";\\n        const data = `[${n}, [${denomination.join(\\\",\\\")}]]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/sum2.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a4c4e10b-0e53-4fc0-94ae-e80ceec5c829\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/31db03ad-91be-4450-ae0f-c393546a4c6b\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f22d04e2-0bb2-4ca3-8006-1067a1db8a14\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e269d7ec-4646-422e-bdb7-1fe3b37313a9\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e12a8dca-ef7c-42c7-b547-4b661eb0a41f\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8e957aaf-2045-4f8a-85d5-51c960c3cd2c\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/322771d2-15a0-42f2-b289-8beb7dce50c2\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/701b0fc1-f171-4bfa-8c79-c90aad45ad96\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4ad5f4d2-6661-4bde-92b1-ccb9cf4489e3\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/82f24a49-ec79-4aa8-bbc5-3ba351b763b7\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fdfc9a67-6199-4410-aac3-202f7dc2334e\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/543e711d-a2c5-425d-a023-65e7fb53dc26\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6d8eb1c7-ba38-4d67-b173-db205a9fe607\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8939c815-1b64-4e20-ba4f-a66acff39a65\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b5f5d3c2-9069-4f14-9adb-28b511de98e5\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/87ea76cd-3df3-43e6-ac81-d185d1ff181e\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cd99790f-aa6e-4193-945d-18cc54d6a5a7\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/766bc198-96ca-4270-a0c6-4457ce410e77\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9993714b-7883-4e6e-a65c-af250afbc699\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1b686b58-ca56-42c6-9b48-b18b266925b2\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5733c5b8-f454-44aa-804b-8c197bd8d725\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f1df81a4-4868-413f-a2d1-4c9e58baf079\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2d39fbd8-da36-4120-aace-fa5ac1a6b23a\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5d215886-c9fe-4382-984e-049fec171242\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b0ef319a-a025-4a0d-8ad1-4468b4d64641\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3a8e5a40-7d5e-487c-9d40-7ff02d3930a9\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f598e9b6-7b28-4bab-9ca0-f03c35bbf5da\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b9794234-972d-46ff-824d-30cb98e42485\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/586958d3-113f-45a2-bf9c-727105f092b4\",\"moduleSequenceNumber\":707220},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/233e4bdf-761e-4f33-bf1f-e1ba7616c777\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fa8d81b9-4df7-40f5-8941-f48ce374b3c8\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/c79dd0f7-bbec-431d-939e-262c392a72fa\",\"moduleSequenceNumber\":707197},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/56aeab61-87b8-42e5-a40c-4b3cc24cb201\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ce3f572c-5cc9-45d2-b226-eaf4846c9b0b\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/776d760c-f984-47d8-aa79-ef8d40fd59ea\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3b44d61e-3289-4b65-a6f9-95dccbc52098\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ea2d899c-aba0-480b-9964-821022b18d2b\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f981cb5f-36d3-4cde-92cb-4cdcf8474000\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7c5467c7-7305-42f9-8aa0-2b39741f926d\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5e7965f6-a06b-4d23-9413-c098e3747c10\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4d112834-c9a3-4333-a51b-5d896d0f0f6c\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/c9e1ac73-f1fc-4199-b024-2f65c9220fed\",\"moduleSequenceNumber\":707196},{\"filename\":\"/cct/sum2.js\",\"url\":\"blob:https://danielyxie.github.io/1d0036b8-067e-44bd-b72c-e358f1a3e6bf\",\"moduleSequenceNumber\":712312}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725338,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    max_profit_kadane,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\n\\n/**\\n * Algorithmic Stock Trader I: You are given an array of numbers representing\\n * stock prices, where the i-th element represents the stock price on day i.\\n * Determine the maximum possible profit you can earn using at most one\\n * transaction (i.e. you can buy and sell the stock once).  If no profit can\\n * be made, then the answer should be 0.  Note that you must buy the stock\\n * before you can sell it.\\n *\\n * This is similar, but not identical, to the problem\\n * \\\"Subarray with Maximum Sum\\\".\\n *\\n * Usage: run cct/trader.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(\\n        max_profit_kadane(array),\\n        cct,\\n        host,\\n        {\\n            returnReward: true,\\n        }\\n    );\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/trader.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/trader.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/63b27edb-402a-42dc-9eb8-7278990c43ff\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c8ca42df-6927-4927-b513-229d6fe4c6ad\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f2229e4c-0b98-4d67-ac57-e40f3022c120\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7b0b3437-95a5-430b-bde0-a082fc050946\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/addb402c-9027-4547-8b22-0ff07df23d3c\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1974b0a0-ccd9-47f2-ab1c-7d66bd917fcc\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e6926d2a-3985-4eb7-9763-35d4f792df65\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ada5007a-c1b0-4eb4-aef1-f3014f2bcec1\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/40e2b342-cd91-4054-a15e-6b8c872bea1f\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e58793a5-8458-4bbb-b753-5402482fe453\",\"moduleSequenceNumber\":668101},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5f57ce28-c659-4279-b501-4c1d1d38fc5c\",\"moduleSequenceNumber\":668099},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c5f5c8d5-d9e3-44f7-acef-df79dcceb4ab\",\"moduleSequenceNumber\":668096},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/49e44cf4-e3b1-4ca7-9152-569286442f34\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f877f5f7-1ad5-4f54-a54b-3ad8f26a4b44\",\"moduleSequenceNumber\":668093},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c3842d32-99be-4ab7-93b7-a32635e6f3ac\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d09ae637-d5f0-4e5c-9bca-a06945dd53ef\",\"moduleSequenceNumber\":668089},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/78733cff-0754-4c22-a142-99cd8203ea39\",\"moduleSequenceNumber\":668088},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/145393bc-4ec2-48d1-896b-d4749eaf8a1e\",\"moduleSequenceNumber\":668123},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f534ebc5-0041-46ae-b521-492b380cc228\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/42f4ffc4-b96c-44ee-807e-62f6a0c66062\",\"moduleSequenceNumber\":668105},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f34b1eb7-a9c0-437b-b09d-ebf251a66def\",\"moduleSequenceNumber\":668094},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4c250223-858f-4cc9-a35c-1fc108f00430\",\"moduleSequenceNumber\":668092},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/2d7bbfb8-a746-4163-8a82-d66b7dc3a175\",\"moduleSequenceNumber\":668082},{\"filename\":\"/cct/trader.js\",\"url\":\"blob:https://danielyxie.github.io/23e8df49-81ad-4d70-b1ce-47b7e62b441c\",\"moduleSequenceNumber\":675220}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725339,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The maximum profit that can be obtained if we are allowed to make an\\n * unlimited number of transactions.  Each transaction is a pair of buy/sell.\\n * A stock must first be bought before it can be sold.\\n *\\n * We have already solved the case where we are allowed to make at most one\\n * transaction.  The basic idea boils down to finding two days i and j, where\\n * i < j and price[i] < price[j], such that the difference price[j] - price[i]\\n * is as large as possible.\\n *\\n * Let's reuse the above idea.  Let mp be the running maximum profit.  Given\\n * two consecutive days i and i + 1, we have three cases:\\n *\\n * (1) price[i] < price[i+1].  We can make a profit if we buy on day i and\\n *     sell the next day.  Add that profit to our running profit mp.\\n * (2) price[i] = price[i+1].  We break even.  No need to add the difference\\n *     price[i+1] - price[i] to our running profit mp because the difference\\n *     is zero.\\n * (3) price[i] > price[i+1].  We make a loss.  Do not buy on day i and sell\\n *     the next day.\\n *\\n * The edge case is when i is the last day.  We should not buy the stock on\\n * the last day because we won't be able to sell it the next day.\\n *\\n * @param price An array where price[i] is the price of a stock on day i.\\n * @return The maximum profit to be made, provided we are allowed to make\\n *     as many transactions as we want.  Return 0 if no profits can be made.\\n */\\nfunction maximize_profit(price) {\\n    // Sanity checks.\\n    assert(price.length > 0);\\n    // If the price array has only one value, we can buy on the first day.\\n    // However, we won't be able to sell at all.  Therefore the maximum profit\\n    // should be zero.\\n    if (price.length === 1) {\\n        return 0;\\n    }\\n    // Keep track of the running maximum profit by considering the price\\n    // difference between consecutive days.\\n    assert(price.length >= 2);\\n    const lastidx = price.length - 1;\\n    let max_profit = 0;\\n    for (let i = 0; i < lastidx; i++) {\\n        if (price[i] < price[i + 1]) {\\n            max_profit += price[i + 1] - price[i];\\n        }\\n    }\\n    return max_profit;\\n}\\n\\n/**\\n * Algorithmic Stock Trader II: You are given an array of numbers representing\\n * stock prices, where the i-th element represents the stock price on day i.\\n * Determine the maximum possible profit you can earn using as many\\n * transactions as you like.  A transaction is defined as buying and then\\n * selling one share of the stock.  Note that you cannot engage in multiple\\n * transactions at once.  In other words, you must sell the stock before you\\n * buy it again.  If no profit can be made, then the answer should be 0.\\n *\\n * Each price in the array relates to the same stock.\\n *\\n * Usage: run cct/trader2.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(\\n        maximize_profit(array),\\n        cct,\\n        host,\\n        {\\n            returnReward: true,\\n        }\\n    );\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/trader2.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/trader2.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5e082c15-3a1d-4355-9140-8f4b110ed090\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a9deabf8-4df8-4f13-93b2-30c9d579b930\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0704fab1-3ac7-4e67-87b4-4b8c5ca7e18e\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d28bc6f9-6761-4adc-b123-4e075e31a0a2\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/74ff2ef3-d245-4a6d-9ee0-e910a98f98a3\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/deca32d9-6d18-47f7-8046-4a331a09f021\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e94537ef-e66d-4296-b549-334eede30fa8\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fa68c343-b994-4839-9325-5b30403c9508\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c4e9462e-57f6-43b7-b67a-beaeffa4f0f3\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/963b5b10-4c2f-49d0-937b-42bdafdb2b4c\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0570694f-aaa0-4132-b859-4617b0b8527a\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/28b56f3b-9710-4505-a294-98d0889ac169\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d85a44f0-9e58-4f52-b272-5754efad41ee\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/52da5085-536b-45a9-8eba-db0135264839\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/419a701a-e4e1-47c5-bd6b-ad4791f984fa\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5623319b-20fb-4f58-9139-f8d6819710ba\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/10b1123a-db75-43b5-9d0e-26125d62e72e\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5e35f5f7-e469-44a6-8077-ec62ef0cba8b\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4be6269a-11d7-47ec-9d15-696c3b43ecd5\",\"moduleSequenceNumber\":707216},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a5393791-5122-4767-ba3b-5f7f572d72f4\",\"moduleSequenceNumber\":707214},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4c95262f-7552-488d-baff-a9694c11bb81\",\"moduleSequenceNumber\":707211},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/82ddc842-7534-4eb0-8378-95c26a567dc1\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2c079d6c-1ab0-4042-94c0-3dae63a0b0c0\",\"moduleSequenceNumber\":707208},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d1b48d1b-60c9-4494-8028-96ce74565526\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/56b06c83-8a7f-4bb4-afcd-46b2e154e1b7\",\"moduleSequenceNumber\":707204},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cf8988d4-89ad-4056-9583-2890465dc4fc\",\"moduleSequenceNumber\":707203},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/305b8487-a410-4b36-8f68-f93520318016\",\"moduleSequenceNumber\":707238},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/96f60b9e-a0ca-4ce0-bf50-313f6dd82d8d\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/6046afe9-ec0a-49d3-8b21-dce60a065057\",\"moduleSequenceNumber\":707220},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7a80f440-b303-4ddc-88ea-18d7b9bff017\",\"moduleSequenceNumber\":707209},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/782349ba-dec1-418b-aa5f-f620e769ac27\",\"moduleSequenceNumber\":707207},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/0893db62-aeb4-48b0-81bd-0a6f91b60784\",\"moduleSequenceNumber\":707197},{\"filename\":\"/cct/trader2.js\",\"url\":\"blob:https://danielyxie.github.io/629fe401-2312-403d-9bc0-b7cbc4536c17\",\"moduleSequenceNumber\":709141}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725340,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    print_error,\\n    print_success,\\n    stock_traderIII,\\n} from \\\"/lib/cct.js\\\";\\n\\n/**\\n * Algorithmic Stock Trader III: You are given an array of numbers representing\\n * stock prices, where the i-th element represents the stock price on day i.\\n * Determine the maximum possible profit you can earn using at most two\\n * transactions.  A transaction is defined as buying and then selling one share\\n * of the stock.  Note that you cannot engage in multiple transactions at once.\\n * In other words, you must sell the stock before you buy it again.  If no\\n * profit can be made, then the answer should be 0.\\n *\\n * This is similar to Algorithmic Stock Trader I.  The twist is that we can now\\n * make at most two transactions, where previously we were restricted to at\\n * most one transaction.\\n *\\n * Usage: run cct/trader3.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(\\n        stock_traderIII(array),\\n        cct,\\n        host,\\n        {\\n            returnReward: true,\\n        }\\n    );\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/trader3.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/trader3.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7847bbf6-6b4f-4612-9c3a-04a9ddc377d2\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/64f7f2e7-0145-4aad-9746-eee3937b3389\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/002559c1-4902-4497-84bd-5c2bcd9cf390\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/451edc34-7de7-4070-802d-36d9f9870a61\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9ce9e388-90f9-434a-af33-aba5f71eed60\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6638718a-7c38-463f-b1fc-b8e50de0ba39\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9bf1107b-53b6-40f0-9b6d-1e8d1419bfbe\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3dfb9c6c-ee34-4779-ac61-5d9f1dd948c8\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/672755b3-8b57-4bd2-95e6-8f86d4393e10\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8bbe9803-1c48-466e-9800-e1dae7de5292\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9a0d29e8-0d4d-49c8-bdb2-2a300777f509\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/645f9419-fad8-4430-a2ff-77b9562aa991\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a309b1f5-1879-4598-8ffa-c482e0fb7245\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8ecb923c-982d-4a07-b050-1882077030cf\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4293e684-39a6-4f76-838f-c982417fc228\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bacaf15c-43ef-4cac-a567-d66073dbaebe\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4623b866-51b5-43de-8c46-05aa46c7a9cc\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b094795f-327c-476c-af3c-9d6a26b7cd2d\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/68a32a22-d3fb-4b96-b4ea-ee269c5b44c1\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/17519924-50d7-43f1-af47-cb83d7e36d4d\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/30479114-badd-4fd8-90c2-5e60b584b758\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/14eebd96-ca2f-4fc6-a84f-f77cc445115a\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/72156f05-43a8-4a47-8116-b0fbff988b7d\",\"moduleSequenceNumber\":719395},{\"filename\":\"/cct/trader3.js\",\"url\":\"blob:https://danielyxie.github.io/260c5f8e-d9b9-477a-85b1-bfeefd18bd4c\",\"moduleSequenceNumber\":720782}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725341,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    max_profit_kadane,\\n    print_error,\\n    print_success,\\n    stock_traderIII,\\n} from \\\"/lib/cct.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The maximum profit that can be made when we are restricted to at most t\\n * transactions.  When we are restricted to at most 2 transactions, we find\\n * all possible partitions of the price array into 2 non-overlapping subarrays.\\n * For each such partition we have 2 subarrays.  We run Kadane's algorithm on\\n * each subarray, sum the results of both subarrays, and return the sum as the\\n * maximum profit possible.  The true maximum profit is the maximum of the\\n * results of all partitions.\\n *\\n * Now consider t > 2.  We use the same idea as per the case when we are\\n * restricted to at most 2 transactions.  The minor difference now is that we\\n * must partition the price array into t non-overlapping subarrays.  We run\\n * Kadane's algorithm on each subarray, add together the result of each run of\\n * the algorithm, and return the sum as the maximum possible profit.  The only\\n * tricky part is generating all possible partitions of the price array, where\\n * each partition consists of t non-overlapping subarrays.  The above method is\\n * conceptually simple to understand as it builds on the intuition for the case\\n * where t = 2.  However, the method can be slow.  Let k := t - 1.  Given a set\\n * of n elements, we have C(n, k) ways to choose k numbers that partition the\\n * price array into t non-overlapping subarrays.  Here, the number C(n, k) is\\n * the binomial coefficient.  Thus there are C(n, k) possible partitions of the\\n * price array into t non-overlapping subarrays.  Notice that when t = 2, we\\n * need only to choose k = t - 1 = 1 number to act as a barrier for dividing\\n * the price array into 2 non-overlapping subarrays.  Therefore in the worst\\n * case the above method has factorial running time, which is worse than\\n * exponential running time.\\n *\\n * Let's see whether we can use recursion to calculate the solution for day i\\n * based on our solution for day i-1.  Suppose price[i] is the value of the\\n * stock on day i.  Define p[t][i] as the maximum profit obtained by using at\\n * most t transactions up to and including day i.  We have two cases for day i.\\n *\\n * (1) If no transactions are made on day i, then the value of p[t][i] is\\n *     equivalent to p[t][i-1], i.e. p[t][i] = p[t][i-1].\\n * (2) Suppose we sell on the i-th day.  Then we must have bought one share of\\n *     the stock on a day j, where 0 <= j <= i-1.  Purchasing a share on day j\\n *     and selling it at a later day i would net us a profit of\\n *\\n *     price[i] - price[j]\\n *\\n *     for one transaction.  What about the profits from the remaining t-1\\n *     transactions?  Those profits are collectively represented as p[t-1][j].\\n *     If we sell on the i-th day and this is our t-th transaction, then the\\n *     profit from all t transactions can be written as\\n *\\n *     (*) price[i] - price[j] + p[t-1][j]\\n *\\n *     To maximize our profit from all t transactions, we need to maximize the\\n *     value of expression (*).  We calculate the value of (*) for each value\\n *     of j between 0 and i-1, inclusive.  That is, we have the expression\\n *\\n *     (**) max{price[i] - price[j] + p[t-1][j]}\\n *\\n *     where 0 <= j <= i-1.  Therefore p[t][i] is defined as the maximum of\\n *     p[t][i-1] and expression (**).\\n *\\n * The base cases are:\\n *\\n * (i) p[0][i] := 0 for all i.\\n * (ii) p[t][0] := 0 for all t.\\n *\\n * If n is the number of elements in the price array, the maximum profit we can\\n * obtain is p[t][n-1] provided we are restricted to at most t transactions.\\n * Refer to the following page for more details:\\n *\\n * https://www.techiedelight.com/find-maximum-profit-earned-at-most-k-stock-transactions/\\n *\\n * @param ns The Netscript API.\\n * @param t The maximum number of transactions.\\n * @param price An array of prices, where price[i] is the price of one share of\\n *     a stock on day i.  All prices relate to the same stock.\\n * @return The maximum profit to be made, assuming we can perform at most t\\n *     transactions.  Return 0 if no profit can be made.\\n */\\nasync function maximize_profit(ns, t, price) {\\n    assert(t >= 0);\\n    assert(price.length > 0);\\n    // No transactions means no profit.  We don't buy and sell, therefore\\n    // no profit at all.\\n    if (t === 0) {\\n        return 0;\\n    }\\n    // If t = 1, we are restricted to at most 1 transaction.  Simply use\\n    // Kadane's algorithm on the price array.\\n    if (t === 1) {\\n        return max_profit_kadane(price);\\n    }\\n    // If t = 2, we are restricted to at most 2 transactions.  This is the case\\n    // of Algorithmic Stock Trader III.\\n    if (t === 2) {\\n        return stock_traderIII(price);\\n    }\\n    // Perform at most t >= 3 transactions.  Let p[t][i] be the maximum profit\\n    // obtained by using at most t transactions up to and including day i.  The\\n    // value of p[t][i] is the maximum of these two expressions:\\n    //\\n    // (1) p[t][i-1]\\n    // (2) max{price[i] - price[j] + p[t-1][j]} for all 0 <= j <= i-1.\\n    //\\n    // Using the recursive structure of p[t][i], we create a 2-D matrix to hold\\n    // the previous values p[r][c].  The row number r represents the current\\n    // maximum number of transactions.  The column number c represents the\\n    // current day.\\n    assert(t >= 3);\\n    // The base case p[0][i] := 0 for all i.\\n    const p = [];\\n    p.push(new Array(price.length).fill(0));\\n    for (let i = 1; i <= t; i++) {\\n        // The base case p[t][0] := 0 for all t.\\n        const array = new Array(price.length);\\n        array[0] = 0;\\n        p.push(array);\\n    }\\n    // The case of at least t >= 3 transactions.  Here, 1 <= tau <= t.  Build\\n    // up our table from tau = 1 up to and including tau = t.\\n    for (let tau = 1; tau <= t; tau++) {\\n        // Let the number of transactions be at most tau.  Consider each\\n        // day > 0 in the price array.  As we move to the next day, we do not\\n        // have to recalculate the maximization expression\\n        //\\n        // max{price[i] - price[j] + p[t-1][j]}\\n        //\\n        // for all 0 <= j <= i-1.  Define the number\\n        //\\n        // mp := max{p[t-1][k] - price[k]}\\n        //\\n        // where 0 <= k <= i-2.  Then we have the expression\\n        //\\n        // max{price[i] - price[j] + p[t-1][j]}\\n        // = price[i] + max(mp, p[t-1][i-1] - price[i-1])\\n        //\\n        // Thus p[t][i] is the maximum of p[t][i-1] and the expression\\n        //\\n        // price[i] + max(mp, p[t-1][i-1] - price[i-1])\\n        let mp = p[tau - 1][0] - price[0];\\n        for (let day = 1; day < price.length; day++) {\\n            // The maximum profit if we do not make a transaction on this day.\\n            const a = p[tau][day - 1];\\n            // The maximum profit if we make a transaction on this day.\\n            mp = Math.max(mp, p[tau - 1][day - 1] - price[day - 1]);\\n            // The maximum profit using at most t transactions up to and\\n            // including this day.\\n            p[tau][day] = Math.max(a, price[day] + mp);\\n            await ns.sleep(wait_t.MILLISECOND);\\n        }\\n    }\\n    return p[t][price.length - 1];\\n}\\n\\n/**\\n * Algorithmic Stock Trader IV: You are given an array with two elements.  The\\n * first element is an integer k.  The second element is an array of numbers\\n * representing stock prices, where the i-th element represents the stock price\\n * on day i.  Determine the maximum possible profit you can earn using at most\\n * k transactions.  A transaction is defined as buying and then selling one\\n * share of the stock.  Note that you cannot engage in multiple transactions at\\n * once.  In other words, you must sell the stock before you can buy it.  If no\\n * profit can be made, then the answer should be 0.\\n *\\n * This is similar to Algorithmic Stock Trader III.  The twist is that we can\\n * now make at most k transactions, where previously we were restricted to at\\n * most two transactions.  Of course, k can be 0, 1, 2, or a higher integer.\\n *\\n * Usage: run cct/trader4.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [t, price] = ns.codingcontract.getData(cct, host);\\n    const mp = await maximize_profit(ns, t, price);\\n    const result = ns.codingcontract.attempt(mp, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/trader4.txt\\\";\\n        const data = `[${t}, [${price.join(\\\",\\\")}]]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/trader4.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/870fc839-766f-488b-bd49-8b28e40f7ca9\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f0792a1f-8ecc-4ed2-9a66-5ef592d8e5cc\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5b4742de-5dd1-4ee3-a569-35afbf9bb76f\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/be74e951-1673-4c55-88cd-f03ec65b2f80\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/58a088e0-0b0a-40ea-aec8-b7f5f7fd07fd\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/029c4ffa-6a28-497c-b562-c0abfe85a81e\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bb0960fa-49a1-4a9f-a4ad-b27d1a8f628a\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/41797b16-345a-4406-9e2a-0774b8b33c40\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cb73971d-3c72-4ad1-ad58-70d4b9bfca49\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/906f40e9-936a-4857-b6c8-80ff1cf20b45\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4596b873-d8cc-48ad-9adc-4826569d8e0a\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/644c1ed3-4247-4868-b6e4-341e081e56d8\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/029d8a85-ea6e-46bf-9da2-6b357ab71cad\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4e6f207a-7593-4ce4-b15e-62c907da0542\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0d4dd972-1848-41bf-b7e7-72bb21a3f525\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/77a42c09-101c-42b6-bdf3-e8be89f499bb\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fa632015-6abe-4d29-a7ac-1c02a4b66210\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a87f7a19-4559-48cf-a9a9-c5484f5bb002\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4419fe82-fe62-4d71-896d-f5f9a916190b\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/94b2d73b-edbe-4c1c-8cf0-7aea36c88965\",\"moduleSequenceNumber\":647532},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4a9b6e48-ea8b-4577-ad90-c7f2317a5bfd\",\"moduleSequenceNumber\":647530},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4dd2c2cc-5240-4115-abd4-511be83a2072\",\"moduleSequenceNumber\":647527},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ab18ebea-a7ec-4259-b127-8842160afa04\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4b0f3be4-2db6-4fb6-9ce9-1c9bde634fe1\",\"moduleSequenceNumber\":647524},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c2a6ee1a-c5f7-4b09-a940-f7e17bdde345\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/67904a75-9bcd-4bcd-83fd-bc4396c346f2\",\"moduleSequenceNumber\":647520},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b154defd-d234-43c0-bdcb-81e7845cd857\",\"moduleSequenceNumber\":647519},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/329be3ca-aa99-432c-b26a-998bf06bfe16\",\"moduleSequenceNumber\":647554},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f4dbeae7-4eb3-4af8-a01e-6b633ab6f35e\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/079fe01f-e724-4e7d-a1de-874583b74e52\",\"moduleSequenceNumber\":647536},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9eb36f46-bb02-4415-832c-8796d13a04ab\",\"moduleSequenceNumber\":647525},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1d1d382b-5902-474c-96f6-666bf488e25b\",\"moduleSequenceNumber\":647523},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/517c5e5c-7868-4564-9cae-d42fe0a8065c\",\"moduleSequenceNumber\":647513},{\"filename\":\"/cct/trader4.js\",\"url\":\"blob:https://danielyxie.github.io/052cd048-fe28-491e-9a0b-2fa91ae74ddb\",\"moduleSequenceNumber\":648517}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725342,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    matrix_to_string,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A deep copy of a triangle.\\n *\\n * @param triangle A triangle represented as an array of arrays.\\n * @return The same triangle, but as a deep copy.\\n */\\nfunction clone(triangle) {\\n    const new_triangle = [];\\n    for (let i = 0; i < triangle.length; i++) {\\n        const level = [...triangle[i]];\\n        new_triangle.push(level);\\n    }\\n    return new_triangle;\\n}\\n\\n/**\\n * Descend from the top to the bottom of a triangle, finding a path of minimum\\n * sum as we go.\\n *\\n * @param triangle A triangle represented as an array of arrays.\\n * @return An array [path, min_sum] as follows:\\n *     (1) path := A path of minimum sum from the top of the triangle to the\\n *         bottom.\\n *     (2) min_sum := The minimum path sum.\\n */\\nfunction descend(triangle) {\\n    // Sanity checks.\\n    assert(is_triangle(triangle));\\n    if (triangle.length === 1) {\\n        return [triangle[0], triangle[0][0]];\\n    }\\n    // A triangle having at least 2 levels.  Consider the following triangle:\\n    //\\n    // (0)       2\\n    // (1)     3   4\\n    // (2)   6   5   7\\n    // (3) 4   1   8   3\\n    //\\n    // Think of the problem in a top-down manner.  To obtain a path of minimum\\n    // sum from level (0) to level (3), we must obtain a path of minimum sum\\n    // from level (0) to level (2), which in turn requires that we obtain a path\\n    // of minimum sum from level (0) to level (1).  Let min_sum be the minimum\\n    // sum of a path from level (0) to level (i) and suppose this path ends at\\n    // a[j], the j-th number at level (i).  Let b be an array of numbers at\\n    // level (i + 1).  The minimum sum of a path from level (0) to level\\n    // (i + 1) is given by\\n    //\\n    // min_sum + minimum(b[j], b[j + 1])\\n    //\\n    // Alternatively, consider the problem in a bottom-up manner.  Any minimum\\n    // path must end at the bottom level of the triangle.  Let i be any level\\n    // in the triangle, except for the last level.  Let mtriangle[i][j] be the\\n    // j-th number at level (i) and update this number to\\n    //\\n    // mtriangle[i][j] := mtriangle[i][j] + minimum(b[j], b[j + 1])\\n    //\\n    // where b is an array of numbers at level (i + 1).  Move up one level and\\n    // repeat the above calculation, propagating the minimum sum up the\\n    // triangle so that mtriangle[0][0] is the minimum sum of any path.\\n\\n    // Get a deep copy of the triangle.  We don't want to modify the input\\n    // triangle.\\n    const mtriangle = clone(triangle);\\n    const path = [];\\n    // Start from the penultimate level and work upward to the top level.\\n    // Keep track of a minimum path as we move along.\\n    for (let i = triangle.length - 2; i >= 0; i--) {\\n        // The minimum sum at level i.\\n        let minsum = Infinity;\\n        // A node at level i + 1.  This is a node of a path of minimum sum.\\n        let mink = Infinity;\\n        for (let j = 0; j < triangle[i].length; j++) {\\n            // Consider nodes at level i + 1.\\n            const a = mtriangle[i + 1][j];\\n            const b = mtriangle[i + 1][j + 1];\\n            mtriangle[i][j] += Math.min(a, b);\\n            // Update the path of minimum sum.  We keep track of the column\\n            // index at level i + 1.\\n            if (minsum > mtriangle[i][j]) {\\n                minsum = mtriangle[i][j];\\n                mink = a < b ? j : j + 1;\\n            }\\n        }\\n        path.push(mink);\\n    }\\n    path.push(0);\\n    path.reverse();\\n    // Reconstruct a path of minimum sum.  This path contains the intermediate\\n    // nodes from the top of the triangle to the bottom level.\\n    for (let i = 0; i < triangle.length; i++) {\\n        path[i] = triangle[i][path[i]];\\n    }\\n    return [path, mtriangle[0][0]];\\n}\\n\\n/**\\n * Whether the given array represents a valid triangle.\\n *\\n * @param triangle A triangle represented as an array of arrays.\\n * @return true if the array represents a triangle; false otherwise.\\n */\\nfunction is_triangle(triangle) {\\n    assert(triangle.length > 0);\\n    for (let i = 0; i < triangle.length - 1; i++) {\\n        const top = triangle[i];\\n        const bottom = triangle[i + 1];\\n        if (top.length < 1) {\\n            return bool.INVALID;\\n        }\\n        if (bottom.length < 1) {\\n            return bool.INVALID;\\n        }\\n        if (top.length !== bottom.length - 1) {\\n            return bool.INVALID;\\n        }\\n    }\\n    return bool.VALID;\\n}\\n\\n/**\\n * Minimum Path Sum in a Triangle: You are given a 2-D array of numbers\\n * (array of arrays of numbers) that represents a triangle (the first array\\n * has one element, each subsequent array has one more element than the one\\n * before it, forming a triangle).  Find the minimum path sum from the top to\\n * the bottom of the triangle.  In each step of the path, you may only move to\\n * adjacent numbers in the row below.\\n *\\n * For example, given this array\\n *\\n * [[2], [3, 4], [6, 5, 7], [4, 1, 8, 3]]\\n *\\n * we can represent it as this triangle\\n *\\n *       2\\n *     3   4\\n *   6   5   7\\n * 4   1   8   3\\n *\\n * From one level of the triangle, we move to a level below but only to a\\n * number directly below a given number.  At level 0, we have [2].  At level\\n * 1, we have [3, 4].  From 3, we can move down to either 6 or 5, but we\\n * cannot move from 3 to 7 because 7 is not directly below 3.\\n *\\n * Usage: run cct/triangle.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const triangle = ns.codingcontract.getData(cct, host);\\n    const [, sum] = descend(triangle);\\n    const result = ns.codingcontract.attempt(sum, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/triangle.txt\\\";\\n        const data = matrix_to_string(triangle);\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/triangle.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ce09d62f-4f5b-4abb-b4af-8d5067e6e965\",\"moduleSequenceNumber\":693069},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ec2b95f5-bb9d-4fe4-9cc1-b4672882dce9\",\"moduleSequenceNumber\":693067},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2f067e00-0982-4f5e-b634-3faf2a78b1a3\",\"moduleSequenceNumber\":693064},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/21cd11a7-c49c-42d8-9068-8a14d2f0a482\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/131efec4-eb7a-4540-a82d-03ba732ef650\",\"moduleSequenceNumber\":693061},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ce264f7b-afed-483a-8de4-b2bd893b9e03\",\"moduleSequenceNumber\":693060},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b8392028-0605-4c9b-9875-df89124325b1\",\"moduleSequenceNumber\":693057},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/31124c73-a661-40f7-aa99-91e7a990c268\",\"moduleSequenceNumber\":693056},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/01934e33-2d02-4fbb-a259-460a7bdde31c\",\"moduleSequenceNumber\":693091},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/0b74a1ac-3dce-465d-b80d-f21682ac7505\",\"moduleSequenceNumber\":693052},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/bcd70aa0-64ca-4acd-b0a4-152c47aaf8c8\",\"moduleSequenceNumber\":693069},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e20179c9-1f75-4963-a716-a3fd07a235c2\",\"moduleSequenceNumber\":693067},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/edc723b9-0fa8-405d-b778-16b1d0c73357\",\"moduleSequenceNumber\":693064},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bc53ff4d-a6be-438d-96b2-06cf1fd53f58\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bcb4a0d4-9a75-4a27-86f8-739b0bb57f2e\",\"moduleSequenceNumber\":693061},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b1135ad9-5f5d-46bf-ad1a-6aa0716c2b18\",\"moduleSequenceNumber\":693060},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/17386a59-202f-4864-9437-07fd71296c0c\",\"moduleSequenceNumber\":693057},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6efe5d69-e967-457d-bcf8-933e9a8215cc\",\"moduleSequenceNumber\":693056},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b663ddb8-f4c1-4b75-9b8e-52d8aaf35842\",\"moduleSequenceNumber\":693091},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c8357c9d-e7ba-4a25-9b92-751a58b5584c\",\"moduleSequenceNumber\":693069},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/595ef26a-15a2-4b0f-b26d-6b699dfa96fd\",\"moduleSequenceNumber\":693067},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d5f9c022-e845-4ebc-84b1-55ab2b3e61c6\",\"moduleSequenceNumber\":693064},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f1fe5c4a-1b2d-485d-9e0b-32773cadb0b9\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8d801900-e32f-45d5-9115-bc9e10d2e75c\",\"moduleSequenceNumber\":693061},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/08eed88f-0d46-460d-8c35-62fa854b4d77\",\"moduleSequenceNumber\":693060},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b6084506-08c2-4f6a-9aec-0f2fc2c8e7d0\",\"moduleSequenceNumber\":693057},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/14468d38-67f5-458e-8b29-bc3a446293d4\",\"moduleSequenceNumber\":693056},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4caf49f1-22b1-4165-a147-ff86ad2f7963\",\"moduleSequenceNumber\":693091},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4a08abad-6ef9-4259-8884-01b13fcac58c\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/c55e02b9-b768-4e96-9e12-dbeac143897d\",\"moduleSequenceNumber\":693073},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/75f14542-5591-490c-a1cb-28b5c327e7a1\",\"moduleSequenceNumber\":693062},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4b701ad5-b7b3-4402-9778-818c29eba770\",\"moduleSequenceNumber\":693060},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/4c6ef93b-7ce0-43db-a7d0-b521652f0c66\",\"moduleSequenceNumber\":693050},{\"filename\":\"/cct/triangle.js\",\"url\":\"blob:https://danielyxie.github.io/298ad419-643a-440d-8958-2bc7e2e2f107\",\"moduleSequenceNumber\":696744}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725343,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    char_index,\\n    is_alphabetic,\\n    log_cct_failure,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { vigenere_square } from \\\"/lib/constant/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Pad the key so that it is the same length as the plaintext.\\n *\\n * @param plaintext We want to encrypt this string.  Cannot be empty string.\\n * @param key Encryption is done using this key.  Cannot be empty string.\\n * @return A string representing the key, possibly padded.  If the plaintext\\n *     and key are of the same length, then return the original key.\\n */\\nfunction pad_key(plaintext, key) {\\n    assert(plaintext.length > 0);\\n    assert(key.length > 0);\\n    if (plaintext.length === key.length) {\\n        return key;\\n    }\\n    let new_key = String(key);\\n    let i = 0;\\n    let n = 0;\\n    while (new_key.length < plaintext.length) {\\n        new_key += key[i];\\n        n++;\\n        i = n % key.length;\\n    }\\n    assert(new_key.length === plaintext.length);\\n    assert(new_key.length > key.length);\\n    return new_key;\\n}\\n\\n/**\\n * Vigenère encryption.  We encrypt only uppercase letters of the English\\n * alphabet.  All other characters are ignored.\\n *\\n * @param plaintext We want to encrypt this string.  Cannot be empty string.\\n * @param key Encryption is done using this key.  Cannot be empty string.\\n * @return A ciphertext encrypted using the Vigenère cipher.\\n */\\nfunction vigenere(plaintext, key) {\\n    // Sanity checks.\\n    assert(plaintext.length > 0);\\n    assert(key.length > 0);\\n    // Encryption.\\n    const ptxt = plaintext.toUpperCase();\\n    const pk = pad_key(plaintext, key);\\n    let ciphertext = \\\"\\\";\\n    const matrix = Array.from(vigenere_square);\\n    for (let i = 0; i < ptxt.length; i++) {\\n        if (!is_alphabetic(ptxt[i])) {\\n            ciphertext += ptxt[i];\\n            continue;\\n        }\\n        const row = char_index(ptxt[i]);\\n        const col = char_index(pk[i]);\\n        ciphertext += matrix[row][col];\\n    }\\n    assert(ciphertext.length === plaintext.length);\\n    return ciphertext;\\n}\\n\\n/**\\n * Encryption II: Vigenère Cipher: Vigenère cipher is a type of polyalphabetic\\n * substitution.  It uses the Vigenère square to encrypt and decrypt plaintext\\n * with a keyword.  Vigenère square:\\n *\\n *     A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\\n *   +====================================================\\n * A | A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\\n * B | B C D E F G H I J K L M N O P Q R S T U V W X Y Z A\\n * C | C D E F G H I J K L M N O P Q R S T U V W X Y Z A B\\n * D | D E F G H I J K L M N O P Q R S T U V W X Y Z A B C\\n * E | E F G H I J K L M N O P Q R S T U V W X Y Z A B C D\\n * .......................................................\\n * Y | Y Z A B C D E F G H I J K L M N O P Q R S T U V W X\\n * Z | Z A B C D E F G H I J K L M N O P Q R S T U V W X Y\\n *\\n * For encryption each letter of the plaintext is paired with the corresponding\\n * letter of a repeating keyword. For example, the plaintext DASHBOARD is\\n * encrypted with the keyword LINUX:\\n *\\n * Plaintext: DASHBOARD\\n *   Keyword: LINUXLINU\\n *\\n * So, the first letter D is paired with the first letter of the key L.\\n * Therefore, row D and column L of the Vigenère square are used to get the\\n * first cipher letter O.  This must be repeated for the whole ciphertext.  You\\n * are given an array with two elements.  The first element is the plaintext,\\n * the second element is the keyword.  Return the ciphertext as uppercase\\n * string.\\n *\\n * This is Vigenère encryption, where the plaintext alphabet is the uppercase\\n * characters of the English alphabet.\\n *\\n * Usage: run cct/vigenere.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [plaintext, key] = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(\\n        vigenere(plaintext, key),\\n        cct,\\n        host,\\n        {\\n            returnReward: true,\\n        }\\n    );\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/vigenere.txt\\\";\\n        const data = `[${plaintext}, ${key}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/vigenere.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4f18240c-6f33-4b2b-a693-7941188bb6fa\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e79e980e-139f-4928-8a56-7d67d31530cb\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/201a21bb-c651-4da0-90eb-969525127009\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d231d111-750d-4989-8ea2-fa9c6ced13c0\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/45420a78-5e4b-414a-ae93-d575a5835111\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ca20a351-afe0-4fce-816a-e39fb9ab4286\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b2f7ab43-a3f4-40dc-8391-d91294f21613\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/472afbcb-1272-4ecf-9345-306ca0394539\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/042c5fd4-a4aa-4707-94f0-013378daa503\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/cct.js\",\"url\":\"blob:https://danielyxie.github.io/4e35e1ab-522c-4152-af4d-cbe611348c96\",\"moduleSequenceNumber\":700973},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8d0dc964-b125-4e94-ad77-d5520b1a643a\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/89c15360-f6ef-49ea-9618-a7b1043c52d4\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/afe401f9-d4fc-44cf-a198-3bcfce6fd536\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/07a2f749-63c4-4e18-b178-c5415f56f56e\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f0826217-1e74-4a9b-b1f3-8390633fd3bf\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/82416862-fa84-449d-982b-edf656e86657\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7f64c7dd-17a2-4aa8-ba69-6f3dcd96d9d5\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/80543209-d385-4a71-8287-0aff8bc945d8\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/731e004d-e42b-455b-b936-3c17aa588acd\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/27e90cb7-d7f9-42bd-a344-5c215b6174bb\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6d93849b-4de9-447c-ac67-885fedb6029b\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0bf1bb7d-cf5a-4154-b7b6-bd7cb39724c9\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4f32eaed-f0f1-42b5-a591-84176f47c7c7\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0dc43bf9-2bf8-4d32-83dd-607402da8a22\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/62f59dbe-c527-4bc5-92e3-56973ca082ef\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c2674b2b-c9cc-4924-b484-e49e61dcac94\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f42552c3-81a2-478d-a128-d16c20a3f337\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f7989bc1-695b-4a85-8334-d9d71b14593d\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c7e68d75-d97e-495e-89f4-2cbb685b1fc3\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/dc9149d3-abcd-4cc6-8d01-11a662236521\",\"moduleSequenceNumber\":700993},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/98c24a2a-f5bc-4fdf-afa2-0bf6496cc047\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/10c785d4-583f-4d8b-b2fb-a70a47a735ff\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/3a635dfd-6ded-461e-ac80-17969c355a33\",\"moduleSequenceNumber\":700970},{\"filename\":\"/cct/vigenere.js\",\"url\":\"blob:https://danielyxie.github.io/dd8a7985-3f8a-4a57-b045-689aafe6853d\",\"moduleSequenceNumber\":701688}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725344,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { corp, corp_t } from \\\"/lib/constant/corp.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { Corporation } from \\\"/lib/corporation/corp.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_corporation_api } from \\\"/lib/source.js\\\";\\n\\n/**\\n * Create a corporation.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function create_corp(ns) {\\n    const org = new Corporation(ns);\\n    if (org.has_corp()) {\\n        log(ns, \\\"Manage a corporation\\\");\\n        return;\\n    }\\n    while (!org.create()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    log(ns, \\\"Create and manage a corporation\\\");\\n}\\n\\n/**\\n * Expand our divisions by opening offices in other cities.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction expand_city(ns) {\\n    const org = new Corporation(ns);\\n    for (const div of org.all_divisions()) {\\n        cities.all.forEach((ct) => {\\n            if (!org.has_division_office(div, ct)) {\\n                org.expand_city(div, ct);\\n                org.buy_warehouse(div, ct);\\n            }\\n            org.warehouse_init_upgrade(div, ct);\\n        });\\n    }\\n}\\n\\n/**\\n * Expand into other industries.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction expand_industry(ns) {\\n    const org = new Corporation(ns);\\n    org.expand_industry();\\n}\\n\\n/**\\n * Whether we have access to the Office and Warehouse APIs.  We have permanent\\n * access to these APIs after we have destroyed BN3.3.\\n */\\nfunction has_office_warehouse_api(ns) {\\n    const org = new Corporation(ns);\\n    return (\\n        org.has_unlock_upgrade(corp.unlock.OFFICE)\\n        && org.has_unlock_upgrade(corp.unlock.WAREHOUSE)\\n    );\\n}\\n\\n/**\\n * Hire AdVert.inc to advertise for our company.\\n */\\nfunction hire_advert(ns) {\\n    const org = new Corporation(ns);\\n    org.all_divisions().forEach((div) => org.hire_advert(div));\\n}\\n\\n/**\\n * The initial bulk purchase of these materials:\\n *\\n * (1) Hardware.  We want a total of 125.\\n * (2) AI Cores.  We want a total of 75.\\n * (3) Real Estate.  We want a total of 27k.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction initial_bulk_purchase(ns) {\\n    const org = new Corporation(ns);\\n    const material = [\\n        corp.material.AI,\\n        corp.material.HARDWARE,\\n        corp.material.LAND,\\n    ];\\n    const amount = [\\n        corp_t.material.ai.buy.INIT_BULK,\\n        corp_t.material.hardware.buy.INIT_BULK,\\n        corp_t.material.land.buy.INIT_BULK,\\n    ];\\n    for (let i = 0; i < material.length; i++) {\\n        org.material_bulk_buy(material[i], amount[i]);\\n    }\\n}\\n\\n/**\\n * Hire 3 employees for each new office in each city.  For each office, assign\\n * an employee to each of the following positions: Business, Engineer, and\\n * Operations.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction initial_hire(ns) {\\n    const org = new Corporation(ns);\\n    for (const div of org.all_divisions()) {\\n        cities.all.forEach((ct) => org.initial_hire(div, ct));\\n    }\\n}\\n\\n/**\\n * Add some levels to various upgrades.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction initial_level_upgrade(ns) {\\n    const org = new Corporation(ns);\\n    const upgrade = [\\n        corp.upgrade.FOCUS,\\n        corp.upgrade.NEURAL,\\n        corp.upgrade.SPEECH,\\n        corp.upgrade.INJECTOR,\\n        corp.upgrade.FACTORY,\\n    ];\\n    for (let i = 0; i < corp_t.upgrade.INIT_LEVEL; i++) {\\n        upgrade.forEach((upg) => org.level_upgrade(upg));\\n    }\\n}\\n\\n/**\\n * The initial selling of materials.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction initial_material_sell(ns) {\\n    const org = new Corporation(ns);\\n    for (const div of org.all_divisions()) {\\n        cities.all.forEach((ct) => {\\n            org.material_initial_sell(div, ct, corp.material.FOOD);\\n            org.material_initial_sell(div, ct, corp.material.PLANT);\\n        });\\n    }\\n}\\n\\n/**\\n * The initial setup of our corporation.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction stage_one(ns) {\\n    expand_industry(ns);\\n    expand_city(ns);\\n    unlock_upgrade(ns);\\n    initial_hire(ns);\\n    hire_advert(ns);\\n    initial_material_sell(ns);\\n    initial_level_upgrade(ns);\\n    initial_bulk_purchase(ns);\\n}\\n\\n/**\\n * Purchase an unlock upgrade.  This is a one-time unlockable upgrade.  It\\n * applies to the entire corporation and cannot be levelled.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction unlock_upgrade(ns) {\\n    const org = new Corporation(ns);\\n    if (!org.has_unlock_upgrade(corp.unlock.SMART)) {\\n        org.buy_unlock_upgrade(corp.unlock.SMART);\\n        org.enable_smart_supply();\\n    }\\n}\\n\\n/**\\n * Create and manage a corporation.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Sanity check.\\n    if (!has_corporation_api(ns)) {\\n        log(ns, \\\"No access to Corporation API\\\", colour.RED);\\n        return;\\n    }\\n    // Create our corporation.  If we do not have access to the Office and\\n    // Warehouse APIs, then we cannot automate the early stages of our\\n    // corporation.  We want to automate as much of the game as possible.\\n    // Without the above APIs, quit the script as soon as possible.\\n    await create_corp(ns);\\n    if (!has_office_warehouse_api(ns)) {\\n        log(ns, \\\"No access to Warehouse and/or Office APIs\\\", colour.RED);\\n        return;\\n    }\\n    // Manage our corporation.\\n    stage_one(ns);\\n}\\n\",\"filename\":\"/corporation/corp.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f649e6a1-7483-4d2d-864a-f5e038db887f\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9d0e0c6c-534c-49d3-a719-ab55184377b4\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/27042fcb-6d78-4222-9689-fdfdb6bc8252\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6c514a5f-5f7d-4011-bf49-6778992a5828\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/01980f2f-82f2-47de-aef8-923a801dbebb\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2b609a3a-8b28-4efd-944c-1ac2259c9be7\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ef790906-dcea-43d5-93f5-a021c049f418\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6b632c82-b0da-402b-a476-577c9ecaa97d\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/275a865b-4b0b-45b0-85d3-34892ff19425\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c69c4ded-a136-4824-a487-09e3156127b9\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/91d3a578-0d87-4638-b7ae-fe91671023fd\",\"moduleSequenceNumber\":724812},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/f36bfa28-5b45-4a67-86ad-19bc4f10c751\",\"moduleSequenceNumber\":724851},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/081b6677-3f4c-44a0-a0cc-33d0eff09f75\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5625432a-b81f-4020-a42e-df044713aa46\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ea801ce7-6b82-4247-90fa-61cf7c5f1f90\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/41f58842-ad28-4daa-9d14-f021a8edfe1a\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/dc8aeba7-23c6-4818-9c0a-9652143e4068\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/338fb844-c648-444d-b815-93601dd0ff86\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a2a828dc-9a91-48a8-bf72-08eab1a3d812\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/03ac7ca5-77ec-4ee7-b01a-ba68095abfed\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0c9a7fba-106d-4f11-bde7-0e76d141dea6\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/35ba4cd5-867b-49f7-8df3-7280cddaa9d3\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/4fcd89ee-31b3-45d7-981d-2b8dc71942f1\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d4ddcdc1-8de1-4613-a3b8-dd93e3d76057\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e7145bb4-eefc-4063-a105-1c9f43c725a6\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/30de45ad-1e19-47c1-bdf6-f495ba258412\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/be54af71-97bd-451a-a193-deaf6da963a4\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ae0f8b5a-d36e-49ab-875e-2aba6fbc3ccd\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4d3b4bc0-09d5-41eb-adbb-ed474107de67\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e926d5f6-0d8c-4367-83d2-592f60103bf3\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a9bf6579-029e-4fe9-b807-0ea24aacf80f\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fda25f94-36fb-4112-87e4-4171a76c3196\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e4da6c10-014c-47b4-b979-431bcda4a311\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6e921c7e-7d75-4616-b39f-ed7d196d23ca\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cb1c0505-a078-46d9-a3de-28ead68a4a9c\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c7af0de7-2756-43d7-b221-a1d3e39fbce3\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fbbea207-9bf2-4a65-9e18-9c778c3561b0\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c4c6986c-f7f1-4392-b376-d1b92afb26bc\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e200cf5b-43a2-42f0-9683-115f580d8119\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5743e6dd-1bda-48aa-9370-53eeef95fb5c\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5d5ca803-7ef6-409b-b796-c8a14529be4c\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/69bb1215-ae1b-478d-b8d5-e1f3ae2899f5\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/94bf9533-f93a-431a-9312-3373e92f23ed\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/195fd801-460d-431a-bd45-83ea4284fbb0\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/0346b426-7078-4160-bbd2-6ef42b78b0f2\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d02e53ed-a606-4750-9d25-866e3989bdbd\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/corp.js\",\"url\":\"blob:https://danielyxie.github.io/beecab5f-bc5d-4e2b-9768-3ffe5702ca8a\",\"moduleSequenceNumber\":724815},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/3a62cdef-aadd-4222-991f-ca0266467c65\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/b4fd94c2-bbb3-49b3-8cde-ef56d4e3fcf8\",\"moduleSequenceNumber\":724812},{\"filename\":\"/lib/corporation/corp.js\",\"url\":\"blob:https://danielyxie.github.io/d74e08b5-0753-49c9-a10a-5b1396c729e9\",\"moduleSequenceNumber\":724831},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/33950552-7d44-4008-83c6-638cbb63e7cb\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a0b0da40-83d7-41eb-9203-ffd52f8c45e4\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/539995db-bd5c-4e15-a726-9b2e7da5a681\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/corp.js\",\"url\":\"blob:https://danielyxie.github.io/8b0551ab-0791-4fce-b429-9431f294b51a\",\"moduleSequenceNumber\":724815},{\"filename\":\"/corporation/corp.js\",\"url\":\"blob:https://danielyxie.github.io/259dc4e8-0611-459f-9808-e31b3cc77e62\",\"moduleSequenceNumber\":724922}],\"dependents\":[],\"ramUsage\":9.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725345,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport {\\n    augment_to_install,\\n    purchase_augment,\\n} from \\\"/lib/singularity/augment.js\\\";\\nimport { has_gang_api } from \\\"/lib/source.js\\\";\\n\\n/**\\n * Purchase Augmentations from our gang faction.\\n *\\n * @param ns The Netscript API.\\n * @return True if we bought at least one Augmentation; false otherwise.\\n */\\nasync function buy_augment(ns) {\\n    const { faction } = ns.gang.getGangInformation();\\n    await purchase_augment(\\n        ns,\\n        faction,\\n        bool.NO_STOP_TRADE,\\n        bool.NO_BUY_NFG,\\n        bool.NO_RAISE_MONEY\\n    );\\n    const to_install = augment_to_install(ns);\\n    return to_install.length > 0;\\n}\\n\\n/**\\n * Purchase Augmentations from the faction in which we created a gang.  We use\\n * any money available to us.  This should help to speed up our run through a\\n * BitNode.\\n *\\n * Usage: run gang/augment.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Sanity check.\\n    if (!has_gang_api(ns)) {\\n        log(ns, \\\"No access to Gang API\\\", colour.RED);\\n        return;\\n    }\\n    // The update loop.\\n    while (!ns.gang.inGang()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    const { faction } = ns.gang.getGangInformation();\\n    log(ns, `Purchasing Augmentations from gang faction: ${faction}`);\\n    const success = await buy_augment(ns);\\n    if (success) {\\n        log(ns, `Augmentations bought from ${faction}`);\\n        // The next script in the load chain.\\n        const script = \\\"/singularity/home.js\\\";\\n        const nthread = 1;\\n        ns.exec(script, home, nthread);\\n        return;\\n    }\\n    log(ns, `No Augmentations bought from ${faction}`);\\n}\\n\",\"filename\":\"/gang/augment.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":58.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725346,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport {\\n    armour,\\n    gang_augment,\\n    gang_t,\\n    members,\\n    penalty_t,\\n    rootkit,\\n    task_t,\\n    vehicle,\\n    weapon,\\n} from \\\"/lib/constant/gang.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { Gangster } from \\\"/lib/gang/gangster.js\\\";\\nimport { reassign_vigilante, strongest_member } from \\\"/lib/gang/util.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Ascend a gang member.  Ascension provides a permanent boost to a member's\\n * stat multipliers.  However, the costs include:\\n *\\n * (1) Reset the member's progress and stats.\\n * (2) Lose all non-Augmentation equipment.\\n * (3) Lose all respect points gained by the member.  The respect points gained\\n *     by this member will be deducted from our total respect.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction ascend(ns) {\\n    const member = ns.gang.getMemberNames();\\n    if (member.length === 0) {\\n        return;\\n    }\\n    const gangster = new Gangster(ns);\\n    member.forEach((s) => gangster.ascend(s));\\n}\\n\\n/**\\n * Marshall our forces on the border and be ready for war.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction casus_belli(ns) {\\n    assert(ns.gang.getGangInformation().territoryWarfareEngaged);\\n    assert(has_max_members(ns));\\n    const gangster = new Gangster(ns);\\n    gangster.turf_war(ns.gang.getMemberNames());\\n}\\n\\n/**\\n * Choose gang members to be assigned to territory warfare.  This is territory\\n * warfare to help increase our gang power, not a clash against a rival gang.\\n * We want the following members to engage in turf war:\\n *\\n * (1) Vanguard x 1\\n * (2) Artillery x 1\\n * (3) Pilot x 1\\n * (4) Punk x 1\\n *\\n * As we have multiple gang members who hold the role of Punk, choose the\\n * strongest of those members.\\n *\\n * @param ns The Netscript API.\\n * @return An array of member names.  This is never an empty array.\\n */\\nfunction choose_warriors(ns) {\\n    const gangster = new Gangster(ns);\\n    const combatant = ns.gang\\n        .getMemberNames()\\n        .filter(\\n            (s) => gangster.is_vanguard(s)\\n                || gangster.is_artillery(s)\\n                || gangster.is_pilot(s)\\n        );\\n    assert(combatant.length > 0);\\n    // We want at most 1 Punk assigned to territory warfare.\\n    const punk = ns.gang.getMemberNames().filter((s) => gangster.is_punk(s));\\n    const punk_warrior = punk.filter((p) => gangster.is_warrior(p));\\n    assert(punk.length > 0);\\n    let warrior = [];\\n    if (punk_warrior.length > 0) {\\n        warrior = combatant.concat([]);\\n    } else {\\n        warrior = combatant.concat([strongest_member(ns, punk)]);\\n    }\\n    assert(warrior.length > 0);\\n    assert(warrior.length <= members.WARRIOR);\\n    return warrior;\\n}\\n\\n/**\\n * Create a gang within the given criminal organization.  If we are in a\\n * BitNode other than BN2.x, we must have a certain amount of negative karma\\n * as a pre-requisite for creating a gang.\\n *\\n * @param ns The Netscript API.\\n * @param fac A string representing the name of a criminal organization.\\n */\\nasync function create_gang(ns, fac) {\\n    assert(is_valid_faction(fac));\\n    if (ns.gang.inGang()) {\\n        log(ns, `Manage a gang in ${fac}`);\\n        return;\\n    }\\n    log(ns, `Create and manage a gang in ${fac}`);\\n    while (!ns.gang.inGang()) {\\n        ns.gang.createGang(fac);\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n}\\n\\n/**\\n * Reassign gang members to various tasks that help to lower our penalty.  As\\n * this is a criminal gang, our members can only engage in vigilante justice\\n * and are not able to engage in ethical hacking.  Choose a number of our\\n * gangsters and set them to vigilante justice.  The remaining members are given\\n * jobs that attract less wanted levels than their current jobs.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction decrease_penalty(ns) {\\n    reassign_vigilante(ns);\\n    const combatant = [];\\n    const other = [];\\n    const trainee = [];\\n    const gangster = new Gangster(ns);\\n    const candidate = ns.gang\\n        .getMemberNames()\\n        .filter((s) => !gangster.is_vigilante(s));\\n    candidate.forEach((s) => {\\n        if (gangster.needs_training(s)) {\\n            trainee.push(s);\\n        } else if (gangster.is_combatant(s)) {\\n            combatant.push(s);\\n        } else if (gangster.is_miscellaneous(s)) {\\n            other.push(s);\\n        }\\n    });\\n    gangster.train(trainee);\\n    graduate(ns);\\n    gangster.extort(combatant);\\n    gangster.blackmail(other);\\n}\\n\\n/**\\n * All Augmentations that raise the defense of a gang member.\\n */\\nfunction defensive_equipment_augment() {\\n    return Object.values(gang_augment).filter(\\n        (a) => a !== gang_augment.ARMS\\n            && a !== gang_augment.LEGS\\n            && a !== gang_augment.HEART\\n            && a !== gang_augment.WIRE\\n            && a !== gang_augment.NEURAL\\n            && a !== gang_augment.DATA\\n    );\\n}\\n\\n/**\\n * All weapons that raise the defense of a gang member.\\n */\\nfunction defensive_equipment_weapon() {\\n    return Object.values(weapon).filter((w) => w !== weapon.AWM);\\n}\\n\\n/**\\n * Whether to engage in territory warfare against a rival gang.  By default,\\n * we do not engage in turf warfare.  However, we enable turf warfare provided\\n * that the following conditions are satisfied:\\n *\\n * (1) We have the maximum number of gang members.\\n * (2) Our chance of winning against a rival gang is at least a given\\n *     percentage.\\n *\\n * However, if our gang already has taken over 100% of the territory, then\\n * there is no need to engage in turf warfare.\\n *\\n * @param ns The Netscript API.\\n * @return True if we are to engage in territory warfare against another gang;\\n *     false otherwise.\\n */\\nfunction enable_turf_war(ns) {\\n    if (has_all_turf(ns)) {\\n        return bool.NO_WAR;\\n    }\\n    if (has_max_members(ns) && min_victory_chance(ns) >= gang_t.WIN) {\\n        return bool.WAR;\\n    }\\n    return bool.NO_WAR;\\n}\\n\\n/**\\n * Attempt to equip each gang member with each of the following:\\n *\\n * (1) Augmentation\\n * (2) weapon\\n * (3) armour\\n * (4) vehicle\\n * (5) rootkit\\n *\\n * If a member already has an Augmentation, weapon, armour, vehicle, or rootkit\\n * then we attempt to give them another piece of equipment.  Our attempt can\\n * succeed or fail, depending on whether we have sufficient funds to purchase\\n * equipment.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction equip(ns) {\\n    const gangster = new Gangster(ns);\\n    for (const s of ns.gang.getMemberNames()) {\\n        // Equip items that raise a member's defense.  Higher defense translates\\n        // to a lower probability of death during a clash against a rival gang.\\n        // Always try to first purchase an Augmentation that raises defense\\n        // because the effects of Augmentations are persistent after an\\n        // ascension.  Next, we equip weapons that raise defense.  Not all\\n        // weapons raise the defense of a gang member.  Finally, we equip armour\\n        // pieces, all of which raise defense.\\n        equip_augment_def(ns, s);\\n        equip_weapon_def(ns, s);\\n        for (const amr of Object.values(armour)) {\\n            if (gangster.has_armour(s, amr)) {\\n                continue;\\n            }\\n            if (gangster.equip_armour(s, amr)) {\\n                break;\\n            }\\n        }\\n        // Now equip items that raise other stats.  Ensure we have first\\n        // equipped all items that raise defense.\\n        if (!has_all_def_equipment(ns, s)) {\\n            continue;\\n        }\\n        // Try to equip other Augmentations.\\n        const other_augment = Object.values(gang_augment).filter(\\n            (a) => !defensive_equipment_augment().includes(a)\\n        );\\n        for (const aug of other_augment) {\\n            if (gangster.has_augment(s, aug)) {\\n                continue;\\n            }\\n            if (gangster.equip_augment(s, aug)) {\\n                break;\\n            }\\n        }\\n        // Try to equip other weapons.\\n        const other_weapon = Object.values(weapon).filter(\\n            (w) => !defensive_equipment_weapon().includes(w)\\n        );\\n        for (const wpn of other_weapon) {\\n            if (gangster.has_weapon(s, wpn)) {\\n                continue;\\n            }\\n            if (gangster.equip_weapon(s, wpn)) {\\n                break;\\n            }\\n        }\\n        // Try to equip a new vehicle.\\n        for (const vhc of Object.values(vehicle)) {\\n            if (gangster.has_vehicle(s, vhc)) {\\n                continue;\\n            }\\n            if (gangster.equip_vehicle(s, vhc)) {\\n                break;\\n            }\\n        }\\n        // Try to equip a rootkit.  This should be low on our priority list\\n        // because members of a criminal gang primarily depend on their combat\\n        // stats and Charisma.\\n        for (const kit of Object.values(rootkit)) {\\n            if (gangster.has_rootkit(s, kit)) {\\n                continue;\\n            }\\n            if (gangster.equip_rootkit(s, kit)) {\\n                break;\\n            }\\n        }\\n    }\\n}\\n\\n/**\\n * Equip a gang member with various Augmentations that raise their defense.  The\\n * effects of Augmentations are persistent and a member does not lose them after\\n * an ascension.  We want to equip a member with Augmentations that raise their\\n * defense.  The higher is the defense of a member, the lower is the probability\\n * of death during a clash against a rival gang.  The following Augmentations\\n * raise defense:\\n *\\n * (1) Bionic Spine: 1.15\\n * (2) BrachiBlades: 1.4\\n * (3) Nanofiber Weave: 1.2\\n * (4) Synfibril Muscle: 1.3\\n * (5) Graphene Bone Lacings: 1.7\\n *\\n * Unfortunately, the following Augmentations do not raise defense:\\n *\\n * (1) Bionic Arms\\n * (2) Bionic Legs\\n * (3) Synthetic Heart\\n * (4) BitWire\\n * (5) Neuralstimulator\\n * (6) DataJack\\n *\\n * Refer to these files for more detail:\\n *\\n * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Gang/Gang.ts\\n * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Gang/data/upgrades.ts\\n *\\n * @param ns The Netscript API.\\n * @param name A string representing the name of our gang member.\\n */\\nfunction equip_augment_def(ns, name) {\\n    const gangster = new Gangster(ns);\\n    for (const aug of defensive_equipment_augment()) {\\n        if (gangster.has_augment(name, aug)) {\\n            continue;\\n        }\\n        if (gangster.equip_augment(name, aug)) {\\n            return;\\n        }\\n    }\\n}\\n\\n/**\\n * Equip a gang member with various weapons that raise their defense.  Weapons\\n * are important because most of them raise a gangster's defense.  While engaged\\n * in a clash against a rival gang, the defense of our gangster helps to lower\\n * the chance of death.  The higher is our member's defense, the lower is the\\n * probability of death.  The following weapons raise defense:\\n *\\n * (1) Baseball Bat: 1.04\\n * (2) Katana: 1.08\\n * (3) Glock 18C: 1.1\\n * (4) P90C: 1.1\\n * (5) Steyr AUG: 1.15\\n * (6) AK-47: 1.2\\n * (7) M15A10 Assault Rifle: 1.25\\n *\\n * Unfortunately, the AWM Sniper Rifle does not raise our member's defense.\\n * Refer to these files for more detail:\\n *\\n * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Gang/Gang.ts\\n * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Gang/data/upgrades.ts\\n *\\n * @param ns The Netscript API.\\n * @param name A string representing the name of our gang member.\\n */\\nfunction equip_weapon_def(ns, name) {\\n    const gangster = new Gangster(ns);\\n    for (const wpn of defensive_equipment_weapon()) {\\n        if (gangster.has_weapon(name, wpn)) {\\n            continue;\\n        }\\n        if (gangster.equip_weapon(name, wpn)) {\\n            return;\\n        }\\n    }\\n}\\n\\n/**\\n * Once a new member has completed their training, graduate and assign them\\n * their first job.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction graduate(ns) {\\n    const member = ns.gang.getMemberNames();\\n    const gangster = new Gangster(ns);\\n    gangster.graduate_combatant(member, task_t.COMBAT);\\n    gangster.graduate_hacker(member, task_t.HACK);\\n    gangster.graduate_other(member, task_t.CHARISMA);\\n}\\n\\n/**\\n * Whether we have equipped all items that raise a gang member's defense.\\n * Defense is important during a clash against a rival gang.  The higher is a\\n * member's defense, the lower is the probability of death during the clash.\\n *\\n * @param ns The Netscript API.\\n * @param name A string representing the name of a gang member.\\n * @return True if a gang member has all equipment that raise their defense;\\n *     false otherwise.\\n */\\nfunction has_all_def_equipment(ns, name) {\\n    const gangster = new Gangster(ns);\\n    for (const aug of defensive_equipment_augment()) {\\n        if (!gangster.has_augment(name, aug)) {\\n            return bool.NOT;\\n        }\\n    }\\n    for (const wpn of defensive_equipment_weapon()) {\\n        if (!gangster.has_weapon(name, wpn)) {\\n            return bool.NOT;\\n        }\\n    }\\n    for (const amr of Object.values(armour)) {\\n        if (!gangster.has_armour(name, amr)) {\\n            return bool.NOT;\\n        }\\n    }\\n    return bool.HAS;\\n}\\n\\n/**\\n * Whether our gang already controls 100% of the territory.\\n *\\n * @param ns The Netscript API.\\n * @return True if we already have control over 100% of the territory;\\n *     false otherwise.\\n */\\nfunction has_all_turf(ns) {\\n    return ns.gang.getGangInformation().territory >= 1;\\n}\\n\\n/**\\n * Whether we have the maximum number of members in our gang.\\n *\\n * @param ns The Netscript API.\\n * @return True if our gang is at capacity; false otherwise.\\n */\\nfunction has_max_members(ns) {\\n    return members.MAX === ns.gang.getMemberNames().length;\\n}\\n\\n/**\\n * Whether any of our gang members are currently committing acts of terrorism.\\n *\\n * @param ns The Netscript API.\\n * @return True if at least one gang member is committing acts of terrorism;\\n *     false otherwise.\\n */\\nfunction has_terrorist(ns) {\\n    const gangster = new Gangster(ns);\\n    for (const s of ns.gang.getMemberNames()) {\\n        if (gangster.is_terrorist(s)) {\\n            return true;\\n        }\\n    }\\n    return false;\\n}\\n\\n/**\\n * Whether any of our gang members are currently on vigilante justice.\\n *\\n * @param ns The Netscript API.\\n * @return True if at least one gang member is currently assigned to vigilante\\n *     justice; false otherwise.\\n */\\nfunction has_vigilante(ns) {\\n    const gangster = new Gangster(ns);\\n    for (const s of ns.gang.getMemberNames()) {\\n        if (gangster.is_vigilante(s)) {\\n            return true;\\n        }\\n    }\\n    return false;\\n}\\n\\n/**\\n * Whether our gang is engaged in turf warfare.\\n *\\n * @param ns The Netscript API.\\n * @return True if our gang is engaged in turf warfare against a rival gang;\\n *     false otherwise.\\n */\\nfunction is_in_war(ns) {\\n    if (!ns.gang.getGangInformation().territoryWarfareEngaged) {\\n        return false;\\n    }\\n    const gangster = new Gangster(ns);\\n    const warrior = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_warrior(s));\\n    return warrior.length === members.MAX;\\n}\\n\\n/**\\n * Whether we are currently in a new tick.  Each tick lasts for approximately\\n * the time period as defined by the constant gang_t.TICK.  At the start of\\n * each tick, there is a chance for our gang to clash against a rival gang.\\n *\\n * @param ns The Netscript API.\\n * @param other An object containing information about other gangs.  The data\\n *     in the object should be from the previous tick.\\n * @return True if we are in a new tick; false otherwise.\\n */\\nfunction is_new_tick(ns, other) {\\n    const current = ns.gang.getOtherGangInformation();\\n    for (const g of Object.keys(current)) {\\n        if (\\n            current[g].power !== other[g].power\\n            || current[g].territory !== other[g].territory\\n        ) {\\n            return bool.NEW;\\n        }\\n    }\\n    return bool.NOT_NEW;\\n}\\n\\n/**\\n * Whether the given string represents the name of a criminal organization\\n * within which we can create a criminal gang.\\n *\\n * @param fac A string representing the name of a criminal organization.\\n * @return True if we can create a criminal gang within the given faction;\\n *     false otherwise.\\n */\\nfunction is_valid_faction(fac) {\\n    assert(fac.length > 0);\\n    const organization = [\\n        \\\"Slum Snakes\\\",\\n        \\\"Speakers for the Dead\\\",\\n        \\\"Tetrads\\\",\\n        \\\"The Dark Army\\\",\\n        \\\"The Syndicate\\\",\\n    ];\\n    return organization.includes(fac);\\n}\\n\\n/**\\n * The minimum chance of winning a clash against any rival gang.  The chance is\\n * reported as an integer percentage.  For example, if our chance to win a\\n * clash is 0.6879, we convert this to the percentage of 68.79 and take only\\n * the integer part, which in this case is 68%.\\n *\\n * @param ns The Netscript API.\\n * @return The minimum chance as an integer percentage of winning a clash\\n *     against any rival gang.\\n */\\nfunction min_victory_chance(ns) {\\n    let chance = Infinity;\\n    const our_gang = ns.gang.getGangInformation().faction;\\n    const other_gang = ns.gang.getOtherGangInformation();\\n    for (const g of Object.keys(other_gang)) {\\n        if (our_gang === g) {\\n            continue;\\n        }\\n        chance = Math.min(chance, ns.gang.getChanceToWinClash(g));\\n    }\\n    return Math.floor(chance * 100);\\n}\\n\\n/**\\n * Si vis pacem, para bellum.  Make preparation to increase our power.  We do\\n * not engage in turf warfare yet.  First, build our gang power.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction para_bellum(ns) {\\n    // If we already control 100% of the territory, there is no need to send\\n    // any gang member to turf warfare.\\n    if (has_all_turf(ns)) {\\n        return;\\n    }\\n    // We want at most members.WARRIOR members to be engaged in territory\\n    // warfare.  The remaining members should be in as high-paying jobs as\\n    // possible.  The 4 combatants can be assigned to arms trafficking and the\\n    // 4 miscellaneous members can be assigned to trafficking humans.  We can\\n    // have 8 members be involved in some form of trafficking.  However, we\\n    // also need 1 member to be committing acts of terrorism to help raise our\\n    // respect so we can recruit more members.  The number of members engaged\\n    // in some form of trafficking is effectively 7.  The subtraction of 1\\n    // accounts for the lone member who commits acts of terrorism.\\n    const threshold = members.MAX - members.WARRIOR - 1;\\n    // Not yet time to send gang members to turf warfare.\\n    const gangster = new Gangster(ns);\\n    const trafficker = ns.gang\\n        .getMemberNames()\\n        .filter(\\n            (s) => gangster.is_arms_trafficker(s)\\n                || gangster.is_human_trafficker(s)\\n        );\\n    if (trafficker.length < threshold) {\\n        return;\\n    }\\n    // Choose various combatants and reassign them to turf warfare.\\n    assert(trafficker.length >= threshold);\\n    gangster.turf_war(choose_warriors(ns));\\n}\\n\\n/**\\n * The penalty p is defined as the ratio of the wanted level over our respect.\\n * Multiply p by 100 and we see that the penalty expresses the wanted level as\\n * a percentage of our respect.  Tasks that our gang members engage in would\\n * take p percent longer as compared to when our wanted level is zero.  Note\\n * that the wanted level can never be lower than 1.  Aim to keep the penalty p\\n * below a certain fraction.\\n *\\n * @param ns The Netscript API.\\n * @return The penalty as a percentage.\\n */\\nfunction penalty(ns) {\\n    const wanted = ns.gang.getGangInformation().wantedLevel;\\n    const { respect } = ns.gang.getGangInformation();\\n    const p = Math.floor(100 * (wanted / respect));\\n    assert(p >= 0);\\n    return p;\\n}\\n\\n/**\\n * Reassign gang members to some other tasks.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign(ns) {\\n    reassign_combatant(ns);\\n    reassign_hacker(ns);\\n    reassign_miscellaneous(ns);\\n    reassign_from_neutral(ns);\\n}\\n\\n/**\\n * When we no longer need to lower our penalty, reassign our gang members to\\n * other jobs.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign_after_vigilante_justice(ns) {\\n    const gangster = new Gangster(ns);\\n    gangster.neutral(ns.gang.getMemberNames());\\n    update(ns);\\n}\\n\\n/**\\n * Following territory warfare against a rival gang, reassign our gang members\\n * to other jobs.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign_after_warfare(ns) {\\n    const gangster = new Gangster(ns);\\n    gangster.neutral(ns.gang.getMemberNames());\\n    update(ns);\\n}\\n\\n/**\\n * Reassign high-level gang members to trafficking illegal arms.  Reassign\\n * gang members if their Strength stat is in the half-open interval [min, max).\\n * That is, we include the minimum threshold but exclude the maximum threshold.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to traffick illegal arms.\\n * @param min The minimum value for the Strength stat.\\n * @param max The maximum value for the Strength stat.\\n */\\nfunction reassign_arms_trafficking(ns, member, min, max) {\\n    const gangster = new Gangster(ns);\\n    const candidate = [];\\n    for (const s of member) {\\n        if (!has_all_turf(ns)) {\\n            if (gangster.is_terrorist(s) || gangster.is_warrior(s)) {\\n                continue;\\n            }\\n        }\\n        if (min <= gangster.strength(s) && gangster.strength(s) < max) {\\n            candidate.push(s);\\n        }\\n    }\\n    gangster.traffick_arms(candidate);\\n}\\n\\n/**\\n * Reassign our miscellaneous gang members to threaten and blackmail\\n * high-profile targets.  Reassign our members if their Charisma stat is in the\\n * half-open interval [min, max).  We include the minimum threshold but exclude\\n * the maximum threshold.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to threaten and blackmail people.\\n * @param min The minimum value for the Charisma stat.\\n * @param max The maximum value for the Charisma stat.\\n */\\nfunction reassign_blackmail(ns, member, min, max) {\\n    const gangster = new Gangster(ns);\\n    const candidate = member.filter(\\n        (s) => min <= gangster.charisma(s) && gangster.charisma(s) < max\\n    );\\n    gangster.blackmail(candidate);\\n}\\n\\n/**\\n * Reassign combatants to other jobs.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign_combatant(ns) {\\n    const gangster = new Gangster(ns);\\n    const combatant = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_combatant(s));\\n    // Assign gang members with mid- to advanced-level stats to more\\n    // profitable jobs.\\n    reassign_extortion(ns, combatant, task_t.EXTORT, task_t.ROBBERY);\\n    reassign_robbery(ns, combatant, task_t.ROBBERY, task_t.TRAFFICK_ARMS);\\n    // Try to have at least one gang member assigned to commit acts of\\n    // terrorism.  This should help to increase our respect so we can recruit\\n    // more members.  However, if we already have the maximum number of\\n    // gangsters, then there is no need to have anyone be terrorists.\\n    reassign_terrorism(ns, combatant, task_t.TERROR, Infinity);\\n    // Assign other high-level members to trafficking illegal arms.\\n    reassign_arms_trafficking(ns, combatant, task_t.TRAFFICK_ARMS, Infinity);\\n}\\n\\n/**\\n * Reassign our miscellaneous gang members to run a con.  Reassign our members\\n * if their Charisma stat is in the half-open interval [min, max).  We include\\n * the minimum threshold but exclude the maximum threshold.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to run a con.\\n * @param min The minimum value for the Charisma stat.\\n * @param max The maximum value for the Charisma stat.\\n */\\nfunction reassign_con(ns, member, min, max) {\\n    const gangster = new Gangster(ns);\\n    const candidate = member.filter(\\n        (s) => min <= gangster.charisma(s) && gangster.charisma(s) < max\\n    );\\n    gangster.con(candidate);\\n}\\n\\n/**\\n * Reassign mid-level gang members to strongarm civilians on our turf.\\n * Reassign gang members if their Strength stat is in the half-open interval\\n * [min, max).  That is, we include the minimum threshold but exclude the\\n * maximum threshold.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to strongarm civilians.\\n * @param min The minimum value for the Strength stat.\\n * @param max The maximum value for the Strength stat.\\n */\\nfunction reassign_extortion(ns, member, min, max) {\\n    const gangster = new Gangster(ns);\\n    const candidate = member.filter(\\n        (s) => min <= gangster.strength(s) && gangster.strength(s) < max\\n    );\\n    gangster.extort(candidate);\\n}\\n\\n/**\\n * Reassign anyone who is in the neutral state to a default task.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign_from_neutral(ns) {\\n    const gangster = new Gangster(ns);\\n    const idle = ns.gang.getMemberNames().filter((s) => gangster.is_idle(s));\\n    if (idle.length === 0) {\\n        return;\\n    }\\n    const combatant = idle.filter((s) => gangster.is_combatant(s));\\n    const other = idle.filter(\\n        (s) => gangster.is_hacker(s) || gangster.is_miscellaneous(s)\\n    );\\n    gangster.extort(combatant);\\n    gangster.con(other);\\n}\\n\\n/**\\n * Reassign our Hacker to some other job.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign_hacker(ns) {\\n    const gangster = new Gangster(ns);\\n    const hacker = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_hacker(s));\\n    assert(hacker.length === 1);\\n    // This is not a hacking gang.  Reassign the Hacker to one of the jobs\\n    // normally done by a miscellaneous gang member.\\n    reassign_con(ns, hacker, task_t.CON, task_t.BLACKMAIL);\\n    reassign_blackmail(ns, hacker, task_t.BLACKMAIL, task_t.TRAFFICK_HUMAN);\\n    // If we already control 100% of the territory, then assign everyone to\\n    // trafficking illegal arms because this task generally earns more money\\n    // than human trafficking.\\n    if (has_all_turf(ns)) {\\n        reassign_arms_trafficking(ns, hacker, task_t.TRAFFICK_ARMS, Infinity);\\n        return;\\n    }\\n    reassign_human_trafficking(ns, hacker, task_t.TRAFFICK_HUMAN, Infinity);\\n}\\n\\n/**\\n * Reassign our miscellaneous gang members to engage in human trafficking.\\n * Reassign our members if their Charisma stat is in the half-open interval\\n * [min, max).  We include the minimum threshold but exclude the maximum\\n * threshold.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to operate a human trafficking ring.\\n * @param min The minimum value for the Charisma stat.\\n * @param max The maximum value for the Charisma stat.\\n */\\nfunction reassign_human_trafficking(ns, member, min, max) {\\n    const gangster = new Gangster(ns);\\n    const candidate = member.filter(\\n        (s) => min <= gangster.charisma(s) && gangster.charisma(s) < max\\n    );\\n    gangster.traffick_human(candidate);\\n}\\n\\n/**\\n * Reassign miscellaneous gang members to various jobs.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign_miscellaneous(ns) {\\n    const gangster = new Gangster(ns);\\n    const other = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_miscellaneous(s));\\n    reassign_con(ns, other, task_t.CON, task_t.BLACKMAIL);\\n    reassign_blackmail(ns, other, task_t.BLACKMAIL, task_t.TRAFFICK_HUMAN);\\n    // If we already control 100% of the territory, then assign everyone to\\n    // trafficking illegal arms because this task generally earns more money\\n    // than human trafficking.\\n    if (has_all_turf(ns)) {\\n        reassign_arms_trafficking(ns, other, task_t.TRAFFICK_ARMS, Infinity);\\n        return;\\n    }\\n    reassign_human_trafficking(ns, other, task_t.TRAFFICK_HUMAN, Infinity);\\n}\\n\\n/**\\n * Reassign above mid-level gang members to armed robbery.  Reassign gang\\n * members if their Strength stat is in the half-open interval [min, max).\\n * That is, we include the minimum threshold but exclude the maximum threshold.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to armed robbery.\\n * @param min The minimum value for the Strength stat.\\n * @param max The maximum value for the Strength stat.\\n */\\nfunction reassign_robbery(ns, member, min, max) {\\n    const gangster = new Gangster(ns);\\n    const candidate = member.filter(\\n        (s) => min <= gangster.strength(s) && gangster.strength(s) < max\\n    );\\n    gangster.robbery(candidate);\\n}\\n\\n/**\\n * Reassign advanced-level gang members to commit acts of terrorism.  Reassign\\n * gang members if their Strength stat is in the half-open interval [min, max).\\n * That is, we include the minimum threshold but exclude the maximum threshold.\\n * We usually assign members to acts of terrorism because this task greatly\\n * increases respect, which in turn helps to recruit new members, but does not\\n * generate income.  However, if we already have the maximum number of members,\\n * there is no reason to have any terrorists around.  Only assign a limited\\n * number of members to terrorism.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to acts of terrorism.\\n * @param min The minimum value for the Strength stat.\\n * @param max The maximum value for the Strength stat.\\n */\\nfunction reassign_terrorism(ns, member, min, max) {\\n    if (has_terrorist(ns) && !has_max_members(ns)) {\\n        return;\\n    }\\n    // We already have the maximum number of gang members.  Reassign the\\n    // terrorists to trafficking illegal arms.\\n    const gangster = new Gangster(ns);\\n    if (has_max_members(ns)) {\\n        const name = ns.gang\\n            .getMemberNames()\\n            .filter((s) => gangster.is_terrorist(s));\\n        gangster.traffick_arms(name);\\n        return;\\n    }\\n    assert(!has_terrorist(ns));\\n    assert(!has_max_members(ns));\\n    // We want our Vanguard to commit acts of terrorism.\\n    const vanguard = member.filter(\\n        (s) => gangster.is_vanguard(s)\\n            && min <= gangster.strength(s)\\n            && gangster.strength(s) < max\\n    );\\n    if (vanguard.length === 0) {\\n        return;\\n    }\\n    assert(vanguard.length === 1);\\n    gangster.terrorism(vanguard);\\n}\\n\\n/**\\n * Recruit as many new members as possible.  Set the newbies to train their\\n * various stats.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction recruit(ns) {\\n    const gangster = new Gangster(ns);\\n    if (ns.gang.getMemberNames().length < members.MAX) {\\n        const newbie = gangster.recruit();\\n        gangster.train(newbie);\\n        if (newbie.length > 0) {\\n            newbie.forEach((s) => log(ns, `Recruited new member: ${s}`));\\n        }\\n    }\\n}\\n\\n/**\\n * Retrain the stats of gang members as necessary.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction retrain(ns) {\\n    const gangster = new Gangster(ns);\\n    const member = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.needs_training(s));\\n    gangster.train(member);\\n}\\n\\n/**\\n * Manage our criminal gang.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction update(ns) {\\n    recruit(ns);\\n    retrain(ns);\\n    graduate(ns);\\n    // Ascend a gang member before we spend any more money on them.  After the\\n    // ascension, the member would lose all equipment and their stats would\\n    // reset.  We ascend the member now so down the pipeline we can retrain\\n    // and re-equip them.\\n    ascend(ns);\\n    equip(ns);\\n    // Do we have anyone on vigilante justice?\\n    if (has_vigilante(ns)) {\\n        if (penalty(ns) <= penalty_t.LOW) {\\n            reassign_after_vigilante_justice(ns);\\n            return;\\n        }\\n    }\\n    // Initially, our gang has a small number of members.  Assigning one or\\n    // more members to vigilante justice would do precious little to decrease\\n    // our wanted level.  With such a small membership, it is more important to\\n    // raise the members' stats and recruit more members than to lower our\\n    // wanted level.\\n    if (ns.gang.getMemberNames().length > members.HALF) {\\n        // Is our penalty too high?  If our penalty percentage exceeds a given\\n        // threshold, then reassign some gang members to vigilante justice in\\n        // order to lower our penalty.  Furthermore, reassign the remaining\\n        // members to jobs that attract a lower wanted level.\\n        if (penalty(ns) >= penalty_t.HIGH) {\\n            decrease_penalty(ns);\\n            return;\\n        }\\n    }\\n    reassign(ns);\\n    // Prepare for war.\\n    para_bellum(ns);\\n}\\n\\n/**\\n * Create and manage a criminal gang.  Our objective is to get a criminal gang\\n * started.  We let members train their stats.  Once a member graduates out of\\n * training, we set them to generate some money.  In the early stage of a\\n * BitNode, we need as many sources of income as possible and a criminal gang\\n * happens to be a source of revenue.\\n *\\n * This script accepts a command line argument, i.e. the name of the faction\\n * within which to create a criminal gang.  The faction must be a criminal\\n * organization.   We can create a criminal gang within any of the following\\n * criminal organizations:\\n *\\n * (1) Slum Snakes\\n * (2) Tetrads\\n * (3) The Syndicate\\n * (4) The Dark Army\\n * (5) Speakers for the Dead\\n *\\n * Usage: run gang/crime.js [faction]\\n * Example: run gang/crime.js \\\"Slum Snakes\\\"\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress various log messages.\\n    ns.disableLog(\\\"gang.setTerritoryWarfare\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Sanity checks.\\n    if (ns.args.length !== 1) {\\n        ns.tprint(\\\"Must provide the name of a criminal organization.\\\");\\n        return;\\n    }\\n    const faction = ns.args[0];\\n    if (!is_valid_faction(faction)) {\\n        ns.tprint(`Cannot create criminal gang within faction: ${faction}`);\\n        return;\\n    }\\n    // Create our criminal gang and recruit the first crop of gangsters.  By\\n    // default, we disable territory warfare.  Instead, we concentrate on\\n    // recruitment and building the strengths of our gang members.\\n    await create_gang(ns, faction);\\n    log(ns, `Disable territory warfare for gang in ${faction}`);\\n    ns.gang.setTerritoryWarfare(bool.DISABLE);\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    recruit(ns);\\n    // Manage our gang.\\n    // A tick is a period of time as defined by the constant gang_t.TICK.  At\\n    // the start of each tick, there is a chance for our gang to clash against\\n    // any rival gang.  The tick threshold is the time near the start of a new\\n    // tick.  If we are at the tick threshold, then do whatever is necessary to\\n    // prepare for a clash against a rival gang.\\n    let other_gang = ns.gang.getOtherGangInformation();\\n    let tick_threshold = 1;\\n    for (;;) {\\n        if (enable_turf_war(ns)) {\\n            if (!ns.gang.getGangInformation().territoryWarfareEngaged) {\\n                log(ns, `Enable territory warfare for gang in ${faction}`);\\n                ns.gang.setTerritoryWarfare(bool.ENABLE);\\n            }\\n        } else if (ns.gang.getGangInformation().territoryWarfareEngaged) {\\n            log(ns, `Disable territory warfare for gang in ${faction}`);\\n            ns.gang.setTerritoryWarfare(bool.DISABLE);\\n        }\\n        // Are we in a new tick?  If we are having a turf war, then let our\\n        // gang members fight until a new tick occurs.\\n        if (is_in_war(ns) && is_new_tick(ns, other_gang)) {\\n            // The tick threshold should be a little under gang_t.TICK.\\n            tick_threshold = Date.now() + (gang_t.TICK - wait_t.SECOND);\\n            other_gang = ns.gang.getOtherGangInformation();\\n            reassign_after_warfare(ns);\\n            await ns.sleep(wait_t.MILLISECOND);\\n            continue;\\n        }\\n        // We are in the same tick.  Is it time to go to war?\\n        if (Date.now() > tick_threshold) {\\n            if (ns.gang.getGangInformation().territoryWarfareEngaged) {\\n                casus_belli(ns);\\n                await ns.sleep(wait_t.MILLISECOND);\\n                continue;\\n            }\\n        }\\n        update(ns);\\n        await ns.sleep(wait_t.MILLISECOND);\\n    }\\n}\\n\",\"filename\":\"/gang/crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.8,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725347,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.createGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getOtherGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getChanceToWinClash\",\"cost\":4},{\"type\":\"fn\",\"name\":\"gang.setTerritoryWarfare\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getAscensionResult\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.ascendMember\",\"cost\":4},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bitnode } from \\\"/lib/constant/bn.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { gang_t } from \\\"/lib/constant/gang.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport {\\n    join_faction,\\n    raise_combat_stats,\\n    raise_hack,\\n} from \\\"/lib/singularity/faction.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The karma threshold.  We want to lower our karma to a given amount.  Outside\\n * of BN2, to join a gang we must have karma at -54,000 or lower.  It takes a\\n * very long time to achieve this many negative karma.  A more sensible option\\n * is to have a target karma value and try to lower our karma to that value.\\n * Then move on.  Say we want to lower our karma in 4 batches, each batch is\\n * followed by possibly a soft reset.  In each batch, we would need to achieve\\n * -13,500 karma.\\n *\\n * @param ns The Netscript API.\\n * @return Our current negative karma plus some more negative karma value as\\n *     low as -13,500.  Return 0 if we have enough negative karma to create a\\n *     gang.\\n */\\nfunction karma_threshold(ns) {\\n    const player = new Player(ns);\\n    const current_karma = Math.floor(player.karma());\\n    if (current_karma <= gang_t.KARMA) {\\n        return 0;\\n    }\\n    let target = -13500;\\n    const delta = gang_t.KARMA - current_karma;\\n    if (Math.abs(delta) < Math.abs(target)) {\\n        target = delta;\\n    }\\n    return Math.floor(current_karma + target);\\n}\\n\\n/**\\n * Run the next script(s) in our load chain for criminal gangs.\\n *\\n * @param ns The Netscript API.\\n * @param faction The name of a criminal organization.  Must be a faction that\\n *     allows us to create a criminal gang.\\n */\\nfunction load_chain(ns, faction) {\\n    const script = \\\"/gang/crime.js\\\";\\n    const nthread = 1;\\n    ns.exec(script, home, nthread, faction);\\n}\\n\\n/**\\n * Decrease our karma low enough to allow us to create a gang.  We need -54,000\\n * karma.  Homicide yields -3 karma so we must commit homicide at most 18,000\\n * times.  We lower our karma in batches.  After each batch we might not have\\n * enough negative karma to create a gang.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function lower_karma(ns) {\\n    const threshold = karma_threshold(ns);\\n    ns.singularity.goToLocation(cities.generic.slum); // Raise Int XP.\\n    ns.singularity.commitCrime(crimes.KILL, bool.FOCUS);\\n    const player = new Player(ns);\\n    while (Math.floor(player.karma()) > threshold) {\\n        if (Math.floor(player.karma()) < gang_t.KARMA) {\\n            break;\\n        }\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * NOTE: Assume we are not in BN2.\\n *\\n * Join the criminal faction Speakers for the Dead.  Our ultimate purpose is to\\n * form and manage a gang within that faction.  To receive an invitation from\\n * Speakers for the Dead, we must satisfy these requirements:\\n *\\n * (1) At least 100 Hack.\\n * (2) At least 300 in each combat stat.\\n * (3) Killed at least 30 people.\\n * (4) Negative karma at -45 or lower.\\n * (5) Not working for CIA or NSA.\\n *\\n * Usage: run gang/dead-speakers.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Should not be in BN2.  If in BN2, it's easier to join Slum Snakes.\\n    assert(bitnode[\\\"Rise of the Underworld\\\"] !== ns.getPlayer().bitNodeN);\\n    // Should not be working for any of the banned companies.\\n    const fac = \\\"Speakers for the Dead\\\";\\n    const player = new Player(ns);\\n    faction_req[fac].ban.map((e) => assert(!player.is_employer(e)));\\n    // Raise Hack and combat stats, ensure we have the required minimum karma,\\n    // and killed the required number of people.  Then join the faction\\n    // Speakers for the Dead.  Lower our karma so we can create a gang.\\n    await lower_karma(ns);\\n    if (!player.faction().includes(fac)) {\\n        await raise_hack(ns, faction_req[fac].hack);\\n        await raise_combat_stats(ns, faction_req[fac].combat);\\n        assert(player.karma() <= faction_req[fac].karma);\\n        await join_faction(ns, fac);\\n    }\\n    load_chain(ns, fac);\\n}\\n\",\"filename\":\"/gang/dead-speakers.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":46.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725348,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_gang_api } from \\\"/lib/source.js\\\";\\n\\n/**\\n * Decide which criminal faction to join.  Our goal is to create a gang within\\n * a criminal organization.  We can create a criminal gang within any of the\\n * following criminal organizations:\\n *\\n * (1) Slum Snakes\\n * (2) Tetrads\\n * (3) The Syndicate\\n * (4) The Dark Army\\n * (5) Speakers for the Dead\\n *\\n * Slum Snakes has the lowest requirements for sending a faction invitation.\\n * This fits well with BN2 because in that BitNode we only need to join a\\n * criminal faction and then would be allowed to create a gang.  Thus, if we\\n * are in BN2 we should join Slum Snakes as early as possible and then create\\n * our gang.  In BitNodes other than BN2, we must satisfy 2 requirements to\\n * create a gang:\\n *\\n * (1) Our karma must be -54,000 or lower.\\n * (2) Satisfy the requirements for receiving an invitation from a criminal\\n *     faction.\\n *\\n * Thus, in BitNodes other than BN2, we should lower our karma as quickly as\\n * possible.  By the time our negative karma is at -54,000 or lower, it is\\n * likely that we would have also satisfied the requirements to join one of the\\n * other factions listed above.  We might be tempted to join Speakers for the\\n * Dead and create our criminal gang within that faction.  One reason is that\\n * Speakers for the Dead has the highest power multiplier of all criminal\\n * factions:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/power.ts\\n *\\n * The Black Hand has the same power multiplier as Speakers for the Dead.\\n * These are the only 2 factions with the highest power multipliers.  Why\\n * should we create our gang within any of these 2 factions?  The power\\n * multiplier affects only NPC gangs, not the gang we create.  The higher is\\n * the power multiplier of an NPC gang, the quicker would its power rise.\\n * Creating a gang within either of the above 2 factions means we would only\\n * need to worry about catching up with the power of the other powerful NPC\\n * gang.  However, this can be a problem because the most powerful NPC gang\\n * would devour the other less powerful NPC gangs and easily take over their\\n * territories.  If we have 2 powerful NPC gangs, i.e. Speakers for the Dead\\n * and The Black Hand, they can duke it out amongst themselves.  They might\\n * swallow up the territories of other weaker NPC gangs, but when these 2\\n * powerful gangs fight amongst themselves it can take a long time for one of\\n * them to be vanquished.\\n *\\n * Anyway, join Slum Snakes regardless of the BitNode we are in.\\n *\\n * Usage: run gang/go.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    if (!has_gang_api(ns)) {\\n        log(ns, \\\"No access to Gang API\\\", colour.RED);\\n        return;\\n    }\\n    // Regardless of the BitNode we are in, join Slum Snakes and set up our\\n    // gang within that faction.\\n    const script = [\\n        \\\"/gang/augment.js\\\",\\n        \\\"/gang/program.js\\\",\\n        \\\"/gang/slum-snakes.js\\\",\\n    ];\\n    const nthread = 1;\\n    script.forEach((s) => ns.exec(s, home, nthread));\\n    // If we want, we can create a criminal gang within Speakers for the Dead.\\n    // Note that it can take a very long time to satisfy all requirements for\\n    // joining this faction and setting up a gang within that faction.\\n    // const script = \\\"/gang/dead-speakers.js\\\";\\n    // ns.exec(script, home, nthread);\\n}\\n\",\"filename\":\"/gang/go.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b64d1d8c-15f7-40f4-9a5d-ef16be3695ba\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/750b27ea-9779-4b52-9502-8277d72d97a3\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/56494ae8-c50b-4d4c-afd9-d689e0896712\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/62b4e2df-2a34-47cc-abc0-4bdffd876594\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/39134ff6-f865-4bb4-abe2-9f5900d95403\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/08f3c08d-7bbb-4fce-ba77-32be768d545c\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f2a27a76-5fa0-4623-a742-776390c22f49\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7ddfcb68-3b23-4be1-97b5-b82fdd25f707\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/96dd693a-ceb9-495a-b6b1-d5b4b8201be7\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/dbefcf48-42dc-42b7-a51d-0513313f4706\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/e2e651e9-b780-4b08-8e37-6ee52c5d3e51\",\"moduleSequenceNumber\":724812},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/3d4f2274-59cc-426d-a488-4a2cc048762d\",\"moduleSequenceNumber\":724851},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/79e15380-5287-4194-9599-701873ec70a3\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/745d2603-7eef-44f2-b2e1-11d7205288ae\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6332ba0a-cb9e-4499-8fb6-8fa4cc79f2e5\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b694f984-e12b-4e17-a0c3-b272e5832a37\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e0354b44-6763-4531-9447-406e3e39d949\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e09419a5-2802-4b3a-9cc8-dd77dc186a5b\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9fd66a6b-61d4-4677-b412-147a9a8a3f48\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/42270be4-6c2e-4f56-b9f1-b5a82399b3fd\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/97eb267e-4d9e-418f-8241-5917799c8762\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/07171eea-aa4c-4e5c-9d35-f1562ab704aa\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/1b5d3bbc-90bd-45f3-85af-efdde0fc9c7c\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9d5a41c9-0225-4e25-b85c-e9266f7ff0ee\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/677bc609-b80f-4d62-8d68-dfc0050da9f9\",\"moduleSequenceNumber\":724823},{\"filename\":\"/gang/go.js\",\"url\":\"blob:https://danielyxie.github.io/affb472f-3ad9-4cbe-ac36-b530b1f8811f\",\"moduleSequenceNumber\":724926}],\"dependents\":[],\"ramUsage\":8.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725349,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { buy_all_programs } from \\\"/lib/singularity/program.js\\\";\\nimport { has_gang_api } from \\\"/lib/source.js\\\";\\n\\n/**\\n * Purchase programs via the dark web.  We use any money available to us, most\\n * likely money generated by our gang.\\n *\\n * Usage: run gang/program.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Purchase programs via the dark web.\\n    if (has_gang_api(ns)) {\\n        log(ns, \\\"Buy programs via dark web\\\");\\n        await buy_all_programs(ns, bool.NO_VISIT, bool.NO_WORK);\\n    }\\n}\\n\",\"filename\":\"/gang/program.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/52f47214-1a3f-4de6-a450-de291530f252\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a27f2c6e-0316-4e55-83d6-c0ee8e53cd52\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/214a03b1-6a42-4345-bed8-b42fa4298f81\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8523d9d6-377c-4689-878a-771258e801e6\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/96c61945-9130-461b-92f0-8cd1ab1ad234\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f3af142d-d1be-4fbe-a2e7-bd9e7321e745\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/34293af2-3cf8-4fcd-8eb5-d9c4adc62d3a\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1e2e1184-0cda-4681-8146-463ad22ed276\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/05cfd3e2-63bc-44a4-b0cf-ee26be14224d\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/13e5bf41-8a2c-485c-9641-1b487d0be1d6\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/1d711b47-7adf-4afe-96b8-68c85c1cdfb0\",\"moduleSequenceNumber\":724812},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/3efd643d-03b1-4310-b646-db618a426b64\",\"moduleSequenceNumber\":724851},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9c9b11d0-1a44-4afb-9f55-590e837cf879\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e328780a-6040-464b-a7da-cfdf06c1148e\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fc356486-b5a8-4ace-bdf5-765ea149671a\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/220fd1ef-3c4b-43f0-a438-e6c9e9af8d4a\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3e98622a-b30e-414f-b50e-3a24ccab6506\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/81023adb-eb79-4d85-922b-fb663b6df199\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6ec66268-889d-44f7-b485-17acc0e5f9c5\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/205b9a60-4c4f-4e4e-bfd6-918aa5c97540\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7ae8e883-61ce-42ca-8eba-53f3d82fc0c7\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6993592c-c0a6-4f9c-8ed9-84e44aba33a9\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8de65c41-d32b-4196-9dab-3f14be3a1e73\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/975de05e-4d78-49ab-ac48-6a7651aa8c22\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c23a1f79-4b08-40a7-a295-49398c72f6f3\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cd3c2b86-f8e1-426c-8c3c-67237f60770b\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8b63f6b8-864d-4aaf-bdc5-3f77befeccb6\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a06d88cf-30b1-4888-80a7-0bfb8c49bfcf\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0e63d18f-ab68-4636-af75-e03430b8dd3d\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cd407f3a-61f5-4f18-98e2-7e7cda52c022\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f9d6bc71-98eb-49fc-87a0-c6afbd815c06\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f41be00f-faa6-455d-9ad2-eb1a04ee9c43\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/301330d3-8e9d-4ef8-b867-35460a88ea60\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0b27392e-dc81-410c-bff0-8c65808aa686\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3a5b3ab9-4d70-41de-8316-c662af8c6bf7\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0b71b970-3452-4b05-ae28-8ba05e059e47\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e84c5b98-f20a-4b0b-a72d-e3e61905c747\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/76185aac-f0bf-4777-b3fd-13d7d918700f\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3a7917fc-60f5-4054-babd-c6274f0bbe23\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6f1f7785-437f-4c39-82c0-f5a88fc87e08\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/4daaa2a4-eedc-423f-af2e-8207417011d2\",\"moduleSequenceNumber\":724827},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2b8c291a-c623-45a3-8e34-d692f35edd83\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/e1d1eec9-fd48-4c49-9d9e-93003e3f2c2a\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/36938fab-e5d7-44eb-ba54-484f29efadcc\",\"moduleSequenceNumber\":724846},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8c833ab8-bd69-49ec-8e00-7af659efffe4\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/30b0d31b-aa18-4538-af31-23bdcd9c4b15\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/90dcdf0a-95ba-4f0c-8977-69e0863479b4\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/448884b1-2509-42c0-992c-4985b5e42301\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9a2a4464-2d12-4570-a9a3-ede8def25911\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2c185c9c-d26b-4571-b743-f07bedd748ae\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d55f5be5-1dfc-4364-9a52-597eb7a8d8c4\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/50ab1116-49d3-449e-8f48-7cca22e6a680\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6fbfa5aa-e5fb-43a9-9979-944d4c8b7723\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/874e180e-392f-4d8b-b190-9411e6850332\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7a35102f-2ce0-4263-847a-509f0191f38f\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4c276693-2d86-4a88-93c5-68e7f18aad1a\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/855f3d7f-6a62-4a47-83fa-36dab50ea107\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cdbc382b-235a-4d57-b89d-9b62618dfcd5\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d962bf18-0591-4a01-9835-6ba36a0b7a26\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7f9f2baf-6f0e-4a19-928b-0a0d3f125248\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0cabec1b-789a-467b-b6c2-a0f8a756d240\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/710ddf22-d4c2-4e8d-bc34-874b2e8f102a\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5bd0f2de-57b7-4b0b-b110-a60a77331129\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dc87b64a-1af3-408e-a7d7-e4ba63bb6349\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/00a29a20-4d00-4cc8-9caf-74ec22b1d61e\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/60e9de16-eb52-4634-a773-546c16cb2ea9\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d753bda7-b687-46fd-b4c3-dcaa67d30745\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/20439107-f085-49df-9033-8f73a1a6666c\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/5e40dce0-7581-4cd7-a856-9627ee4d5652\",\"moduleSequenceNumber\":724829},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/36ea33e6-7d8d-4253-b608-8815d9a40fb4\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/87c4eba2-daf2-410c-893c-e67cceff4485\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a5ce0e11-3a28-429e-af30-1c5ff5c23277\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7fd23581-51a7-4f1a-a7d1-2fa37506d6eb\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/f6741d52-6527-4c0e-accd-f92cdb04171f\",\"moduleSequenceNumber\":724848},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4e0b1c38-26dd-4cf5-b7d3-2b3b4a484ac7\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d85bdfbc-802a-4328-9d29-c0285cd5a987\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/singularity/util.js\",\"url\":\"blob:https://danielyxie.github.io/017068f9-0e38-434b-98aa-f7460fd49ad1\",\"moduleSequenceNumber\":724847},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/20eafe60-086e-4d98-befe-44cf00d81bb9\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/60c07385-56a7-4473-bb2b-776ec82c5b7d\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f94131da-23f9-42c2-a39a-d24605cc3270\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ab7d94e4-93e4-4237-a72b-6a0e02233441\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a9348a03-34af-43e1-bc4d-fba990830496\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2816cd7d-8c55-42bb-bf8c-bb31027b9a78\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/be64ac75-ca66-4259-af00-a746acc48b04\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6e52a8d1-708c-4105-8594-5dfb74a9b550\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a9e9da29-5a59-4219-b4b1-208f8b988df4\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c238a560-c7a6-4835-aec0-9a693576507b\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/5bff66a1-56d5-45e0-9f07-06bd847d371c\",\"moduleSequenceNumber\":724827},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4f0f09de-617b-4b07-ac21-94a3665557d3\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/e9df18d0-5416-40c0-9330-77d794360618\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/4511aa0c-cc3a-4f7c-8e27-7f64de742607\",\"moduleSequenceNumber\":724846},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a762a09b-cba4-443c-b09f-d183b157313f\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ae5b9b60-1819-4c44-8096-99d1844ce307\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f459f581-0d8b-4b97-89a5-b40295bf3c3c\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8e7d0177-00b8-41c3-b106-76ce286d87b4\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/69f28383-b851-4a8e-8850-9b4ba517d68f\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/afdfe9b9-bed9-4479-a9b5-158a769f0ddf\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0594730c-5d44-46ef-b54f-0890d1a1f89f\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e2819f9e-74b6-46fc-8049-d18d94746d85\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/809bed7b-64c7-4244-bf51-36f50f102db2\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ce55435d-9788-4f19-8e36-f4bd5fe1cd7e\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d57b4b95-f742-4853-8a44-47d1fff4860c\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/636f0c56-23af-4dba-9c6d-e042a5e208c1\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/b4c56f43-641e-4873-951b-8c41ec88f62c\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c2c05caa-220e-40d2-b98e-b62d725891cf\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a464c625-19d4-498f-bbc1-5a0d8da9d91b\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/72b3875e-226b-4103-a95e-50bd87baf1f0\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a2628174-5905-4bda-b686-07bf76afdbcc\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/394053c8-bfc7-4314-a7a0-f76ca10169f5\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c7875fbb-0e82-4970-812e-bbffb27ef3a9\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fda99c90-d8ea-4dc8-a249-62aac67fa9b4\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/223ade95-14ba-49b2-9a74-a0fe8810bc18\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2b5d88d8-e357-4632-96bb-20afb6097073\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/192e32b7-50e8-466d-b5be-04504e908fff\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/5132897e-6db5-4c6e-b053-b9ed12848522\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2a01ea11-7592-4a49-9623-a47fb8a129be\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/de7d8103-1449-4249-83ba-e0cfdd33d114\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/992499d2-3d7e-46a5-bf48-f94ba5031aab\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/singularity/program.js\",\"url\":\"blob:https://danielyxie.github.io/13d73813-956c-4eba-be40-878444b7ecd1\",\"moduleSequenceNumber\":724845},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c7649cf1-a4a0-409a-85d0-00807acc8d4d\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d90c6d8e-e989-4410-97c1-47c958990936\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dda7f597-efa8-4759-b6a7-490a040ed49c\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/02a66ac4-8985-48e3-921f-3d328b773efe\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a301f2e2-f79f-43cc-a9a7-198e1f301525\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/82c6be6f-16d4-4028-a714-23a76791ec9c\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ee15f6d7-efe6-4d16-820b-a972187c59f9\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b8501a86-2831-4c61-af78-30c0a69e0104\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/90b66406-02f3-4874-8313-813cf28f3bec\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2850932b-f232-42ca-bcf5-d0d48bad4941\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/7ed6c9b3-3733-4841-b8fc-14dd577cdc08\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/21788f37-5c6e-4591-bfa8-23b778be8552\",\"moduleSequenceNumber\":724813},{\"filename\":\"/gang/program.js\",\"url\":\"blob:https://danielyxie.github.io/550fdcd8-74f9-43ba-814d-803474c89371\",\"moduleSequenceNumber\":724913}],\"dependents\":[],\"ramUsage\":33.8,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725350,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getDarkwebPrograms\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"purchaseTor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"purchaseProgram\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getDarkwebProgramCost\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bitnode } from \\\"/lib/constant/bn.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { gang_t } from \\\"/lib/constant/gang.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { join_faction } from \\\"/lib/singularity/faction.js\\\";\\nimport { work } from \\\"/lib/singularity/work.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The karma threshold.  This value depends on the BitNode we are currently in.\\n *\\n * @param ns The Netscript API.\\n * @return The karma threshold.\\n */\\nfunction karma_threshold(ns) {\\n    if (bitnode[\\\"Rise of the Underworld\\\"] === ns.getPlayer().bitNodeN) {\\n        return faction_req[\\\"Slum Snakes\\\"].karma;\\n    }\\n    return gang_t.KARMA;\\n}\\n\\n/**\\n * Run the next script(s) in our load chain for criminal gangs.\\n *\\n * @param ns The Netscript API.\\n * @param faction The name of a criminal organization.  Must be a faction that\\n *     allows us to create a criminal gang.\\n */\\nfunction load_chain(ns, faction) {\\n    const script = \\\"/gang/crime.js\\\";\\n    const nthread = 1;\\n    ns.exec(script, home, nthread, faction);\\n}\\n\\n/**\\n * Decrease our karma low enough to allow us to create a gang.  In BN2, we only\\n * need to satisfy the karma requirement of Slum Snakes.  In a BitNode other\\n * than BN2, we need -54,000 karma.  Homicide yields -3 karma so we must commit\\n * homicide at most 18,000 times.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function lower_karma(ns) {\\n    ns.singularity.goToLocation(cities.generic.slum); // Raise Int XP.\\n    ns.singularity.commitCrime(crimes.KILL, bool.FOCUS);\\n    const player = new Player(ns);\\n    const threshold = karma_threshold(ns);\\n    while (Math.floor(player.karma()) > threshold) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Raise our combat stats to a given threshold.  Mugging someone is one of the\\n * best ways to raise all of our combat stats.  Upon success, we gain XP for\\n * each of the following stats: Strength, Defense, Dexterity, Agility.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Each of our combat stats should be at least this level.\\n */\\nasync function raise_combat_stats(ns, threshold) {\\n    assert(threshold > 0);\\n    ns.singularity.goToLocation(cities.generic.slum); // Raise Int XP.\\n    // Continue to mug someone until each of our combat stats is at least\\n    // the given threshold.\\n    const player = new Player(ns);\\n    ns.singularity.commitCrime(crimes.MUG, bool.FOCUS);\\n    while (\\n        player.strength() < threshold\\n        || player.defense() < threshold\\n        || player.dexterity() < threshold\\n        || player.agility() < threshold\\n    ) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Join the Slum Snakes faction.  Our ultimate purpose is to form and manage\\n * a gang.  Among the criminal organizations, Slum Snakes has the lowest\\n * requirements for sending a faction invitation.  To receive an invitation\\n * from Slum Snakes, we must satisfy these requirements:\\n *\\n * (1) Each of the combat stats must be at least 30.\\n * (2) Karma must be -9 or lower.\\n * (3) At least $1m.\\n *\\n * Usage: run gang/slum-snakes.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Raise combat stats, ensure we have the required minimum karma, raise our\\n    // income.  Then join the Slum Snakes faction.  Lower our karma so we can\\n    // create a gang.\\n    await lower_karma(ns);\\n    const fac = \\\"Slum Snakes\\\";\\n    const player = new Player(ns);\\n    if (!player.faction().includes(fac)) {\\n        await raise_combat_stats(ns, faction_req[fac].combat);\\n        assert(player.karma() <= faction_req[fac].karma);\\n        await work(ns, faction_req[fac].money);\\n        await join_faction(ns, fac);\\n    }\\n    load_chain(ns, fac);\\n}\\n\",\"filename\":\"/gang/slum-snakes.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":38.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725351,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A class to hold various utility methods for dealing with arrays.  Cannot\\n * name it \\\"Array\\\" because there is already a class called \\\"Array\\\" in the\\n * standard API library.\\n */\\nexport class MyArray {\\n    /**\\n     * Whether the given array has only non-negative numbers.\\n     *\\n     * @param array An array of integers.  Cannot be an empty array.\\n     * @return true if the given array has only non-negative integers;\\n     *     false otherwise.\\n     */\\n    static all_nonnegative(array) {\\n        assert(array.length > 0);\\n        for (const a of array) {\\n            if (a < 0) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    /**\\n     * The maximum element of an array.\\n     *\\n     * @param array We want to determine the maximum element of this array.\\n     *     Cannot be an empty array.\\n     * @return The largest element of the given array.\\n     */\\n    static max(array) {\\n        assert(array.length > 0);\\n        const init_value = -Infinity;\\n        return array.reduce((x, y) => Math.max(x, y), init_value);\\n    }\\n\\n    /**\\n     * A sequence of non-negative integers, starting from zero.  Each number in\\n     * the sequence is one more than the previous number.\\n     *\\n     * @param num How many numbers in the sequence.  Must be positive.  If\\n     *     num := 4, then our sequence is [0, 1, 2, 3].\\n     * @return An array representing a sequence of num numbers starting from 0.\\n     */\\n    static sequence(num) {\\n        const n = Math.floor(num);\\n        assert(n > 0);\\n        // Zoekeeper (Ansopedi#3422) on the Bitburner server of Discord pointed\\n        // out that this code is faster:\\n        //\\n        // return Array(n).fill().map((_, index) => index);\\n        //\\n        // However, the above is less readable than the line below.\\n        return [...Array(n).keys()];\\n    }\\n\\n    /**\\n     * Sort an array in ascending order.\\n     *\\n     * @param array We want to sort this array.  Cannot be an empty array.\\n     * @return A new array whose elements are sorted in ascending order.  If\\n     *     the array has duplicate elements, we are actually sorting in\\n     *     non-decreasing order.\\n     */\\n    static sort_ascending(array) {\\n        assert(array.length > 0);\\n        const arr = Array.from(array);\\n        arr.sort((a, b) => a - b);\\n        return arr;\\n    }\\n\\n    /**\\n     * Sort an array of 2-tuples in ascending order, using the first element of\\n     * each tuple.  The usual scenario is when we have an array of arrays like\\n     * so:\\n     *\\n     * [[1, 2], [3, 1], [1, 3], [5, 4]]\\n     *\\n     * where each element is a 2-tuple, i.e. an array of 2 elements.  The\\n     * sorted array would be\\n     *\\n     * [[1, 2], [1, 3], [3, 1], [5, 4]]\\n     *\\n     * @param array We want to sort this array of 2-tuples.  Cannot be an empty\\n     *     array.\\n     * @return A new array of 2-tuples, where each element is sorted in\\n     *     ascending order.  The sort is done based on the first element of\\n     *     each 2-tuple.\\n     */\\n    static sort_ascending_tuple(array) {\\n        assert(array.length > 0);\\n        const arr = Array.from(array);\\n        arr.sort((a, b) => a[0] - b[0]);\\n        return arr;\\n    }\\n\\n    /**\\n     * Sort an array in descending order.\\n     *\\n     * @param array We want to sort this array.  Cannot be an empty array.\\n     * @return A new array whose elements are sorted in descending order.  If\\n     *     the array has duplicate elements, then we are actually sorting the\\n     *     array in non-increasing order.\\n     */\\n    static sort_descending(array) {\\n        assert(array.length > 0);\\n        const arr = Array.from(array);\\n        arr.sort((a, b) => b - a);\\n        return arr;\\n    }\\n\\n    /**\\n     * Sum the elements of an array.\\n     *\\n     * @param array We want to add the elements of this array.  Cannot be an\\n     *     empty array.\\n     * @return The sum of the elements in the given array.\\n     */\\n    static sum(array) {\\n        assert(array.length > 0);\\n        const init_value = 0;\\n        return array.reduce((sum, current) => sum + current, init_value);\\n    }\\n}\\n\",\"filename\":\"/lib/array.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725352,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions for solving coding contracts.\\n\\nimport { io } from \\\"/lib/constant/io.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The index of an alphabetic character.\\n *\\n * @param c A character of the English alphabet.  Cannot be empty string.\\n * @return The index of the given character, where index starts from zero.\\n */\\nexport function char_index(c) {\\n    assert(c.length === 1);\\n    const alphabet = new Map([\\n        [\\\"A\\\", 0],\\n        [\\\"B\\\", 1],\\n        [\\\"C\\\", 2],\\n        [\\\"D\\\", 3],\\n        [\\\"E\\\", 4],\\n        [\\\"F\\\", 5],\\n        [\\\"G\\\", 6],\\n        [\\\"H\\\", 7],\\n        [\\\"I\\\", 8],\\n        [\\\"J\\\", 9],\\n        [\\\"K\\\", 10],\\n        [\\\"L\\\", 11],\\n        [\\\"M\\\", 12],\\n        [\\\"N\\\", 13],\\n        [\\\"O\\\", 14],\\n        [\\\"P\\\", 15],\\n        [\\\"Q\\\", 16],\\n        [\\\"R\\\", 17],\\n        [\\\"S\\\", 18],\\n        [\\\"T\\\", 19],\\n        [\\\"U\\\", 20],\\n        [\\\"V\\\", 21],\\n        [\\\"W\\\", 22],\\n        [\\\"X\\\", 23],\\n        [\\\"Y\\\", 24],\\n        [\\\"Z\\\", 25],\\n    ]);\\n    assert(alphabet.has(c));\\n    return alphabet.get(c);\\n}\\n\\n/**\\n * Count the total occurrence of 1 in a bit string.  This function does not\\n * necessarily count all 1s in a bit string.  Some positions can be skipped.\\n *\\n * @param msg A bit string, representing a possibly incomplete encoded message.\\n *     The message is encoded using Hamming code.  If the bit string is an\\n *     incomplete encoded message, the location of each parity bit has been\\n *     filled with rubbish.\\n * @param p The position of a parity (or redundant) bit.  Its value is always\\n *     a power of 2.  We start counting from this position in the bit string.\\n *     The value of p also tells us how many consecutive positions to skip.\\n *     In Hamming code, when checking parity we check p consecutive positions\\n *     and skip p consecutive positions, giving us a window of 2p consecutive\\n *     positions.  To reach the next window, we should skip 2p positions.\\n * @return The number of 1s in the given bit string, while skipping over\\n *     some positions.\\n */\\nexport function count_one(msg, p) {\\n    assert(msg.length > 0);\\n    assert(p > 0);\\n    let n1 = 0;\\n    let i = p;\\n    const skip = 2 * p;\\n    while (i < msg.length) {\\n        for (let j = i; j < i + p; j++) {\\n            if (msg[j] === 1) {\\n                n1++;\\n            }\\n        }\\n        i += skip;\\n    }\\n    return n1;\\n}\\n\\n/**\\n * An array of uppercase letters of the English alphabet.\\n */\\nexport function english_alphabet() {\\n    return \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\\";\\n}\\n\\n/**\\n * Whether a character is an uppercase letter of the English alphabet.\\n *\\n * @param c A character.  Cannot be empty string.\\n * @return true if the given character is an uppercase letter of the English\\n *     alphabet; false otherwise.\\n */\\nexport function is_alphabetic(c) {\\n    assert(c.length === 1);\\n    return english_alphabet().includes(c);\\n}\\n\\n/**\\n * Log a failure when attempting to solve a coding contract.\\n *\\n * @param ns The Netscript API.\\n * @param fname Write our log to this file.  Must be a text file with\\n *     file extension \\\".txt\\\".\\n * @param cct The file name of the coding contract.\\n * @param host The hostname of the server where the coding contract is located.\\n * @param data The data used for solving the coding contract.\\n */\\nexport async function log_cct_failure(ns, fname, cct, host, data) {\\n    const date = new Date(Date.now());\\n    await ns.write(fname, date.toISOString(), io.APPEND);\\n    await ns.write(fname, `, ${host}, ${cct}${io.NEWLINE}`, io.APPEND);\\n    await ns.write(fname, data + io.NEWLINE, io.APPEND);\\n}\\n\\n/**\\n * Format a matrix as a string.\\n *\\n * @param mat A matrix, i.e. an array of arrays.\\n * @return The given matrix as a string.\\n */\\nexport function matrix_to_string(mat) {\\n    let string = \\\"\\\";\\n    const delim = \\\", \\\";\\n    for (let i = 0; i < mat.length; i++) {\\n        string += `[${mat[i]}]${delim}`;\\n    }\\n    string = string.slice(0, string.length - delim.length);\\n    return `[${string}]`;\\n}\\n\\n/**\\n * The maximum profit to be made when we are restricted to at most one\\n * transaction.  The algorithm is similar to Kadane's algorithm.  However, we\\n * must keep track of the minimum price as well as the maximum profit.\\n * Essentially, we want to buy low and sell high, but we are restricted to one\\n * transaction.  This means we are restricted by these rules:\\n *\\n * (1) Only one buy action.\\n * (2) Only one sell action.\\n * (3) Must first buy before we can sell.\\n *\\n * The idea is to determine two days i and j, where i < j and\\n * price[i] < price[j], such that the difference price[j] - price[i] is\\n * maximized.\\n *\\n * Refer to the following for more details:\\n *\\n * https://betterprogramming.pub/dynamic-programming-interview-questions-how-to-maximize-stock-profits-8ed4966c2206\\n *\\n * @param price An array where price[i] represents the price of a stock on\\n *     day i.  All prices are for the same stock.\\n * @return The maximum profit we can make, assuming at most one transaction.\\n *       Return 0 if no profit can be made or the price array is empty.\\n */\\nexport function max_profit_kadane(price) {\\n    // Empty price array means zero profit.\\n    if (price.length === 0) {\\n        return 0;\\n    }\\n    let max_profit = 0;\\n    let min_price = price[0];\\n    // Must start on the second day.  On the first day, we have only one\\n    // price value so the minimum of one value is that value itself.\\n    for (let i = 1; i < price.length; i++) {\\n        // We need to keep track of the minimum price.  Let mp be the minimum\\n        // price so far.  If the price on day i is lower than mp, we set mp to\\n        // to the new minimum price.  Otherwise, we move to the price on the\\n        // next day.\\n        min_price = Math.min(min_price, price[i]);\\n        // Why do we need to keep track of the minimum price so far?  Let mp be\\n        // the minimum price up to and including day i.  Let price[i] be the\\n        // price on day i.  The profit pf is defined as the price on day i\\n        // minus the running minimum price:\\n        //\\n        // pf := price[i] - mp\\n        //\\n        // Here, the minimum price mp occurs during one of the days from the\\n        // first to the current day, i.e. mp is one of the price values\\n        //\\n        // price[0], price[1], ..., price[i]\\n        //\\n        // If we were to buy the stock on some day j (0 <= j <= i) at the\\n        // minimum price of mp, we can sell the stock on day i to make a profit\\n        // of pf.  The following can happen:\\n        //\\n        // (1) mp < price[i].  We make a profit pf.  Let mpf be the maximum\\n        //     profit we can make on day i.  We compare the profit pf on day i\\n        //     to the maximum profit mpf we can make on day i.  If mpf < pf,\\n        //     then we adjust our maximum profit so far to the value of pf.\\n        //     Otherwise, we keep the value of mpf as is.  The maximum profit\\n        //     we can make so far is the maximum of mpf and pf.\\n        // (2) mp = price[i].  We break even.  No loss, no profit.\\n        // (3) mp > price[i].  We make a loss because we are selling our stock\\n        //     at a price lower than when we bought the stock.  Our minimum\\n        //     price should be adjusted to the price on day i.  The minimum\\n        //     price so far is the minimum of mp and price[i].\\n        const profit = price[i] - min_price;\\n        max_profit = Math.max(max_profit, profit);\\n    }\\n    return max_profit;\\n}\\n\\n/**\\n * The positions (or indices) where the parity bits are placed in a bit string\\n * that has been encoded using Hamming code.  These parity bits are also known\\n * as redundant bits to distinguish them from the overall parity bit placed at\\n * index 0 in the encoded bit string.\\n *\\n * @param p The number of parity bits.\\n * @return An array, where each element represents the position or index of a\\n *     parity bit.  These parity bits are also called redundant bits.\\n *     This array does not include the position of the overall parity\\n *     bit, which is assumed to be at index 0 in the encoded message.\\n */\\nexport function parity_position(p) {\\n    assert(p > 0);\\n    const array = [];\\n    for (let i = 0; i < p; i++) {\\n        array.push(2 ** i);\\n    }\\n    return array;\\n}\\n\\n/**\\n * Print to the terminal an error message about which Coding Contract we did\\n * not solve correctly.\\n *\\n * @param The Netscript API.\\n * @param host The hostname of the server where the Coding Contract was found.\\n * @param cct The file name of the Coding Contract.\\n */\\nexport function print_error(ns, host, cct) {\\n    const msg = `${host}: ${cct}: FAILURE`;\\n    log(ns, msg, colour.RED);\\n}\\n\\n/**\\n * Print to the terminal a message about the reward from successfully solving\\n * a Coding Contract.\\n *\\n * @param The Netscript API.\\n * @param host The hostname of the server where the Coding Contract was found.\\n * @param cct The file name of the Coding Contract.\\n * @param reward The reward from solving the Coding Contract.\\n */\\nexport function print_success(ns, host, cct, reward) {\\n    const msg = `${host}: ${cct}: ${reward}`;\\n    log(ns, msg);\\n}\\n\\n/**\\n * The maximum profit that can be made when we are restricted to at most two\\n * transactions.  Transactions must occur one after the other.  Suppose we buy\\n * one share of a stock on day i and sell the share on day j, where i < j.  We\\n * cannot buy another share of the same stock on any day between i and j.\\n * However, we are allowed to buy another share of the stock from day j+1\\n * onward.\\n *\\n * The above description hints at a simple solution.  We partition the price\\n * array into two non-overlapping parts:\\n *\\n * (1) The left part starts from day 0 and ends at day k, inclusive.  Run\\n *     Kadane's algorithm on the left subarray to get mpl as our maximum profit\\n *     for the left subarray.\\n * (2) The right part starts from day k+1 and ends at the last day in the price\\n *     array.  Run Kadane's algorithm on the right subarray to get mpr as our\\n *     maximum profit for the right subarray.\\n *\\n * The maximum profit is mpl + mpr.  This maximum profit is for one particular\\n * partition of the price array.  There are many other partitions, one for each\\n * value of k.  Calculate the maximum profit for each partition.  The true\\n * maximum profit is the maximum of the results of all partitions.\\n *\\n * @param price An array of prices, where price[i] is the price of one share of\\n *     a stock on day i.  All prices relate to the same stock.\\n * @return The maximum profit to be made, assuming we can perform at most\\n *     two transactions.  Return 0 if no profit can be made.\\n */\\nexport function stock_traderIII(price) {\\n    assert(price.length > 0);\\n    // Obtain all possible partitions of the price array.  Each partition\\n    // divides the array into two parts: the left subarray and the right\\n    // subarray.\\n    let max_profit = 0;\\n    for (let k = 0; k < price.length; k++) {\\n        // The left and right subarrays in the partition.\\n        const left = price.slice(0, k + 1);\\n        const right = price.slice(k + 1, price.length);\\n        // The maximum profit of each subarray in the partition.\\n        const mpl = max_profit_kadane(left);\\n        const mpr = max_profit_kadane(right);\\n        // The running maximum profit.\\n        max_profit = Math.max(max_profit, mpl + mpr);\\n    }\\n    return max_profit;\\n}\\n\",\"filename\":\"/lib/cct.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725353,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constant values related to BitNodes.\\n\\n/**\\n * All named BitNodes.  The names are taken from this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/BitNode/BitNode.tsx\\n */\\nexport const bitnode = {\\n    \\\"Source Genesis\\\": 1,\\n    \\\"Rise of the Underworld\\\": 2,\\n    Corporatocracy: 3,\\n    \\\"The Singularity\\\": 4,\\n    \\\"Artificial Intelligence\\\": 5,\\n    Bladeburners: 6,\\n    \\\"Bladeburners 2079\\\": 7,\\n    \\\"Ghost of Wall Street\\\": 8,\\n    Hacktocracy: 9,\\n    \\\"Digital Carbon\\\": 10,\\n    \\\"The Big Crash\\\": 11,\\n    \\\"The Recursion\\\": 12,\\n    \\\"They're lunatics\\\": 13,\\n};\\n\",\"filename\":\"/lib/constant/bn.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725354,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n/**\\n * Various boolean values.\\n */\\nexport const bool = {\\n    /**\\n     * Whether or not a graph is bipartite.\\n     */\\n    BIPARTITE: true,\\n    NOT_BIPARTITE: false,\\n    /**\\n     * Whether or not to buy NeuroFlux Governor.\\n     */\\n    BUY_NFG: true,\\n    NO_BUY_NFG: false,\\n    /**\\n     * Whether or not we can run something.\\n     */\\n    CAN_RUN: true,\\n    NOT_RUN: false,\\n    /**\\n     * Whether or not a graph is directed.\\n     */\\n    DIRECTED: true,\\n    UNDIRECTED: false,\\n    /**\\n     * Enable or disable a feature.\\n     */\\n    ENABLE: true,\\n    DISABLE: false,\\n    /**\\n     * Whether or not to focus on an action.\\n     */\\n    FOCUS: true,\\n    NO_FOCUS: false,\\n    /**\\n     * Whether or not to graduate from a class or training.\\n     */\\n    GRADUATE: true,\\n    /**\\n     * Whether or not we have access to something.\\n     */\\n    HAS: true,\\n    NOT: false,\\n    /**\\n     * Whether or not it is time for something to occur.\\n     */\\n    IS_TIME: true,\\n    NOT_TIME: false,\\n    /**\\n     * Whether or not to join an organization.\\n     */\\n    JOIN: true,\\n    NO_JOIN: false,\\n    /**\\n     * Whether or not we can jump.\\n     */\\n    JUMP: true,\\n    NO_JUMP: false,\\n    /**\\n     * Whether or not a server is low-end.\\n     */\\n    LOWEND: true,\\n    NOT_LOWEND: false,\\n    /**\\n     * Whether or not we can merge two things together.\\n     */\\n    MERGE: true,\\n    NO_MERGE: false,\\n    /**\\n     * Whether or not we can move from one state to another.\\n     */\\n    MOVE: true,\\n    NOT_MOVE: false,\\n    /**\\n     * Whether or not a new state has occurred.\\n     */\\n    NEW: true,\\n    NOT_NEW: false,\\n    /**\\n     * Whether or not to consider something that is purchased.\\n     */\\n    PURCHASED: true,\\n    NOT_PURCHASED: false,\\n    /**\\n     * Whether or not to raise money to purchase various items.\\n     */\\n    RAISE_MONEY: true,\\n    NO_RAISE_MONEY: false,\\n    /**\\n     * Whether or not a state is reachable.  These values are specific to\\n     * Array Jumping Game.\\n     */\\n    REACHABLE: 1,\\n    NOT_REACHABLE: 0,\\n    /**\\n     * Whether we are self-funding the creation of our corporation.\\n     */\\n    SELF_FUND: true,\\n    /**\\n     * Whether or not to skip an action.\\n     */\\n    SKIP: true,\\n    NO_SKIP: false,\\n    /**\\n     * Whether or not to stop the trade bot from purchasing shares of stocks.\\n     */\\n    STOP_TRADE: true,\\n    NO_STOP_TRADE: false,\\n    /**\\n     * Whether or not we are successful at something.\\n     */\\n    SUCCESS: true,\\n    FAILURE: false,\\n    /**\\n     * Whether or not something is valid or correct.\\n     */\\n    VALID: true,\\n    INVALID: false,\\n    /**\\n     * Whether to visit a particular location.\\n     */\\n    VISIT: true,\\n    NO_VISIT: false,\\n    /**\\n     * Whether we are (or should be) engaged in territory warfare.\\n     */\\n    WAR: true,\\n    NO_WAR: false,\\n    /**\\n     * Whether to work to increase money or stats.\\n     */\\n    WORK: true,\\n    NO_WORK: false,\\n};\\n\",\"filename\":\"/lib/constant/bool.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725355,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constant values related to Coding Contracts.\\n\\nexport const cct = {\\n    /**\\n     * The suffix for files that contain Coding Contracts.\\n     */\\n    SUFFIX: \\\".cct\\\",\\n    /**\\n     * The time in milliseconds required for the game to randomly generate a\\n     * random Coding Contract on a random server, while in game.  While the\\n     * game is running, the probability for a Coding Contract to be spawned is\\n     * 0.25.  Each game cycle is 200 milliseconds.  The game randomly generates\\n     * a Coding Contract once every 3000 cycles.  Thus once every\\n     * 200 x 3000 = 600,000 milliseconds, or every 10 minutes, we have 25%\\n     * chance for a Coding Contract to spawn on a server.  These constants are\\n     * taken from\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/engine.tsx\\n     */\\n    UPDATE_TIME: 6e5,\\n};\\n\\n/**\\n * Various colours for graph colouring, i.e. testing whether a graph is\\n * bipartite.\\n */\\nexport const colour = {\\n    BLUE: 0,\\n    RED: 1,\\n    WHITE: 2,\\n};\\n\\n/**\\n * The types of chunk data in Lempel-Ziv compression and decompression.\\n */\\nexport const lzchunk = {\\n    /**\\n     * The chunk format L<string>.\\n     */\\n    LS: 1,\\n    /**\\n     * The chunk format LX.\\n     */\\n    LX: 2,\\n};\\n\\n/**\\n * The opening and closing parentheses.\\n */\\nexport const parenthesis = {\\n    CLOSE: \\\")\\\",\\n    OPEN: \\\"(\\\",\\n};\\n\\n/**\\n * A list of small prime numbers.\\n */\\nexport const small_primes = [\\n    2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\\n    73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151,\\n    157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211,\\n];\\n\\n/**\\n * The Vigenère square.\\n */\\nexport const vigenere_square = [\\n    \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\\",\\n    \\\"BCDEFGHIJKLMNOPQRSTUVWXYZA\\\",\\n    \\\"CDEFGHIJKLMNOPQRSTUVWXYZAB\\\",\\n    \\\"DEFGHIJKLMNOPQRSTUVWXYZABC\\\",\\n    \\\"EFGHIJKLMNOPQRSTUVWXYZABCD\\\",\\n    \\\"FGHIJKLMNOPQRSTUVWXYZABCDE\\\",\\n    \\\"GHIJKLMNOPQRSTUVWXYZABCDEF\\\",\\n    \\\"HIJKLMNOPQRSTUVWXYZABCDEFG\\\",\\n    \\\"IJKLMNOPQRSTUVWXYZABCDEFGH\\\",\\n    \\\"JKLMNOPQRSTUVWXYZABCDEFGHI\\\",\\n    \\\"KLMNOPQRSTUVWXYZABCDEFGHIJ\\\",\\n    \\\"LMNOPQRSTUVWXYZABCDEFGHIJK\\\",\\n    \\\"MNOPQRSTUVWXYZABCDEFGHIJKL\\\",\\n    \\\"NOPQRSTUVWXYZABCDEFGHIJKLM\\\",\\n    \\\"OPQRSTUVWXYZABCDEFGHIJKLMN\\\",\\n    \\\"PQRSTUVWXYZABCDEFGHIJKLMNO\\\",\\n    \\\"QRSTUVWXYZABCDEFGHIJKLMNOP\\\",\\n    \\\"RSTUVWXYZABCDEFGHIJKLMNOPQ\\\",\\n    \\\"STUVWXYZABCDEFGHIJKLMNOPQR\\\",\\n    \\\"TUVWXYZABCDEFGHIJKLMNOPQRS\\\",\\n    \\\"UVWXYZABCDEFGHIJKLMNOPQRST\\\",\\n    \\\"VWXYZABCDEFGHIJKLMNOPQRSTU\\\",\\n    \\\"WXYZABCDEFGHIJKLMNOPQRSTUV\\\",\\n    \\\"XYZABCDEFGHIJKLMNOPQRSTUVW\\\",\\n    \\\"YZABCDEFGHIJKLMNOPQRSTUVWX\\\",\\n    \\\"ZABCDEFGHIJKLMNOPQRSTUVWXY\\\",\\n];\\n\",\"filename\":\"/lib/constant/cct.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725356,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constant values related to corporation.\\n\\n/**\\n * Constants related to a corporation.\\n */\\nexport const corp = {\\n    /**\\n     * The name of the Corporation API.  We use this to circumvent the namespace\\n     * RAM cost.\\n     */\\n    API: \\\"corporation\\\",\\n    /**\\n     * All available industries into which we can expand.  Data taken from this\\n     * file:\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/Corporation/data/Constants.ts\\n     */\\n    industry: {\\n        AGRI: \\\"Agriculture\\\",\\n        CHEM: \\\"Chemical\\\",\\n        COMP: \\\"Computers\\\",\\n        ENERGY: \\\"Energy\\\",\\n        FISH: \\\"Fishing\\\",\\n        FOOD: \\\"Food\\\",\\n        HEALTH: \\\"Healthcare\\\",\\n        LAND: \\\"RealEstate\\\",\\n        MINE: \\\"Mining\\\",\\n        PHARMA: \\\"Pharmaceutical\\\",\\n        ROBO: \\\"Robotics\\\",\\n        SOFTWARE: \\\"Software\\\",\\n        TOBACCO: \\\"Tobacco\\\",\\n        UTIL: \\\"Utilities\\\",\\n    },\\n    /**\\n     * Various types of materials.  Data taken from this file:\\n     *\\n     * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Corporation/data/Constants.ts\\n     */\\n    material: {\\n        AI: \\\"AI Cores\\\",\\n        CHEMICAL: \\\"Chemicals\\\",\\n        DRUG: \\\"Drugs\\\",\\n        ENERGY: \\\"Energy\\\",\\n        FOOD: \\\"Food\\\",\\n        HARDWARE: \\\"Hardware\\\",\\n        LAND: \\\"Real Estate\\\",\\n        METAL: \\\"Metal\\\",\\n        PLANT: \\\"Plants\\\",\\n        ROBOT: \\\"Robots\\\",\\n        WATER: \\\"Water\\\",\\n    },\\n    /**\\n     * The positions to assign to employees.  Data taken from this file:\\n     *\\n     * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Corporation/EmployeePositions.ts\\n     */\\n    position: [\\n        \\\"Operations\\\",\\n        \\\"Engineer\\\",\\n        \\\"Business\\\",\\n        \\\"Management\\\",\\n        \\\"Research & Development\\\",\\n        \\\"Training\\\",\\n    ],\\n    /**\\n     * The name of our corporation.\\n     */\\n    NAME: \\\"Quacken Industries\\\",\\n    /**\\n     * Unlock upgrades.  These are one-time unlockable upgrades and apply to the\\n     * entire corporation.  We cannot level these upgrades.  Data are taken from\\n     * this file:\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/Corporation/data/CorporationUnlockUpgrades.ts\\n     */\\n    unlock: {\\n        /**\\n         * Shady tactics to reduce our corporation's tax.\\n         */\\n        ACCOUNT: \\\"Shady Accounting\\\",\\n        /**\\n         * Statistics about our corporation and its supply chain.\\n         */\\n        CHAIN: \\\"VeChain\\\",\\n        /**\\n         * Display the competition of each material or product.\\n         */\\n        COMPETITION: \\\"Market Data - Competition\\\",\\n        /**\\n         * Display the demand of each material or product.\\n         */\\n        DEMAND: \\\"Market Research - Demand\\\",\\n        /**\\n         * Allows us to export goods.\\n         */\\n        EXPORT: \\\"Export\\\",\\n        /**\\n         * The Office API.\\n         */\\n        OFFICE: \\\"Office API\\\",\\n        /**\\n         * Private/public partnership or PPP.  Partner with national governments\\n         * to help lower our taxes.\\n         */\\n        PPP: \\\"Government Partnership\\\",\\n        /**\\n         * Allows us to purchase the exact amount of supply for production.\\n         */\\n        SMART: \\\"Smart Supply\\\",\\n        /**\\n         * The Warehouse API.\\n         */\\n        WAREHOUSE: \\\"Warehouse API\\\",\\n    },\\n    /**\\n     * These are level upgrades, as distinct from the unlock upgrades.  All\\n     * level upgrades start off as level 0.  We must purchase more levels for a\\n     * particular upgrade to increase its effectiveness.  Data taken from this\\n     * file:\\n     *\\n     * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Corporation/data/Constants.ts\\n     */\\n    upgrade: {\\n        ANALYTIC: \\\"Wilson Analytics\\\",\\n        DREAM: \\\"DreamSense\\\",\\n        FACTORY: \\\"Smart Factories\\\",\\n        FOCUS: \\\"FocusWires\\\",\\n        INJECTOR: \\\"Nuoptimal Nootropic Injector Implants\\\",\\n        INSIGHT: \\\"Project Insight\\\",\\n        NEURAL: \\\"Neural Accelerators\\\",\\n        SALE: \\\"ABC SalesBots\\\",\\n        SPEECH: \\\"Speech Processor Implants\\\",\\n        STORAGE: \\\"Smart Storage\\\",\\n    },\\n};\\n\\n/**\\n * Thresholds on various aspects of a corporation.\\n */\\nexport const corp_t = {\\n    /**\\n     * Various thresholds on materials.\\n     */\\n    material: {\\n        /**\\n         * AI Cores.\\n         */\\n        ai: {\\n            /**\\n             * Purchasing thresholds.\\n             */\\n            buy: {\\n                /**\\n                 * The amount for our initial bulk purchase.\\n                 */\\n                INIT_BULK: 75,\\n            },\\n        },\\n        /**\\n         * Hardware.\\n         */\\n        hardware: {\\n            /**\\n             * Purchasing thresholds.\\n             */\\n            buy: {\\n                /**\\n                 * The amount for our initial bulk purchase.\\n                 */\\n                INIT_BULK: 125,\\n            },\\n        },\\n        /**\\n         * Real Estate.\\n         */\\n        land: {\\n            /**\\n             * Purchasing thresholds.\\n             */\\n            buy: {\\n                /**\\n                 * The amount for our initial bulk purchase.\\n                 */\\n                INIT_BULK: 27e3,\\n            },\\n        },\\n    },\\n    /**\\n     * Various thresholds related to an office.\\n     */\\n    office: {\\n        /**\\n         * The initial number of employees to hire for an office.\\n         */\\n        INIT_HIRE: 3,\\n    },\\n    /**\\n     * We need $150b to start a corporation.  Data taken from this file:\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/NetscriptFunctions/Corporation.ts\\n     */\\n    SEED_COST: 15e10,\\n    /**\\n     * Thresholds on various aspects of selling materials or products.\\n     */\\n    sell: {\\n        /**\\n         * The sell amount.\\n         */\\n        amount: {\\n            /**\\n             * Sell the maximum of whatever we have.\\n             */\\n            MAX: \\\"MAX\\\",\\n        },\\n        /**\\n         * The sell price.\\n         */\\n        price: {\\n            /**\\n             * Sell at the market price.\\n             */\\n            MP: \\\"MP\\\",\\n        },\\n    },\\n    /**\\n     * Thresholds related to level upgrades.  These are distinct from unlock\\n     * upgrades.\\n     */\\n    upgrade: {\\n        /**\\n         * For our initial setup, we want at least 2 levels of various upgrades.\\n         */\\n        INIT_LEVEL: 2,\\n    },\\n    /**\\n     * Various thresholds related to a warehouse.\\n     */\\n    warehouse: {\\n        /**\\n         * The initial upgraded size of a warehouse.  When a warehouse is\\n         * bought, it has a size of 100.  We want to upgrade our early warehouse\\n         * to this size.\\n         */\\n        INIT_UPGRADE_SIZE: 300,\\n    },\\n};\\n\",\"filename\":\"/lib/constant/corp.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725357,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constant values related to crimes.\\n\\n/**\\n * Various constants and thresholds related to crimes.\\n */\\nexport const crimes = {\\n    /**\\n     * All available crimes.\\n     */\\n    ASSASS: \\\"assassinate\\\",\\n    DRUG: \\\"deal drugs\\\",\\n    FORGE: \\\"bond forgery\\\",\\n    GTA: \\\"grand theft auto\\\",\\n    HEIST: \\\"heist\\\",\\n    KILL: \\\"homicide\\\",\\n    KIDNAP: \\\"kidnap and ransom\\\",\\n    LARCENY: \\\"larceny\\\",\\n    MUG: \\\"mug someone\\\",\\n    ROB: \\\"rob store\\\",\\n    SHOP: \\\"shoplift\\\",\\n    TRAFFICK: \\\"traffick illegal arms\\\",\\n};\\n\\n/**\\n * Various thresholds related to crimes.\\n */\\nexport const crimes_t = {\\n    /**\\n     * Mugging increases all of our combat stats.  Check whether each of our\\n     * combat stats is at least this value.\\n     */\\n    MUG: 10,\\n    /**\\n     * The default number of times we want to commit a particular crime.\\n     */\\n    n: 10,\\n    /**\\n     * Shoplift increases our Dexterity and Agility.  Check whether each of our\\n     * Dexterity and Agility is at least this value.\\n     */\\n    SHOP: 5,\\n};\\n\",\"filename\":\"/lib/constant/crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725358,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to programs that can be created or bought\\n// via the dark web.\\n\\n/**\\n * All programs that can be created.  These programs can also be purchased via\\n * the dark web.  Data taken from this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Programs/data/ProgramsMetadata.ts\\n */\\nexport function all_programs() {\\n    // A map where the key/value pair is as follows:\\n    //\\n    // key := The name of a program.\\n    // value := The minimum Hack stat at which we are able to create the\\n    //     program.\\n    const program = new Map([\\n        [\\\"BruteSSH.exe\\\", 50],\\n        [\\\"FTPCrack.exe\\\", 100],\\n        [\\\"HTTPWorm.exe\\\", 500],\\n        [\\\"relaySMTP.exe\\\", 250],\\n        [\\\"SQLInject.exe\\\", 750],\\n        [\\\"DeepscanV1.exe\\\", 75],\\n        [\\\"DeepscanV2.exe\\\", 400],\\n        [\\\"ServerProfiler.exe\\\", 75],\\n        [\\\"AutoLink.exe\\\", 25],\\n        [\\\"Formulas.exe\\\", 1000],\\n    ]);\\n    return program;\\n}\\n\\n/**\\n * The cheapest programs available via the dark web are:\\n *\\n * (1) BruteSSH.exe\\n * (2) ServerProfiler.exe\\n * (3) DeepscanV1.exe\\n *\\n * Each costs the same amount of $500k.  Data taken from this page:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/DarkWeb/DarkWebItems.ts\\n *\\n * If we are to delete any of these cheapest programs, then we should\\n * definitely keep BruteSSH.exe.  The remaining candidates for deletion are\\n * ServerProfiler.exe and DeepscanV1.exe.  Decide which of these two programs\\n * we do not need and delete that one.\\n */\\nexport const cheapest_program = {\\n    COST: 5e5,\\n    NAME: \\\"DeepscanV1.exe\\\",\\n};\\n\\n/**\\n * These programs are port openers.  Each program can be used to open a\\n * specific port on a server.\\n */\\nexport const program = [\\n    \\\"BruteSSH.exe\\\",\\n    \\\"FTPCrack.exe\\\",\\n    \\\"HTTPWorm.exe\\\",\\n    \\\"relaySMTP.exe\\\",\\n    \\\"SQLInject.exe\\\",\\n];\\n\\n/**\\n * The purchasing schedule.  Use this schedule to help us buy a batch of\\n * programs, depending on our current funds.  This schedule is used whenever our\\n * money is less than some pre-defined constant M.  If our money is at least M,\\n * then we switch to a dynamic purchasing schedule.\\n */\\nexport const buy_schedule = {\\n    /**\\n     * When we use a dynamic purchasing schedule, this constant is used to help\\n     * us determine how many programs to buy in a batch.\\n     */\\n    DIVISOR: 1e12,\\n    /**\\n     * The money threshold at which we switch to a dynamic purchasing schedule.\\n     * If our money is less than this constant, use the pre-defined schedule\\n     * below.\\n     */\\n    DYNAMIC_TAU: 100e12,\\n    /**\\n     * How many programs in a batch.  Each number n means we purchase n copies\\n     * of a particular program.\\n     */\\n    howmany: [50, 25, 12, 6, 3, 1, 1],\\n    /**\\n     * Various money thresholds.\\n     */\\n    money: [\\n        10e12, // 10 trillion\\n        1e12, // 1 trillion\\n        500e9,\\n        100e9,\\n        1e9, // 1 billion\\n        100e6,\\n        10e6, // 10 million\\n    ],\\n    /**\\n     * The sleep time.  We sleep a given amount of time, depending on the batch\\n     * size and money.\\n     */\\n    time: [\\n        1, // 1 millisecond\\n        1,\\n        1e3, // 1 second\\n        10e3, // 10 seconds\\n        30e3,\\n        60e3, // 60 seconds or 1 minute\\n        120e3, // 120 seconds or 2 minutes\\n    ],\\n};\\n\\n/**\\n * These are utility programs.  They are useful when we need to manually\\n * traverse the network of world servers.\\n */\\nexport const utility_program = [\\n    \\\"AutoLink.exe\\\",\\n    \\\"DeepscanV1.exe\\\",\\n    \\\"DeepscanV2.exe\\\",\\n    \\\"Formulas.exe\\\",\\n    \\\"ServerProfiler.exe\\\",\\n];\\n\",\"filename\":\"/lib/constant/exe.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725359,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to factions and their Augmentations.\\n\\n/**\\n * Various constants and thresholds related to Augmentations.\\n */\\nexport const augment = {\\n    /**\\n     * The maximum number of Augmentations to purchase from a faction.  This\\n     * number does not include the NeuroFlux Governor.  We limit the number of\\n     * Augmentations to purchase to help speed up the process of buying all\\n     * Augmentations from a faction.  We purchase this number of Augmentations\\n     * from a faction and install them.  If the faction has any more\\n     * Augmentations (besides the NeuroFlux Governor), we purchase those after\\n     * the installation.  Some Augmentations require a huge amount of faction\\n     * reputation.  It can take a very long time to accumulate enough\\n     * reputation points, especially if an Augmentation requires at least one\\n     * million reputation points.  By purchasing a given number of\\n     * Augmentations and installing them, we gain some favour with the faction.\\n     * In case our favour points are high enough, we would be able to donate to\\n     * the faction in exchange for reputation points.  This should help to\\n     * shorten the amount of time required to reach a certain amount of\\n     * reputation points.\\n     */\\n    BUY_TAU: 5,\\n    /**\\n     * Named Augmentations.\\n     */\\n    NFG: \\\"NeuroFlux Governor\\\",\\n    TRP: \\\"The Red Pill\\\",\\n};\\n\\n/**\\n * Stat requirements for receiving an invitation from a faction.  Here is an\\n * explanation of each requirement.\\n *\\n * (1) backdoor := Must install a backdoor on this server.\\n * (2) ban := An array of companies at which we should not be working.\\n * (3) city := Must be located in this city.\\n * (4) combat := Lower threshold for each combat stat.  Each of our Strength,\\n *     Defense, Dexterity, and Agility must be at least this value.\\n * (5) hack := Lower threshold for our Hack stat.  Our Hack stat must be at\\n *     least this value.\\n * (6) karma := Our negative karma must be this value or lower.\\n * (7) kill := Must have killed at least this many people.\\n * (8) money := Must have at least this amount of money.\\n */\\nexport const faction_req = {\\n    Aevum: {\\n        city: \\\"Aevum\\\",\\n        money: 40e6,\\n    },\\n    \\\"Bachman & Associates\\\": {\\n        backdoor: \\\"b-and-a\\\",\\n        city: \\\"Aevum\\\",\\n    },\\n    BitRunners: {\\n        backdoor: \\\"run4theh111z\\\",\\n    },\\n    \\\"Blade Industries\\\": {\\n        backdoor: \\\"blade\\\",\\n        city: \\\"Sector-12\\\",\\n    },\\n    Chongqing: {\\n        city: \\\"Chongqing\\\",\\n        money: 20e6,\\n    },\\n    \\\"Clarke Incorporated\\\": {\\n        backdoor: \\\"clarkinc\\\",\\n        city: \\\"Aevum\\\",\\n    },\\n    CyberSec: {\\n        backdoor: \\\"CSEC\\\",\\n    },\\n    /**\\n     * This faction has a requirement not listed below.  We must install a\\n     * certain number of Augmentations.  This number can vary from one BitNode\\n     * to the next.\\n     */\\n    Daedalus: {\\n        combat: 1500,\\n        hack: 2500,\\n        money: 100e9,\\n    },\\n    ECorp: {\\n        backdoor: \\\"ecorp\\\",\\n        city: \\\"Aevum\\\",\\n    },\\n    \\\"Four Sigma\\\": {\\n        backdoor: \\\"4sigma\\\",\\n        city: \\\"Sector-12\\\",\\n    },\\n    \\\"Fulcrum Secret Technologies\\\": {\\n        backdoor: \\\"fulcrumassets\\\",\\n        city: \\\"Aevum\\\",\\n    },\\n    /**\\n     * This faction has a requirement not listed below.  We must install at\\n     * least 30 Augmentations.\\n     */\\n    Illuminati: {\\n        combat: 1200,\\n        hack: 1500,\\n        money: 150e9,\\n    },\\n    Ishima: {\\n        city: \\\"Ishima\\\",\\n        money: 30e6,\\n    },\\n    \\\"KuaiGong International\\\": {\\n        backdoor: \\\"kuai-gong\\\",\\n        city: \\\"Chongqing\\\",\\n    },\\n    MegaCorp: {\\n        backdoor: \\\"megacorp\\\",\\n        city: \\\"Sector-12\\\",\\n    },\\n    /**\\n     * This faction has another requirement not listed below.  Nodes in our\\n     * Hacknet farm must have a collective level of at least 100, a collective\\n     * RAM of at least 8, and a collective Cores of at least 4. For example, if\\n     * we have 3 Hacknet nodes then the Level of all 3 nodes should add up to\\n     * at least 100. One node can be at Level 50, another node can be at\\n     * Level 30, and the third node can be at Level 21.\\n     */\\n    Netburners: {\\n        hack: 80,\\n    },\\n    \\\"New Tokyo\\\": {\\n        city: \\\"New Tokyo\\\",\\n        money: 20e6,\\n    },\\n    NiteSec: {\\n        backdoor: \\\"avmnite-02h\\\",\\n    },\\n    NWO: {\\n        backdoor: \\\"nwo\\\",\\n        city: \\\"Volhaven\\\",\\n    },\\n    \\\"OmniTek Incorporated\\\": {\\n        backdoor: \\\"omnitek\\\",\\n        city: \\\"Volhaven\\\",\\n    },\\n    \\\"Sector-12\\\": {\\n        city: \\\"Sector-12\\\",\\n    },\\n    /**\\n     * This faction has another requirement not listed below.  We must be a\\n     * CTO, CFO, or CEO of a company.\\n     */\\n    Silhouette: {\\n        karma: -22,\\n        money: 15e6,\\n    },\\n    \\\"Slum Snakes\\\": {\\n        combat: 30,\\n        karma: -9,\\n        money: 1e6,\\n    },\\n    \\\"Speakers for the Dead\\\": {\\n        ban: [\\\"Central Intelligence Agency\\\", \\\"National Security Agency\\\"],\\n        combat: 300,\\n        hack: 100,\\n        karma: -45,\\n        kill: 30,\\n    },\\n    Tetrads: {\\n        city: \\\"Ishima\\\",\\n        combat: 75,\\n        karma: -18,\\n    },\\n    \\\"The Black Hand\\\": {\\n        backdoor: \\\"I.I.I.I\\\",\\n    },\\n    /**\\n     * This faction has a requirement not listed below.  We must have installed\\n     * at least 20 Augmentations.\\n     */\\n    \\\"The Covenant\\\": {\\n        combat: 850,\\n        hack: 850,\\n        money: 75e9,\\n    },\\n    \\\"The Dark Army\\\": {\\n        city: \\\"Chongqing\\\",\\n        combat: 300,\\n        hack: 300,\\n        karma: -45,\\n        kill: 5,\\n    },\\n    \\\"The Syndicate\\\": {\\n        city: \\\"Sector-12\\\",\\n        combat: 200,\\n        hack: 200,\\n        karma: -90,\\n        money: 10e6,\\n    },\\n    \\\"Tian Di Hui\\\": {\\n        city: \\\"Ishima\\\",\\n        hack: 50,\\n        money: 1e6,\\n    },\\n    Volhaven: {\\n        city: \\\"Volhaven\\\",\\n        money: 50e6,\\n    },\\n};\\n\\n/**\\n * Various thresholds related to factions.\\n */\\nexport const faction_t = {\\n    /**\\n     * Donate this percentage of our money to a faction.\\n     */\\n    DONATE_MULT: 0.2,\\n    /**\\n     * The minimum amount of reputation we must attain at a company.  This\\n     * reputation point is part of the pre-requisites for receiving an\\n     * invitation from a megacorporation faction.\\n     */\\n    CORP_REP: 3e5,\\n};\\n\\n/**\\n * Augmentations that are exclusive to various factions.  We can purchase some\\n * Augmentations provided that we are a member of the corresponding faction.\\n */\\nexport const exclusive_aug = {\\n    \\\"Bachman & Associates\\\": [\\\"SmartJaw\\\"],\\n    BitRunners: [\\n        \\\"BitRunners Neurolink\\\",\\n        \\\"Cranial Signal Processors - Gen V\\\",\\n        \\\"Neural Accelerator\\\",\\n    ],\\n    \\\"Blade Industries\\\": [\\\"Neotra\\\"],\\n    Chongqing: [\\\"Neuregen Gene Modification\\\"],\\n    \\\"Clarke Incorporated\\\": [\\n        \\\"Neuronal Densification\\\",\\n        \\\"nextSENS Gene Modification\\\",\\n    ],\\n    CyberSec: [\\n        \\\"Cranial Signal Processors - Gen I\\\",\\n        \\\"Neurotrainer I\\\",\\n        \\\"Synaptic Enhancement Implant\\\",\\n    ],\\n    Daedalus: [\\\"The Red Pill\\\"],\\n    ECorp: [\\\"ECorp HVMind Implant\\\"],\\n    \\\"Fulcrum Secret Technologies\\\": [\\n        \\\"PC Direct-Neural Interface NeuroNet Injector\\\",\\n    ],\\n    Illuminati: [\\\"QLink\\\"],\\n    Ishima: [\\\"INFRARET Enhancement\\\"],\\n    \\\"KuaiGong International\\\": [\\\"Photosynthetic Cells\\\"],\\n    MegaCorp: [\\\"CordiARC Fusion Reactor\\\"],\\n    Netburners: [\\n        \\\"Hacknet Node Cache Architecture Neural-Upload\\\",\\n        \\\"Hacknet Node Core Direct-Neural Interface\\\",\\n        \\\"Hacknet Node CPU Architecture Neural-Upload\\\",\\n        \\\"Hacknet Node Kernel Direct-Neural Interface\\\",\\n        \\\"Hacknet Node NIC Architecture Neural-Upload\\\",\\n    ],\\n    \\\"New Tokyo\\\": [\\\"NutriGen Implant\\\"],\\n    NiteSec: [\\\"CRTX42-AA Gene Modification\\\", \\\"Neural-Retention Enhancement\\\"],\\n    NWO: [\\\"Xanipher\\\"],\\n    \\\"OmniTek Incorporated\\\": [\\\"OmniTek InfoLoad\\\"],\\n    \\\"Sector-12\\\": [\\\"CashRoot Starter Kit\\\"],\\n    Silhouette: [\\\"TITN-41 Gene-Modification Injection\\\"],\\n    \\\"Slum Snakes\\\": [\\\"SmartSonar Implant\\\"],\\n    \\\"Speakers for the Dead\\\": [\\\"Graphene BrachiBlades Upgrade\\\"],\\n    Tetrads: [\\\"Bionic Arms\\\"],\\n    \\\"Tian Di Hui\\\": [\\\"Social Negotiation Assistant (S.N.A)\\\"],\\n    \\\"The Black Hand\\\": [\\\"The Black Hand\\\"],\\n    \\\"The Covenant\\\": [\\\"SPTN-97 Gene Modification\\\"],\\n    \\\"The Dark Army\\\": [\\\"Graphene Bionic Arms Upgrade\\\"],\\n    \\\"The Syndicate\\\": [\\\"BrachiBlades\\\"],\\n    Volhaven: [\\\"DermaForce Particle Barrier\\\"],\\n};\\n\\n/**\\n * Various divisions of factions in the game.\\n */\\nexport const factions = {\\n    /**\\n     * An array of all faction names.  The faction names are listed in a\\n     * specific order, usually along the following line of reasoning.\\n     *\\n     * (1) Sector-12 should be the first faction we must join.  The reason is\\n     *     simple.  This faction has the CashRoot Starter Kit Augmentation that\\n     *     grants us $1m and the BruteSSH.exe program after a soft reset.\\n     * (2) Netburners, CyberSec, and Tian Di Hui should be the next group of\\n     *     factions to join.  These factions have Augmentations that raise\\n     *     various hack-related stats.  In particular, Tian Di Hui has 4\\n     *     Augmentations that boost the amount of reputation we gain from\\n     *     factions and companies.\\n     * (3) BitRunners has an Augmentation that allows us to start with the\\n     *     FTPCrack.exe and relaySMTP.exe programs after a soft reset.\\n     * (4) The Syndicate has the Augmentation BrachiBlades, which is a\\n     *     pre-requisite of an Augmentation from Speakers for the Dead.\\n     *     Furthermore, The Syndicate has 2 Augmentations that boost the\\n     *     reputation we gain from factions and companies.\\n     * (5) Bachman & Associates has 5 Augmentations that boost the amount of\\n     *     reputation we gain from factions and companies.\\n     * (6) Aevum has the PCMatrix Augmentation that allows us to start with\\n     *     DeepscanV1.exe and AutoLink.exe after a soft reset.  These are\\n     *     strictly not necessary in an automated game play.\\n     * (7) Chongqing, Ishima, and New Tokyo are not enemies with each other.\\n     *     We can join all three factions at the same time, work toward\\n     *     purchasing all of their Augmentations, and install all Augmentations\\n     *     from all three factions at the same time.  Doing so can save us a\\n     *     lot of time as we do not need to go through a soft reset after\\n     *     purchasing all Augmentations from one faction.  However, we some way\\n     *     to generate a massive amount of income within a short amount of time.\\n     * (8) Volhaven should be the last city faction to join.\\n     * (9) NiteSec and The Black Hand are the remaining two hacking groups to\\n     *     join.  They have Augmentations to boost various hack-related stats.\\n     * (10) We can join the remaining megacorporation factions in any order we\\n     *      want.  These factions have various Augmentations that boost a\\n     *      number of social-related stats, i.e. reputation from factions and\\n     *      companies.  However, we should have purchased most or all of these\\n     *      from Bachman & Associates.\\n     * (11) Criminal organizations have Augmentations to boost various combat\\n     *      stats as well as social-related stats.  We should have bought from\\n     *      The Syndicate all or most of the Augmentations that boost our\\n     *      reputation gain from factions and companies.\\n     * (12) The endgame factions should be the last to join.  We can join\\n     *      Illuminati or The Covenant in any order we want.  However, Daedalus\\n     *      should be the very last faction that we join.\\n     */\\n    all: [\\n        /**\\n         * Early game factions, city factions, and hacking groups.\\n         */\\n        \\\"Sector-12\\\",\\n        \\\"Netburners\\\",\\n        \\\"CyberSec\\\",\\n        \\\"Tian Di Hui\\\",\\n        \\\"BitRunners\\\",\\n        /**\\n         * Criminal organization.\\n         */\\n        \\\"The Syndicate\\\",\\n        /**\\n         * Megacorporation.\\n         */\\n        \\\"Bachman & Associates\\\",\\n        /**\\n         * City factions.\\n         */\\n        \\\"Aevum\\\",\\n        \\\"Chongqing\\\",\\n        \\\"Ishima\\\",\\n        \\\"New Tokyo\\\",\\n        \\\"Volhaven\\\",\\n        /**\\n         * Hacking factions.\\n         */\\n        \\\"NiteSec\\\",\\n        \\\"The Black Hand\\\",\\n        /**\\n         * Megacorporations.\\n         */\\n        \\\"Blade Industries\\\",\\n        \\\"Clarke Incorporated\\\",\\n        \\\"ECorp\\\",\\n        \\\"Four Sigma\\\",\\n        \\\"Fulcrum Secret Technologies\\\",\\n        \\\"KuaiGong International\\\",\\n        \\\"MegaCorp\\\",\\n        \\\"NWO\\\",\\n        \\\"OmniTek Incorporated\\\",\\n        /**\\n         * Criminal organizations.\\n         */\\n        \\\"Silhouette\\\",\\n        \\\"Slum Snakes\\\",\\n        \\\"Speakers for the Dead\\\",\\n        \\\"Tetrads\\\",\\n        \\\"The Dark Army\\\",\\n        /**\\n         * Endgame factions.\\n         */\\n        \\\"Illuminati\\\",\\n        \\\"The Covenant\\\",\\n        \\\"Daedalus\\\",\\n    ],\\n    /**\\n     * Various early-game factions.\\n     */\\n    early: [\\\"Sector-12\\\", \\\"Netburners\\\", \\\"CyberSec\\\", \\\"Tian Di Hui\\\", \\\"BitRunners\\\"],\\n    /**\\n     * A bunch of factions that have these Augmentations:\\n     *\\n     * (1) Boost our faction reputation multiplier.\\n     * (2) Port opener programs.\\n     *\\n     * Join each of these factions, earn the required reputation points, and\\n     * purchase only the necessary Augmentations.\\n     */\\n    fast_track: {\\n        \\\"Sector-12\\\": [\\n            /**\\n             * This Augmentation allows us to start with $1m and BruteSSH.exe.\\n             */\\n            \\\"CashRoot Starter Kit\\\",\\n            \\\"Augmented Targeting I\\\",\\n            \\\"Combat Rib I\\\",\\n            \\\"Neuralstimulator\\\",\\n        ],\\n        CyberSec: [\\n            /**\\n             * This Augmentation is a pre-requisite of various Augmentations\\n             * from BitRunners.\\n             */\\n            \\\"Cranial Signal Processors - Gen I\\\",\\n        ],\\n        BitRunners: [\\n            /**\\n             * This Augmentation allows us to start with FTPCrack.exe and\\n             * relaySMTP.exe.\\n             */\\n            \\\"BitRunners Neurolink\\\",\\n            \\\"DataJack\\\",\\n        ],\\n        \\\"Tian Di Hui\\\": [\\n            \\\"ADR-V1 Pheromone Gene\\\",\\n            \\\"Social Negotiation Assistant (S.N.A)\\\",\\n        ],\\n        \\\"The Syndicate\\\": [\\\"The Shadow's Simulacrum\\\"],\\n        Aevum: [\\\"PCMatrix\\\"],\\n        \\\"Bachman & Associates\\\": [\\\"ADR-V2 Pheromone Gene\\\", \\\"SmartJaw\\\"],\\n    },\\n    /**\\n     * All megacorporation factions.\\n     */\\n    megacorp: [\\n        \\\"Bachman & Associates\\\",\\n        \\\"Blade Industries\\\",\\n        \\\"Clarke Incorporated\\\",\\n        \\\"ECorp\\\",\\n        \\\"Four Sigma\\\",\\n        \\\"Fulcrum Secret Technologies\\\",\\n        \\\"KuaiGong International\\\",\\n        \\\"MegaCorp\\\",\\n        \\\"NWO\\\",\\n        \\\"OmniTek Incorporated\\\",\\n    ],\\n};\\n\",\"filename\":\"/lib/constant/faction.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725360,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values relating to gangs.\\n\\n/**\\n * Various armour pieces that a gang member can equip.  Going from top to\\n * bottom, the armour pieces are listed in order from least expensive to most\\n * expensive.  These values are taken from the following page:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/upgrades.ts\\n */\\nexport const armour = {\\n    VEST: \\\"Bulletproof Vest\\\",\\n    FULL: \\\"Full Body Armor\\\",\\n    LIQUID: \\\"Liquid Body Armor\\\",\\n    GRAPHENE: \\\"Graphene Plating Armor\\\",\\n};\\n\\n/**\\n * All Augmentations that can be equipped on a gang member.  The Augmentations\\n * are listed from least expensive to most expensive.  The data are taken from\\n * this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/upgrades.ts\\n */\\nexport const gang_augment = {\\n    WIRE: \\\"BitWire\\\", // 5e9\\n    DATA: \\\"DataJack\\\", // 7.5e9\\n    ARMS: \\\"Bionic Arms\\\", // 10e9\\n    LEGS: \\\"Bionic Legs\\\", // 10e9\\n    NEURAL: \\\"Neuralstimulator\\\", // 10e9\\n    WEAVE: \\\"Nanofiber Weave\\\", // 12e9\\n    SPINE: \\\"Bionic Spine\\\", // 15e9\\n    MUSCLE: \\\"Synfibril Muscle\\\", // 15e9\\n    BLADES: \\\"BrachiBlades\\\", // 20e9\\n    HEART: \\\"Synthetic Heart\\\", // 25e9\\n    BONE: \\\"Graphene Bone Lacings\\\", // 50e9\\n};\\n\\n/**\\n * Constants related to various aspects of our gang members.\\n */\\nexport const members = {\\n    /**\\n     * The maximum number of gang members to assign to Ethical Hacking.\\n     */\\n    EHACK: 1,\\n    /**\\n     * The number of members that constitute half of the maximum number of\\n     * members we can have.  This is the 50% membership mark.\\n     */\\n    HALF: 6,\\n    /**\\n     * The number of gangsters we can recruit upon creating our gang.  We must\\n     * earn more respect to recruit more gang members.\\n     */\\n    INITIAL: 3,\\n    /**\\n     * The maximum number of members in a gang.  This number is taken from the\\n     * file:\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/Constants.ts\\n     */\\n    MAX: 12,\\n    /**\\n     * Various roles for members of our gang.\\n     */\\n    ROLE: {\\n        artillery: \\\"Artillery\\\",\\n        hacker: \\\"Hacker\\\",\\n        medic: \\\"Medic\\\",\\n        pilot: \\\"Pilot\\\",\\n        punk: \\\"Punk\\\",\\n        spy: \\\"Spy\\\",\\n        thief: \\\"Thief\\\",\\n        traitor: \\\"Traitor\\\",\\n        vanguard: \\\"Vanguard\\\",\\n    },\\n    /**\\n     * The maximum number of gang members to assign to acts of terrorism.\\n     * Terrorism greatly increases our respect and wanted level, but generate\\n     * no income.  We should only have one terrorist.\\n     */\\n    TERRORIST: 1,\\n    /**\\n     * The maximum number of gang members to assign to vigilante justice.\\n     * Assume we are in a criminal gang.\\n     */\\n    VIGILANTE: 4,\\n    /**\\n     * The maximum number of gang members to assign to territory warfare.  This\\n     * threshold applies only when we are not engaged in territory warfare\\n     * against a rival gang.  If we are about to clash against a rival gang, we\\n     * should devote more members to warfare.  In general, this threshold helps\\n     * to build our power while we are not engaged in dispute against any rival\\n     * gang.\\n     */\\n    WARRIOR: 4,\\n};\\n\\n/**\\n * Miscellaneous constants related to various thresholds.\\n */\\nexport const gang_t = {\\n    /**\\n     * The minimum percentage boost to a stat of a member.  Let x be the\\n     * ascension multiplier of a member, gained by having ascended one or\\n     * more times.  Let y be the next ascension multiplier, a boost to x after\\n     * ascending the member another time.  The value of y is represented as\\n     * 1.p, where 100 * p is the percentage boost to x.  After the next\\n     * ascension, the new ascension multiplier of the member would be x * y.\\n     * We want the value of y to be at least the given threshold.\\n     */\\n    ASCEND: 1.25,\\n    /**\\n     * The cost or expenditure multiplier.  Equipment and Augmentations for a\\n     * gang member are expensive.  Whenever we make a decision to purchase a\\n     * new equipment or Augmentation for a gang member, we multiply the cost of\\n     * the equipment or Augmentation by this multiplier.  In case we do buy the\\n     * new equipment, at least we would not have spent all our funds.  Do not\\n     * want to go bankrupt because we decided to purchase an expensive\\n     * equipment.\\n     */\\n    COST_MULT: 5,\\n    /**\\n     * In BitNodes other than BN2.x we must decrease our karma to -54,000 or\\n     * lower as a pre-requisite for creating a gang.  This constant is taken\\n     * from the file:\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/Constants.ts\\n     */\\n    KARMA: -54e3,\\n    /**\\n     * The roster of our gang.  This lists the number of members we want for\\n     * each role.  Except for punk, we want at most 1 member in each of the\\n     * other roles.  The number 8 below is the number of members in a non-punk\\n     * role.\\n     */\\n    ROSTER: {\\n        artillery: 1,\\n        hacker: 1,\\n        medic: 1,\\n        pilot: 1,\\n        punk: members.MAX - 8,\\n        spy: 1,\\n        thief: 1,\\n        traitor: 1,\\n        vanguard: 1,\\n    },\\n    /**\\n     * The territory and power of each gang is updated approximately every 20\\n     * seconds.  We refer to this time period as a tick.\\n     */\\n    TICK: 20e3,\\n    /**\\n     * The minimum chance of winning a clash against a rival gang.  This chance\\n     * of victory is expressed as an integer percentage.  In general, we should\\n     * only engage in turf warfare against another gang if our chance of victory\\n     * is at least this number.  The win chance is not the same as the\\n     * probability of death.  The defense of a gang member determines their\\n     * chance of dying during a turf war against a rival gang.\\n     */\\n    WIN: 55,\\n};\\n\\n/**\\n * Various types of gangster roles.  A list of names for each role.  We\\n * randomly choose a name to assign to a new recruit.  We want our gang to have\\n * the following types of members:\\n *\\n * (1) Artillery.  A gun expert and ranged fighter.  Good with bow and arrows,\\n *     or missiles.\\n * (2) Hacker.  The computer wizard.\\n * (3) Medic.  This is our doctor.\\n * (4) Pilot.  Air support from a helicopter, drone, or aeroplane.\\n * (5) Punk.  Low level soldiers who rake in money for the gang by committing\\n *     various crimes.\\n * (6) Spy.  An expert in espionage and reconnaissance.\\n * (7) Thief.  Someone who steals treasure.  A sneak.\\n * (8) Traitor.  Someone who would likely betray the gang.\\n * (9) Vanguard.  Our frontliner and tank.\\n */\\nexport const gangster_t = {\\n    artillery: [\\n        // A\\n        \\\"Alfred Nobel\\\",\\n        \\\"Angus MacGyver\\\",\\n        \\\"Artemus Gordon\\\",\\n        // B\\n        \\\"Bill Dolworth\\\",\\n        \\\"Billy Calloway\\\",\\n        \\\"Billy Rosewood\\\",\\n        \\\"Bobby Jay\\\",\\n        \\\"Bomb Man\\\",\\n        \\\"Bomberman\\\",\\n        \\\"Bomb Voyage\\\",\\n        \\\"Boom Box\\\",\\n        \\\"Boom Stick\\\",\\n        \\\"Boris Turgoff\\\",\\n        \\\"Burt Gummer\\\",\\n        // C\\n        \\\"Carlton Lassiter\\\",\\n        \\\"Chaplain Reynolds\\\",\\n        \\\"Clay Allison\\\",\\n        \\\"Colleen Anderson\\\",\\n        \\\"Colonel John Casey\\\",\\n        // D\\n        \\\"David Thurston\\\",\\n        \\\"Demoman\\\",\\n        \\\"Dutch\\\",\\n        // E\\n        \\\"Edgar K. B. Montrose\\\",\\n        \\\"Eugene Tackleberry\\\",\\n        // F\\n        \\\"Fatman\\\",\\n        \\\"Forte Stollen\\\",\\n        // G\\n        \\\"Gunne Knutt\\\",\\n        \\\"Guy Fawkes\\\",\\n        // H\\n        \\\"Hange Zoe\\\",\\n        \\\"Harry the Horse\\\",\\n        \\\"Hawkeye\\\",\\n        \\\"Hawkeye Gough\\\",\\n        \\\"Hazel D'Ark\\\",\\n        \\\"Hero Shackleby\\\",\\n        \\\"Holly Summers\\\",\\n        // I\\n        \\\"Isao Ota\\\",\\n        // J\\n        \\\"Jayne Cobb\\\",\\n        \\\"Jean Havoc\\\",\\n        \\\"Jessica Clearkin\\\",\\n        \\\"John Rambo\\\",\\n        \\\"John Wick\\\",\\n        \\\"Jun the Swan\\\",\\n        // K\\n        \\\"Kell Tainer\\\",\\n        \\\"Kota Hirano\\\",\\n        // L\\n        \\\"Laurie Strode\\\",\\n        // M\\n        \\\"Malcolm Reed\\\",\\n        \\\"Mark Briscoe\\\",\\n        \\\"Marty McChicken\\\",\\n        \\\"Maya Jingu\\\",\\n        \\\"Mike Teevee\\\",\\n        \\\"Minene Uryuu\\\",\\n        // O\\n        \\\"Ossie Brunt\\\",\\n        // P\\n        \\\"Poppy Bros.\\\",\\n        \\\"Professor Shikishima\\\",\\n        \\\"Private Wilson\\\",\\n        // R\\n        \\\"Rally Vincent\\\",\\n        \\\"Revy\\\",\\n        \\\"Ritsuko Inoue\\\",\\n        \\\"Riza Hawkeye\\\",\\n        \\\"Robin Scherbatsky\\\",\\n        \\\"Rocket Raccoon\\\",\\n        \\\"Ryo Saeba\\\",\\n        // S\\n        \\\"Seras Victoria\\\",\\n        \\\"Shino Asada\\\",\\n        \\\"Shuri\\\",\\n        \\\"Sidney Alford\\\",\\n        \\\"Simo Häyhä\\\",\\n        // T\\n        \\\"Teddy Bomber\\\",\\n        \\\"Tiny Tina\\\",\\n        // V\\n        \\\"Vash the Stampede\\\",\\n        // Y\\n        \\\"Yoko Littner\\\",\\n    ],\\n    hacker: [\\n        // Numbers\\n        \\\"1337 H4X0R\\\",\\n        // A\\n        \\\"Acid Burn\\\",\\n        \\\"Adrian Lamo\\\",\\n        \\\"Aelita Schaeffer\\\",\\n        \\\"Akira Shirase\\\",\\n        \\\"Albert Gonzalez\\\",\\n        \\\"Anna Grimsdóttír\\\",\\n        \\\"Anonymouse\\\",\\n        \\\"Apoc\\\",\\n        \\\"ASTRA\\\",\\n        // B\\n        \\\"Benji Dunn\\\",\\n        \\\"Beto O'Rourke\\\",\\n        \\\"Boris Grishenko\\\",\\n        \\\"Brave Coward\\\",\\n        // C\\n        \\\"Carl Arbogast\\\",\\n        \\\"Chihiro Fujisaki\\\",\\n        \\\"Chloe O'Brian\\\",\\n        \\\"Chrumium\\\",\\n        \\\"Chuck Bartowski\\\",\\n        \\\"Crash Override\\\",\\n        \\\"Crumbmium\\\",\\n        \\\"Cypher\\\",\\n        // D\\n        \\\"Dade Murphy\\\",\\n        \\\"Darren Roskow\\\",\\n        \\\"David Levinson\\\",\\n        \\\"David Lightman\\\",\\n        \\\"Dennis Nedry\\\",\\n        \\\"Dozer\\\",\\n        // E\\n        \\\"Edward Snowden\\\",\\n        \\\"Edward Wong Hau Pepelu Tivrusky IV\\\",\\n        \\\"Eugene Belford\\\",\\n        // F\\n        \\\"Felicity Smoak\\\",\\n        \\\"Firefax\\\",\\n        // H\\n        \\\"Henry Dorsett Case\\\",\\n        \\\"Hiro Protagonist\\\",\\n        // I\\n        \\\"Interknit Explorer\\\",\\n        \\\"Internet Exploiter\\\",\\n        \\\"Irwin Emery\\\",\\n        // J\\n        \\\"Jeanson James Ancheta\\\",\\n        \\\"Jeremy Belpois\\\",\\n        \\\"Jobe Smith\\\",\\n        \\\"Jonathan James\\\",\\n        // K\\n        \\\"Kate Libby\\\",\\n        \\\"Kevin Flynn\\\",\\n        \\\"Kevin Mitnick\\\",\\n        \\\"Kevin Poulsen\\\",\\n        \\\"Kimberley Vanvaeck\\\",\\n        // L\\n        \\\"Laughing Man\\\",\\n        \\\"Lee Sampson\\\",\\n        \\\"Lex Murphy\\\",\\n        \\\"Lisbeth Salander\\\",\\n        \\\"Lord Nikon\\\",\\n        \\\"Luther Stickell\\\",\\n        // M\\n        \\\"Marshall Flinkman\\\",\\n        \\\"Martin Bishop\\\",\\n        \\\"Matthew Bevan\\\",\\n        \\\"Michael Calce\\\",\\n        \\\"Milo Hoffman\\\",\\n        \\\"Morpheus\\\",\\n        \\\"Mouse\\\",\\n        // N\\n        \\\"Neo\\\",\\n        \\\"Net Surfer\\\",\\n        // P\\n        \\\"Packet Sniffer\\\",\\n        \\\"Paul Cook\\\",\\n        \\\"Penny Brown\\\",\\n        \\\"Phandom of the Opera\\\",\\n        \\\"Phantom Phreak\\\",\\n        // R\\n        \\\"Rachel Gibson\\\",\\n        \\\"Ramόn Sánchez (Phantom Phreak)\\\",\\n        \\\"Randy Waterhouse\\\",\\n        \\\"Richard Pryce\\\",\\n        \\\"Riley Poole\\\",\\n        // S\\n        \\\"Susan Headley\\\",\\n        \\\"Switch\\\",\\n        // T\\n        \\\"The Plague\\\",\\n        \\\"TORricelli's Lore\\\",\\n        \\\"Trinity\\\",\\n        \\\"TypoManiac\\\",\\n        // Z\\n        \\\"Zero Cool\\\",\\n    ],\\n    medic: [\\n        // A\\n        \\\"Abascantus\\\",\\n        \\\"Adamantius Judaeus\\\",\\n        \\\"Aegimus\\\",\\n        \\\"Aelius Promotus\\\",\\n        \\\"Aemilia Hilaria\\\",\\n        \\\"Aeschrion of Pergamon\\\",\\n        \\\"Aëtius of Amida\\\",\\n        \\\"Agathinus\\\",\\n        \\\"Albucius\\\",\\n        \\\"Alexander Fleming\\\",\\n        \\\"Alexander of Tralles\\\",\\n        \\\"al-Zahrawi\\\",\\n        \\\"Ambroise Paré\\\",\\n        \\\"Amenhotep\\\",\\n        \\\"Andries van Wesel\\\",\\n        \\\"Androcydes\\\",\\n        \\\"Andromachus\\\",\\n        \\\"Anonymus Londinensis\\\",\\n        \\\"Antipater\\\",\\n        \\\"Antiphanes of Delos\\\",\\n        \\\"Antonius Castor\\\",\\n        \\\"Antyllus\\\",\\n        \\\"Apollonius Claudius\\\",\\n        \\\"Apollonius Cyprius\\\",\\n        \\\"Apollonius Organicus\\\",\\n        \\\"Apollonius Pergamenus\\\",\\n        \\\"Apollonius Pitaneus\\\",\\n        \\\"Apollonius Senior\\\",\\n        \\\"Apollonius Tarensis\\\",\\n        \\\"Apollonius Ther\\\",\\n        \\\"Apollonius Glaucus\\\",\\n        \\\"Apollonios of Kition\\\",\\n        \\\"Archigenes\\\",\\n        \\\"Arcyon\\\",\\n        \\\"Aretaeus\\\",\\n        \\\"Asclepiades of Bithynia\\\",\\n        \\\"Asclepiades Pharmacion\\\",\\n        \\\"Asclepius\\\",\\n        \\\"Aspasia the Physician\\\",\\n        \\\"Athenaeus of Attalia\\\",\\n        \\\"Atreya\\\",\\n        \\\"Aulus Cornelius Celsus\\\",\\n        // B\\n        \\\"Bharadwaja\\\",\\n        \\\"Bian Que\\\",\\n        \\\"Bogar\\\",\\n        \\\"Bolus of Mendes\\\",\\n        // C\\n        \\\"Caelius Aurelianus\\\",\\n        \\\"Carl Clauberg\\\",\\n        \\\"Cassius Felix\\\",\\n        \\\"Charaka\\\",\\n        \\\"Charles R. Drew\\\",\\n        \\\"Charmis of Marseilles\\\",\\n        \\\"Claudius Philoxenus \\\",\\n        \\\"Cosmas and Damian\\\",\\n        \\\"Crinas of Marseilles\\\",\\n        \\\"Cristina Yang\\\",\\n        \\\"Criton of Heraclea\\\",\\n        \\\"Ctesias of Cnidus\\\",\\n        // D\\n        \\\"Daniel Hale Williams\\\",\\n        \\\"Demetrius of Apamea\\\",\\n        \\\"Demosthenes Philalethes\\\",\\n        \\\"Derek Shepherd\\\",\\n        \\\"Dexippus of Cos\\\",\\n        \\\"Dieuches\\\",\\n        \\\"Diocles of Carystus\\\",\\n        \\\"Diomedes of Tarsus\\\",\\n        \\\"Dong Feng\\\",\\n        \\\"Doogie Howser\\\",\\n        \\\"Doug Ross\\\",\\n        \\\"Dr. Nick\\\",\\n        // E\\n        \\\"Edward Jenner\\\",\\n        \\\"Elizabeth Blackwell\\\",\\n        \\\"Erasistratus\\\",\\n        \\\"Eudemus\\\",\\n        // F\\n        \\\"Frasier Crane\\\",\\n        // G\\n        \\\"Gaius Stertinius Xenophon\\\",\\n        \\\"Galen of Pergamon\\\",\\n        \\\"George O'Malley\\\",\\n        \\\"Georges Mathé\\\",\\n        \\\"Getafix\\\",\\n        \\\"Gregory House\\\",\\n        // H\\n        \\\"Hannibal Lecter\\\",\\n        \\\"Harold Shipman\\\",\\n        \\\"Hawkeye Pierce\\\",\\n        \\\"Helen B. Taussig\\\",\\n        \\\"Heliodorus\\\",\\n        \\\"Henry Jekyll\\\",\\n        \\\"Heraclides of Tarentum\\\",\\n        \\\"Herophilos\\\",\\n        \\\"H. H. Holmes\\\",\\n        \\\"Hicesius\\\",\\n        \\\"Hippocrates\\\",\\n        \\\"Hua Tuo\\\",\\n        // I\\n        \\\"Ibn Sina\\\",\\n        \\\"Ignaz Semmelweis\\\",\\n        \\\"Irynachet\\\",\\n        // J\\n        \\\"Jack Kevorkian\\\",\\n        \\\"Jack Shephard\\\",\\n        \\\"Jackson Avery\\\",\\n        \\\"Jane Cooke Wright\\\",\\n        \\\"Jayant Patel\\\",\\n        \\\"Jivaka Komarabhacca\\\",\\n        \\\"John Bodkin Adams\\\",\\n        \\\"John Carter\\\",\\n        \\\"John Dolittle\\\",\\n        \\\"John Dorian\\\",\\n        \\\"John H. Watson\\\",\\n        \\\"John Snow\\\",\\n        \\\"Jonas Salk\\\",\\n        \\\"Josef Mengele\\\",\\n        \\\"Joseph Lister\\\",\\n        // K\\n        \\\"Kashyapa\\\",\\n        \\\"Korakkar\\\",\\n        // L\\n        \\\"Leonard H. McCoy\\\",\\n        \\\"Leoparda\\\",\\n        \\\"Les McPainy\\\",\\n        \\\"Lexie Grey\\\",\\n        \\\"Linda Burfield Hazzard\\\",\\n        // M\\n        \\\"Madhava-kara\\\",\\n        \\\"Marcellus Empiricus\\\",\\n        \\\"Marcellus of Side\\\",\\n        \\\"Marcel Petiot\\\",\\n        \\\"Mark Sloan\\\",\\n        \\\"Meges of Sidon\\\",\\n        \\\"Menemachus\\\",\\n        \\\"Menodotus of Nicomedia\\\",\\n        \\\"Meredith Grey\\\",\\n        \\\"Metrodora\\\",\\n        \\\"Michael DeBakey\\\",\\n        \\\"Michael Swango\\\",\\n        \\\"Michaela Quinn\\\",\\n        \\\"Mindy Lahiri\\\",\\n        \\\"Miranda Bailey\\\",\\n        \\\"Mnesitheus\\\",\\n        \\\"Morris Bolber\\\",\\n        // O\\n        \\\"Oribasius\\\",\\n        // P\\n        \\\"Pain Hathaway\\\",\\n        \\\"Pain Killer\\\",\\n        \\\"Paracelsus\\\",\\n        \\\"Patanjali\\\",\\n        \\\"Paul of Aegina\\\",\\n        \\\"Pedanius Dioscorides\\\",\\n        \\\"Penthu\\\",\\n        \\\"Peseshet\\\",\\n        \\\"Philagrius of Epirus\\\",\\n        \\\"Philinus of Cos\\\",\\n        \\\"Philistion of Locri\\\",\\n        \\\"Philumenus\\\",\\n        \\\"Pil Moore\\\",\\n        \\\"Plistonicus\\\",\\n        \\\"Praxagoras of Cos\\\",\\n        // Q\\n        \\\"Qar\\\",\\n        \\\"Quintus Gargilius Martialis\\\",\\n        // R\\n        \\\"Rabâ-ša-Marduk\\\",\\n        \\\"Remy Hadley\\\",\\n        \\\"Richard Needleman\\\",\\n        \\\"Robert Koch\\\",\\n        \\\"Rufus of Ephesus\\\",\\n        // S\\n        \\\"Saint Fabiola\\\",\\n        \\\"Sawbone\\\",\\n        \\\"Scribonius Largus\\\",\\n        \\\"Serapion of Alexandria\\\",\\n        \\\"Servilius Damocrates\\\",\\n        \\\"Sextius Niger\\\",\\n        \\\"Sextus Empiricus\\\",\\n        \\\"Sextus Placitus\\\",\\n        \\\"Shennong\\\",\\n        \\\"Shepseskaf-ankh\\\",\\n        \\\"Soranus of Ephesus\\\",\\n        // T\\n        \\\"Themison of Laodicea\\\",\\n        \\\"Theodorus Priscianus\\\",\\n        \\\"Theophilus Protospatharius\\\",\\n        \\\"Thessalus of Tralles\\\",\\n        \\\"Thomas Neill Cream\\\",\\n        \\\"Tirumular\\\",\\n        // V\\n        \\\"Virginia Apgar\\\",\\n        // W\\n        \\\"Walter Freeman\\\",\\n        \\\"William Osler\\\",\\n        // X\\n        \\\"Xenocrates of Aphrodisias\\\",\\n        // Z\\n        \\\"Zhang Zhongjing\\\",\\n        \\\"Zopyrus\\\",\\n    ],\\n    pilot: [\\n        // A\\n        \\\"Air Boss\\\",\\n        \\\"Air Bust\\\",\\n        \\\"Alan Shepard\\\",\\n        \\\"Alex Rogan\\\",\\n        \\\"Amelia Earhart\\\",\\n        \\\"Amuro Ray\\\",\\n        \\\"Amy Johnson\\\",\\n        \\\"Anne Morrow Lindbergh\\\",\\n        \\\"Asami Sato\\\",\\n        // B\\n        \\\"Baloo\\\",\\n        \\\"Beryl Markham\\\",\\n        \\\"Bessie Coleman\\\",\\n        \\\"Betty Skelton\\\",\\n        \\\"Bill Owens\\\",\\n        \\\"Buttery Fly\\\",\\n        \\\"Buzz Aldrin\\\",\\n        // C\\n        \\\"Charles Kingsford Smith\\\",\\n        \\\"Charles Lindbergh\\\",\\n        \\\"Chesley Sullenberger\\\",\\n        \\\"Chopper McFly\\\",\\n        // D\\n        \\\"Diana Barnato Walker\\\",\\n        \\\"Dieter F. Uchtdorf\\\",\\n        \\\"Douglas Bader\\\",\\n        \\\"DragonFlew\\\",\\n        // E\\n        \\\"Edward O'Hare\\\",\\n        \\\"Elliott Roosevelt\\\",\\n        \\\"Eugene Bullard\\\",\\n        // F\\n        \\\"Fly Undone\\\",\\n        \\\"Fox McCloud\\\",\\n        \\\"Francis Gary Powers\\\",\\n        // G\\n        \\\"Geraldyn M. Cobb\\\",\\n        \\\"Ghost of Kyiv\\\",\\n        // H\\n        \\\"Han Solo\\\",\\n        \\\"Hanna Reitsch\\\",\\n        \\\"Hans Boehm\\\",\\n        \\\"Hans von Hammer\\\",\\n        \\\"Harriet Quimby\\\",\\n        \\\"Hera Syndulla\\\",\\n        \\\"Hikaru Sulu\\\",\\n        \\\"Hoban Washburne\\\",\\n        \\\"Howard Hughes\\\",\\n        // I\\n        \\\"Iceman Kazansky\\\",\\n        \\\"Ilan Ramon\\\",\\n        // J\\n        \\\"Jacqueline Cochran\\\",\\n        \\\"James McCloud\\\",\\n        \\\"Jean Batten\\\",\\n        \\\"Joe Sullivan\\\",\\n        \\\"Joker Moreau\\\",\\n        \\\"Joseph Cooper\\\",\\n        // K\\n        \\\"Kara Thrace\\\",\\n        // L\\n        \\\"Lord Flashheart\\\",\\n        \\\"Lothar von Richthofen\\\",\\n        \\\"Louis Blériot\\\",\\n        \\\"Lydia Litvyak\\\",\\n        // M\\n        \\\"Mamma Aiuto\\\",\\n        \\\"Manfred von Richthofen\\\",\\n        \\\"Mathias Rust\\\",\\n        \\\"Maverick Mitchell\\\",\\n        \\\"Mitchell Gant\\\",\\n        // N\\n        \\\"Nadiya Savchenko\\\",\\n        \\\"Night Witches\\\",\\n        \\\"Niobe\\\",\\n        // O\\n        \\\"Orville Wright\\\",\\n        // P\\n        \\\"Pancho Barnes\\\",\\n        \\\"Pappy Boyington\\\",\\n        \\\"Paul Tibbets\\\",\\n        \\\"Piotr Skut\\\",\\n        \\\"Poe Dameron\\\",\\n        \\\"Porco Rosso\\\",\\n        // R\\n        \\\"Raymonde de Laroche\\\",\\n        \\\"Richard Bong\\\",\\n        \\\"Rick Husband\\\",\\n        // S\\n        \\\"Sabiha Gökçen\\\",\\n        \\\"Slip Stream\\\",\\n        \\\"Star Lord\\\",\\n        \\\"Steve Fossett\\\",\\n        \\\"Steven Hiller\\\",\\n        // T\\n        \\\"Topper Harley\\\",\\n        \\\"Turanga Leela\\\",\\n        // V\\n        \\\"Valentina Tereshkova\\\",\\n        \\\"Valentina Vostok\\\",\\n        // W\\n        \\\"Warbird\\\",\\n        \\\"Wolf O'Donnell\\\",\\n        // Y\\n        \\\"Yuri Gagarin\\\",\\n        // Z\\n        \\\"Xenia Onatopp\\\",\\n    ],\\n    punk: [\\n        // A\\n        \\\"Aella\\\",\\n        \\\"Ainippe\\\",\\n        \\\"Al Capone\\\",\\n        \\\"Alfhild\\\",\\n        \\\"Al Swearengen\\\",\\n        \\\"Alkippe\\\",\\n        \\\"Andromache\\\",\\n        \\\"Anna Nzinga\\\",\\n        \\\"Anne Bonny\\\",\\n        \\\"Anne Dieu le Veut\\\",\\n        \\\"Antianeira\\\",\\n        // B\\n        \\\"Beatrix Kiddo\\\",\\n        \\\"Black Bart\\\",\\n        \\\"Blackbeard\\\",\\n        \\\"Bonnie Parker\\\",\\n        \\\"Bryan Mills\\\",\\n        // C\\n        \\\"Captain Haddock\\\",\\n        \\\"Captain Hook\\\",\\n        \\\"Charlotte Badger\\\",\\n        \\\"Clyde Barrow\\\",\\n        // D\\n        \\\"Deborah Sampson\\\",\\n        \\\"Deianira\\\",\\n        \\\"Diana Prince\\\",\\n        \\\"Donbot\\\",\\n        \\\"Don Corleone\\\",\\n        \\\"Don Logan\\\",\\n        // E\\n        \\\"Elise Eskilsdotter\\\",\\n        \\\"Ellen Ripley\\\",\\n        \\\"Elvira Hancock\\\",\\n        \\\"Eowyn\\\",\\n        \\\"Erza Scarlet\\\",\\n        \\\"Evie\\\",\\n        // F\\n        \\\"Fat Tony\\\",\\n        \\\"Francois l'Olonnais\\\",\\n        // G\\n        \\\"Gemma Teller Morrow\\\",\\n        \\\"Grace O'Malley\\\",\\n        // H\\n        \\\"Harriet Tubman\\\",\\n        \\\"Hippolyta\\\",\\n        \\\"Hippomache\\\",\\n        // J\\n        \\\"Jack Sparrow\\\",\\n        \\\"Jacquotte Delahaye\\\",\\n        \\\"Jeanne de Clisson\\\",\\n        \\\"Jen Yu\\\",\\n        \\\"Joe Chill\\\",\\n        \\\"Jules Winnfield\\\",\\n        // K\\n        \\\"Katniss Everdeen\\\",\\n        \\\"Kiyuchiyo\\\",\\n        // L\\n        \\\"Leon\\\",\\n        \\\"Long Ben\\\",\\n        \\\"Long John Silver\\\",\\n        // M\\n        \\\"Ma Barker\\\",\\n        \\\"Ma Beagle\\\",\\n        \\\"Mark Gor\\\",\\n        \\\"Mary Read\\\",\\n        \\\"Melanippe\\\",\\n        \\\"Mia Wallace\\\",\\n        \\\"Mikasa Ackerman\\\",\\n        // N\\n        \\\"Ned Kelly\\\",\\n        \\\"Nucky Thompson\\\",\\n        // O\\n        \\\"O-Ren Ishii\\\",\\n        // R\\n        \\\"Rani Velu Nachiyar\\\",\\n        \\\"Red Rackham\\\",\\n        \\\"Rusla\\\",\\n        // S\\n        \\\"Sadie Farrell\\\",\\n        \\\"Sayyida al Hurra\\\",\\n        \\\"Shiva of the East\\\",\\n        \\\"Sir Francis Drake\\\",\\n        \\\"Sir Henry Morgan\\\",\\n        \\\"Snaps Provolone\\\",\\n        \\\"Stephanie St. Clair\\\",\\n        \\\"Stringer Bell\\\",\\n        // T\\n        \\\"Tom Stall\\\",\\n        \\\"Tony Montana\\\",\\n        \\\"Tony Soprano\\\",\\n        \\\"Tyler Durden\\\",\\n        \\\"U. Tolkien 2 Me\\\",\\n        // V\\n        \\\"Vincent Vega\\\",\\n        \\\"Virginia Hill\\\",\\n        // W\\n        \\\"William Kidd\\\",\\n        // Z\\n        \\\"Zoro Roronoa\\\",\\n    ],\\n    spy: [\\n        // A\\n        \\\"Agent 99\\\",\\n        \\\"Agent Kay\\\",\\n        \\\"Aldrich Ames\\\",\\n        \\\"Andree Borrel\\\",\\n        \\\"Ashraf Marwan\\\",\\n        \\\"Atomic Blonde\\\",\\n        \\\"Austin Millbarge\\\",\\n        \\\"Austin Powers\\\",\\n        // B\\n        \\\"Belle Boyd\\\",\\n        \\\"Bob Ho\\\",\\n        \\\"Boris Badenov\\\",\\n        // C\\n        \\\"Cody Banks\\\",\\n        // D\\n        \\\"Derek Flint\\\",\\n        \\\"Donald Maclean\\\",\\n        // E\\n        \\\"Eileen Nearne\\\",\\n        \\\"Emily Pollifax\\\",\\n        \\\"Emma Peel\\\",\\n        \\\"Emmett Fitz-Hume\\\",\\n        \\\"Ethan Hunt\\\",\\n        \\\"Ethel Rosenberg\\\",\\n        // F\\n        \\\"Felix Leiter\\\",\\n        \\\"Foxy Skulk\\\",\\n        \\\"Francis Walsingham\\\",\\n        \\\"Frederick Joubert Duquesne\\\",\\n        // G\\n        \\\"George Koval\\\",\\n        \\\"George Reginald Starr\\\",\\n        \\\"George Smiley\\\",\\n        \\\"Giacomo Casanova\\\",\\n        // H\\n        \\\"Harry Hart\\\",\\n        \\\"Harry Tasker\\\",\\n        \\\"Herbert Philbrick\\\",\\n        \\\"Hubert Bonisseur de La Bath\\\",\\n        // I\\n        \\\"Ian Fleming\\\",\\n        \\\"Illya Kuryakin\\\",\\n        // J\\n        \\\"Jack Bauer\\\",\\n        \\\"Jack Ryan\\\",\\n        \\\"James Armistead Lafayette\\\",\\n        \\\"James Bond\\\",\\n        \\\"Jane Blonde\\\",\\n        \\\"Jane Smith\\\",\\n        \\\"Jason Bourne\\\",\\n        \\\"John André\\\",\\n        \\\"John Drake\\\",\\n        \\\"John Steed\\\",\\n        \\\"John Vassall\\\",\\n        \\\"Johnny English\\\",\\n        \\\"Joseph Turner\\\",\\n        \\\"Julius Rosenberg\\\",\\n        // K\\n        \\\"Kim Philby\\\",\\n        \\\"Klaus Fuchs\\\",\\n        \\\"Krystyna Skarbek\\\",\\n        // L\\n        \\\"Lafayette C. Baker\\\",\\n        // M\\n        \\\"Markus Wolf\\\",\\n        \\\"Mata Hari\\\",\\n        \\\"Maxwell Smart\\\",\\n        \\\"Michael Westen\\\",\\n        // N\\n        \\\"Napoleon Solo\\\",\\n        \\\"Natasha Fatale\\\",\\n        \\\"Nathan D. Muir\\\",\\n        \\\"Noor Inayat Khan\\\",\\n        // O\\n        \\\"Odette Hallowes\\\",\\n        \\\"Oleg Gordievsky\\\",\\n        // P\\n        \\\"Peggy Shippen\\\",\\n        \\\"Perry the Platypus\\\",\\n        // R\\n        \\\"Ralph McGehee\\\",\\n        \\\"Richard Sorge\\\",\\n        // S\\n        \\\"Sarah Walker\\\",\\n        \\\"Savitri Devi\\\",\\n        \\\"Secret Squirrel\\\",\\n        \\\"Severus Snape\\\",\\n        \\\"Shi Pei Pu\\\",\\n        \\\"Simon Templar\\\",\\n        \\\"Sterling Archer\\\",\\n        \\\"Sydney Bristow\\\",\\n        // T\\n        \\\"Tara King\\\",\\n        \\\"Tom Bishop\\\",\\n        // V\\n        \\\"Violette Szabo\\\",\\n        \\\"Virginia Hall\\\",\\n        // W\\n        \\\"William Brandt\\\",\\n        \\\"William Stephenson\\\",\\n        // X\\n        \\\"Xander Cage\\\",\\n        // Y\\n        \\\"Yelena Belova\\\",\\n        \\\"Yisrael Bar\\\",\\n    ],\\n    thief: [\\n        // A\\n        \\\"Adam Worth\\\",\\n        \\\"Alan Golder\\\",\\n        \\\"Albert Spaggiari\\\",\\n        // B\\n        \\\"Belle Starr\\\",\\n        \\\"Bender Bending Rodríguez\\\",\\n        \\\"Bill Mason\\\",\\n        \\\"Butch Cassidy\\\",\\n        // C\\n        \\\"Carl Gugasian\\\",\\n        \\\"Carmen Sandiego\\\",\\n        \\\"Catwoman\\\",\\n        \\\"Cat Burglar\\\",\\n        \\\"Charles Peace\\\",\\n        \\\"Colton Harris-Moore\\\",\\n        // D\\n        \\\"Danny Ocean\\\",\\n        \\\"David Brankle\\\",\\n        \\\"Derek Creighton Smalls\\\",\\n        \\\"Dinner Set Gang\\\",\\n        \\\"Doris Marie Payne\\\",\\n        // F\\n        \\\"Fagin\\\",\\n        \\\"Forty Elephants Gang\\\",\\n        \\\"Francois Villon\\\",\\n        \\\"Frank Abagnale, Jr.\\\",\\n        // H\\n        \\\"Hans Gruber\\\",\\n        // I\\n        \\\"Irene Adler\\\",\\n        \\\"Ishikawa Goemon\\\",\\n        // J\\n        \\\"Jackie Brown\\\",\\n        \\\"Jeanne de Valois-Saint-Remy\\\",\\n        \\\"Jesse James\\\",\\n        \\\"Jesse Woodson James\\\",\\n        \\\"John Herbert Dillinger\\\",\\n        \\\"Jonathan Wild\\\",\\n        // K\\n        \\\"Kenny Kimes\\\",\\n        \\\"Keyser Söze\\\",\\n        \\\"Koose Munisamy Veerappan\\\",\\n        // L\\n        \\\"Lara Croft\\\",\\n        \\\"Lester Joseph Gillis\\\",\\n        // M\\n        \\\"Mary Frith\\\",\\n        \\\"Mithilesh Kumar Srivastava\\\",\\n        // N\\n        \\\"Neal Caffrey\\\",\\n        \\\"Neil McCauley\\\",\\n        // P\\n        \\\"Prometheus\\\",\\n        // R\\n        \\\"Richard Turpin\\\",\\n        \\\"Rob McYoinker\\\",\\n        \\\"Robert LeRoy Parker\\\",\\n        \\\"Robert Money\\\",\\n        \\\"Robin Hood\\\",\\n        // S\\n        \\\"Sante Singhrs\\\",\\n        \\\"Scott Lang\\\",\\n        \\\"Snake Jailbird\\\",\\n        \\\"Sofia Ivanovna Blyuvshtein\\\",\\n        \\\"Starlet Bandit\\\",\\n        \\\"Stephen Blumberg\\\",\\n        // V\\n        \\\"Vincenzo Peruggia\\\",\\n        \\\"Vincenzo Pipino\\\",\\n    ],\\n    traitor: [\\n        // A\\n        \\\"Alfred Redl\\\",\\n        \\\"Alan Nunn May\\\",\\n        \\\"Andrey Vlasov\\\",\\n        // B\\n        \\\"Benedict Arnold\\\",\\n        \\\"Briony Tallis\\\",\\n        // C\\n        \\\"Charles Trask\\\",\\n        \\\"Charlie Kahn\\\",\\n        // D\\n        \\\"Doña Marina\\\",\\n        // E\\n        \\\"Edmund Pevensie\\\",\\n        \\\"Emilio Aguinaldo\\\",\\n        \\\"Ephialtes of Trachis\\\",\\n        // F\\n        \\\"Fernand Mondego\\\",\\n        \\\"Fredo Corleone\\\",\\n        // G\\n        \\\"Gaius Cassius Longinus\\\",\\n        \\\"Gollum\\\",\\n        // I\\n        \\\"Iago\\\",\\n        // J\\n        \\\"Jaime Lannister\\\",\\n        \\\"Ji Ben\\\",\\n        \\\"Judas Iscariot\\\",\\n        // L\\n        \\\"Lu Bu\\\",\\n        // M\\n        \\\"Marcus Junius Brutus\\\",\\n        \\\"Marvelous Chester\\\",\\n        \\\"Maven Calore\\\",\\n        \\\"Mir Jafar\\\",\\n        \\\"Mordechai Vanunu\\\",\\n        // P\\n        \\\"Petrus of Thorolund\\\",\\n        \\\"Pierre Laval\\\",\\n        \\\"Philippe Petain\\\",\\n        // Q\\n        \\\"Qin Hui\\\",\\n        // S\\n        \\\"Sidney Reilly\\\",\\n        \\\"Stella Kubler\\\",\\n        // T\\n        \\\"Trusty Patches\\\",\\n        // V\\n        \\\"Vidkun Quisling\\\",\\n        // W\\n        \\\"Wang Jingwei\\\",\\n        \\\"Winston Smith\\\",\\n    ],\\n    vanguard: [\\n        // A\\n        \\\"Achilles\\\",\\n        \\\"Akbar\\\",\\n        \\\"Alaric the Visigoth\\\",\\n        \\\"Alexander the Great\\\",\\n        \\\"Amina Sukhera\\\",\\n        \\\"Anita Garibaldi\\\",\\n        \\\"Aqualtune\\\",\\n        \\\"Aragorn\\\",\\n        \\\"Arawelo\\\",\\n        \\\"Arjuna\\\",\\n        \\\"Arminius\\\",\\n        \\\"Artemisia of Caria\\\",\\n        \\\"Asterix\\\",\\n        \\\"Asuna Yuuki\\\",\\n        \\\"Attila the Hun\\\",\\n        // B\\n        \\\"Babur\\\",\\n        \\\"Basil the Bulgar-Slayer\\\",\\n        \\\"Bhima\\\",\\n        \\\"Bjorn Ironside\\\",\\n        \\\"Boudicca\\\",\\n        // C\\n        \\\"Chen Jinnan\\\",\\n        \\\"Cnut the Great\\\",\\n        \\\"Colestah\\\",\\n        \\\"Constantine the Great\\\",\\n        \\\"Count Roland\\\",\\n        \\\"Cynane\\\",\\n        \\\"Cyrus the Great\\\",\\n        // D\\n        \\\"Douglas Haig\\\",\\n        \\\"Duke of Wellington\\\",\\n        // E\\n        \\\"Egil Skallagrimsson\\\",\\n        \\\"Eric Bloodaxe\\\",\\n        \\\"Erik the Red\\\",\\n        // F\\n        \\\"Fu Hao\\\",\\n        // G\\n        \\\"Galvarino\\\",\\n        \\\"Genghis Khan\\\",\\n        \\\"George Washington\\\",\\n        \\\"Gunnar Hamundarson\\\",\\n        \\\"Guts\\\",\\n        // H\\n        \\\"Hannibal Barca\\\",\\n        \\\"Harald Hardrada\\\",\\n        \\\"Hatshepsut\\\",\\n        \\\"Hattori Hanzo\\\",\\n        \\\"Hector\\\",\\n        \\\"Horatius Cocles\\\",\\n        // I\\n        \\\"I. M. Stronk\\\",\\n        \\\"Isshin\\\",\\n        // J\\n        \\\"Joan of Arc\\\",\\n        \\\"Julius Caesar\\\",\\n        // K\\n        \\\"Kahina\\\",\\n        \\\"Khutulun\\\",\\n        \\\"King Alfred\\\",\\n        \\\"King Arthur\\\",\\n        \\\"Knight Artorias\\\",\\n        // L\\n        \\\"Lady Trieu\\\",\\n        \\\"Leif Erikson\\\",\\n        \\\"Leonidas of Sparta\\\",\\n        \\\"Lord Nelson\\\",\\n        \\\"Lozen\\\",\\n        // M\\n        \\\"Maria Quiteria\\\",\\n        \\\"Maximus Decimus Meridius\\\",\\n        \\\"Meat Shield\\\",\\n        \\\"Miltiades\\\",\\n        \\\"Miyamoto Musashi\\\",\\n        // N\\n        \\\"Nakano Takeko\\\",\\n        \\\"Napoleon Bonaparte\\\",\\n        \\\"Nat Turner\\\",\\n        // O\\n        \\\"Obelix\\\",\\n        \\\"Oda Nobunaga\\\",\\n        \\\"Olympias\\\",\\n        // P\\n        \\\"Peter the Great\\\",\\n        \\\"Pyrrhus of Epirus\\\",\\n        // R\\n        \\\"Ragnor Lodbrok\\\",\\n        \\\"Richard the Lionheart\\\",\\n        \\\"Rollo of Normandy\\\",\\n        // S\\n        \\\"Saladin\\\",\\n        \\\"Sam Sharpe\\\",\\n        \\\"Sambhaji Bhosale\\\",\\n        \\\"Scathach\\\",\\n        \\\"Scipio Africanus\\\",\\n        \\\"Siegward of Catarina\\\",\\n        \\\"Simon Bolivar\\\",\\n        \\\"Sirris\\\",\\n        \\\"Sitting Bull\\\",\\n        \\\"Slave Knight Gael\\\",\\n        \\\"Solaire of Astora\\\",\\n        \\\"Sparethra\\\",\\n        \\\"Spartacus\\\",\\n        \\\"Sun Tzu\\\",\\n        // T\\n        \\\"T. E. Lawrence\\\",\\n        \\\"Teuta\\\",\\n        \\\"Tokugawa Ieyasu\\\",\\n        \\\"Tomoe Gozen\\\",\\n        \\\"Tomyris\\\",\\n        \\\"Toyotomi Hideyoshi\\\",\\n        // U\\n        \\\"Uesugi Kenshin\\\",\\n        // V\\n        \\\"Vlad the Impaler\\\",\\n        \\\"Vercingetorix\\\",\\n        // W\\n        \\\"William the Conqueror\\\",\\n        \\\"William Wallace\\\",\\n        // X\\n        \\\"Xiahou Dun\\\",\\n        // Y\\n        \\\"Yue Fei\\\",\\n        \\\"Yuria of Londor\\\",\\n        // Z\\n        \\\"Zenobia\\\",\\n        \\\"Zheng Yi Sao\\\",\\n    ],\\n};\\n\\n/**\\n * Various thresholds related to the penalty.\\n */\\nexport const penalty_t = {\\n    /**\\n     * The penalty percentage threshold at which we should lower our wanted\\n     * level.  If our penalty percentage is at least this value, then we should\\n     * reassign some gang members to jobs such as vigilante justice or ethical\\n     * hacking to help reduce our wanted level.\\n     */\\n    HIGH: 10,\\n    /**\\n     * The penalty percentage threshold at which we should move gang members\\n     * out of jobs that lower our wanted level.  Such jobs are vigilante\\n     * justice and ethical hacking.  In general, we strive to have as low\\n     * wanted level as possible.  However, if our wanted level is below this\\n     * threshold, then we should reassign members to jobs that yield income.\\n     */\\n    LOW: 2,\\n};\\n\\n/**\\n * Various rootkits we can purchase for a gang member.  Going from top to\\n * bottom, the rootkits are listed in ascending order of price.  The rootkit\\n * names are taken from this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/upgrades.ts\\n */\\nexport const rootkit = {\\n    NUKE: \\\"NUKE Rootkit\\\",\\n    SOUL: \\\"Soulstealer Rootkit\\\",\\n    HMAP: \\\"Hmap Node\\\",\\n    DEMON: \\\"Demon Rootkit\\\",\\n    JACK: \\\"Jack the Ripper\\\",\\n};\\n\\n/**\\n * Various tasks to which a gang member can be assigned.  The task names are\\n * taken from this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/tasks.ts\\n */\\nexport const task = {\\n    /**\\n     * Set a gang member to the idle state.  This is the default state upon\\n     * recruitment.\\n     * Gang: criminal, hacking\\n     */\\n    IDLE: \\\"Unassigned\\\",\\n    //\\n    // Hacking gangs.\\n    //\\n    /**\\n     * Set a gang member to commit cyberterrorism.\\n     * Gang: hacking\\n     * Money: N/A\\n     * Respect: great\\n     * Wanted: great\\n     */\\n    CYBERTERROR: \\\"Cyberterrorism\\\",\\n    /**\\n     * Set a gang member to attempt distributed denial of service (DDoS)\\n     * attacks.\\n     * Gang: hacking\\n     * Money: N/A\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    DDOS: \\\"DDoS Attacks\\\",\\n    /**\\n     * Set a gang member as an ethical hacker.\\n     * Gang: hacking\\n     * Money: yes\\n     * Respect: N/A\\n     * Wanted: negative\\n     */\\n    EHACK: \\\"Ethical Hacking\\\",\\n    /**\\n     * Set a gang member to commit financial fraud and digital counterfeiting.\\n     * Gang: hacking\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: slight\\n     */\\n    FRAUD: \\\"Fraud & Counterfeiting\\\",\\n    /**\\n     * Set a gang member to attempt identity theft.\\n     * Gang: hacking\\n     * Money: yes\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    ID_THEFT: \\\"Identity Theft\\\",\\n    /**\\n     * Set a gang member to launder money.\\n     * Gang: hacking\\n     * Money: yes\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    LAUNDER: \\\"Money Laundering\\\",\\n    /**\\n     * Set a gang member to attempt phishing scams and attacks.\\n     * Gang: hacking\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: slight\\n     */\\n    PHISH: \\\"Phishing\\\",\\n    /**\\n     * Set a gang member to create and distribute ransomware.\\n     * Gang: hacking\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: slight\\n     */\\n    RANSOMWARE: \\\"Ransomware\\\",\\n    /**\\n     * Set a gang member to create and distribute malicious viruses.\\n     * Gang: hacking\\n     * Money: N/A\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    VIRUS: \\\"Plant Virus\\\",\\n    //\\n    // Criminal gangs.\\n    //\\n    /**\\n     * Set a gang member to threaten and blackmail high-profile targets.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: slight\\n     */\\n    BLACKMAIL: \\\"Threaten & Blackmail\\\",\\n    /**\\n     * Set a gang member to run cons.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    CON: \\\"Run a Con\\\",\\n    /**\\n     * Set a gang member to sell drugs.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: slight\\n     */\\n    DRUGS: \\\"Deal Drugs\\\",\\n    /**\\n     * Set a gang member to extort civilians in our turf.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: yes\\n     */\\n    EXTORT: \\\"Strongarm Civilians\\\",\\n    /**\\n     * Set a gang member to randomly mug a person.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: very slight\\n     */\\n    MUG: \\\"Mug People\\\",\\n    /**\\n     * Set a gang member to commit armed robbery.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    ROBBERY: \\\"Armed Robbery\\\",\\n    /**\\n     * Set a gang member to commit acts of terrorism.\\n     * Gang: criminal\\n     * Money: N/A\\n     * Respect: great\\n     * Wanted: great\\n     */\\n    TERROR: \\\"Terrorism\\\",\\n    /**\\n     * Set a gang member to traffick illegal arms.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    TRAFFICK_ARMS: \\\"Traffick Illegal Arms\\\",\\n    /**\\n     * Set a gang member to attempt human trafficking.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    TRAFFICK_HUMAN: \\\"Human Trafficking\\\",\\n    //\\n    // Both criminal and hacking gangs.\\n    //\\n    /**\\n     * Set a gang member to train their Charisma stat.\\n     * Gang: criminal, hacking\\n     * Money: N/A\\n     * Wanted: N/A\\n     */\\n    CHARISMA: \\\"Train Charisma\\\",\\n    /**\\n     * Set a gang member to train their combat stats, i.e. Str, Def, Dex, Agi.\\n     * Gang: criminal, hacking\\n     * Money: N/A\\n     * Wanted: N/A\\n     */\\n    COMBAT: \\\"Train Combat\\\",\\n    /**\\n     * Set a gang member to train their Hack stat.\\n     * Gang: criminal, hacking\\n     * Money: N/A\\n     * Wanted: N/A\\n     */\\n    HACK: \\\"Train Hacking\\\",\\n    /**\\n     * Set a gang member to engage in territorial warfare against other gangs.\\n     * Gang: criminal, hacking\\n     * Money: N/A\\n     * Wanted: N/A\\n     */\\n    TURF_WAR: \\\"Territory Warfare\\\",\\n    /**\\n     * Set a gang member to be a vigilante and protect the city from criminals.\\n     * Gang: criminal, hacking\\n     * Money: N/A\\n     * Respect: N/A\\n     * Wanted: negative\\n     */\\n    VIGILANTE: \\\"Vigilante Justice\\\",\\n};\\n\\n/**\\n * Stat thresholds related to various tasks.\\n */\\nexport const task_t = {\\n    /**\\n     * The minimum Charisma stat at which a gang member might be assigned to\\n     * threaten and blackmail high-profile targets.\\n     */\\n    BLACKMAIL: 200,\\n    /**\\n     * The minimum threshold for the Charisma stat that a new recruit must\\n     * attain.  A new recruit might be assigned to train their Charisma.  They\\n     * graduate out of Charisma training after their Charisma stat is at least\\n     * this number.\\n     */\\n    CHARISMA: 15,\\n    /**\\n     * The minimum threshold for the combat stats that a new recruit must\\n     * attain.  A new recruit might be assigned to train their combat stats.\\n     * They graduate out of combat training after their combat stats are at\\n     * least this threshold.\\n     */\\n    COMBAT: 15,\\n    /**\\n     * The minimum Charisma stat at which a gang member might be assigned to\\n     * running a con.\\n     */\\n    CON: 100,\\n    /**\\n     * The minimum Hack stat at which a gang member might be assigned to commit\\n     * acts of cyberterrorism.\\n     */\\n    CYBER_TERROR: 400,\\n    /**\\n     * The minimum threshold on a combat stat at which a gang member might be\\n     * assigned to strongarm civilians.  For example, if a member has Strength\\n     * at least this number, then we might want to reassign the member to\\n     * strongarm civilians.\\n     */\\n    EXTORT: 50,\\n    /**\\n     * The minimum Hack stat at which a gang member might be assigned to commit\\n     * financial fraud and digital counterfeiting.\\n     */\\n    FRAUD: 200,\\n    /**\\n     * The minimum threshold for the Hack stat that a new recruit must attain.\\n     * A new recruit might be assigned to train their Hack stat.  They graduate\\n     * out of Hack training once their Hack stat is at least this number.\\n     */\\n    HACK: 15,\\n    /**\\n     * The minimum Hack stat at which a gang member might be assigned to\\n     * identity theft.\\n     */\\n    ID: 100,\\n    /**\\n     * The minimum Hack stat at which a gang member might be assigned to\\n     * launder money.\\n     */\\n    LAUNDER: 300,\\n    /**\\n     * The minimum Hack stat at which a gang member might be assigned to\\n     * phishing scams.\\n     */\\n    PHISH: 50,\\n    /**\\n     * The minimum threshold on a combat stat at which a gang member might be\\n     * assigned to armed robbery.  For example, if a member has Strength at\\n     * least this number, then we might want to re-assign the member to armed\\n     * robbery.\\n     */\\n    ROBBERY: 200,\\n    /**\\n     * The minimum threshold on a combat stat at which a gang member might be\\n     * assigned to acts of terrorism.  For example, if a member has Strength at\\n     * least this number, then we might want to re-assign the member to commit\\n     * acts of terrorism.\\n     */\\n    TERROR: 400,\\n    /**\\n     * The minimum threshold on a combat stat at which a gang member might be\\n     * assigned to trafficking illegal arms.  For example, if a member has\\n     * Strength at least this number, then we might want to reassign the\\n     * member to trafficking illegal arms.\\n     */\\n    TRAFFICK_ARMS: 300,\\n    /**\\n     * The minimum Charisma stat at which a gang member might be assigned to\\n     * trafficking humans.\\n     */\\n    TRAFFICK_HUMAN: 300,\\n};\\n\\n/**\\n * Various vehicles with which a gang member can be equipped.  Going from top\\n * to bottom, the vehicles are listed from least expensive to most expensive.\\n * The values are taken from this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/upgrades.ts\\n */\\nexport const vehicle = {\\n    FORD: \\\"Ford Flex V20\\\",\\n    ATX: \\\"ATX1070 Superbike\\\",\\n    MB: \\\"Mercedes-Benz S9001\\\",\\n    FERRARI: \\\"White Ferrari\\\",\\n};\\n\\n/**\\n * Various weapons we can purchase for our gang members.  Going from top to\\n * bottom in the given order, the weapons are listed from least expensive to\\n * most expensive.  The weapon names are taken from this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/upgrades.ts\\n */\\nexport const weapon = {\\n    BAT: \\\"Baseball Bat\\\",\\n    KATANA: \\\"Katana\\\",\\n    GLOCK: \\\"Glock 18C\\\",\\n    PNINE: \\\"P90C\\\",\\n    STEYR: \\\"Steyr AUG\\\",\\n    AK: \\\"AK-47\\\",\\n    MFIFTEEN: \\\"M15A10 Assault Rifle\\\",\\n    AWM: \\\"AWM Sniper Rifle\\\",\\n};\\n\",\"filename\":\"/lib/constant/gang.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725361,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to Hacknet nodes and servers.\\n\\n/**\\n * Various thresholds on our Hacknet farm.\\n */\\nexport const hnet_t = {\\n    /**\\n     * The maximum Level of a Hacknet node.  This number is taken from the file\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/Hacknet/data/Constants.ts\\n     */\\n    MAX_LEVEL: 200,\\n    /**\\n     * The money thresholds.  Use these to help us gauge how many Hacknet nodes\\n     * we should purchase.  The values 1e6 and 1e9 mean million and billion,\\n     * respectively.\\n     */\\n    MONEY: [10e6, 100e6, 1e9, 100e9],\\n    /**\\n     * The node thresholds.  At certain money thresholds, we should have the\\n     * corresponding number of nodes.\\n     */\\n    NODE: [6, 12, 24, 30],\\n    /**\\n     * The initial number of Hacknet nodes to buy.  Start our Hacknet farm\\n     * with this many seed nodes.\\n     */\\n    SEED_NODE: 3,\\n};\\n\",\"filename\":\"/lib/constant/hacknet.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725362,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constant values related to input and output.\\n\\n/**\\n * Constants for input and output.\\n */\\nexport const io = {\\n    APPEND: \\\"a\\\",\\n    NEWLINE: \\\"\\\\n\\\",\\n    WRITE: \\\"w\\\",\\n};\\n\",\"filename\":\"/lib/constant/io.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725363,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to various locations in the game world.\\n\\n/**\\n * All cities and their locations.  Data taken from:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Locations/data/LocationNames.ts\\n *\\n * Below are explanation of each field in a city object.  If a city object does\\n * not have a particular field, this means the city does not have the\\n * corresponding location.\\n *\\n * (1) company := An array of company names.  We can work for these companies.\\n * (2) gov := An array of names of governmental sites, e.g. police station or\\n *     government agency.\\n * (3) gym := An array of gym names.\\n * (4) leisure := A leisure centre, e.g. casino or arcade.\\n * (5) other := A miscellaneous location in the city.\\n * (6) shop := A hardware shop, where we can purchase servers or upgrade our\\n *     home server.\\n * (7) uni := The name of the city's university.\\n */\\nexport const cities = {\\n    /**\\n     * All cities in the game world.\\n     */\\n    all: [\\\"Aevum\\\", \\\"Chongqing\\\", \\\"Ishima\\\", \\\"New Tokyo\\\", \\\"Sector-12\\\", \\\"Volhaven\\\"],\\n    /**\\n     * Aevum locations.\\n     */\\n    Aevum: {\\n        company: [\\n            \\\"AeroCorp\\\",\\n            \\\"Bachman & Associates\\\",\\n            \\\"Clarke Incorporated\\\",\\n            \\\"ECorp\\\",\\n            \\\"Fulcrum Technologies\\\",\\n            \\\"Galactic Cybersystems\\\",\\n            \\\"Rho Construction\\\",\\n            \\\"Watchdog Security\\\",\\n        ],\\n        gov: [\\\"Aevum Police Headquarters\\\"],\\n        gym: [\\\"Crush Fitness Gym\\\", \\\"Snap Fitness Gym\\\"],\\n        leisure: \\\"Iker Molina Casino\\\",\\n        shop: \\\"NetLink Technologies\\\",\\n        uni: \\\"Summit University\\\",\\n    },\\n    /**\\n     * Chongqing locations.\\n     */\\n    Chongqing: {\\n        company: [\\\"KuaiGong International\\\", \\\"Solaris Space Systems\\\"],\\n        other: \\\"Church of the Machine God\\\",\\n    },\\n    /**\\n     * Ishima locations.\\n     */\\n    Ishima: {\\n        company: [\\\"Nova Medical\\\", \\\"Omega Software\\\"],\\n        other: \\\"0x6C1\\\",\\n        shop: \\\"Storm Technologies\\\",\\n    },\\n    /**\\n     * New Tokyo locations.\\n     */\\n    \\\"New Tokyo\\\": {\\n        company: [\\n            \\\"DefComm\\\",\\n            \\\"Global Pharmaceuticals\\\",\\n            \\\"Noodle Bar\\\",\\n            \\\"VitaLife\\\",\\n        ],\\n        leisure: \\\"Arcade\\\",\\n    },\\n    /**\\n     * Sector-12 locations.\\n     */\\n    \\\"Sector-12\\\": {\\n        company: [\\n            \\\"Blade Industries\\\",\\n            \\\"Carmichael Security\\\",\\n            \\\"DeltaOne\\\",\\n            \\\"FoodNStuff\\\",\\n            \\\"Four Sigma\\\",\\n            \\\"Icarus Microsystems\\\",\\n            \\\"Joe's Guns\\\",\\n            \\\"MegaCorp\\\",\\n            \\\"Universal Energy\\\",\\n        ],\\n        gov: [\\n            \\\"Central Intelligence Agency\\\",\\n            \\\"National Security Agency\\\",\\n            \\\"Sector-12 City Hall\\\",\\n        ],\\n        gym: [\\\"Iron Gym\\\", \\\"Powerhouse Gym\\\"],\\n        shop: \\\"Alpha Enterprises\\\",\\n        uni: \\\"Rothman University\\\",\\n    },\\n    /**\\n     * Volhaven locations.\\n     */\\n    Volhaven: {\\n        company: [\\n            \\\"CompuTek\\\",\\n            \\\"Helios Labs\\\",\\n            \\\"LexoCorp\\\",\\n            \\\"NWO\\\",\\n            \\\"Omnia Cybersystems\\\",\\n            \\\"SysCore Securities\\\",\\n        ],\\n        gym: [\\\"Millenium Fitness Gym\\\"],\\n        shop: \\\"OmniTek Incorporated\\\",\\n        uni: \\\"ZB Institute of Technology\\\",\\n    },\\n    /**\\n     * These are generic locations that are found in every city.\\n     */\\n    generic: {\\n        hospital: \\\"Hospital\\\",\\n        slum: \\\"The Slums\\\",\\n        TA: \\\"Travel Agency\\\",\\n        WSE: \\\"World Stock Exchange\\\",\\n    },\\n};\\n\",\"filename\":\"/lib/constant/location.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725364,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values.  These can be numeric constants or string\\n// constants.\\n\\n/**\\n * The bases for various number systems.\\n */\\nexport const base = {\\n    /**\\n     * The base of the binary number system.\\n     */\\n    BINARY: 2,\\n    /**\\n     * The base of the decimal number system.\\n     */\\n    DECIMAL: 10,\\n};\\n\\n/**\\n * Use ANSI escape codes to add colour.  Refer to this page for more details:\\n *\\n * https://www.lihaoyi.com/post/BuildyourownCommandLinewithANSIescapecodes.html\\n */\\nexport const colour = {\\n    DARK_GREEN: \\\"\\\\u001b[38;5;22m\\\",\\n    GREEN: \\\"\\\\u001b[32m\\\",\\n    RED: \\\"\\\\u001b[31m\\\",\\n    RESET: \\\"\\\\u001b[0m\\\",\\n};\\n\\n/**\\n * Always have this amount of money in reserve.  When engaging in any\\n * purchasing activities, we do not want to spend all our money.  We spend only\\n * if doing so would leave us with at least this amount of money left over.\\n */\\nexport const money_reserve = 50e6;\\n\\n/**\\n * The hack script.  This script is used for hacking a server.\\n */\\nexport const script = \\\"hack.js\\\";\\n\\n/**\\n * The cost of the TOR router.  Data from the file\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Constants.ts\\n */\\nexport const tor_cost = 200e3;\\n\\n/**\\n * The minimum required Hack stat to enable a player to work at most companies.\\n */\\nexport const work_hack_lvl = 250;\\n\",\"filename\":\"/lib/constant/misc.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725365,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to purchased servers.\\n\\nexport const pserv = {\\n    /**\\n     * The minimum amount of RAM each purchased server should have to be\\n     * considered high-end.\\n     */\\n    HIGH_RAM: 16384,\\n    /**\\n     * By default, we purchase this many servers to kickstart our farm of\\n     * purchased servers as an early source of income and Hack XP.\\n     */\\n    MIN: 13,\\n    /**\\n     * The prefix for the name of each purchased server.  The very first\\n     * purchased server is always named \\\"pserv\\\".  Any subsequent purchased\\n     * server is named as pserv-n, where n is a non-negative integer.\\n     */\\n    PREFIX: \\\"pserv\\\",\\n    /**\\n     * An array of valid RAM for a purchased server.  Each RAM amount is a\\n     * power of 2.\\n     */\\n    RAM: [\\n        32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536,\\n        131072, 262144, 524288, 1048576,\\n    ],\\n};\\n\",\"filename\":\"/lib/constant/pserv.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725366,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to servers in the game world.  We exclude\\n// purchased servers.\\n\\n/**\\n * The home server of the player.\\n */\\nexport const home = \\\"home\\\";\\n\\n/**\\n * Various thresholds related to our home server.\\n */\\nexport const home_t = {\\n    /**\\n     * The maximum number of Cores on the home server.  This is not necessarily\\n     * the greatest number of Cores the home server can have.  Use this\\n     * constant to help us decide whether to upgrade our home server any\\n     * further.\\n     */\\n    CORE: 4,\\n    /**\\n     * The maximum amount of RAM on the home server.  This is not necessarily\\n     * the largest amount of RAM the home server can have.  Use this constant\\n     * to help us decide whether to upgrade our home server any further.\\n     */\\n    RAM: 262144, // 2^18\\n    /**\\n     * The minimum amount of RAM for a high-end home server.\\n     */\\n    RAM_HIGH: 512,\\n    /**\\n     * The minimum amount of RAM for a high-end home server, assuming that we\\n     * have level 2 of \\\"Source-File 4: The Singularity\\\".\\n     */\\n    RAM_HUGE: 1024,\\n    /**\\n     * The minimum amount of RAM for a high-end home server, assuming that we\\n     * have level at most 1 of \\\"Source-File 4: The Singularity\\\".\\n     */\\n    RAM_MASSIVE: 2048,\\n    /**\\n     * The minimum amount of RAM for a mid-sized home server.\\n     */\\n    RAM_MID: 128,\\n    /**\\n     * Reserve various amounts of RAM on the home server.\\n     */\\n    reserve: {\\n        /**\\n         * By default, we reserve this amount of RAM on the home server.\\n         */\\n        DEFAULT: 64,\\n        /**\\n         * If our home server is high-end or better, reserve this amount of RAM.\\n         */\\n        HIGH: 512,\\n        /**\\n         * If we have only level 2 of \\\"Source-File 4: The Singularity\\\".\\n         */\\n        HUGE: 1024,\\n        /**\\n         * If we have only level 1 of \\\"Source-File 4: The Singularity\\\".\\n         */\\n        MASSIVE: 2048,\\n        /**\\n         * If our home server is mid-end or thereabout, reserve this amount of\\n         * RAM.\\n         */\\n        MID: 128,\\n    },\\n};\\n\\n/**\\n * Various constants related to a server.\\n */\\nexport const server = {\\n    /**\\n     * The name of a text file.  The file contains the hostname of the server we\\n     * are currently targetting.  We use our home RAM to hack the target.\\n     */\\n    HRAM: \\\"hram.txt\\\",\\n    /**\\n     * The darkweb server, accessible after purchasing the Tor router.\\n     */\\n    ONION: \\\"darkweb\\\",\\n    /**\\n     * The name of a text file.  If a file with the given name appears on our\\n     * home server, then it means one of the following:\\n     *\\n     * (1) We are sharing our home server with a faction.  Doing so boosts our\\n     *     reputation gain within the faction.\\n     * (2) We want to suspend the most RAM intensive script in order to free up\\n     *     some RAM on the home server.\\n     */\\n    SHARE: \\\"share.txt\\\",\\n    /**\\n     * The name of the script for sharing our home server with a faction.\\n     */\\n    SHARE_SCRIPT: \\\"share.js\\\",\\n    /**\\n     * The w0r1d_d43m0n server.\\n     */\\n    WD: \\\"w0r1d_d43m0n\\\",\\n};\\n\\n/**\\n * Various thresholds related to servers.\\n */\\nexport const server_t = {\\n    /**\\n     * The number of low-end servers to target.  This number means we target n\\n     * servers that have the lowest Hack stat requirement.  This number is\\n     * divided into various tiers.  We use each tier, depending on various\\n     * criteria.\\n     */\\n    lowend: {\\n        LOW: 1,\\n        MID: 2,\\n        HIGH: 3,\\n    },\\n};\\n\",\"filename\":\"/lib/constant/server.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725367,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constants related to sleeves.\\n\\n/**\\n * Miscellaneous thresholds related to sleeves.  A sleeve is a digital carbon\\n * copy (CC) of the player.\\n */\\nexport const cc_t = {\\n    /**\\n     * The cost or expenditure multiplier.  Augmentations for a sleeve are\\n     * expensive.  Whenever we make a decision to purchase an Augmentation for a\\n     * sleeve, we multiply the cost of the Augmentation by this multiplier.  In\\n     * case we do buy the Augmentation, at least we would not have spent all our\\n     * funds.  Do not want to go bankrupt because we decided to purchase an\\n     * expensive Augmentation.\\n     */\\n    COST_MULT: 3,\\n    /**\\n     * The maximum value at which a sleeve is fully synchronized with the\\n     * player's consciousness.\\n     */\\n    MAX_SYNC: 100,\\n    /**\\n     * The minimum shock value of a sleeve.\\n     */\\n    MIN_SHOCK: 0,\\n    /**\\n     * Mugging increases all of a sleeve's combat stats.  Let a sleeve mug until\\n     * each of their combat stats is at least this value.\\n     */\\n    MUG: 10,\\n    /**\\n     * Shoplift increases a sleeve's Dexterity and Agility.  Let a sleeve\\n     * shoplift until their Dexterity and Agility are at least this value.\\n     */\\n    SHOP: 5,\\n};\\n\",\"filename\":\"/lib/constant/sleeve.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725368,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to studying at a university.\\n\\n/**\\n * Various courses we can study at a university.  Data taken from\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/NetscriptFunctions/Singularity.ts\\n */\\nexport const course = {\\n    ALGO: \\\"Algorithms\\\",\\n    CS: \\\"Study Computer Science\\\",\\n    DATA: \\\"Data Structures\\\",\\n    LEAD: \\\"Leadership\\\",\\n    MANAGE: \\\"Management\\\",\\n    NET: \\\"Networks\\\",\\n};\\n\",\"filename\":\"/lib/constant/study.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725369,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constants related to time.\\n\\n/**\\n * Various pre-defined periods.  Use these as our waiting times.  If we want\\n * a custom period of time, we should define it using the given amount of\\n * time in millisecond, second, or minute.\\n */\\nexport const wait_t = {\\n    /**\\n     * The default waiting period in seconds.  Use this for most purposes, when\\n     * we wait for an action to complete.\\n     */\\n    DEFAULT: 5e3,\\n    /**\\n     * One hour expressed in milliseconds.\\n     */\\n    HOUR: 36e5,\\n    /**\\n     * One millisecond.\\n     */\\n    MILLISECOND: 1,\\n    /**\\n     * One minute expressed in milliseconds.\\n     */\\n    MINUTE: 6e4,\\n    /**\\n     * One second expressed in milliseconds.\\n     */\\n    SECOND: 1e3,\\n};\\n\",\"filename\":\"/lib/constant/time.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725370,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to working at a company or for a faction.\\n\\n/**\\n * Areas of employment within a company or faction.\\n */\\nexport const job_area = {\\n    BUSINESS: \\\"Business\\\",\\n    FIELD: \\\"Field Work\\\",\\n    HACK: \\\"Hacking Contracts\\\",\\n    SOFTWARE: \\\"Software\\\",\\n};\\n\\n/**\\n * Job titles at various companies.  Data taken from\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Company/data/companypositionnames.ts\\n */\\nexport const job_title = {\\n    CEO: \\\"Chief Executive Officer\\\",\\n    CFO: \\\"Chief Financial Officer\\\",\\n    CTO: \\\"Chief Technology Officer\\\",\\n};\\n\",\"filename\":\"/lib/constant/work.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725371,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to the World Stock Exchange.\\n\\n/**\\n * Various thresholds related to the market forecast.\\n */\\nexport const forecast = {\\n    /**\\n     * The buying threshold for the market forecast.  We skip buying shares if\\n     * the forecast is below this threshold.\\n     */\\n    BUY: 0.575,\\n    /**\\n     * A selling threshold for the market forecast.  We sell all shares of a\\n     * stock if the forecast is below this threshold.\\n     */\\n    SELL: 0.5,\\n    /**\\n     * The threshold for the market volatility.  We do not buy shares if the\\n     * volatility is above this threshold.\\n     */\\n    VOLATILITY: 0.05,\\n};\\n\\n/**\\n * Miscellaneous constants.\\n */\\nexport const wse = {\\n    /**\\n     * A multiplier for the amount of money we should have in reserve.  When\\n     * trading on the Stock Market, we should not spend all our money on\\n     * shares.  Instead we should have a fixed amount of money in reserve.  The\\n     * multiplier is used to calculate how much money we should have before we\\n     * buy any shares.  Let our funds threshold be the reserve multiplier times\\n     * the amount of money to be held in reserve.  If our current amount of\\n     * money is greater than the resulting product, then we have sufficient\\n     * funds.  Increase the value of this constant to hold more money in\\n     * reserve.\\n     */\\n    RESERVE_MULT: 1.1,\\n    /**\\n     * The minimum amount of money we are willing to spend to purchase shares\\n     * of a stock.  This is our spending threshold.  If our money is less than\\n     * the spending threshold, then do not purchase any shares.\\n     */\\n    SPEND_T: 5e6,\\n    /**\\n     * The Stock Market updates approximately every 6 seconds.\\n     */\\n    TICK: 6e3,\\n    /**\\n     * A file name.  If the trade bot detects the existence of this file on the\\n     * home server, it would stop purchasing shares of stocks.  The behaviour\\n     * is subject to certain conditions.  See the trade-bot.js script for more\\n     * details.\\n     */\\n    STOP_BUY: \\\"trade_bot_stop_buy.txt\\\",\\n};\\n\",\"filename\":\"/lib/constant/wse.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725372,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bitnode } from \\\"/lib/constant/bn.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { corp, corp_t } from \\\"/lib/constant/corp.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { assert, is_valid_city } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A class to hold information about a corporation.  We use this class to help\\n * us manage a corporation.  We typically use the Corporation API by calling its\\n * functions along the format ns[\\\"Corporation\\\"].functionName in order to\\n * circumvent the high RAM cost.\\n */\\nexport class Corporation {\\n    /**\\n     * The namespace for the Netscript API.\\n     */\\n    #ns;\\n\\n    /**\\n     * Initialize a Corporation object.\\n     *\\n     * @param ns The namespace for the Netscript API.\\n     */\\n    constructor(ns) {\\n        this.#ns = ns;\\n    }\\n\\n    /**\\n     * All divisions of our corporation.\\n     *\\n     * @return An array containing the names of all divisions of our\\n     *     corporation.\\n     */\\n    all_divisions() {\\n        return this.#ns[corp.API].getCorporation().divisions.map((d) => d.name);\\n    }\\n\\n    /**\\n     * Purchase an unlock upgrade.  This type of upgrade is a one-time\\n     * unlockable.  It applies to the entire corporation and cannot be levelled.\\n     *\\n     * @param upg A string representing the name of an unlock upgrade.\\n     * @return true if we successfully purchased the given unlock upgrade or\\n     *     already have it; false otherwise.\\n     */\\n    buy_unlock_upgrade(upg) {\\n        assert(this.is_valid_unlock_upgrade(upg));\\n        if (this.has_unlock_upgrade(upg)) {\\n            return bool.SUCCESS;\\n        }\\n        if (this.funds() < this.#ns[corp.API].getUnlockUpgradeCost(upg)) {\\n            return bool.FAILURE;\\n        }\\n        this.#ns[corp.API].unlockUpgrade(upg);\\n        return this.has_unlock_upgrade(upg);\\n    }\\n\\n    /**\\n     * Purchase a warehouse for a division in a particular city.\\n     *\\n     * @param div A string representing the name of a division.\\n     * @param ct A string representing the name of a city.\\n     * @return True if the purchase was successful; false otherwise.\\n     */\\n    buy_warehouse(div, ct) {\\n        assert(this.is_valid_division(div));\\n        assert(is_valid_city(ct));\\n        if (this.funds() < this.#ns[corp.API].getPurchaseWarehouseCost()) {\\n            return bool.FAILURE;\\n        }\\n        this.#ns[corp.API].purchaseWarehouse(div, ct);\\n        return bool.SUCCESS;\\n    }\\n\\n    /**\\n     * Start a corporation.  We can start a corporation in one of two ways:\\n     *\\n     * (1) Self-funded.  Use $150b of our own money to start a corporation.\\n     *     This works in any BitNode, but has the disadvantage that we must have\\n     *     at least $150b upfront.\\n     * (2) Get a loan.  Take out a loan of $150b to start our corporation.  This\\n     *     only works in BN3.\\n     *\\n     * @return True if our corporation is successfully created; false otherwise.\\n     */\\n    create() {\\n        const player = new Player(this.#ns);\\n        // Assume we are in BN3.  Use our own money to start a corporation,\\n        // otherwise take out a loan.\\n        if (bitnode.Corporatocracy === player.bitnode()) {\\n            const self_fund = player.money() >= corp_t.SEED_COST;\\n            return this.#ns[corp.API].createCorporation(corp.NAME, self_fund);\\n        }\\n        // We are in a BitNode other than BN3.  Must use our own money to start\\n        // a corporation.  There is no option to take out a loan.\\n        if (player.money() < corp_t.SEED_COST) {\\n            return bool.FAILURE;\\n        }\\n        return this.#ns[corp.API].createCorporation(corp.NAME, bool.SELF_FUND);\\n    }\\n\\n    /**\\n     * Enable the Smart Supply for all divisions in each city.\\n     */\\n    enable_smart_supply() {\\n        for (const div of this.all_divisions()) {\\n            cities.all.forEach((ct) => {\\n                this.#ns[corp.API].setSmartSupply(div, ct, bool.ENABLE);\\n            });\\n        }\\n    }\\n\\n    /**\\n     * Expand our corporation into other cities.  We open a division office in\\n     * another city.\\n     *\\n     * @param name A string representing the name of a division of our\\n     *     corporation.\\n     * @param city A string representing the name of a city.  We want to expand\\n     *     the given division into this city.\\n     * @return True if the expansion is successful or we already have a division\\n     *     office in the given city; false otherwise.\\n     */\\n    expand_city(name, city) {\\n        if (this.has_division_office(name, city)) {\\n            return bool.SUCCESS;\\n        }\\n        this.#ns[corp.API].expandCity(name, city);\\n        return this.has_division_office(name, city);\\n    }\\n\\n    /**\\n     * Expand our corporation into other industries.\\n     */\\n    expand_industry() {\\n        if (!this.has_division(corp.industry.AGRI)) {\\n            this.#ns[corp.API].expandIndustry(\\n                corp.industry.AGRI,\\n                corp.industry.AGRI\\n            );\\n        }\\n    }\\n\\n    /**\\n     * The funds available to our corporation.\\n     */\\n    funds() {\\n        return this.#ns[corp.API].funds;\\n    }\\n\\n    /**\\n     * Whether we have already created a corporation.\\n     *\\n     * @return True if we have already created a corporation; false otherwise.\\n     */\\n    has_corp() {\\n        try {\\n            assert(this.#ns[corp.API].getCorporation().name === corp.NAME);\\n            return bool.HAS;\\n        } catch {\\n            return bool.NOT;\\n        }\\n    }\\n\\n    /**\\n     * Whether we have a particular division.\\n     *\\n     * @param div A string representing the name of a division.\\n     * @return True if we have expanded into the given division;\\n     *     false otherwise.\\n     */\\n    has_division(div) {\\n        for (const d of this.#ns[corp.API].getCorporation().divisions) {\\n            if (d.type === div) {\\n                return bool.HAS;\\n            }\\n        }\\n        return bool.NOT;\\n    }\\n\\n    /**\\n     * Whether one of our divisions has an office in a given city.\\n     *\\n     * @param name A string representing the name of a division.\\n     * @param city A string representing the name of a city.\\n     * @return True if the given division has an office in the particular city;\\n     *     false otherwise.\\n     */\\n    has_division_office(name, city) {\\n        assert(this.is_valid_division(name));\\n        assert(is_valid_city(city));\\n        for (const div of this.#ns[corp.API].getCorporation().divisions) {\\n            if (div.name === name) {\\n                return div.cities.includes(city);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Whether we have an unlockable upgrade.\\n     *\\n     * @param upg A string representing the name of an unlock upgrade.\\n     * @return True if we already have the given unlock upgrade;\\n     *     false otherwise.\\n     */\\n    has_unlock_upgrade(upg) {\\n        assert(this.is_valid_unlock_upgrade(upg));\\n        return this.#ns[corp.API].hasUnlockUpgrade(upg);\\n    }\\n\\n    /**\\n     * Hire a new employee for a division in a particular city.\\n     *\\n     * @param div A string representing the name of a division.\\n     * @param ct A string representing the name of a city.\\n     * @return A string representing the name of the newly hired employee.  An\\n     *     empty string if we fail to hire a new employee.\\n     */\\n    hire(div, ct) {\\n        assert(this.is_valid_division(div));\\n        assert(is_valid_city(ct));\\n        const worker = this.#ns[corp.API].hireEmployee(div, ct);\\n        return worker !== undefined ? worker.name : \\\"\\\";\\n    }\\n\\n    /**\\n     * Hire AdVert.inc to advertise for our company.\\n     *\\n     * @param div A string representing the name of a division.\\n     */\\n    hire_advert(div) {\\n        assert(this.is_valid_division(div));\\n        if (this.funds() > this.#ns[corp.API].getHireAdVertCost(div)) {\\n            this.#ns[corp.API].hireAdVert(div);\\n        }\\n    }\\n\\n    /**\\n     * Hire the initial crop of employees for a new office in a city.  Assign an\\n     * employee to each of the initial positions.\\n     *\\n     * @param div The name of a division.\\n     * @param ct The name of a city.\\n     */\\n    initial_hire(div, ct) {\\n        const max = corp_t.office.INIT_HIRE;\\n        for (let i = this.num_employees(div, ct); i < max; i++) {\\n            const name = this.hire(div, ct);\\n            if (name !== \\\"\\\") {\\n                this.#ns[corp.API].assignJob(div, ct, name, corp.position[i]);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Whether we have the given division.\\n     *\\n     * @param name A string representing the name of a division.\\n     * @return True if our corporation has a division with the given name;\\n     *     false otherwise.\\n     */\\n    is_valid_division(name) {\\n        assert(name !== \\\"\\\");\\n        for (const div of this.#ns[corp.API].getCorporation().divisions) {\\n            if (div.name === name) {\\n                return bool.VALID;\\n            }\\n        }\\n        return bool.INVALID;\\n    }\\n\\n    /**\\n     * Whether the given name represents a valid material.\\n     *\\n     * @param name A string representing a material name.\\n     * @return True if the given name represents a valid material;\\n     *     false otherwise.\\n     */\\n    // eslint-disable-next-line class-methods-use-this\\n    is_valid_material(name) {\\n        assert(name !== \\\"\\\");\\n        const material = new Set(Object.values(corp.material));\\n        return material.has(name);\\n    }\\n\\n    /**\\n     * Whether the given name refers to a valid unlock upgrade.\\n     *\\n     * @param upg A string representing the name of an unlock upgrade.\\n     * @return True if the given name refers to a valid unlock upgrade;\\n     *     false otherwise.\\n     */\\n    // eslint-disable-next-line class-methods-use-this\\n    is_valid_unlock_upgrade(upg) {\\n        assert(upg !== \\\"\\\");\\n        const upgrade = new Set(Object.values(corp.unlock));\\n        return upgrade.has(upg);\\n    }\\n\\n    /**\\n     * Whether the given name refers to a valid level upgrade.\\n     *\\n     * @param upg A string representing the name of a level upgrade.\\n     * @return True if the given name refers to a valid level upgrade;\\n     *     false otherwise.\\n     */\\n    // eslint-disable-next-line class-methods-use-this\\n    is_valid_upgrade(upg) {\\n        assert(upg !== \\\"\\\");\\n        const upgrade = new Set(Object.values(corp.upgrade));\\n        return upgrade.has(upg);\\n    }\\n\\n    /**\\n     * Level up an upgrade that can be levelled.  A level upgrade is not the\\n     * same as an unlock upgrade.\\n     *\\n     * @param name The name of the upgrade to level.\\n     * @return True if we successfully levelled up the given upgrade;\\n     *     false otherwise.\\n     */\\n    level_upgrade(name) {\\n        assert(this.is_valid_upgrade(name));\\n        const cost = this.#ns[corp.API].getUpgradeLevelCost(name);\\n        if (this.funds() < cost) {\\n            return bool.FAILURE;\\n        }\\n        this.#ns[corp.API].levelUpgrade(name);\\n        return bool.SUCCESS;\\n    }\\n\\n    /**\\n     * Purchase a material in bulk quantity.  We buy this material for each\\n     * division in each city.\\n     *\\n     * @param name The name of the material to buy.\\n     * @param amt The bulk amount to buy.\\n     */\\n    material_bulk_buy(name, amt) {\\n        assert(this.is_valid_material(name));\\n        assert(amt > 0);\\n        for (const div of this.all_divisions()) {\\n            cities.all.forEach((ct) => {\\n                this.#ns[corp.API].bulkPurchase(div, ct, name, amt);\\n            });\\n        }\\n    }\\n\\n    /**\\n     * The initial selling of our materials.  The amount is the maximum of\\n     * whatever we have.  The price is set at the market price.\\n     *\\n     * @param div The name of a division.\\n     * @param ct The name of a city.\\n     * @param name The name of the material to sell.\\n     */\\n    material_initial_sell(div, ct, name) {\\n        assert(this.is_valid_division(div));\\n        assert(is_valid_city(ct));\\n        assert(this.is_valid_material(name));\\n        this.#ns[corp.API].sellMaterial(\\n            div,\\n            ct,\\n            name,\\n            corp_t.sell.amount.MAX,\\n            corp_t.sell.price.MP\\n        );\\n    }\\n\\n    /**\\n     * The number of employees in a division at a particular city.\\n     *\\n     * @param div The name of a division.\\n     * @param ct The name of a city.\\n     * @return The number of employees in the given division at the given city.\\n     */\\n    num_employees(div, ct) {\\n        assert(this.is_valid_division(div));\\n        assert(is_valid_city(ct));\\n        return this.#ns[corp.API].getOffice(div, ct).employees.length;\\n    }\\n\\n    /**\\n     * Upgrade the warehouse of a division in a particular city.\\n     *\\n     * @param div A string representing the name of a division.\\n     * @param ct A string representing the name of a city.\\n     * @param n How many times to upgrade.  Default is 1.\\n     * @return True if the upgrade was successful; false otherwise.\\n     */\\n    upgrade_warehouse(div, ct, n = 1) {\\n        assert(this.is_valid_division(div));\\n        assert(is_valid_city(ct));\\n        assert(n >= 1);\\n        const cost = this.#ns[corp.API].getUpgradeWarehouseCost(div, ct, n);\\n        if (this.funds() < cost) {\\n            return bool.FAILURE;\\n        }\\n        this.#ns[corp.API].upgradeWarehouse(div, ct, n);\\n        return bool.SUCCESS;\\n    }\\n\\n    /**\\n     * Upgrade a newly purchased warehouse to the initial capacity.\\n     *\\n     * @param div A string representing the name of a division.\\n     * @param ct A string representing the name of a city.\\n     */\\n    warehouse_init_upgrade(div, ct) {\\n        assert(this.is_valid_division(div));\\n        assert(is_valid_city(ct));\\n        while (\\n            this.#ns[corp.API].getWarehouse(div, ct).size\\n            < corp_t.warehouse.INIT_UPGRADE_SIZE\\n        ) {\\n            this.upgrade_warehouse(div, ct);\\n        }\\n    }\\n}\\n\",\"filename\":\"/lib/corporation/corp.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725373,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport {\\n    armour,\\n    gang_augment,\\n    gang_t,\\n    gangster_t,\\n    members,\\n    rootkit,\\n    task,\\n    task_t,\\n    vehicle,\\n    weapon,\\n} from \\\"/lib/constant/gang.js\\\";\\nimport { money_reserve } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { random_integer } from \\\"/lib/random.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A class that holds various information about a gangster.\\n */\\nexport class Gangster {\\n    /**\\n     * The Netscript API.\\n     */\\n    #ns;\\n\\n    /**\\n     * Initialize a Gangster object.\\n     *\\n     * @param ns The Netscript API.\\n     */\\n    constructor(ns) {\\n        this.#ns = ns;\\n    }\\n\\n    /**\\n     * The Agility stat of a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return The Agility stat of the given member.\\n     */\\n    agility(name) {\\n        assert(this.is_member(name));\\n        return this.#ns.gang.getMemberInformation(name).agi;\\n    }\\n\\n    /**\\n     * Ascend a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return True if the ascension is successful; false otherwise.\\n     */\\n    ascend(name) {\\n        assert(this.is_member(name));\\n        const asc = this.#ns.gang.getAscensionResult(name);\\n        if (undefined === asc) {\\n            return bool.FAILURE;\\n        }\\n        // Convert a number in the form 1.xyz to 1xy.  We multiply the number\\n        // by 100 and take the integer part.  So 1.25 would be 125.  We do this\\n        // because comparing floating point numbers can be tricky and result in\\n        // unexpected behaviour.  It is easier and simpler to compare integers.\\n        const to_int = (x) => Math.floor(100 * x);\\n        // See whether we can ascend this gang member.  The cases of combatant,\\n        // hacker, and miscellaneous are each handled separately.\\n        const tau = to_int(gang_t.ASCEND);\\n        let ascend_this_member = false;\\n        if (this.is_combatant(name)) {\\n            if (\\n                to_int(asc.agi) > tau\\n                || to_int(asc.def) > tau\\n                || to_int(asc.dex) > tau\\n                || to_int(asc.str) > tau\\n            ) {\\n                ascend_this_member = true;\\n            }\\n        } else if (this.is_hacker(name)) {\\n            if (to_int(asc.hack) > tau || to_int(asc.cha) > tau) {\\n                ascend_this_member = true;\\n            }\\n        } else {\\n            assert(this.is_miscellaneous(name));\\n            if (\\n                to_int(asc.cha) > tau\\n                || to_int(asc.agi) > tau\\n                || to_int(asc.def) > tau\\n                || to_int(asc.dex) > tau\\n                || to_int(asc.str) > tau\\n            ) {\\n                ascend_this_member = true;\\n            }\\n        }\\n        // Now ascend the gangster.\\n        if (ascend_this_member) {\\n            const result = this.#ns.gang.ascendMember(name);\\n            if (undefined !== result) {\\n                return bool.SUCCESS;\\n            }\\n        }\\n        return bool.FAILURE;\\n    }\\n\\n    /**\\n     * Assign gang members to threaten and blackmail high-profile targets.\\n     *\\n     * @param name An array of member names.\\n     */\\n    blackmail(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members threaten and blackmail people.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_blackmailer(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.BLACKMAIL));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * The Charisma stat of a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return The Charisma stat of the given member.\\n     */\\n    charisma(name) {\\n        assert(this.is_member(name));\\n        return this.#ns.gang.getMemberInformation(name).cha;\\n    }\\n\\n    /**\\n     * Assign gang members to run a con.\\n     *\\n     * @param name An array of member names.\\n     */\\n    con(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members run a con.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_con_artist(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.CON));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to deal drugs.\\n     *\\n     * @param name An array of member names.\\n     */\\n    deal_drugs(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members be involved in dealing drugs.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_dealing_drugs(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.DRUGS));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * The Defense stat of a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return The Defense stat of the given member.\\n     */\\n    defense(name) {\\n        assert(this.is_member(name));\\n        return this.#ns.gang.getMemberInformation(name).def;\\n    }\\n\\n    /**\\n     * The Dexterity stat of a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return The Dexterity stat of the given member.\\n     */\\n    dexterity(name) {\\n        assert(this.is_member(name));\\n        return this.#ns.gang.getMemberInformation(name).dex;\\n    }\\n\\n    /**\\n     * Purchase the given armour piece and equip it on a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param amr A string representing the name of an armour piece.\\n     * @return true if the armour is successfully purchased for the given\\n     *     member; false otherwise.\\n     */\\n    equip_armour(name, amr) {\\n        assert(this.is_member(name));\\n        const gang_armour = new Set(Object.values(armour));\\n        assert(gang_armour.has(amr));\\n        const cost = this.#ns.gang.getEquipmentCost(amr);\\n        const funds = this.#player_money() - money_reserve;\\n        if (funds < gang_t.COST_MULT * cost) {\\n            return bool.FAILURE;\\n        }\\n        return this.#ns.gang.purchaseEquipment(name, amr);\\n    }\\n\\n    /**\\n     * Purchase the given Augmentation and equip it on a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param aug A string representing the name of an Augmentation.\\n     * @return true if the Augmentation is successfully purchased for the given\\n     *     member; false otherwise.\\n     */\\n    equip_augment(name, aug) {\\n        assert(this.is_member(name));\\n        const gang_aug = new Set(Object.values(gang_augment));\\n        assert(gang_aug.has(aug));\\n        const cost = this.#ns.gang.getEquipmentCost(aug);\\n        const funds = this.#player_money() - money_reserve;\\n        if (funds < gang_t.COST_MULT * cost) {\\n            return bool.FAILURE;\\n        }\\n        return this.#ns.gang.purchaseEquipment(name, aug);\\n    }\\n\\n    /**\\n     * Purchase the given rootkit and equip it on a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param kit A string representing the name of a rootkit.\\n     * @return true if the rootkit is successfully purchased for the given\\n     *     member; false otherwise.\\n     */\\n    equip_rootkit(name, kit) {\\n        assert(this.is_member(name));\\n        const gang_rootkit = new Set(Object.values(rootkit));\\n        assert(gang_rootkit.has(kit));\\n        const cost = this.#ns.gang.getEquipmentCost(kit);\\n        const funds = this.#player_money() - money_reserve;\\n        if (funds < gang_t.COST_MULT * cost) {\\n            return bool.FAILURE;\\n        }\\n        return this.#ns.gang.purchaseEquipment(name, kit);\\n    }\\n\\n    /**\\n     * Purchase the given vehicle and equip it on a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param vhc A string representing the name of a vehicle.\\n     * @return true if the vehicle is successfully purchased for the given\\n     *     member; false otherwise.\\n     */\\n    equip_vehicle(name, vhc) {\\n        assert(this.is_member(name));\\n        const gang_vehicle = new Set(Object.values(vehicle));\\n        assert(gang_vehicle.has(vhc));\\n        const cost = this.#ns.gang.getEquipmentCost(vhc);\\n        const funds = this.#player_money() - money_reserve;\\n        if (funds < gang_t.COST_MULT * cost) {\\n            return bool.FAILURE;\\n        }\\n        return this.#ns.gang.purchaseEquipment(name, vhc);\\n    }\\n\\n    /**\\n     * Purchase the given weapon and equip it on a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param wpn A string representing the name of a weapon.\\n     * @return true if the weapon is successfully purchased for the given\\n     *     member; false otherwise.\\n     */\\n    equip_weapon(name, wpn) {\\n        assert(this.is_member(name));\\n        const gang_weapon = new Set(Object.values(weapon));\\n        assert(gang_weapon.has(wpn));\\n        const cost = this.#ns.gang.getEquipmentCost(wpn);\\n        const funds = this.#player_money() - money_reserve;\\n        if (funds < gang_t.COST_MULT * cost) {\\n            return bool.FAILURE;\\n        }\\n        return this.#ns.gang.purchaseEquipment(name, wpn);\\n    }\\n\\n    /**\\n     * Assign gang members to ethical hacking.\\n     *\\n     * @param name An array of member names.\\n     */\\n    ethical_hacking(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members be involved in ethical hacking.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_ethical_hacker(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.EHACK));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to extort civilians on our turf.\\n     *\\n     * @param name An array of member names.\\n     */\\n    extort(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members strongarm civilians.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_extortionist(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.EXTORT));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to commit financial fraud and digital counterfeiting.\\n     *\\n     * @param name An array of member names.\\n     */\\n    fraud(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members commit financial fraud and digital counterfeiting.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_fraudster(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.FRAUD));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Graduate gang members who have been training their combat stats.  Assign\\n     * them to mug random people.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.\\n     * @param threshold A combatant transitions to mugging once each of their\\n     *     combat stats is at least this amount.\\n     */\\n    graduate_combatant(name, threshold) {\\n        // Sanity checks.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        name.forEach((s) => assert(this.is_member(s)));\\n        const min = Math.floor(threshold);\\n        assert(min > 0);\\n        // After training their combat stats, members graduate to mugging\\n        // random people.\\n        const graduate = name.filter(\\n            (s) => this.is_combatant(s)\\n                && this.is_training_combat(s)\\n                && this.strength(s) >= min\\n                && this.defense(s) >= min\\n                && this.dexterity(s) >= min\\n                && this.agility(s) >= min\\n        );\\n        this.mug(graduate);\\n    }\\n\\n    /**\\n     * Graduate gang members who have been training their Hack stat.  Although\\n     * hackers primarily train their Hack stat, they could also benefit from\\n     * some training in their Charisma stat.  After a hacker has trained their\\n     * Hack and Charisma stats, assign them their first job.  The first job of\\n     * the hacker depends on whether we have a criminal or hacking gang.  If we\\n     * have a criminal gang, then the first job of the hacker is the same as the\\n     * first job of a miscellaneous member.  In case our gang is a hacking gang,\\n     * the first job of a hacker is to create and distribute ransomware.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.\\n     * @param threshold A hacker transitions to ransomware (or the first job of\\n     *     a miscellaneous gangster) once their Hack stat is at least this\\n     *     amount.  The transition is also affected by their Charisma stat.  If\\n     *     they do not have sufficient Charisma, they must train their Charisma\\n     *     stat before being assigned their first job.\\n     */\\n    graduate_hacker(name, threshold) {\\n        // Sanity checks.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        name.forEach((s) => assert(this.is_member(s)));\\n        const min = Math.floor(threshold);\\n        assert(min > 0);\\n        // After training their Hack stat, a hacker also trains their Charisma\\n        // stat.\\n        const hacker = name.filter((s) => this.is_hacker(s));\\n        const hack_graduate = hacker.filter(\\n            (s) => this.is_training_hack(s) && this.hack(s) >= min\\n        );\\n        this.train_charisma(hack_graduate);\\n        // Once a hacker's Hack and Charisma stats are of minimum amounts,\\n        // assign them their first job.\\n        const charisma_graduate = hacker.filter(\\n            (s) => this.is_training_charisma(s)\\n                && this.charisma(s) >= task_t.CHARISMA\\n        );\\n        if (this.#ns.gang.getGangInformation().isHacking) {\\n            this.ransomware(charisma_graduate);\\n            return;\\n        }\\n        this.deal_drugs(charisma_graduate);\\n    }\\n\\n    /**\\n     * Graduate miscellaneous members who have been training their Charisma\\n     * stat.  Although miscellaneous members primarily train their Charisma\\n     * stat, they could also benefit from some training in their combat stats.\\n     * After a miscellaneous member has trained their Charisma and combat stats,\\n     * assign them their first job of dealing drugs.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.\\n     * @param threshold A miscellaneous member transitions to dealing drugs\\n     *     once their Charisma stat is at least this amount.  The transition is\\n     *     also affected by their combat stats.  If they do not have sufficient\\n     *     combat stats, they must train their combat stats before being\\n     *     assigned their first job.\\n     */\\n    graduate_other(name, threshold) {\\n        // Sanity checks.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        name.forEach((s) => assert(this.is_member(s)));\\n        const min = Math.floor(threshold);\\n        assert(min > 0);\\n        // After training their Charisma stat, a miscellaneous member also\\n        // trains their combat stats.\\n        const graduate = name.filter((s) => this.is_miscellaneous(s));\\n        const charisma_graduate = graduate.filter(\\n            (s) => this.is_training_charisma(s) && this.charisma(s) >= min\\n        );\\n        this.train_combat(charisma_graduate);\\n        // Once the Charisma and combat stats of a miscellaneous member are of\\n        // minimum amounts, assign them their first job.\\n        const combat_graduate = graduate.filter(\\n            (s) => this.is_training_combat(s)\\n                && this.strength(s) >= task_t.COMBAT\\n                && this.defense(s) >= task_t.COMBAT\\n                && this.dexterity(s) >= task_t.COMBAT\\n                && this.agility(s) >= task_t.COMBAT\\n        );\\n        this.deal_drugs(combat_graduate);\\n    }\\n\\n    /**\\n     * The Hack stat of a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return The Hack stat of the given member.\\n     */\\n    hack(name) {\\n        assert(this.is_member(name));\\n        return this.#ns.gang.getMemberInformation(name).hack;\\n    }\\n\\n    /**\\n     * Whether a gang member has a particular armour piece.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param amr A string representing the name of an armour.\\n     * @return true if the gang member has the given armour piece;\\n     *     false otherwise.\\n     */\\n    has_armour(name, amr) {\\n        assert(this.is_member(name));\\n        const gang_armour = new Set(Object.values(armour));\\n        assert(gang_armour.has(amr));\\n        const equipment = new Set(\\n            this.#ns.gang.getMemberInformation(name).upgrades\\n        );\\n        return equipment.has(amr);\\n    }\\n\\n    /**\\n     * Whether a gang member has a particular Augmentation.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param aug A string representing the name of an Augmentation.\\n     * @return true if the gang member has the given Augmentation;\\n     *     false otherwise.\\n     */\\n    has_augment(name, aug) {\\n        assert(this.is_member(name));\\n        const gang_aug = new Set(Object.values(gang_augment));\\n        assert(gang_aug.has(aug));\\n        const equipment = new Set(\\n            this.#ns.gang.getMemberInformation(name).augmentations\\n        );\\n        return equipment.has(aug);\\n    }\\n\\n    /**\\n     * Whether a gang member has a particular rootkit.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param kit A string representing the name of a rootkit.\\n     * @return true if the gang member has the given rootkit; false otherwise.\\n     */\\n    has_rootkit(name, kit) {\\n        assert(this.is_member(name));\\n        const gang_rootkit = new Set(Object.values(rootkit));\\n        assert(gang_rootkit.has(kit));\\n        const equipment = new Set(\\n            this.#ns.gang.getMemberInformation(name).upgrades\\n        );\\n        return equipment.has(kit);\\n    }\\n\\n    /**\\n     * Whether a gang member has a particular vehicle.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param vhc A string representing the name of a vehicle.\\n     * @return true if the gang member has the given vehicle; false otherwise.\\n     */\\n    has_vehicle(name, vhc) {\\n        assert(this.is_member(name));\\n        const gang_vehicle = new Set(Object.values(vehicle));\\n        assert(gang_vehicle.has(vhc));\\n        const equipment = new Set(\\n            this.#ns.gang.getMemberInformation(name).upgrades\\n        );\\n        return equipment.has(vhc);\\n    }\\n\\n    /**\\n     * Whether a gang member has a particular weapon.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param wpn A string representing the name of a weapon.\\n     * @return true if the gang member has the given weapon; false otherwise.\\n     */\\n    has_weapon(name, wpn) {\\n        assert(this.is_member(name));\\n        const gang_weapon = new Set(Object.values(weapon));\\n        assert(gang_weapon.has(wpn));\\n        const equipment = new Set(\\n            this.#ns.gang.getMemberInformation(name).upgrades\\n        );\\n        return equipment.has(wpn);\\n    }\\n\\n    /**\\n     * Assign gang members to commit identity theft.\\n     *\\n     * @param name An array of member names.\\n     */\\n    id_theft(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members commit identity theft.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_id_thief(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.ID_THEFT));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Whether a gang member is engaged in trafficking illegal arms.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is trafficking illegal arms;\\n     *     false otherwise.\\n     */\\n    is_arms_trafficker(name) {\\n        assert(this.is_member(name));\\n        const current_task = this.#ns.gang.getMemberInformation(name).task;\\n        return task.TRAFFICK_ARMS === current_task;\\n    }\\n\\n    /**\\n     * Whether a gang member has been assigned the role of Artillery.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member takes on the role of Artillery;\\n     *     false otherwise.\\n     */\\n    is_artillery(name) {\\n        assert(this.is_member(name));\\n        return this.role(name) === members.ROLE.artillery;\\n    }\\n\\n    /**\\n     * Whether a gang member is threatening and blackmailing high-profile\\n     * targets.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is threatening and blackmailing people;\\n     *     false otherwise.\\n     */\\n    is_blackmailer(name) {\\n        assert(this.is_member(name));\\n        return task.BLACKMAIL === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is a combatant.  A gangster is a combatant if they\\n     * have been assigned one of these roles:\\n     *\\n     * (1) Artillery\\n     * (2) Pilot\\n     * (3) Punk\\n     * (4) Vanguard\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is a combatant; false otherwise.\\n     */\\n    is_combatant(name) {\\n        return (\\n            this.is_artillery(name)\\n            || this.is_pilot(name)\\n            || this.is_punk(name)\\n            || this.is_vanguard(name)\\n        );\\n    }\\n\\n    /**\\n     * Whether a gang member is running a con.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is running a con; false otherwise.\\n     */\\n    is_con_artist(name) {\\n        assert(this.is_member(name));\\n        return task.CON === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is creating and distributing ransomware.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is involved in the creation and\\n     *     distribution of ransomware; false otherwise.\\n     */\\n    is_creating_ransomware(name) {\\n        assert(this.is_member(name));\\n        const current_task = this.#ns.gang.getMemberInformation(name).task;\\n        return task.RANSOMWARE === current_task;\\n    }\\n\\n    /**\\n     * Whether a gang member is involved in dealing drugs.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is dealing drugs; false otherwise.\\n     */\\n    is_dealing_drugs(name) {\\n        assert(this.is_member(name));\\n        return task.DRUGS === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is engaged in ethical hacking.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is engaged in ethical hacking;\\n     *     false otherwise.\\n     */\\n    is_ethical_hacker(name) {\\n        assert(this.is_member(name));\\n        return task.EHACK === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is strongarming civilians.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is strongarming civilians;\\n     *     false otherwise.\\n     */\\n    is_extortionist(name) {\\n        assert(this.is_member(name));\\n        return task.EXTORT === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is committing financial fraud and digital\\n     * counterfeiting.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is committing financial fraud and\\n     *     digital counterfeiting; false otherwise.\\n     */\\n    is_fraudster(name) {\\n        assert(this.is_member(name));\\n        return task.FRAUD === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is a hacker.  A gangster is a hacker if they have\\n     * been assigned the role of Hacker.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is a hacker; false otherwise.\\n     */\\n    is_hacker(name) {\\n        assert(this.is_member(name));\\n        return this.role(name) === members.ROLE.hacker;\\n    }\\n\\n    /**\\n     * Whether a gang member is operating a human trafficking ring.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is trafficking humans; false otherwise.\\n     */\\n    is_human_trafficker(name) {\\n        assert(this.is_member(name));\\n        const current_task = this.#ns.gang.getMemberInformation(name).task;\\n        return task.TRAFFICK_HUMAN === current_task;\\n    }\\n\\n    /**\\n     * Whether a gang member is committing identity theft.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is committing identity theft;\\n     *     false otherwise.\\n     */\\n    is_id_thief(name) {\\n        assert(this.is_member(name));\\n        return task.ID_THEFT === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is currently unassigned.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is idle; false otherwise.\\n     */\\n    is_idle(name) {\\n        assert(this.is_member(name));\\n        return task.IDLE === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is laundering money.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is laundering money; false otherwise.\\n     */\\n    is_launderer(name) {\\n        assert(this.is_member(name));\\n        return task.LAUNDER === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether the given name belongs to a member of our gang.\\n     *\\n     * @param name A string representing the name of a gangster.  A member's\\n     *     name should be prefixed with their role, according to the format:\\n     *     \\\"[Role] Full Name\\\".\\n     * @return true if our gang has the specified member; false otherwise.\\n     */\\n    is_member(name) {\\n        assert(name.length > 0);\\n        const member = new Set(this.#ns.gang.getMemberNames());\\n        return member.has(name);\\n    }\\n\\n    /**\\n     * Whether a gang member holds one of the following miscellaneous roles:\\n     *\\n     * (1) Medic\\n     * (2) Spy\\n     * (3) Thief\\n     * (4) Traitor\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member holds a miscellaneous role;\\n     *     false otherwise.\\n     */\\n    is_miscellaneous(name) {\\n        assert(this.is_member(name));\\n        const role = this.role(name);\\n        return (\\n            role === members.ROLE.medic\\n            || role === members.ROLE.spy\\n            || role === members.ROLE.thief\\n            || role === members.ROLE.traitor\\n        );\\n    }\\n\\n    /**\\n     * Whether a gang member is mugging random people on the streets.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is mugging random people;\\n     *     false otherwise.\\n     */\\n    is_mugger(name) {\\n        assert(this.is_member(name));\\n        return task.MUG === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is committing phishing scams.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is involved in a phishing scam;\\n     *     false otherwise.\\n     */\\n    is_phisher(name) {\\n        assert(this.is_member(name));\\n        return task.PHISH === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member has been assigned the role of Pilot.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member takes on the role of Pilot;\\n     *     false otherwise.\\n     */\\n    is_pilot(name) {\\n        assert(this.is_member(name));\\n        return this.role(name) === members.ROLE.pilot;\\n    }\\n\\n    /**\\n     * Whether a gang member has been assigned the role of Punk.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member takes on the role of Punk;\\n     *     false otherwise.\\n     */\\n    is_punk(name) {\\n        assert(this.is_member(name));\\n        return this.role(name) === members.ROLE.punk;\\n    }\\n\\n    /**\\n     * Whether a gang member is engaged in armed robbery.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is committing armed robbery;\\n     *     false otherwise.\\n     */\\n    is_robber(name) {\\n        assert(this.is_member(name));\\n        return task.ROBBERY === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is committing acts of terrorism.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is committing acts of terrorism;\\n     *     false otherwise.\\n     */\\n    is_terrorist(name) {\\n        assert(this.is_member(name));\\n        return task.TERROR === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is in combat, charisma, or hack training.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is in combat, charisma, or hack\\n     *     training; false otherwise.\\n     */\\n    is_training(name) {\\n        return (\\n            this.is_training_charisma(name)\\n            || this.is_training_combat(name)\\n            || this.is_training_hack(name)\\n        );\\n    }\\n\\n    /**\\n     * Whether a gang member is in charisma training.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is in charisma training;\\n     *     false otherwise.\\n     */\\n    is_training_charisma(name) {\\n        assert(this.is_member(name));\\n        return task.CHARISMA === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is in combat training.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is in combat training; false otherwise.\\n     */\\n    is_training_combat(name) {\\n        assert(this.is_member(name));\\n        return task.COMBAT === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is in hack training.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is in hack training; false otherwise.\\n     */\\n    is_training_hack(name) {\\n        assert(this.is_member(name));\\n        return task.HACK === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member has been assigned the role of Vanguard.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is taking on the role of Vanguard;\\n     *     false otherwise.\\n     */\\n    is_vanguard(name) {\\n        assert(this.is_member(name));\\n        return this.role(name) === members.ROLE.vanguard;\\n    }\\n\\n    /**\\n     * Whether a gang member is engaged in vigilante justice.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is engaged in vigilante justice;\\n     *     false otherwise.\\n     */\\n    is_vigilante(name) {\\n        assert(this.is_member(name));\\n        return task.VIGILANTE === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is engaged in turf warfare.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is engaged in turf warfare;\\n     *     false otherwise.\\n     */\\n    is_warrior(name) {\\n        assert(this.is_member(name));\\n        return task.TURF_WAR === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Assign gang members to launder money.\\n     *\\n     * @param name An array of member names.\\n     */\\n    launder(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members launder money.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_launderer(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.LAUNDER));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to mug random people on the street.\\n     *\\n     * @param name An array of member names.\\n     */\\n    mug(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members mug random people.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_mugger(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.MUG));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Whether a gang member needs to train their Charisma stat.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member needs Charisma training;\\n     *     false otherwise.\\n     */\\n    needs_charisma_training(name) {\\n        assert(this.is_member(name));\\n        return this.charisma(name) < task_t.CHARISMA;\\n    }\\n\\n    /**\\n     * Whether a gang member needs to train their combat stats.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member needs combat training; false otherwise.\\n     */\\n    needs_combat_training(name) {\\n        if (\\n            this.strength(name) < task_t.COMBAT\\n            || this.defense(name) < task_t.COMBAT\\n            || this.dexterity(name) < task_t.COMBAT\\n            || this.agility(name) < task_t.COMBAT\\n        ) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * Whether a gang member needs to train their Hack stat.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member needs Hack training; false otherwise.\\n     */\\n    needs_hack_training(name) {\\n        assert(this.is_member(name));\\n        return this.hack(name) < task_t.HACK;\\n    }\\n\\n    /**\\n     * Whether a gang member needs training in various stats.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member needs training in one or more stats;\\n     *     false otherwise.\\n     */\\n    needs_training(name) {\\n        if (this.is_combatant(name)) {\\n            return this.needs_combat_training(name);\\n        }\\n        if (this.is_hacker(name)) {\\n            return (\\n                this.needs_hack_training(name)\\n                || this.needs_charisma_training(name)\\n            );\\n        }\\n        assert(this.is_miscellaneous(name));\\n        return (\\n            this.needs_charisma_training(name)\\n            || this.needs_combat_training(name)\\n        );\\n    }\\n\\n    /**\\n     * Assign gang members to the idle state.\\n     *\\n     * @param name An array of member names.\\n     */\\n    neutral(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members be in the idle state.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            this.#ns.gang.setMemberTask(s, task.IDLE);\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to commit phishing scams.\\n     *\\n     * @param name An array of member names.\\n     */\\n    phish(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members commit phishing scams.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_phisher(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.PHISH));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * The player's total amount of money.\\n     */\\n    #player_money() {\\n        return this.#ns.getServerMoneyAvailable(home);\\n    }\\n\\n    /**\\n     * A random name with which to assign a new gang member.\\n     *\\n     * @param name An array of potential names for our new recruit.  Use this\\n     *     array to randomly choose a name for our new member.\\n     * @return A string representing the name of our newest member.\\n     */\\n    // eslint-disable-next-line class-methods-use-this\\n    #random_name(name) {\\n        assert(name.length > 0);\\n        const min = 0;\\n        const max = name.length - 1;\\n        const i = random_integer(min, max);\\n        return name[i];\\n    }\\n\\n    /**\\n     * Assign gang members to create and distribute ransomware.\\n     *\\n     * @param name An array of member names.\\n     */\\n    ransomware(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members create and distribute ransomware.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_creating_ransomware(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.RANSOMWARE));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Recruit as many new gang members as possible.  There is a maximum to how\\n     * many members can be in our gang.  We want our gang to have the following\\n     * structure and let each member role play.\\n     *\\n     * (1) Artillery x 1.  A gun expert and ranged fighter.  Good with bow and\\n     *     arrows, or missiles.\\n     * (2) Hacker x 1.  The computer wizard.\\n     * (3) Medic x 1.  This is our doctor.\\n     * (4) Pilot x 1.  Air support from a helicopter, drone, or aeroplane.\\n     * (5) Punk x n.  Low level soldiers who rake in money for the gang by\\n     *     committing various crimes.  As many as we can recruit.\\n     * (6) Spy x 1.  An expert in espionage and reconnaissance.\\n     * (7) Thief x 1.  Someone who steals treasure.  A sneak.\\n     * (8) Traitor x 1.  Someone who would likely betray the gang.\\n     * (9) Vanguard x 1.  Our frontliner and tank.\\n     *\\n     * @return An array of the names of the new recruits.  Each name follows\\n     *     the format \\\"[Role] Full Name\\\".  Return an empty array if we cannot\\n     *     recruit any new members.\\n     */\\n    recruit() {\\n        const newbie = [];\\n        const roster = this.#roster();\\n        while (this.#ns.gang.canRecruitMember()) {\\n            let role = \\\"\\\";\\n            if (roster.vanguard < gang_t.ROSTER.vanguard) {\\n                role = members.ROLE.vanguard;\\n            } else if (roster.hacker < gang_t.ROSTER.hacker) {\\n                role = members.ROLE.hacker;\\n            } else if (roster.punk < gang_t.ROSTER.punk) {\\n                role = members.ROLE.punk;\\n            } else if (roster.artillery < gang_t.ROSTER.artillery) {\\n                role = members.ROLE.artillery;\\n            } else if (roster.medic < gang_t.ROSTER.medic) {\\n                role = members.ROLE.medic;\\n            } else if (roster.pilot < gang_t.ROSTER.pilot) {\\n                role = members.ROLE.pilot;\\n            } else if (roster.spy < gang_t.ROSTER.spy) {\\n                role = members.ROLE.spy;\\n            } else if (roster.thief < gang_t.ROSTER.thief) {\\n                role = members.ROLE.thief;\\n            } else if (roster.traitor < gang_t.ROSTER.traitor) {\\n                role = members.ROLE.traitor;\\n            }\\n            assert(role !== \\\"\\\");\\n            const role_lowercase = role.toLowerCase();\\n            const name = this.#recruit_member(gangster_t[role_lowercase], role);\\n            roster[role_lowercase]++;\\n            newbie.push(name);\\n        }\\n        return newbie;\\n    }\\n\\n    /**\\n     * Recruit a member to our gang.  Assume that we can recruit.\\n     *\\n     * @param name An array of potential names for our new recruit.  Choose a\\n     *     random name from this array.\\n     * @param role A string representing the role of our new recruit.\\n     * @return A string representing the role and name of our new member.\\n     *     Follow the format \\\"[Role] Full Name\\\".\\n     */\\n    #recruit_member(name, role) {\\n        assert(this.#ns.gang.canRecruitMember());\\n        assert(name.length > 0);\\n        assert(role.length > 0);\\n        let s = `[${role}] ${this.#random_name(name)}`;\\n        while (this.is_member(s)) {\\n            s = `[${role}] ${this.#random_name(name)}`;\\n        }\\n        assert(this.#ns.gang.recruitMember(s));\\n        return s;\\n    }\\n\\n    /**\\n     * Assign gang members to armed robbery.\\n     *\\n     * @param name An array of member names.\\n     */\\n    robbery(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members engage in armed robbery.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_robber(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.ROBBERY));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * The role of a gang member.  The name of a member follows the format:\\n     *\\n     * [Role] Full Name\\n     *\\n     * We can easily extract the role from this format.\\n     *\\n     * @param name A string representing the name of a gangster.\\n     * @return The role of the given gang member.\\n     */\\n    role(name) {\\n        assert(this.is_member(name));\\n        const prefix = name.split(\\\" \\\")[0];\\n        return prefix.replace(/[^a-zA-Z]/g, \\\"\\\");\\n    }\\n\\n    /**\\n     * Our current gang members and their roles.\\n     *\\n     * @return An object as follows:\\n     *\\n     *     {\\n     *         \\\"artillery\\\": number,\\n     *         \\\"hacker\\\": number,\\n     *         \\\"medic\\\": number,\\n     *         \\\"pilot\\\": number,\\n     *         \\\"punk\\\": number,\\n     *         \\\"spy\\\": number,\\n     *         \\\"thief\\\": number,\\n     *         \\\"traitor\\\": number,\\n     *         \\\"vanguard\\\": number,\\n     *     }\\n     *\\n     *     Each number represents the number of members who hold the\\n     *     corresponding role.\\n     */\\n    #roster() {\\n        const member = {\\n            artillery: 0,\\n            hacker: 0,\\n            medic: 0,\\n            pilot: 0,\\n            punk: 0,\\n            spy: 0,\\n            thief: 0,\\n            traitor: 0,\\n            vanguard: 0,\\n        };\\n        // Assume the name of each member follows this format:\\n        //\\n        // [Role] Full Name\\n        for (const name of this.#ns.gang.getMemberNames()) {\\n            const role = this.role(name).toLowerCase();\\n            member[role]++;\\n        }\\n        return member;\\n    }\\n\\n    /**\\n     * The Strength stat of a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return The Strength stat of the given member.\\n     */\\n    strength(name) {\\n        assert(this.is_member(name));\\n        return this.#ns.gang.getMemberInformation(name).str;\\n    }\\n\\n    /**\\n     * Assign gang members to commit acts of terrorism.\\n     *\\n     * @param name An array of member names.\\n     */\\n    terrorism(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members engage in terrorism.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_terrorist(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.TERROR));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to trafficking illegal arms.\\n     *\\n     * @param name An array of member names.\\n     */\\n    traffick_arms(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members engage in trafficking illegal arms.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_arms_trafficker(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.TRAFFICK_ARMS));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to engage in human trafficking.\\n     *\\n     * @param name An array of member names.\\n     */\\n    traffick_human(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members operate a human trafficking ring.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_human_trafficker(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.TRAFFICK_HUMAN));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Train one or more stats of a gang member.  The type of stats to train\\n     * depends on the role of a member.\\n     *\\n     * (1) Artillery, Pilot, Punk, Vanguard.  These roles specialize\\n     *     exclusively in combat stats.  Any gains in Hack or Charisma are\\n     *     incidental.\\n     * (2) Hacker.  This role focuses mostly on Hack stat, but also benefits\\n     *     from some investment in Charisma.\\n     * (3) Medic, Spy, Thief, Traitor.  These roles are primarily\\n     *     Charisma-based, but could benefit from some training in combat stats.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.  Each name follows the format \\\"[Role] Full Name\\\".  We\\n     *     want to raise various stats of each of these members.\\n     */\\n    train(name) {\\n        // Sanity checks.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        name.forEach((s) => assert(this.is_member(s)));\\n        // Train various stats.  The stat(s) to train, and the amount of time\\n        // spent in training, depend on a member's role.\\n        const hacker = name.filter((s) => this.is_hacker(s));\\n        const combatant = name.filter((s) => this.is_combatant(s));\\n        const other = name.filter((s) => this.is_miscellaneous(s));\\n        assert(hacker.length > 0 || combatant.length > 0 || other.length > 0);\\n        this.train_combat(combatant);\\n        this.train_hack(hacker);\\n        this.train_charisma(other);\\n    }\\n\\n    /**\\n     * Raise the Charisma stat of gang members.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.  We want to raise the Charisma stat of each of these\\n     *     members.\\n     */\\n    train_charisma(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Charisma training.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_training_charisma(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.CHARISMA));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Raise the combat stats of gang members.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.  We want to raise the combat stats of each of these\\n     *     members.\\n     */\\n    train_combat(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Combat training.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_training_combat(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.COMBAT));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Raise the Hack stat of gang members.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.  We want to raise the Hack stat of each of these\\n     *     members.\\n     */\\n    train_hack(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Hack training.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_training_hack(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.HACK));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to engage in turf warfare.\\n     *\\n     * @param name An array of member names.\\n     */\\n    turf_war(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members engage in turf warfare.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_warrior(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.TURF_WAR));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to vigilante justice.\\n     *\\n     * @param name An array of member names.\\n     */\\n    vigilante(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members be vigilantes.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_vigilante(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.VIGILANTE));\\n            }\\n        });\\n    }\\n}\\n\",\"filename\":\"/lib/gang/gangster.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":23.8,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725374,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getAscensionResult\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.ascendMember\",\"cost\":4},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Utility functions for managing a gang.\\n\\nimport { members } from \\\"/lib/constant/gang.js\\\";\\nimport { Gangster } from \\\"/lib/gang/gangster.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Choose the number of gang members to assign to vigilante justice.  The number\\n * of gangsters who will be assigned to these jobs depends on our current\\n * membership.\\n *\\n * @param ns The Netscript API.\\n * @return The number of members to assign to vigilante justice.\\n */\\nfunction choose_vigilante_threshold(ns) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    assert(members.VIGILANTE > 0);\\n    // Lower the threshold, depending on our gang membership.\\n    const mid_point = Math.floor(members.MAX / 2);\\n    const quarter_point = mid_point + Math.floor(mid_point / 2);\\n    const ngangster = ns.gang.getMemberNames().length;\\n    if (ngangster === members.INITIAL) {\\n        return 1;\\n    }\\n    if (members.INITIAL < ngangster && ngangster <= mid_point) {\\n        return 2;\\n    }\\n    if (mid_point < ngangster && ngangster <= quarter_point) {\\n        return 3;\\n    }\\n    assert(quarter_point < ngangster && ngangster <= members.MAX);\\n    return Math.floor(members.VIGILANTE);\\n}\\n\\n/**\\n * Whether we already have enough gang members assigned to vigilante justice.\\n *\\n * @param ns The Netscript API.\\n * @return true if enough gangsters are assigned to vigilante justice;\\n *     false otherwise.\\n */\\nfunction has_enough_vigilante(ns) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    const tau = choose_vigilante_threshold(ns);\\n    const gangster = new Gangster(ns);\\n    const vigilante = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vigilante(s));\\n    return tau === vigilante.length;\\n}\\n\\n/**\\n * We have too many gang members in vigilante justice.  Reassign the excess\\n * members to some other jobs.\\n *\\n * @param ns The Netscript API.\\n * @param threshold We want this many members to be in vigilante justice.\\n */\\nfunction reassign_excess_vigilante(ns, threshold) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    const tau = Math.floor(threshold);\\n    assert(tau > 0);\\n    const gangster = new Gangster(ns);\\n    const vigilante = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vigilante(s));\\n    const hacker = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_hacker(s));\\n    const vanguard = vigilante.filter((s) => gangster.is_vanguard(s));\\n    // The Vanguard is always the first to be assigned to vigilante justice.\\n    // The Hacker is always the next member to be assigned to this task.\\n    let vigilante_hacker = vanguard.concat(hacker);\\n    vigilante_hacker = vigilante_hacker.concat(\\n        vigilante.filter((s) => !gangster.is_vanguard(s))\\n    );\\n    assert(vigilante_hacker.length > tau);\\n    const candidate = [];\\n    while (vigilante_hacker.length > tau) {\\n        candidate.push(vigilante_hacker.pop());\\n    }\\n    assert(candidate.length > 0);\\n    gangster.vigilante(vigilante_hacker);\\n    // Reassign the rest to other jobs.\\n    reassign_other(ns, candidate);\\n}\\n\\n/**\\n * Reassign some members to other jobs.\\n *\\n * @param ns The Netscript API.\\n * @param name An array of member names.\\n */\\nfunction reassign_other(ns, name) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    if (name.length === 0) {\\n        return;\\n    }\\n    const trainee = [];\\n    const other = [];\\n    const gangster = new Gangster(ns);\\n    for (const s of name) {\\n        if (gangster.needs_training(s) && !gangster.is_training(s)) {\\n            trainee.push(s);\\n            continue;\\n        }\\n        other.push(s);\\n    }\\n    gangster.train_combat(trainee);\\n    gangster.extort(other);\\n}\\n\\n/**\\n * Reassign a number of our gang members to vigilante justice before doing a\\n * soft reset.  Our objective is to lower our wanted level while other gang\\n * members are involved in other jobs.\\n *\\n * @param ns The Netscript API.\\n */\\nexport function reassign_soft_reset(ns) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    // We want only one gang member on vigilante justice.  That member is the\\n    // Vanguard.\\n    const gangster = new Gangster(ns);\\n    const vanguard = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vanguard(s));\\n    assert(vanguard.length === 1);\\n    gangster.vigilante(vanguard);\\n    // Other members currently on vigilante justice are reassigned to other\\n    // jobs.\\n    const vigilante = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vigilante(s) && !gangster.is_vanguard(s));\\n    vigilante.forEach((s) => {\\n        if (gangster.is_hacker(s)) {\\n            gangster.blackmail([s]);\\n        } else {\\n            gangster.extort([s]);\\n        }\\n    });\\n}\\n\\n/**\\n * We do not have enough gang members in vigilante justice.  Reassign some\\n * members to these jobs.\\n *\\n * @param ns The Netscript API.\\n * @param threshold We want this many members to be in vigilante justice.\\n */\\nfunction reassign_to_vigilante(ns, threshold) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    const tau = Math.floor(threshold);\\n    assert(tau > 0);\\n    // All gang members who should be on vigilante justice.\\n    const gangster = new Gangster(ns);\\n    const vanguard = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vanguard(s));\\n    const hacker = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_hacker(s));\\n    const artillery = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_artillery(s));\\n    const pilot = ns.gang.getMemberNames().filter((s) => gangster.is_pilot(s));\\n    // Determine which members to assign to vigilante justice.  The Vanguard is\\n    // always the first to be assigned to vigilante justice.  This is followed\\n    // by the Hacker.  Next comes the Artillery and the Pilot, who are assigned\\n    // to vigilante justice in that order.\\n    const candidate = [vanguard, hacker, artillery, pilot].flat();\\n    const vigilante = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vigilante(s));\\n    assert(vigilante.length < candidate.length);\\n    assert(vigilante.length < tau);\\n    while (vigilante.includes(candidate[0])) {\\n        candidate.shift();\\n    }\\n    const nmore = tau - vigilante.length;\\n    assert(nmore > 0);\\n    while (candidate.length > nmore) {\\n        candidate.pop();\\n    }\\n    // Assign the candidates to vigilante justice.\\n    gangster.vigilante(candidate);\\n}\\n\\n/**\\n * Reassign a number of our gang members to vigilante justice.  Our objective is\\n * to lower our wanted level.\\n *\\n * @param ns The Netscript API.\\n */\\nexport function reassign_vigilante(ns) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    // Initially, our gang has a small number of members.  Assigning one or\\n    // more members to vigilante justice would do precious little to decrease\\n    // our wanted level.  With such a small membership, it is more important to\\n    // raise the members' stats and recruit more members than to lower our\\n    // wanted level.\\n    assert(ns.gang.getMemberNames().length > members.HALF);\\n    // Do we already have the required number of members on vigilante justice?\\n    if (has_enough_vigilante(ns)) {\\n        return;\\n    }\\n    // We have more vigilantes than the given threshold.  Move some members out\\n    // of vigilante justice and into some other jobs.\\n    const gangster = new Gangster(ns);\\n    const tau = choose_vigilante_threshold(ns);\\n    const vigilante = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vigilante(s));\\n    if (vigilante.length > tau) {\\n        reassign_excess_vigilante(ns, tau);\\n        return;\\n    }\\n    // If we already have some vigilantes, then add more members to vigilante\\n    // justice to make up the required threshold.\\n    assert(vigilante.length < tau);\\n    reassign_to_vigilante(ns, tau);\\n}\\n\\n/**\\n * The strongest member in our gang.\\n *\\n * @param ns The Netscript API.\\n * @param member Choose from among this array of member names.\\n * @return A string representing the name of the strongest gang member.\\n */\\nexport function strongest_member(ns, member) {\\n    assert(member.length > 0);\\n    let maxstr = -Infinity;\\n    let name = \\\"\\\";\\n    for (const s of member) {\\n        const { str } = ns.gang.getMemberInformation(s);\\n        if (str > maxstr) {\\n            maxstr = str;\\n            name = s;\\n        }\\n    }\\n    assert(name !== \\\"\\\");\\n    return name;\\n}\\n\",\"filename\":\"/lib/gang/util.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":23.8,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725375,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getAscensionResult\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.ascendMember\",\"cost\":4},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n// Miscellaneous functions for input/output.\\n\\n/**\\n * Print a log to the Terminal.\\n *\\n * @param ns The Netscript API.\\n * @param msg Print this message to the Terminal.\\n * @param clr Use this colour to print the given message.  Must be a string\\n *     representation of a Unicode escape sequence.  Default is empty string,\\n *     which means we use the default colour theme of the Terminal.\\n */\\nexport function log(ns, msg, clr = \\\"\\\") {\\n    const date = new Date(Date.now()).toISOString();\\n    const suffix = clr !== \\\"\\\" ? colour.RESET : \\\"\\\";\\n    ns.tprintf(`[${date}] ${clr}${ns.getScriptName()}: ${msg}${suffix}`);\\n}\\n\\n/**\\n * Convert a RAM amount in the game to a value suitable for display in the\\n * Terminal.\\n *\\n * @param ns The Netscript API.\\n * @param n An amount of RAM as returned by a function in the game.\\n * @return An amount of RAM suitable to be displayed in the Terminal.\\n */\\nexport function format_ram(ns, n) {\\n    assert(n > 0);\\n    const byte_factor = 1e9;\\n    return ns.nFormat(n * byte_factor, \\\"0.00b\\\");\\n}\\n\",\"filename\":\"/lib/io.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725376,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n/**\\n * A class to hold information about money.\\n */\\nexport class Money {\\n    /**\\n     * The value for one million.\\n     */\\n    #million;\\n\\n    /**\\n     * Initialize a money object.\\n     */\\n    constructor() {\\n        this.#million = 1e6;\\n    }\\n\\n    /**\\n     * One billion, i.e. 10^9.\\n     */\\n    billion() {\\n        return 1000 * this.million();\\n    }\\n\\n    /**\\n     * One million, i.e. 10^6.\\n     */\\n    million() {\\n        return this.#million;\\n    }\\n\\n    /**\\n     * One quadrillion, i.e. 10^15.\\n     */\\n    quadrillion() {\\n        return 1000 * this.trillion();\\n    }\\n\\n    /**\\n     * One trillion, i.e. 10^12.\\n     */\\n    trillion() {\\n        return 1000 * this.billion();\\n    }\\n}\\n\",\"filename\":\"/lib/money.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725377,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A class and various utility functions related to network.\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { assert, filter_pserv } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A combinatorial graph, commonly referred to as a graph.\\n */\\nexport class Graph {\\n    /**\\n     * The adjacency map.  Each key is a vertex or node of the graph.  Each\\n     * value is an array of vertices to which the key is adjacent.  For\\n     * example, given a node i, adj[i] is an array such that each node in the\\n     * array is a neighbour of i.\\n     */\\n    #adj;\\n\\n    /**\\n     * A boolean signifying whether each edge is directed or undirected.\\n     */\\n    #directed;\\n\\n    /**\\n     * A graph object.\\n     *\\n     * @param directed A boolean indicating whether each edge of the graph is\\n     *     directed or undirected.  If true, then each edge is directed.  If\\n     *     false, then each edge is undirected.\\n     */\\n    constructor(directed) {\\n        this.#adj = new Map();\\n        this.#directed = false;\\n        if (directed) {\\n            this.#directed = true;\\n        }\\n    }\\n\\n    /**\\n     * Add an edge to this graph.\\n     *\\n     * @param u, v An edge between vertices u and v.\\n     * @return true if the edge was successfully added to the graph;\\n     *     false otherwise or the edge is already in the graph.\\n     */\\n    add_edge(u, v) {\\n        // Already have the edge.\\n        if (this.has_edge(u, v)) {\\n            return bool.FAILURE;\\n        }\\n        // First, add the nodes if we don't have them already.\\n        if (!this.has_node(u)) {\\n            assert(this.add_node(u));\\n        }\\n        if (!this.has_node(v)) {\\n            assert(this.add_node(v));\\n        }\\n        // Now insert the edge (u, v).\\n        // If the graph is directed, only need to add the edge (u, v).\\n        // If the graph is undirected, also must add the edge (v, u).\\n        const u_neighbour = this.neighbour(u);\\n        u_neighbour.push(v);\\n        this.#adj.set(u, u_neighbour);\\n        // Undirected graph.\\n        if (!this.#directed) {\\n            const v_neighbour = this.neighbour(v);\\n            v_neighbour.push(u);\\n            this.#adj.set(v, v_neighbour);\\n        }\\n        return bool.SUCCESS;\\n    }\\n\\n    /**\\n     * Add a vertex to this graph.\\n     *\\n     * @param v Add this node.\\n     * @return true if the given node was successfully added;\\n     *     false otherwise or the node already exists in the graph.\\n     */\\n    add_node(v) {\\n        if (this.has_node(v)) {\\n            return bool.FAILURE;\\n        }\\n        this.#adj.set(v, []);\\n        return bool.SUCCESS;\\n    }\\n\\n    /**\\n     * Use Dijkstra's algorithm to determine a shortest path from a given\\n     * node to all nodes in a graph.\\n     *\\n     * @param source The source vertex.  All shortest paths must start\\n     *     from this node.\\n     * @return These two data structures:\\n     *     (1) A map of the shortest number of nodes in a path to a target\\n     *         node.  Each path starts from the given source node.  For\\n     *         example, the map element A[i] means the shortest number of nodes\\n     *         in a path to node i.\\n     *     (2) A map of the node preceding a given node, in a shortest path.\\n     *         For example, the map element M[i] gives a node that directly\\n     *         connects to node i, where M[i] and i are nodes in a shortest\\n     *         path.\\n     */\\n    #dijkstra(source) {\\n        // The implementation is the same for both directed and undirected\\n        // graphs.\\n        // A map of the shortest number of nodes in a path to a target node.\\n        const dist = new Map();\\n        // A map of the node preceding a given node.\\n        const prev = new Map();\\n        // A queue of nodes to visit.\\n        let queue = [];\\n        // Initialization.\\n        for (const v of this.nodes()) {\\n            dist.set(v, Infinity);\\n            prev.set(v, undefined);\\n            queue.push(v);\\n        }\\n        // The distance from the source node to itself is zero.\\n        dist.set(source, 0);\\n        prev.set(source, undefined);\\n        queue.push(source);\\n        // Search for shortest paths from the source node to other nodes.  This\\n        // is an unweighted graph so the weight between a node and any of its\\n        // neighbours is 1.\\n        const weight = 1;\\n        while (queue.length > 0) {\\n            const u = this.#minimumq(queue, dist);\\n            queue = queue.filter((s) => s !== u);\\n            // Consider the neighbours of u.  Each neighbour must still be in\\n            // the queue.\\n            let neighbour = Array.from(this.neighbour(u));\\n            // eslint-disable-next-line no-loop-func\\n            neighbour = neighbour.filter((s) => queue.includes(s));\\n            for (const v of neighbour) {\\n                const alt = dist.get(u) + weight;\\n                // We have found a shorter path to v.\\n                if (alt < dist.get(v)) {\\n                    dist.set(v, alt);\\n                    prev.set(v, u);\\n                }\\n            }\\n        }\\n        return [dist, prev];\\n    }\\n\\n    /**\\n     * All edges of this graph, as an array of arrays.\\n     */\\n    edges() {\\n        // Directed graph.\\n        if (this.#directed) {\\n            const edge = [];\\n            this.nodes().forEach((u) => {\\n                this.neighbour(u).forEach((v) => edge.push([u, v]));\\n            });\\n            return edge;\\n        }\\n        // Undirected graph.\\n        assert(!this.#directed);\\n        const edge = new Set();\\n        for (const u of this.nodes()) {\\n            for (const v of this.neighbour(u)) {\\n                // Assume nodes to be comparable, i.e. we can compare the node\\n                // values.  If each node is an integer, the nodes are\\n                // comparable because there is an ordering of numbers.  If each\\n                // node is a string of alphabetic characters, the nodes are\\n                // also comparable because we can use lexicographic ordering.\\n                if (u > v) {\\n                    continue;\\n                }\\n                assert(!edge.has([u, v]));\\n                edge.add([u, v]);\\n            }\\n        }\\n        return [...edge];\\n    }\\n\\n    /**\\n     * Whether the graph has the given edge.\\n     *\\n     * @param u, v Check the graph for this edge.\\n     * @return true if the graph has the edge (u, v); false otherwise.\\n     */\\n    has_edge(u, v) {\\n        if (!this.has_node(u)) {\\n            return bool.NOT;\\n        }\\n        if (!this.has_node(v)) {\\n            return bool.NOT;\\n        }\\n        // Directed graph.\\n        if (this.#directed) {\\n            const neighbour = this.neighbour(u);\\n            return neighbour.includes(v);\\n        }\\n        // Undirected graph.\\n        assert(!this.#directed);\\n        const u_neighbour = this.neighbour(u);\\n        const v_neighbour = this.neighbour(v);\\n        if (u_neighbour.includes(v)) {\\n            assert(v_neighbour.includes(u));\\n            return bool.HAS;\\n        }\\n        return bool.NOT;\\n    }\\n\\n    /**\\n     * Whether the graph has the given vertex.\\n     *\\n     * @param v Check for the presence or absence of this vertex.\\n     * @return true if the graph already has the vertex; false otherwise.\\n     */\\n    has_node(v) {\\n        return this.#adj.has(v);\\n    }\\n\\n    /**\\n     * Choose the node i with minimum dist[i].  This is a simple\\n     * implementation.  For better performance, the queue should be implemented\\n     * as a minimum priority queue.\\n     *\\n     * @param queue An array of nodes to visit.\\n     * @param dist A map of the shortest number of nodes in a path to\\n     *     a target node.\\n     * @return The node i such that dist[i] is minimal.\\n     */\\n    // eslint-disable-next-line class-methods-use-this\\n    #minimumq(queue, dist) {\\n        assert(queue.length > 0);\\n        assert(dist.size > 0);\\n        let node = queue[0];\\n        for (const v of queue) {\\n            if (dist.get(v) < dist.get(node)) {\\n                node = v;\\n            }\\n        }\\n        return node;\\n    }\\n\\n    /**\\n     * The neighbours of a vertex.\\n     *\\n     * @param v A node of this graph.\\n     * @return An array representing the neighbours of the given node.\\n     */\\n    neighbour(v) {\\n        assert(this.has_node(v));\\n        return this.#adj.get(v);\\n    }\\n\\n    /**\\n     * All nodes of this graph, as an array.\\n     */\\n    nodes() {\\n        const vertex = [...this.#adj.keys()];\\n        vertex.sort();\\n        return vertex;\\n    }\\n\\n    /**\\n     * Determine a shortest path from the source to the target.\\n     *\\n     * @param source Start our path from this node.\\n     * @param target We want to reach this node.\\n     * @return An array representing a shortest path from source to target.\\n     *     An empty array if the target is not reachable from the source.\\n     */\\n    shortest_path(source, target) {\\n        // The implementation is the same for directed and undirected graphs.\\n        assert(this.has_node(source));\\n        assert(this.has_node(target));\\n        const [dist, prev] = this.#dijkstra(source);\\n        // Ensure the target is reachable from the source node.\\n        if (!dist.has(target)) {\\n            return [];\\n        }\\n        const stack = [];\\n        let u = target;\\n        // Start from the target and work backward to find a shortest path from\\n        // the source to the target.\\n        while (prev.get(u) !== undefined) {\\n            stack.push(u);\\n            u = prev.get(u);\\n        }\\n        // Target is not reachable from the source node.\\n        if (stack.length === 0) {\\n            return [];\\n        }\\n        // Reconstruct the full path from source to target.\\n        assert(stack.length > 0);\\n        stack.push(source);\\n        stack.reverse();\\n        return stack;\\n    }\\n}\\n\\n/**\\n * Scan the network of servers in the game world.  Each server must be\\n * reachable from our home server.  We do not include purchased servers.\\n *\\n * @param ns The Netscript API.\\n * @return An array of servers that can be reached from home.  Purchased\\n *     servers are excluded.\\n */\\nexport function network(ns) {\\n    // We scan the world network from a node, which is assumed to be our home\\n    // server.  We refer to our home server as the root of the tree.\\n    const root = home;\\n    // A set of all servers we can visit at the moment.\\n    let server = new Set();\\n    // A stack of servers to visit.  We start from our home server.\\n    const stack = new Array(root);\\n    // Use depth-first search to navigate all servers we can visit.\\n    while (stack.length > 0) {\\n        const s = stack.pop();\\n        // Have we visited the server s yet?\\n        if (!server.has(s)) {\\n            // The server s is now visited.\\n            server.add(s);\\n            // Add all neighbours of s to the stack.  Take care to exclude the\\n            // purchased servers.\\n            stack.push(...filter_pserv(ns, ns.scan(s)));\\n        }\\n    }\\n    // Convert the set of servers to an array of servers.\\n    server = [...server];\\n    // Remove the root node from our array.  We want all servers that are\\n    // connected either directly or indirectly to the root node.\\n    return server.filter((s) => root !== s);\\n}\\n\\n/**\\n * Determine a shortest path from the source server to the target server\\n * in the network of world servers.\\n *\\n * @param ns The Netscript API.\\n * @param source Start our path from this server.\\n * @param target We want to reach this server.\\n * @return An array of shortest path from source to target.  An\\n *     empty array if the target is not reachable from the source.\\n */\\nexport function shortest_path(ns, source, target) {\\n    // Represent the network of world servers as an undirected graph.\\n    const stack = [];\\n    const visit = new Set();\\n    stack.push(source);\\n    const graph = new Graph(bool.UNDIRECTED);\\n    // Use breath-first search to navigate the network.\\n    while (stack.length > 0) {\\n        const s = stack.pop();\\n        // Have we visited the server s yet?\\n        if (visit.has(s)) {\\n            continue;\\n        }\\n        visit.add(s);\\n        // All neighbours of s, excluding the purchased servers.\\n        const neighbour = [...filter_pserv(ns, ns.scan(s))];\\n        stack.push(...neighbour);\\n        for (const t of neighbour) {\\n            // Have we visited the server t yet?\\n            if (visit.has(t)) {\\n                continue;\\n            }\\n            assert(graph.add_edge(s, t));\\n        }\\n    }\\n    // A shortest path from source to target.\\n    return graph.shortest_path(source, target);\\n}\\n\",\"filename\":\"/lib/network.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.05,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725378,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { program } from \\\"/lib/constant/exe.js\\\";\\nimport { script } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A class that holds all information about a player.\\n */\\nexport class Player {\\n    /**\\n     * The name of the home server of this player.\\n     */\\n    #home;\\n\\n    /**\\n     * The Netscript API.\\n     */\\n    #ns;\\n\\n    /**\\n     * Programs that allow a player to open ports on a world server.\\n     * These are port openers.\\n     */\\n    #port_opener;\\n\\n    /**\\n     * Programs necessary for visiting the network of world servers.\\n     * These are usually network programs.\\n     */\\n    #program;\\n\\n    /**\\n     * The hack script of the player.  Assumed to be located on the player's\\n     * home server.\\n     */\\n    #script;\\n\\n    /**\\n     * Initialize a Player object.\\n     *\\n     * @param ns The Netscript API.\\n     */\\n    constructor(ns) {\\n        this.#home = home;\\n        this.#ns = ns;\\n        this.#port_opener = Array.from(program);\\n        this.#program = [\\\"DeepscanV1.exe\\\", \\\"DeepscanV2.exe\\\", \\\"NUKE.exe\\\"];\\n        this.#script = script;\\n    }\\n\\n    /**\\n     * The player's agility level.\\n     */\\n    agility() {\\n        return this.#ns.getPlayer().skills.agility;\\n    }\\n\\n    /**\\n     * The BitNode in which the player currently inhabits.\\n     */\\n    bitnode() {\\n        return this.#ns.getPlayer().bitNodeN;\\n    }\\n\\n    /**\\n     * The player's current Charisma level.\\n     */\\n    charisma() {\\n        return this.#ns.getPlayer().skills.charisma;\\n    }\\n\\n    /**\\n     * The current city where the player is located.\\n     */\\n    city() {\\n        return this.#ns.getPlayer().city;\\n    }\\n\\n    /**\\n     * The player's defense level.\\n     */\\n    defense() {\\n        return this.#ns.getPlayer().skills.defense;\\n    }\\n\\n    /**\\n     * The player's dexterity level.\\n     */\\n    dexterity() {\\n        return this.#ns.getPlayer().skills.dexterity;\\n    }\\n\\n    /**\\n     * An array of all factions to which the player is a member.\\n     */\\n    faction() {\\n        return this.#ns.getPlayer().factions;\\n    }\\n\\n    /**\\n     * The current Hack stat of the player.\\n     */\\n    hacking_skill() {\\n        return this.#ns.getHackingLevel();\\n    }\\n\\n    /**\\n     * Whether the player has all programs to open all ports on any world\\n     * server.\\n     *\\n     * @return true if the player can open all ports on another server;\\n     *     false otherwise.\\n     */\\n    has_all_port_openers() {\\n        return this.num_ports() === this.#port_opener.length;\\n    }\\n\\n    /**\\n     * Whether the player has all programs to visit all world servers and open\\n     * all ports on any world server.\\n     *\\n     * @return true if the player has all network programs and port openers;\\n     *     false otherwise.\\n     */\\n    has_all_programs() {\\n        const prog = Array.from(this.#port_opener).concat(this.#program);\\n        assert(prog.length > 0);\\n        for (const p of prog) {\\n            if (!this.has_program(p)) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    /**\\n     * Whether we have a given program.\\n     *\\n     * @param p A program we want to check.\\n     */\\n    has_program(p) {\\n        return this.#ns.fileExists(p, this.home());\\n    }\\n\\n    /**\\n     * Whether we have purchased the TOR router.\\n     *\\n     * @return true if we have purchased the TOR router; false otherwise.\\n     */\\n    has_tor() {\\n        return this.#ns.getPlayer().tor;\\n    }\\n\\n    /**\\n     * The home server of the player.\\n     */\\n    home() {\\n        return this.#home;\\n    }\\n\\n    /**\\n     * Whether the player is working for a company.\\n     *\\n     * @param company A string representing the name of a company.\\n     * @return true if the player is working for the given company;\\n     *     false otherwise.\\n     */\\n    is_employer(company) {\\n        assert(company.length > 0);\\n        const employer = new Set(Object.keys(this.#ns.getPlayer().jobs));\\n        return employer.has(company);\\n    }\\n\\n    /**\\n     * Whether the player is a member of a faction.\\n     *\\n     * @param fac A string representing the name of a faction.\\n     * @return true if the player belongs to the given faction; false otherwise.\\n     */\\n    is_member(fac) {\\n        assert(fac !== \\\"\\\");\\n        return this.#ns.getPlayer().factions.includes(fac);\\n    }\\n\\n    /**\\n     * The position the player holds at a given company.\\n     *\\n     * @param company The name of a company.\\n     * @return The position the player currently holds at the given company.\\n     *     Return an empty string if the player does not hold any position at\\n     *     the given company.\\n     */\\n    job(company) {\\n        assert(company.length > 0);\\n        const stat = this.#ns.getPlayer();\\n        if (stat.jobs[company] === undefined) {\\n            return \\\"\\\";\\n        }\\n        return stat.jobs[company];\\n    }\\n\\n    /**\\n     * The player's karma.  This is an Easter egg, buried in the source code\\n     * of the game.  Refer to this file:\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/NetscriptFunctions/Extra.ts\\n     */\\n    karma() {\\n        return this.#ns.heart.break();\\n    }\\n\\n    /**\\n     * The amount of money available to this player.\\n     */\\n    money() {\\n        return this.#ns.getServerMoneyAvailable(this.home());\\n    }\\n\\n    /**\\n     * The number of people the player has killed.\\n     */\\n    nkill() {\\n        return this.#ns.getPlayer().numPeopleKilled;\\n    }\\n\\n    /**\\n     * Determine the number of ports a player can currently open on servers in\\n     * the game world.  This depends on whether the player has the necessary\\n     * hacking programs on the home server.\\n     */\\n    num_ports() {\\n        // These are programs that can be created after satisfying certain\\n        // conditions.\\n        let prog = Array.from(this.#port_opener);\\n        // Determine the number of ports we can open on other servers.\\n        prog = prog.filter((p) => this.#ns.fileExists(p, this.home()));\\n        return prog.length;\\n    }\\n\\n    /**\\n     * All purchased servers of this player.\\n     */\\n    pserv() {\\n        return this.#ns.getPurchasedServers();\\n    }\\n\\n    /**\\n     * The name of the hacking script of the player.\\n     */\\n    script() {\\n        return this.#script;\\n    }\\n\\n    /**\\n     * The player's strength level.\\n     */\\n    strength() {\\n        return this.#ns.getPlayer().skills.strength;\\n    }\\n}\\n\",\"filename\":\"/lib/player.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725379,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { script } from \\\"/lib/constant/misc.js\\\";\\nimport { pserv } from \\\"/lib/constant/pserv.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A class that holds information specific to purchased servers.\\n */\\nexport class PurchasedServer {\\n    /**\\n     * The player's home server.\\n     */\\n    #home;\\n\\n    /**\\n     * The Netscript API.\\n     */\\n    #ns;\\n\\n    /**\\n     * The player's main hacking script.\\n     */\\n    #script;\\n\\n    /**\\n     * Possible amount of RAM (GB) for a purchased server.\\n     */\\n    #valid_ram;\\n\\n    /**\\n     * Create an object to represent a purchased server.\\n     *\\n     * @param ns The Netscript API.\\n     */\\n    constructor(ns) {\\n        this.#home = home;\\n        this.#ns = ns;\\n        this.#script = script;\\n        this.#valid_ram = Array.from(pserv.RAM);\\n    }\\n\\n    /**\\n     * The cost of buying a server with the given amount of RAM (GB).\\n     *\\n     * @param ram The amount of RAM (GB) to buy with this purchased server.\\n     *     RAM is assumed to be given as a power of 2.\\n     */\\n    cost(ram) {\\n        assert(this.is_valid_ram(ram));\\n        return this.#ns.getPurchasedServerCost(ram);\\n    }\\n\\n    /**\\n     * Choose the default amount of RAM (in GB) for a new purchased server.\\n     * The chosen amount of RAM should allow the purchased server to run our\\n     * hacking script using at least 2 threads.\\n     */\\n    default_ram() {\\n        const script_ram = this.#ns.getScriptRam(this.#script, this.#home);\\n        let i = 0;\\n        while (script_ram > this.#valid_ram[i]) {\\n            i++;\\n        }\\n        assert(i + 1 <= this.#valid_ram.length);\\n        return this.#valid_ram[i + 1];\\n    }\\n\\n    /**\\n     * Whether the given amount of RAM (GB) is valid for a purchased server.\\n     *\\n     * @param ram The amount of RAM in GB.  Must be a power of 2.  Lowest is\\n     *     2GB.  Will round down to the nearest whole number.\\n     * @return true if the given amount of RAM is valid for a purchased server;\\n     *     false otherwise.\\n     */\\n    is_valid_ram(ram) {\\n        const n = Math.floor(ram);\\n        return this.#valid_ram.includes(n);\\n    }\\n\\n    /**\\n     * Delete all purchased servers.  This would also kill all scripts running\\n     * on each purchased server.\\n     */\\n    kill_all() {\\n        for (const server of this.#ns.getPurchasedServers()) {\\n            // Kill all scripts running on a purchased server.\\n            this.#ns.killall(server);\\n            // Delete the purchased server.\\n            this.#ns.deleteServer(server);\\n        }\\n    }\\n\\n    /**\\n     * The maximum number of purchased servers that can be bought.\\n     */\\n    limit() {\\n        return this.#ns.getPurchasedServerLimit();\\n    }\\n\\n    /**\\n     * Purchase a new server with the given hostname and amount of RAM (GB).\\n     *\\n     * @param hostname The hostname of the new purchased server.  If a player\\n     *     already has a purchased server with the given hostname, append a\\n     *     numeric value to the hostname.\\n     * @param ram The amount of RAM (GB) of the purchased server.\\n     * @return The hostname of the newly purchased server.\\n     */\\n    purchase(hostname, ram) {\\n        return this.#ns.purchaseServer(hostname, ram);\\n    }\\n\\n    /**\\n     * The possible amount of RAM a purchased server can have.  According to\\n     * this page\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/markdown/bitburner.ns.getpurchasedservercost.md\\n     *\\n     * the highest amount of RAM for a purchased server is 1048576.\\n     */\\n    valid_ram() {\\n        return this.#valid_ram;\\n    }\\n}\\n\",\"filename\":\"/lib/pserv.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":9.25,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725380,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions relating to random number generations.\\n\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A random integer between a minimum a and a maximum b, inclusive.  Code is\\n * adapted from\\n *\\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\\n *\\n * @param a The minimum integer value.\\n * @param b The maximum integer value.\\n * @return A random integer in the range [a, b], inclusive.  The returned\\n *     integer can be the given minimum or the given maximum.\\n */\\nexport function random_integer(a, b) {\\n    const min = Math.ceil(a);\\n    const max = Math.floor(b);\\n    const n = Math.floor(Math.random() * (max - min + 1) + min);\\n    assert(a <= n);\\n    assert(n <= b);\\n    return n;\\n}\\n\",\"filename\":\"/lib/random.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725381,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { script } from \\\"/lib/constant/misc.js\\\";\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A server class that holds all information about a server, whether it be\\n * a purchased server or a server found on the network in the game world.\\n */\\nexport class Server {\\n    /**\\n     * The amount of Hack stat required to hack this server.\\n     */\\n    #hacking_skill;\\n\\n    /**\\n     * The player's home server.\\n     */\\n    #home;\\n\\n    /**\\n     * The hostname of this server.\\n     */\\n    #hostname;\\n\\n    /**\\n     * The maximum amount of money this server can hold.\\n     */\\n    #money_max;\\n\\n    /**\\n     * How many ports must be opened on this server in order to run\\n     * NUKE.exe on it.\\n     */\\n    #n_ports_required;\\n\\n    /**\\n     * The Netscript API.\\n     */\\n    #ns;\\n\\n    /**\\n     * Reserve this amount of RAM.  We want the server to always have at least\\n     * this amount of RAM available.  The reserve RAM is important especially\\n     * if this is the player's home server.  We want to have a minimum amount\\n     * of RAM on the home server for various purposes.\\n     */\\n    #ram_reserve;\\n\\n    /**\\n     * The player's main hacking script.\\n     */\\n    #script;\\n\\n    /**\\n     * The minimum security level to which this server can be weakened.\\n     */\\n    #security_min;\\n\\n    /**\\n     * Create a server object with the given hostname.\\n     *\\n     * @param ns The Netscript API.\\n     * @param hostname The hostname of a server.  The server must exist in the\\n     *     game world and can be either a purchased server or a server found on\\n     *     the network in the game world.\\n     */\\n    constructor(ns, hostname) {\\n        assert(hostname.length > 0);\\n        const server = ns.getServer(hostname);\\n        this.#hacking_skill = server.requiredHackingSkill;\\n        this.#home = home;\\n        this.#hostname = server.hostname;\\n        this.#money_max = server.moneyMax;\\n        this.#n_ports_required = server.numOpenPortsRequired;\\n        this.#ns = ns;\\n        this.#script = script;\\n        this.#security_min = server.minDifficulty;\\n        // By default, we do not reserve any RAM.  However, if this is the\\n        // player's home server, then reserve some RAM.\\n        this.#ram_reserve = 0;\\n        if (this.hostname() === this.#home) {\\n            // Reserve an amount of RAM, depending on the maximum RAM on the\\n            // home server.\\n            this.#ram_reserve = this.#reserve_ram();\\n        }\\n    }\\n\\n    /**\\n     * How much RAM (in GB) is available on this server.\\n     */\\n    available_ram() {\\n        return this.ram_max() - this.#ns.getServerUsedRam(this.hostname());\\n    }\\n\\n    /**\\n     * Whether the server has enough RAM to run a given script, using at\\n     * least one thread.  We ignore any amount of RAM that has been reserved,\\n     * using all available RAM to help us make a decision.\\n     *\\n     * @param s We want to run this script on this server.\\n     * @return true if the given script can be run on this server;\\n     *     false otherwise.\\n     */\\n    can_run_script(s) {\\n        const script_ram = this.#ns.getScriptRam(s, this.#home);\\n        const server_ram = this.available_ram();\\n        if (server_ram < 1) {\\n            return bool.NOT_RUN;\\n        }\\n        const nthread = Math.floor(server_ram / script_ram);\\n        if (nthread < 1) {\\n            return bool.NOT_RUN;\\n        }\\n        return bool.CAN_RUN;\\n    }\\n\\n    /**\\n     * The number of CPU Cores on this server.\\n     */\\n    cores() {\\n        return this.#ns.getServer(this.hostname()).cpuCores;\\n    }\\n\\n    /**\\n     * Copy our hack script over to this server.  Run the hack script on this\\n     * server.\\n     *\\n     * @param target We run our hack script against this target server.\\n     * @return true if our hack script is running on the server using at least\\n     *     one thread; false otherwise.  The method can return false if, for\\n     *     example, there is no free RAM on the server or we do not have root\\n     *     access on either servers.\\n     */\\n    async deploy(target) {\\n        assert(target.length > 0);\\n        const targ = this.#ns.getServer(target);\\n        // No root access on either servers.\\n        if (!this.has_root_access()) {\\n            this.#ns.tprint(`No root access on ${this.hostname()}`);\\n            return bool.FAILURE;\\n        }\\n        if (!targ.hasAdminRights) {\\n            this.#ns.tprint(`No root access on ${targ.hostname}`);\\n            return bool.FAILURE;\\n        }\\n        // Hack script not found on our home server.\\n        if (!this.#ns.fileExists(this.#script, this.#home)) {\\n            this.#ns.tprint(`Hack script not found on server ${this.#home}`);\\n            return bool.FAILURE;\\n        }\\n        // No free RAM on server to run our hack script.\\n        const nthread = this.num_threads(this.#script);\\n        if (nthread < 1) {\\n            this.#ns.tprint(`No free RAM on server ${this.hostname()}`);\\n            return bool.FAILURE;\\n        }\\n        // Copy our script over to this server.  Use the server to hack the\\n        // target.\\n        await this.#ns.scp(this.#script, this.hostname(), this.#home);\\n        this.#ns.exec(this.#script, this.hostname(), nthread, targ.hostname);\\n        return bool.SUCCESS;\\n    }\\n\\n    /**\\n     * Try to gain root access on this server.\\n     *\\n     * @return true if the player has root access to this server;\\n     *     false if root access cannot be obtained.\\n     */\\n    async gain_root_access() {\\n        // Do we already have root access to this server?\\n        if (this.has_root_access()) {\\n            return true;\\n        }\\n        // Try to open all required ports and nuke the server.\\n        try {\\n            await this.#ns.brutessh(this.hostname());\\n        } catch {}\\n        try {\\n            await this.#ns.ftpcrack(this.hostname());\\n        } catch {}\\n        try {\\n            await this.#ns.httpworm(this.hostname());\\n        } catch {}\\n        try {\\n            await this.#ns.relaysmtp(this.hostname());\\n        } catch {}\\n        try {\\n            await this.#ns.sqlinject(this.hostname());\\n        } catch {}\\n        try {\\n            await this.#ns.nuke(this.hostname());\\n            return true;\\n        } catch {\\n            assert(!this.has_root_access());\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Increase the amount of money available on this server.\\n     *\\n     */\\n    async grow() {\\n        await this.#ns.grow(this.hostname());\\n    }\\n\\n    /**\\n     * Steal money from this server.\\n     *\\n     */\\n    async hack() {\\n        await this.#ns.hack(this.hostname());\\n    }\\n\\n    /**\\n     * The amount of Hack stat required to hack this server.\\n     */\\n    hacking_skill() {\\n        return this.#hacking_skill;\\n    }\\n\\n    /**\\n     * Whether we have root access to this server.\\n     *\\n     * @return true if we have root access to this server; false otherwise.\\n     */\\n    has_root_access() {\\n        return this.#ns.hasRootAccess(this.hostname());\\n    }\\n\\n    /**\\n     * The hostname of this server.\\n     */\\n    hostname() {\\n        return this.#hostname;\\n    }\\n\\n    /**\\n     * Determine whether the server is bankrupt, i.e. it can't hold any money.\\n     * This is not the same as there being zero money currently on the server.\\n     * The server can have zero money currently available, but we can grow the\\n     * server.  The server is bankrupt if the maximum amount of money it\\n     * can hold is zero.\\n     *\\n     * @return true if the server is bankrupt; false otherwise.\\n     */\\n    is_bankrupt() {\\n        return Math.floor(this.money_max()) === 0;\\n    }\\n\\n    /**\\n     * Whether this server is currently running a script.\\n     *\\n     * @param s Check to see if this script is currently running on the\\n     *     server.\\n     * @return true if the given script is running on the server;\\n     *     false otherwise.\\n     */\\n    is_running_script(s) {\\n        return this.#ns.scriptRunning(s, this.hostname());\\n    }\\n\\n    /**\\n     * The amount of money currently available on the server.\\n     *\\n     */\\n    money_available() {\\n        return this.#ns.getServerMoneyAvailable(this.hostname());\\n    }\\n\\n    /**\\n     * The maximum amount of money this server can hold.\\n     */\\n    money_max() {\\n        return this.#money_max;\\n    }\\n\\n    /**\\n     * The number of ports that must be opened in order to hack this server.\\n     */\\n    num_ports_required() {\\n        return this.#n_ports_required;\\n    }\\n\\n    /**\\n     * Determine how many threads we can run a given script on this server.\\n     * This function takes care not to use all available RAM on the player's\\n     * home server.  If this is the player's home server, the function reserves\\n     * some amount of RAM on the home server and use the remaining available\\n     * RAM to calculate the number of threads to devote to the given script.\\n     *\\n     * @param s We want to run this script on the server.  The script must\\n     *     exist on our home server.\\n     * @return The number of threads that can be used to run the given script\\n     *     on this server.  Return 0 if the amount of RAM to reserve is higher\\n     *     than the available RAM.\\n     */\\n    num_threads(s) {\\n        const script_ram = this.#ns.getScriptRam(s, this.#home);\\n        const server_ram = this.available_ram() - this.#ram_reserve;\\n        if (server_ram < 1) {\\n            return 0;\\n        }\\n        const nthread = Math.floor(server_ram / script_ram);\\n        return nthread;\\n    }\\n\\n    /**\\n     * The maximum amount of RAM (GB) of this server.\\n     */\\n    ram_max() {\\n        return this.#ns.getServer(this.hostname()).maxRam;\\n    }\\n\\n    /**\\n     * Reserve some RAM on the home server.  Use this method when we know we\\n     * have level 3 of \\\"Source-File 4: The Singularity\\\".  Even if we are in\\n     * BN4.1 or BN4.2, the game allows us to use Singularity functions at their\\n     * lowest RAM costs as if we have level 3 of the Source-File.\\n     *\\n     * @return The amount of RAM to reserve.\\n     */\\n    #reserve_ram() {\\n        // if (this.ram_max() >= home_t.RAM_HUGE) {\\n        //     return home_t.reserve.HIGH;\\n        // }\\n        if (this.ram_max() >= home_t.RAM_HIGH) {\\n            return home_t.reserve.HIGH / 2;\\n        }\\n        if (this.ram_max() >= home_t.RAM_HIGH / 2) {\\n            return home_t.reserve.MID;\\n        }\\n        if (this.ram_max() < home_t.reserve.DEFAULT) {\\n            return 0;\\n        }\\n    }\\n\\n    /**\\n     * The current security level of this server.\\n     *\\n     * @param ns The Netscript API.\\n     */\\n    security_level() {\\n        return this.#ns.getServerSecurityLevel(this.hostname());\\n    }\\n\\n    /**\\n     * The minimum security level to which this server can be weakened.\\n     */\\n    security_min() {\\n        return this.#security_min;\\n    }\\n\\n    /**\\n     * The number of threads to use for each instance of a script.  We want to\\n     * run various instances of a script, each instance uses a certain number\\n     * of threads.  Given the number of instances to run, we want to know how\\n     * many threads each instance can use.\\n     *\\n     * @param s The script to run on this server.\\n     * @param n We want to run this many instances of the given script.\\n     *     Must be a positive integer.\\n     * @return The number of threads for each instance of the script.\\n     *     Return 0 if we cannot run any scripts on this server.\\n     */\\n    threads_per_instance(s, n) {\\n        const ninstance = Math.floor(n);\\n        assert(ninstance > 0);\\n        return Math.floor(this.num_threads(s) / ninstance);\\n    }\\n\\n    /**\\n     * Weaken the security of this server.\\n     *\\n     */\\n    async weaken() {\\n        await this.#ns.weaken(this.hostname());\\n    }\\n}\\n\",\"filename\":\"/lib/server.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":7.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725382,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to Augmentations.\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { augment } from \\\"/lib/constant/faction.js\\\";\\nimport { work_hack_lvl } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { commit_crime } from \\\"/lib/singularity/crime.js\\\";\\nimport { work } from \\\"/lib/singularity/work.js\\\";\\nimport {\\n    assert,\\n    is_valid_faction,\\n    trade_bot_resume,\\n    trade_bot_stop_buy,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Augmentations we still need to purchase from a faction.  From all\\n * Augmentations that are yet to be purchased, we choose n Augmentations where\\n * one of these has reputation requirement higher than the remaining n - 1.  We\\n * order the Augmentations from least reputation requirement to highest\\n * reputation requirement and make our decision using this ascending list.  For\\n * example, if n = 5 we would be purchasing the first 5 Augmentations that have\\n * the lowest reputation requirements.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to purchase all Augmentations from this faction.\\n * @return An array of Augmentation names.  We do not yet have these\\n *     Augmentations.  This array never includes the NeuroFlux Governor\\n *     Augmentation.  An empty array if there are no Augmentations to buy from\\n *     the given faction.\\n */\\nexport function augment_to_buy(ns, fac) {\\n    assert(is_valid_faction(fac));\\n    // All Augmentations we have not yet purchased from the given faction.\\n    // Exclude the NeuroFlux Governor.\\n    const owned_aug = new Set(\\n        ns.singularity.getOwnedAugmentations(bool.PURCHASED)\\n    );\\n    let fac_aug = ns.singularity.getAugmentationsFromFaction(fac);\\n    fac_aug = fac_aug\\n        .filter((a) => !owned_aug.has(a))\\n        .filter((b) => b !== augment.NFG);\\n    if (fac_aug.length === 0) {\\n        return [];\\n    }\\n    // Choose n Augmentations that have the least reputation requirements.\\n    const tobuy = [];\\n    let i = 0;\\n    while (i < augment.BUY_TAU) {\\n        const aug = lowest_reputation(ns, fac_aug);\\n        tobuy.push(aug);\\n        fac_aug = fac_aug.filter((a) => a !== aug);\\n        if (fac_aug.length === 0) {\\n            break;\\n        }\\n        i++;\\n    }\\n    assert(tobuy.length > 0);\\n    return tobuy;\\n}\\n\\n/**\\n * Augmentations we have purchased and are yet to be installed.\\n *\\n * @param ns The Netscript API.\\n * @return An array of Augmentation names.  These are Augmentations we have\\n *     bought, but we have not yet installed them.  Can be an empty array.\\n */\\nexport function augment_to_install(ns) {\\n    const purchased_aug = ns.singularity.getOwnedAugmentations(bool.PURCHASED);\\n    const installed_aug = owned_augment(ns);\\n    return purchased_aug.filter((a) => !installed_aug.has(a));\\n}\\n\\n/**\\n * Choose the most expensive Augmentation to buy.  Why should we buy the most\\n * expensive Augmentation first?  The answer is simple.  After we have\\n * purchased an Augmentation from a faction, the cost of each remaining\\n * Augmentation is raised by a multiplier.  Had we not purchased the most\\n * expensive Augmentation, its cost would now be much higher than previously.\\n *\\n * @param ns The Netscript API.\\n * @param candidate An array of Augmentation names.  Cannot be an empty array.\\n * @return The name of the most expensive Augmentation from the given array.\\n */\\nexport function choose_augment(ns, candidate) {\\n    assert(candidate.length > 0);\\n    let max = -Infinity;\\n    let aug = \\\"\\\";\\n    for (const a of candidate) {\\n        const cost = Math.ceil(ns.singularity.getAugmentationPrice(a));\\n        if (max < cost) {\\n            max = cost;\\n            aug = a;\\n        }\\n    }\\n    assert(aug !== \\\"\\\");\\n    return aug;\\n}\\n\\n/**\\n * Whether we have a given Augmentation.\\n *\\n * @param ns The Netscript API.\\n * @param aug Check this Augmentation.\\n * @return true if we have already purchased the given Augmentation;\\n *     false otherwise.\\n */\\nexport function has_augment(ns, aug) {\\n    const candidate = new Set(\\n        ns.singularity.getOwnedAugmentations(bool.PURCHASED)\\n    );\\n    return candidate.has(aug);\\n}\\n\\n/**\\n * Determine an Augmentation that requires the least reputation points.\\n *\\n * @param ns The Netscript API.\\n * @param candidate An array of Augmentation names.  This array does not include\\n *     the NeuroFlux Governor.\\n * @return A string representing the name of an Augmentation that requires the\\n *     lowest amount of reputation points.\\n */\\nfunction lowest_reputation(ns, candidate) {\\n    assert(candidate.length > 0);\\n    assert(!candidate.includes(augment.NFG));\\n    let min = Infinity;\\n    let min_aug = \\\"\\\";\\n    for (const aug of candidate) {\\n        const rep = Math.ceil(ns.singularity.getAugmentationRepReq(aug));\\n        if (min > rep) {\\n            min = rep;\\n            min_aug = aug;\\n        }\\n    }\\n    assert(min_aug !== \\\"\\\");\\n    return min_aug;\\n}\\n\\n/**\\n * The number of Augmentations we have purchased.  This number only includes\\n * those that have been bought and not yet installed.\\n *\\n * @param ns The Netscript API.\\n * @return How many Augmentations we have bought and yet to install.\\n */\\nfunction num_augment(ns) {\\n    const owned_aug = ns.singularity.getOwnedAugmentations(bool.NOT_PURCHASED);\\n    const owned_bought_aug = ns.singularity.getOwnedAugmentations(\\n        bool.PURCHASED\\n    );\\n    assert(owned_bought_aug.length >= owned_aug.length);\\n    const npurchase = owned_bought_aug.length - owned_aug.length;\\n    return npurchase;\\n}\\n\\n/**\\n * All Augmentations we own and have already installed.\\n *\\n * @param ns The Netscript API.\\n * @return A set of all Augmentations we own.  These Augmentations are already\\n *     installed.\\n */\\nexport function owned_augment(ns) {\\n    return new Set(ns.singularity.getOwnedAugmentations(bool.NOT_PURCHASED));\\n}\\n\\n/**\\n * All pre-requisites of an Augmentation.  Include only pre-requisites we have\\n * not yet purchased.\\n *\\n * @param ns The Netscript API.\\n * @param aug A string representing the name of an Augmentation.\\n * @return An array of Augmentation names.  Each Augmentation in the array is a\\n *     pre-requisite of the given Augmentation.  Return an empty array if the\\n *     given Augmentation has no pre-requisites or we have already purchased\\n *     all of its pre-requisites.\\n */\\nexport function prerequisites(ns, aug) {\\n    assert(aug !== \\\"\\\");\\n    const prereq = ns.singularity.getAugmentationPrereq(aug);\\n    if (prereq.length === 0) {\\n        return [];\\n    }\\n    return prereq.filter((a) => !has_augment(ns, a));\\n}\\n\\n/**\\n * Purchase a bunch of Augmentations from a faction.  Buying Augmentations can\\n * be expensive.  If our trade bot is running, tell it to stop buying and start\\n * selling all shares.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to buy Augmentations from this faction.\\n * @param stop_trade A boolean signifying whether the trade bot should stop\\n *     buying shares of stocks.\\n * @param buy_nfg A boolean signifying whether to upgrade the NeuroFlux Governor\\n *     Augmentation.\\n * @param raise_money A boolean signifying whether we should raise funds to buy\\n *     Augmentations.  We can raise funds by working at a company or committing\\n *     crimes.\\n */\\nexport async function purchase_augment(\\n    ns,\\n    fac,\\n    stop_trade,\\n    buy_nfg,\\n    raise_money\\n) {\\n    // Sanity checks.\\n    assert(is_valid_faction(fac));\\n    let candidate = augment_to_buy(ns, fac);\\n    if (candidate.length === 0) {\\n        return;\\n    }\\n    // Tell the trade bot to stop buying shares of stocks.  We want to cash in\\n    // on our shares and raise money to buy Augmentations.\\n    if (stop_trade) {\\n        await trade_bot_stop_buy(ns);\\n    }\\n    // Below is our purchasing strategy.\\n    //\\n    // (1) Purchase the most expensive Augmentation first.\\n    // (2) If an Augmentation has a pre-requisite that we have not yet bought,\\n    //     purchase the pre-requisite first.\\n    // (3) Leave the NeuroFlux Governor Augmentation to last.\\n    const fac_aug = new Set(ns.singularity.getAugmentationsFromFaction(fac));\\n    const fac_has_aug = (a) => fac_aug.has(a);\\n    while (candidate.length > 0) {\\n        if (num_augment(ns) >= augment.BUY_TAU) {\\n            break;\\n        }\\n        // Choose the most expensive Augmentation.\\n        const aug = choose_augment(ns, candidate);\\n        if (has_augment(ns, aug)) {\\n            candidate = candidate.filter((a) => a !== aug);\\n            continue;\\n        }\\n        // If the most expensive Augmentation has no pre-requisites or we have\\n        // already purchased all of its pre-requisites, then purchase the\\n        // Augmentation.\\n        let prereq = prerequisites(ns, aug);\\n        if (prereq.length === 0) {\\n            await purchase_aug(ns, aug, fac, raise_money);\\n            candidate = candidate.filter((a) => a !== aug);\\n            continue;\\n        }\\n        // If the Augmentation has one or more pre-requisites we have not yet\\n        // purchased, then first purchase the pre-requisites.  Ensure that the\\n        // faction has the pre-requisites as well.\\n        if (!prereq.every(fac_has_aug)) {\\n            candidate = candidate.filter((a) => a !== aug);\\n            continue;\\n        }\\n        while (prereq.length > 0) {\\n            const pre = choose_augment(ns, prereq);\\n            await purchase_aug(ns, pre, fac, raise_money);\\n            prereq = prereq.filter((a) => a !== pre);\\n        }\\n        await purchase_aug(ns, aug, fac, raise_money);\\n        candidate = candidate.filter((a) => a !== aug);\\n    }\\n    // Level up the NeuroFlux Governor Augmentation as high as our funds allows.\\n    if (buy_nfg) {\\n        let cost = Math.ceil(ns.singularity.getAugmentationPrice(augment.NFG));\\n        let nfg_rep = Math.ceil(\\n            ns.singularity.getAugmentationRepReq(augment.NFG)\\n        );\\n        let fac_rep = Math.floor(ns.singularity.getFactionRep(fac));\\n        let money = ns.getServerMoneyAvailable(home);\\n        while (cost <= money && nfg_rep <= fac_rep) {\\n            assert(ns.singularity.purchaseAugmentation(fac, augment.NFG));\\n            cost = Math.ceil(ns.singularity.getAugmentationPrice(augment.NFG));\\n            nfg_rep = Math.ceil(\\n                ns.singularity.getAugmentationRepReq(augment.NFG)\\n            );\\n            fac_rep = Math.floor(ns.singularity.getFactionRep(fac));\\n            money = ns.getServerMoneyAvailable(home);\\n        }\\n    }\\n    // The trade bot can now resume buying and selling shares.\\n    if (stop_trade) {\\n        trade_bot_resume(ns);\\n    }\\n}\\n\\n/**\\n * Purchase an Augmentation.\\n *\\n * @param ns The Netscript API.\\n * @param aug We want to purchase this Augmentation.\\n * @param fac We want to purchase the given Augmentation from this faction.\\n * @param raise_money A boolean signifying whether we should raise funds to buy\\n *     the given Augmentation.  We can raise funds by working at a company or\\n *     committing crimes.\\n */\\nasync function purchase_aug(ns, aug, fac, raise_money) {\\n    // Purchase any pre-requisites first.\\n    let prereq = prerequisites(ns, aug);\\n    while (prereq.length > 0) {\\n        const pre = choose_augment(ns, prereq);\\n        await purchase_aug(ns, pre, fac, raise_money);\\n        prereq = prereq.filter((a) => a !== pre);\\n    }\\n    // Having purchased all pre-requisites of an Augmentation, now purchase\\n    // the Augmentation.\\n    let success = false;\\n    const cost = Math.ceil(ns.singularity.getAugmentationPrice(aug));\\n    while (!success) {\\n        assert(!has_augment(ns, aug));\\n        if (ns.getServerMoneyAvailable(home) < cost) {\\n            if (raise_money) {\\n                if (ns.getHackingLevel() < work_hack_lvl) {\\n                    log(ns, `Raising Hack stat to target: ${work_hack_lvl}`);\\n                    await commit_crime(ns, cost);\\n                } else {\\n                    log(\\n                        ns,\\n                        `Raising money to target: ${ns.nFormat(\\n                            cost,\\n                            \\\"$0,0.00a\\\"\\n                        )}`\\n                    );\\n                    await work(ns, cost);\\n                }\\n            }\\n        }\\n        await ns.sleep(wait_t.SECOND);\\n        success = ns.singularity.purchaseAugmentation(fac, aug);\\n    }\\n    assert(has_augment(ns, aug));\\n    log(ns, `Purchased ${aug} from ${fac}`);\\n}\\n\",\"filename\":\"/lib/singularity/augment.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":50.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725383,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to crime.\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Commit various crimes to raise our income to a given threshold.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Continue to commit crime as long as our income is below\\n *     this threshold.\\n */\\nexport async function commit_crime(ns, threshold) {\\n    assert(threshold > 0);\\n    const script = \\\"/singularity/crime.js\\\";\\n    const nthread = 1;\\n    ns.exec(script, home, nthread, threshold);\\n    let money = ns.getServerMoneyAvailable(home);\\n    while (money < threshold || ns.singularity.isBusy()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        money = ns.getServerMoneyAvailable(home);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Choose a crime that has the highest chance of success.\\n *\\n * @param ns The Netscript API.\\n * @param crime An array of crime names.\\n * @return An array of strings, where each element is the name of a crime.\\n *     If the array has multiple elements, then all crimes in the array have\\n *     the same chance of success.\\n */\\nexport function greatest_chance(ns, crime) {\\n    assert(crime.length > 0);\\n    let max = 0;\\n    const chance = new Map();\\n    const million = 1e6;\\n    for (const c of crime) {\\n        // We want to avoid floating point numbers when we compare the chance\\n        // of success of various crimes.  Convert the probability of success to\\n        // an integer.\\n        const prob = ns.singularity.getCrimeChance(c);\\n        const n = Math.round(prob * million);\\n        if (max < n) {\\n            max = n;\\n        }\\n        if (chance.has(n)) {\\n            const crime_name = chance.get(n);\\n            crime_name.push(c);\\n            chance.set(n, crime_name);\\n            continue;\\n        }\\n        const crime_name = [c];\\n        chance.set(n, crime_name);\\n    }\\n    return chance.get(max);\\n}\\n\\n/**\\n * Accumulate negative karma.  Stop when our negative karma is at or lower than\\n * a given threshold.\\n *\\n * @param ns The Netscript API.\\n * @param threshold We want our negative karma to be at or lower than this\\n *     threshold.  Must be a negative integer.\\n * @param crime The crime we must carry out to lower our karma.\\n *     Either \\\"shoplift\\\" or \\\"homicide\\\".\\n * @param nkill If crime := \\\"homicide\\\", then we must also provide the target\\n *     number of people to kill.  Pass in 0 if the crime is not homicide.  Pass\\n *     in Infinity if we care only about lowering our karma and not about the\\n *     number of people killed.  Must be a non-negative integer.\\n */\\nexport async function lower_karma(ns, threshold, crime, nkill) {\\n    // Sanity checks.\\n    assert(threshold < 0);\\n    assert(crimes.SHOP === crime || crimes.KILL === crime);\\n    assert(nkill >= 0);\\n    // Relocate to raise Intelligence XP.\\n    ns.singularity.goToLocation(cities.generic.slum);\\n    // Shoplift.  Use the ceiling function to convert the karma value to an\\n    // integer.  It is safer to compare integers than it is to compare floating\\n    // point numbers.\\n    const player = new Player(ns);\\n    if (crimes.SHOP === crime) {\\n        ns.singularity.commitCrime(crime, bool.FOCUS);\\n        while (Math.ceil(player.karma()) > threshold) {\\n            await ns.sleep(wait_t.SECOND);\\n        }\\n        ns.singularity.stopAction();\\n        assert(Math.ceil(player.karma()) < 0);\\n        assert(Math.ceil(player.karma()) <= threshold);\\n        return;\\n    }\\n    // Homicide.\\n    assert(crimes.KILL === crime);\\n    ns.singularity.commitCrime(crime, bool.FOCUS);\\n    while (Math.ceil(player.karma()) > threshold || player.nkill() < nkill) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    assert(Math.ceil(player.karma()) < 0);\\n    assert(Math.ceil(player.karma()) <= threshold);\\n    assert(player.nkill() >= nkill);\\n}\\n\",\"filename\":\"/lib/singularity/crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":22.4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725384,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getCrimeChance\",\"cost\":5},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to factions.\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { factions, faction_req, faction_t } from \\\"/lib/constant/faction.js\\\";\\nimport { home, server } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { augment_to_buy } from \\\"/lib/singularity/augment.js\\\";\\nimport { visit_city } from \\\"/lib/singularity/network.js\\\";\\nimport { study } from \\\"/lib/singularity/study.js\\\";\\nimport {\\n    assert,\\n    hram_resume,\\n    hram_suspend,\\n    is_valid_faction,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Wait for an invitation from the target faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want an invitation from this faction.\\n */\\nasync function await_invitation(ns, fac) {\\n    assert(is_valid_faction(fac));\\n    let invite = new Set(ns.singularity.checkFactionInvitations());\\n    while (!invite.has(fac)) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        invite = new Set(ns.singularity.checkFactionInvitations());\\n    }\\n}\\n\\n/**\\n * Whether a given faction is a megacorporation faction.\\n *\\n * @param fac The name of a faction.\\n * @return true if the given faction is a megacorporation faction;\\n *     false otherwise.\\n */\\nfunction is_megacorp_faction(fac) {\\n    return factions.megacorp.includes(fac);\\n}\\n\\n/**\\n * Join as many factions as we can.  We typically do this to raise our\\n * Intelligence stat.  Call this function prior to installing one or more\\n * Augmentations, or before hacking the w0r1d_d43m0n server.\\n */\\nexport function join_all_factions(ns) {\\n    const invite = new Set(ns.singularity.checkFactionInvitations());\\n    factions.all\\n        .filter((f) => invite.has(f))\\n        .forEach((g) => ns.singularity.joinFaction(g));\\n}\\n\\n/**\\n * Join a faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to join this faction.\\n */\\nexport async function join_faction(ns, fac) {\\n    assert(is_valid_faction(fac));\\n    log(ns, `Join faction: ${fac}`);\\n    // Since version 2.0 of the game, we must be working for a megacorporation\\n    // while waiting for an invitation from the corresponding faction.  We can\\n    // quit working once we have joined the faction.\\n    let company = fac;\\n    if (is_megacorp_faction(fac)) {\\n        if (fac === \\\"Fulcrum Secret Technologies\\\") {\\n            company = \\\"Fulcrum Technologies\\\";\\n        }\\n        ns.singularity.applyToCompany(company, job_area.SOFTWARE);\\n        ns.singularity.workForCompany(company, bool.FOCUS);\\n    }\\n    // Join the faction.\\n    const player = new Player(ns);\\n    const joined_faction = new Set(player.faction());\\n    if (!joined_faction.has(fac)) {\\n        await await_invitation(ns, fac);\\n        ns.singularity.joinFaction(fac);\\n    }\\n    // We are a member of the target faction.  Quit working for the\\n    // corresponding megacorporation.\\n    if (is_megacorp_faction(fac)) {\\n        ns.singularity.stopAction();\\n        ns.singularity.quitJob(company);\\n    }\\n}\\n\\n/**\\n * Raise each of our combat stats to a given level.  An easy way to raise our\\n * combat stats is to go to the slum of any city and either mug someone or\\n * commit homicide.  Mugging yields more XP for all our combat stats than\\n * homicide.  However, there are two reasons why we should choose homicide.\\n * First, it yields more negative karma than mugging.  We need lots of negative\\n * karma in order to create a gang.  Second, homicide yields more money than\\n * mugging.  Commit homicide until we meet the requirements for receiving an\\n * invitation from Slum Snakes.  Join Slum Snakes and perform Field Work for\\n * the faction to rapidly raise all our combat stats.  Another option is to\\n * join Tetrads and carry out Field Work for this other faction.  Choose Slum\\n * Snakes or Tetrads, depending on whether we have a gang within the other\\n * faction.  For example, if we have a gang within Slum Snakes, we are not\\n * allowed to perform Field Work for Slum Snakes.  In that case, join Tetrads.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Each of our combat stats should be raised to at least this\\n *     value.  Must be a positive integer.\\n */\\nexport async function raise_combat_stats(ns, threshold) {\\n    // Sanity checks.\\n    const tau = Math.ceil(threshold);\\n    assert(tau > 0);\\n    const player = new Player(ns);\\n    if (\\n        player.strength() >= tau\\n        && player.defense() >= tau\\n        && player.dexterity() >= tau\\n        && player.agility() >= tau\\n    ) {\\n        return;\\n    }\\n    // Commit homicide to raise all our combat stats.\\n    let target = \\\"Slum Snakes\\\";\\n    let city = \\\"Sector-12\\\";\\n    if (ns.gang.inGang()) {\\n        if (ns.gang.getGangInformation().faction === target) {\\n            target = \\\"Tetrads\\\";\\n            city = faction_req[target].city;\\n        }\\n    }\\n    await visit_city(ns, city);\\n    ns.singularity.commitCrime(crimes.KILL, bool.FOCUS);\\n    // Wait to receive an invitation from Slum Snakes (or Tetrads) and perform\\n    // Field Work for the faction.  Among the criminal organizations, Slum\\n    // Snakes has the lowest requirements.  Tetrads has slightly higher\\n    // requirements.\\n    const joined_faction = player.faction();\\n    if (!joined_faction.includes(target)) {\\n        await await_invitation(ns, target);\\n        ns.singularity.joinFaction(target);\\n    }\\n    ns.singularity.workForFaction(target, job_area.FIELD, bool.FOCUS);\\n    while (\\n        player.strength() < tau\\n        || player.defense() < tau\\n        || player.dexterity() < tau\\n        || player.agility() < tau\\n    ) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Raise our Hack stat.  Stop when our Hack stat is at least a given level.\\n *\\n * @param ns The Netscript API.\\n * @param threshold We want our Hack stat to be at least this level.  Must be a\\n *     positive integer.\\n */\\nexport async function raise_hack(ns, threshold) {\\n    assert(threshold > 0);\\n    const player = new Player(ns);\\n    if (player.hacking_skill() >= threshold) {\\n        return;\\n    }\\n    // Join a faction.  Choose from one of the early factions we should have\\n    // already joined.  See whether we can join one of them and perform\\n    // Hacking Contracts.\\n    const invite = new Set(ns.singularity.checkFactionInvitations());\\n    let target = \\\"\\\";\\n    for (const f of factions.early) {\\n        if (invite.has(f) || player.is_member(f)) {\\n            target = f;\\n            ns.singularity.joinFaction(f);\\n            break;\\n        }\\n    }\\n    // Carry out Hacking Contracts for the faction.\\n    if (target !== \\\"\\\") {\\n        ns.singularity.workForFaction(target, job_area.HACK, bool.FOCUS);\\n        while (player.hacking_skill() < threshold) {\\n            await ns.sleep(wait_t.DEFAULT);\\n        }\\n        ns.singularity.stopAction();\\n        return;\\n    }\\n    // Cannot join one of the early factions.  Default to studying at\\n    // university.\\n    const current_city = player.city();\\n    const new_city = \\\"Sector-12\\\";\\n    await visit_city(ns, new_city);\\n    await study(ns, threshold);\\n    await visit_city(ns, current_city);\\n}\\n\\n/**\\n * Start sharing our home server with a faction.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function start_share_home(ns) {\\n    // Tell the script hram.js to suspend whatever it is doing.  This should\\n    // free up some RAM on the home server.\\n    await hram_suspend(ns);\\n    // Share our home server with a faction.\\n    const serv = new Server(ns, home);\\n    const ncopy = 1;\\n    let nthread = serv.threads_per_instance(server.SHARE_SCRIPT, ncopy);\\n    if (nthread < 1) {\\n        nthread = 1;\\n    }\\n    ns.exec(server.SHARE_SCRIPT, home, nthread);\\n}\\n\\n/**\\n * Stop sharing our home server with a faction.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction stop_share_home(ns) {\\n    if (ns.isRunning(server.SHARE_SCRIPT, home)) {\\n        assert(ns.kill(server.SHARE_SCRIPT, home));\\n    }\\n    hram_resume(ns);\\n}\\n\\n/**\\n * The total amount of reputation points we need to earn in order to purchase\\n * some Augmentations from a faction.  This is not necessarily the highest\\n * reputation requirement of any Augmentation.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to earn reputation points from this faction.\\n * @return The maximum amount of reputation points we must earn from a faction.\\n *     Return 0 if we do not need to earn any reputation points.\\n */\\nfunction total_reputation(ns, fac) {\\n    const augment = augment_to_buy(ns, fac);\\n    if (augment.length === 0) {\\n        return 0;\\n    }\\n    // The total reputation points we need to earn.\\n    let max = -Infinity;\\n    for (const aug of augment) {\\n        const rep = ns.singularity.getAugmentationRepReq(aug);\\n        if (max < rep) {\\n            max = rep;\\n        }\\n    }\\n    return max;\\n}\\n\\n/**\\n * Work for a faction.  Stop working when we have accumulated enough reputation\\n * points to purchase all Augmentations from the faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to work for this faction.\\n * @param work_type The type of work to carry out for the given faction.\\n *     Either \\\"Hacking Contracts\\\" or \\\"Field Work\\\".\\n */\\nexport async function work_for_faction(ns, fac, work_type) {\\n    assert(is_valid_faction(fac));\\n    log(ns, `Work for faction: ${fac}`);\\n    assert(job_area.HACK === work_type || job_area.FIELD === work_type);\\n    // Share our home server with the faction.  Doing so would boost the amount\\n    // of reputation points we earn.\\n    await start_share_home(ns);\\n    log(ns, `Share home server with faction: ${fac}`);\\n    // Start working for the faction.\\n    const threshold = total_reputation(ns, fac);\\n    if (threshold === 0) {\\n        return;\\n    }\\n    ns.singularity.workForFaction(fac, work_type, bool.FOCUS);\\n    while (ns.singularity.getFactionRep(fac) < threshold) {\\n        // Donate some money to the faction in exchange for reputation points.\\n        const amount = Math.floor(\\n            faction_t.DONATE_MULT * ns.getServerMoneyAvailable(home)\\n        );\\n        ns.singularity.donateToFaction(fac, amount);\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    ns.singularity.stopAction();\\n    // We no longer need to share our home server with the faction.\\n    stop_share_home(ns);\\n    log(ns, `Stop sharing home server with faction: ${fac}`);\\n}\\n\",\"filename\":\"/lib/singularity/faction.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":66.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725385,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to network.\\n\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { shortest_path } from \\\"/lib/network.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Connect to a given server.  The target server can be multiple hops away.\\n *\\n * @param ns The Netscript API.\\n * @param source The source node.  We are currently on this server.\\n * @param target We want to connect to this server.  Not necessarily a\\n *     neighbour node.\\n */\\nexport function connect_to(ns, source, target) {\\n    const path = shortest_path(ns, source, target);\\n    assert(path.length > 0);\\n    assert(source === path[0]);\\n    path.shift();\\n    while (path.length > 0) {\\n        const node = path.shift();\\n        assert(ns.singularity.connect(node));\\n    }\\n}\\n\\n/**\\n * Install a backdoor on a world server.\\n *\\n * @param ns The Netscript API.\\n * @param hostname We want to install a backdoor on the server having this\\n *     hostname.  Assume that we have root access to the target server.\\n */\\nexport async function install_backdoor(ns, hostname) {\\n    // Sanity checks.\\n    const player = new Player(ns);\\n    const server = new Server(ns, hostname);\\n    assert(player.hacking_skill() >= server.hacking_skill());\\n    assert(server.has_root_access());\\n    // Install a backdoor on the target server.\\n    connect_to(ns, player.home(), server.hostname());\\n    await ns.singularity.installBackdoor();\\n    connect_to(ns, server.hostname(), player.home());\\n}\\n\\n/**\\n * Travel to a city.\\n *\\n * @param ns The Netscript API.\\n * @param city We want to travel to this city.\\n */\\nexport async function visit_city(ns, city) {\\n    const player = new Player(ns);\\n    if (player.city() === city) {\\n        return;\\n    }\\n    ns.singularity.goToLocation(cities.generic.TA); // Raise Int XP.\\n    let success = ns.singularity.travelToCity(city);\\n    while (!success) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        success = ns.singularity.travelToCity(city);\\n    }\\n}\\n\",\"filename\":\"/lib/singularity/network.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":21.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725386,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { program as popen } from \\\"/lib/constant/exe.js\\\";\\nimport { tor_cost, work_hack_lvl } from \\\"/lib/constant/misc.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { raise_hack } from \\\"/lib/singularity/study.js\\\";\\nimport { choose_hardware_company } from \\\"/lib/singularity/util.js\\\";\\nimport { work } from \\\"/lib/singularity/work.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n// Utility functions related to programs.\\n\\n/**\\n * Purchase all programs from the dark web.\\n *\\n * @param ns The Netscript API.\\n * @param visit A boolean signifying whether to visit a hardware store.\\n *     Although not required, we typically visit a hardware store to increase\\n *     our Intelligence XP.\\n * @param wrk A boolean signifying whether to work to increase our funds or\\n *     required stats.  We require money to puchase programs.  In most cases, we\\n *     require certain stats to be offered a job.\\n */\\nexport async function buy_all_programs(ns, visit, wrk) {\\n    // Purchase the Tor router from a hardware store.\\n    const shop = await choose_hardware_company(ns, visit);\\n    if (visit) {\\n        ns.singularity.goToLocation(shop);\\n    }\\n    await buy_tor_router(ns, wrk);\\n    // Work out which programs we still need to purchase via the dark web.\\n    let program = ns.singularity.getDarkwebPrograms();\\n    assert(program.length > 0);\\n    const player = new Player(ns);\\n    program = program.filter((p) => !player.has_program(p));\\n    if (program.length === 0) {\\n        return;\\n    }\\n    // Purchase all remaining programs.\\n    await buy_programs(ns, popen, wrk);\\n}\\n\\n/**\\n * Purchase all programs from a given list.\\n *\\n * @param ns The Netscript API.\\n * @param program We want to buy all programs from this list.\\n * @param wrk A boolean signifying whether to work to increase our funds or\\n *     required stats.  We require money to puchase programs.  In most cases, we\\n *     require certain stats to be offered a job.\\n */\\nasync function buy_programs(ns, program, wrk) {\\n    assert(program.length > 0);\\n    // First, determine which programs we do not have.\\n    const player = new Player(ns);\\n    let prog = Array.from(program);\\n    prog = prog.filter((p) => !player.has_program(p));\\n    if (prog.length === 0) {\\n        return;\\n    }\\n    // Purchase the remaining programs.\\n    log(ns, `Buying port openers: ${prog.join(\\\", \\\")}`);\\n    while (prog.length > 0) {\\n        const [p, cost] = cheapest(ns, prog);\\n        if (player.has_program(p)) {\\n            prog = prog.filter((e) => e !== p);\\n            continue;\\n        }\\n        while (player.money() < cost) {\\n            if (player.hacking_skill() < work_hack_lvl) {\\n                if (wrk) {\\n                    await raise_hack(ns, target_hack_lvl(ns));\\n                }\\n                await ns.sleep(wait_t.SECOND);\\n                continue;\\n            }\\n            if (wrk) {\\n                await work(ns, cost);\\n            }\\n            await ns.sleep(wait_t.SECOND);\\n        }\\n        assert(ns.singularity.purchaseProgram(p));\\n        log(ns, `Purchased program ${p}`);\\n        prog = prog.filter((e) => e !== p);\\n    }\\n}\\n\\n/**\\n * Purchase the Tor router so we can access the dark web.\\n *\\n * @param ns The Netscript API.\\n * @param wrk A boolean signifying whether to work to increase our funds or\\n *     required stats.  We require money to puchase the Tor router.  In most\\n *     cases, we require certain stats to be offered a job.\\n */\\nasync function buy_tor_router(ns, wrk) {\\n    log(ns, \\\"Purchase Tor router\\\");\\n    const player = new Player(ns);\\n    while (!ns.singularity.purchaseTor()) {\\n        if (player.hacking_skill() < work_hack_lvl) {\\n            if (wrk) {\\n                await raise_hack(ns, target_hack_lvl(ns));\\n            }\\n            await ns.sleep(wait_t.SECOND);\\n            continue;\\n        }\\n        if (wrk) {\\n            await work(ns, tor_cost);\\n        }\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n}\\n\\n/**\\n * Choose the least expensive program that can be purchased via the dark web.\\n *\\n * @param ns The Netscript API.\\n * @param program An array of program names.  We want to determine the cheapest\\n *     program from among this list.\\n * @return An array [prog, cost] as follows.\\n *     (1) prog := The name of cheapest program from among the given list of\\n *         program names.\\n *     (2) cost := The cost of the cheapest program.\\n */\\nfunction cheapest(ns, program) {\\n    assert(program.length > 0);\\n    let mincost = Infinity;\\n    let prog = \\\"\\\";\\n    for (const p of program) {\\n        const cost = ns.singularity.getDarkwebProgramCost(p);\\n        if (mincost > cost) {\\n            mincost = cost;\\n            prog = p;\\n        }\\n    }\\n    assert(mincost > 0);\\n    assert(prog.length > 0);\\n    assert(program.includes(prog));\\n    return [prog, mincost];\\n}\\n\\n/**\\n * Raise our Hack stat to at least a given number.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction target_hack_lvl(ns) {\\n    const player = new Player(ns);\\n    return player.hacking_skill() + 5;\\n}\\n\",\"filename\":\"/lib/singularity/program.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":28.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725387,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getDarkwebPrograms\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"purchaseProgram\",\"cost\":2},{\"type\":\"fn\",\"name\":\"purchaseTor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getDarkwebProgramCost\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to study at a university.\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { course } from \\\"/lib/constant/study.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Determine the university at which we should study.\\n *\\n * @param ns The Netscript API.\\n * @return A string representing the name of the university where we should\\n *     study.  An empty string if the player is located in a city that does not\\n *     have a university.\\n */\\nfunction choose_university(ns) {\\n    const { city } = ns.getPlayer();\\n    const { uni } = cities[city];\\n    if (undefined === uni) {\\n        return \\\"\\\";\\n    }\\n    return uni;\\n}\\n\\n/**\\n * Increase our Hack stat.  Continue doing so until our Hack stat is at least\\n * a given threshold.\\n *\\n * @param ns The Netscript API.\\n * @param threshold We want to increase our Hack stat to be at least this\\n *     threshold.\\n */\\nexport async function raise_hack(ns, threshold) {\\n    assert(threshold > 0);\\n    while (ns.getHackingLevel() < threshold) {\\n        await study(ns, threshold);\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n}\\n\\n/**\\n * Increase our Hack stat.  We stop when either of the following conditions are\\n * satisfied.\\n *\\n * (1) Our Hack stat is at least the given threshold.\\n * (2) We receive an invitation from the given faction.\\n *\\n * @param ns The Netscript API.\\n * @param threshold We want to increase our Hack stat to at least this\\n *     threshold.  The function can exit even if our Hack stat is below the\\n *     given threshold.\\n * @param fac The name of a faction.  We want to receive an invitation from this\\n *     faction.  The function can exit even if we do not receive an invitation\\n *     from the given faction.\\n */\\nexport async function raise_hack_until(ns, threshold, fac) {\\n    const tau = Math.floor(threshold);\\n    assert(tau > 0);\\n    assert(fac !== \\\"\\\");\\n    // By default, we study the free computer science course at a university.\\n    const uni = choose_university(ns);\\n    assert(uni !== \\\"\\\");\\n    ns.singularity.goToLocation(uni); // Raise Intelligence XP.\\n    assert(ns.singularity.universityCourse(uni, course.CS, bool.FOCUS));\\n    while (ns.getHackingLevel() < tau) {\\n        if (ns.getPlayer().factions.includes(fac)) {\\n            break;\\n        }\\n        const invitation = ns.singularity.checkFactionInvitations();\\n        if (invitation.includes(fac)) {\\n            break;\\n        }\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    assert(ns.singularity.stopAction());\\n}\\n\\n/**\\n * Study at a university to raise our Hack stat.  Use this function under the\\n * following situations:\\n *\\n * (1) Immediately after installing one or more Augmentations.\\n * (2) When we start all over on a different BitNode.\\n * (3) If there is a special need to increase our Hack stat.\\n *\\n * Note that some cities have universities, while others do not.  If we really\\n * want to study at a university, ensure we are located in a city that has a\\n * university.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Study until we have reached at least this amount of\\n *     Hack stat.\\n */\\nexport async function study(ns, threshold) {\\n    assert(threshold > 0);\\n    const uni = choose_university(ns);\\n    const empty_str = \\\"\\\";\\n    if (empty_str === uni) {\\n        return;\\n    }\\n    // Go to a different location to gain some Intelligence XP.\\n    assert(empty_str !== uni);\\n    ns.singularity.goToLocation(uni);\\n    // Study the free computer science course at a university.\\n    assert(ns.singularity.universityCourse(uni, course.CS, bool.FOCUS));\\n    // Stop our study when our Hack stat is at least the given threshold.\\n    while (ns.getHackingLevel() < threshold) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    assert(ns.singularity.stopAction());\\n}\\n\",\"filename\":\"/lib/singularity/study.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":13.15,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725388,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to the Singularity API.\\n\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\n\\n/**\\n * Determine the hardware company we should visit.  The company can sell us\\n * more RAM for our home server.\\n *\\n * @param ns The Netscript API.\\n * @param visit A boolean signifying whether to visit the travel agency.\\n *     Although not required, we typically visit a travel agency to raise our\\n *     Intelligence XP.\\n * @return A string representing the name of a hardware store.\\n */\\nexport async function choose_hardware_company(ns, visit) {\\n    let { city } = ns.getPlayer();\\n    // There are no hardware stores in Chongqing and New Tokyo.  If we are\\n    // currently in either of these cities, travel to Sector-12 to increase our\\n    // Intelligence XP.\\n    if (city === \\\"Chongqing\\\" || city === \\\"New Tokyo\\\") {\\n        city = \\\"Sector-12\\\";\\n        if (visit) {\\n            ns.singularity.goToLocation(cities.generic.TA);\\n        }\\n        let success = ns.singularity.travelToCity(city);\\n        while (!success) {\\n            await ns.sleep(wait_t.SECOND);\\n            success = ns.singularity.travelToCity(city);\\n        }\\n    }\\n    return cities[city].shop;\\n}\\n\",\"filename\":\"/lib/singularity/util.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":9.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725389,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to work.\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { work_hack_lvl } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { job_area, job_title } from \\\"/lib/constant/work.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { study } from \\\"/lib/singularity/study.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Choose a company at which to work.\\n *\\n * @param ns The Netscript API.\\n * @return A string representing the name of a company.\\n */\\nfunction choose_company(ns) {\\n    let company = \\\"\\\";\\n    switch (ns.getPlayer().city) {\\n        case \\\"Aevum\\\":\\n            company = \\\"ECorp\\\";\\n            break;\\n        case \\\"Chongqing\\\":\\n            company = \\\"KuaiGong International\\\";\\n            break;\\n        case \\\"Ishima\\\":\\n            company = \\\"Nova Medical\\\";\\n            break;\\n        case \\\"New Tokyo\\\":\\n            company = \\\"Global Pharmaceuticals\\\";\\n            break;\\n        case \\\"Sector-12\\\":\\n            company = \\\"MegaCorp\\\";\\n            break;\\n        case \\\"Volhaven\\\":\\n            company = \\\"NWO\\\";\\n            break;\\n        default:\\n            company = \\\"\\\";\\n            break;\\n    }\\n    assert(company !== \\\"\\\");\\n    return company;\\n}\\n\\n/**\\n * Choose the field of work.  Either \\\"Business\\\" or \\\"Software\\\".\\n *\\n * @param ns The Netscript API.\\n * @return The field of work.  Either \\\"Business\\\" or \\\"Software\\\".\\n */\\nexport function choose_field(ns) {\\n    const charisma_lvl = work_hack_lvl;\\n    if (ns.getPlayer().skills.charisma < charisma_lvl) {\\n        return job_area.SOFTWARE;\\n    }\\n    return job_area.BUSINESS;\\n}\\n\\n/**\\n * Work for a company to raise our Charisma to a given amount.\\n *\\n * @param ns The Netscript API.\\n * @param hack_lvl The minimum amount of Hack we must have.\\n * @param threshold Continue working until our Charisma is at this level or\\n *     higher.  Assume to be a positive integer.\\n */\\nexport async function raise_charisma(ns, hack_lvl, threshold) {\\n    // Sanity checks.\\n    const player = new Player(ns);\\n    if (player.charisma() >= threshold) {\\n        return;\\n    }\\n    assert(threshold > 0);\\n    // Ensure we have the minimum Hack stat.\\n    if (player.hacking_skill() < hack_lvl) {\\n        await study(ns, hack_lvl);\\n    }\\n    assert(player.hacking_skill() >= hack_lvl);\\n    // Work for a company as a software engineer until we have accumulated the\\n    // given amount of Charisma level.\\n    const company = choose_company(ns);\\n    ns.singularity.goToLocation(company); // Raise Intelligence XP.\\n    ns.singularity.applyToCompany(company, job_area.SOFTWARE);\\n    ns.singularity.workForCompany(company, bool.FOCUS);\\n    while (player.charisma() < threshold) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        const success = ns.singularity.applyToCompany(\\n            company,\\n            job_area.SOFTWARE\\n        );\\n        // We have a promotion.  Work in the new job.\\n        if (success) {\\n            ns.singularity.workForCompany(company, bool.FOCUS);\\n        }\\n    }\\n    ns.singularity.stopAction();\\n    ns.singularity.quitJob(company);\\n}\\n\\n/**\\n * Work at a company and rise to the position of Chief Financial Officer.  We\\n * do not quit the company after the function ends.\\n *\\n * @param ns The Netscript API.\\n * @param company We want to work for this company.\\n */\\nexport async function rise_to_cfo(ns, company) {\\n    // Ensure we have the minimum Hack and Charisma stats.\\n    const player = new Player(ns);\\n    const charisma_lvl = work_hack_lvl;\\n    assert(player.hacking_skill() >= work_hack_lvl);\\n    assert(player.charisma() >= charisma_lvl);\\n    // Work for the company in a business position.  Once in a while, apply for\\n    // a promotion until we reach the position of Chief Financial Officer.\\n    ns.singularity.goToLocation(company); // Raise Intelligence XP.\\n    ns.singularity.applyToCompany(company, job_area.BUSINESS);\\n    ns.singularity.workForCompany(company, bool.FOCUS);\\n    for (;;) {\\n        if (\\n            player.job(company) === job_title.CFO\\n            || player.job(company) === job_title.CEO\\n        ) {\\n            break;\\n        }\\n        await ns.sleep(wait_t.DEFAULT);\\n        const success = ns.singularity.applyToCompany(\\n            company,\\n            job_area.BUSINESS\\n        );\\n        // We have a promotion.  Work in the new job.\\n        if (success) {\\n            ns.singularity.workForCompany(company, bool.FOCUS);\\n        }\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Work to boost our income.  Stop working when we have accumulated a given\\n * amount of money.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Continue working as long as our money is less than this\\n *     threshold.\\n */\\nexport async function work(ns, threshold) {\\n    assert(threshold > 0);\\n    if (ns.getServerMoneyAvailable(home) >= threshold) {\\n        return;\\n    }\\n    // Ensure we have the minimum Hack stat.\\n    if (ns.getHackingLevel() < work_hack_lvl) {\\n        await study(ns, work_hack_lvl);\\n    }\\n    assert(ns.getHackingLevel() >= work_hack_lvl);\\n    // Work for a company until our money is at least the given threshold.\\n    // Every once in a while, apply for a promotion to earn more money per\\n    // second.  By default, we work a business job.  However, if our Charisma\\n    // level is low, work a software job instead to raise our Charisma.\\n    const company = choose_company(ns);\\n    ns.singularity.goToLocation(company); // Increase Intelligence XP.\\n    let field = choose_field(ns);\\n    ns.singularity.applyToCompany(company, field);\\n    ns.singularity.workForCompany(company, bool.FOCUS);\\n    ns.singularity.setFocus(bool.FOCUS);\\n    log(ns, `Work for ${company} in ${field}`);\\n    while (ns.getServerMoneyAvailable(home) < threshold) {\\n        await ns.sleep(10 * wait_t.SECOND);\\n        field = choose_field(ns);\\n        const success = ns.singularity.applyToCompany(company, field);\\n        ns.singularity.workForCompany(company, bool.FOCUS);\\n        ns.singularity.setFocus(bool.FOCUS);\\n        // We have a promotion.  Start working in the new job.\\n        if (success) {\\n            log(ns, `Work for ${company} in ${field}`);\\n        }\\n    }\\n    ns.singularity.stopAction();\\n    ns.singularity.quitJob(company);\\n}\\n\\n/**\\n * Work for a company.  Stop working when we have accumulated a given amount\\n * of reputation points.\\n *\\n * @param ns The Netscript API.\\n * @param company We want to work for this company.\\n * @param rep Work for the company until we have at least this amount of\\n *     reputation points.\\n */\\nexport async function work_for_company(ns, company, rep) {\\n    assert(rep > 0);\\n    ns.singularity.goToLocation(company); // Raise Intelligence XP.\\n    // Ensure we have the minimum Hack stat.\\n    if (ns.getHackingLevel() < work_hack_lvl) {\\n        await study(ns, work_hack_lvl);\\n    }\\n    assert(ns.getHackingLevel() >= work_hack_lvl);\\n    // Work for the company until we have accumulated the given amount of\\n    // reputation points.  Occasionally apply for a promotion to earn even\\n    // more reputation points per second.\\n    let field = choose_field(ns);\\n    ns.singularity.applyToCompany(company, field);\\n    ns.singularity.workForCompany(company, bool.FOCUS);\\n    log(ns, `Work for ${company} in ${field}`);\\n    while (ns.singularity.getCompanyRep(company) < rep) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        field = choose_field(ns);\\n        const success = ns.singularity.applyToCompany(company, field);\\n        // We have a promotion.  Work in the new job.\\n        if (success) {\\n            ns.singularity.workForCompany(company, bool.FOCUS);\\n            log(ns, `Work for ${company} in ${field}`);\\n        }\\n    }\\n    ns.singularity.stopAction();\\n    ns.singularity.quitJob(company);\\n}\\n\",\"filename\":\"/lib/singularity/work.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":22.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725390,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getCompanyRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { cc_t } from \\\"/lib/constant/sleeve.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A class to manage various aspects of sleeves.\\n */\\nexport class Sleeve {\\n    /**\\n     * The Netscript API.\\n     */\\n    #ns;\\n\\n    /**\\n     * Construct a sleeve object.\\n     *\\n     * @param ns The Netscript API.\\n     */\\n    constructor(ns) {\\n        this.#ns = ns;\\n    }\\n\\n    /**\\n     * The Agility stat of a sleeve.\\n     *\\n     * @param idx The index of a sleeve.\\n     * @return The Agility stat of the sleeve having the given index.\\n     */\\n    agility(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return this.#ns.sleeve.getSleeveStats(idx).agility;\\n    }\\n\\n    /**\\n     * Indices of all sleeves.\\n     *\\n     * @return An array of all sleeve indices.\\n     */\\n    all() {\\n        return MyArray.sequence(this.#ns.sleeve.getNumSleeves());\\n    }\\n\\n    /**\\n     * Purchase an Augmentation for a sleeve.\\n     *\\n     * @param idx The index of a sleeve.\\n     * @param aug Purchase this Augmentation for the sleeve.\\n     * @return True if the given Augmentation was successfully purchased and\\n     *     installed on the sleeve; false otherwise.\\n     */\\n    buy_augment(idx, aug) {\\n        assert(this.#is_valid_index([idx]));\\n        if (this.is_in_shock(idx)) {\\n            return bool.NOT_PURCHASED;\\n        }\\n        return this.#ns.sleeve.purchaseSleeveAug(idx, aug);\\n    }\\n\\n    /**\\n     * The cheapest available Augmentation that a sleeve can purchase.\\n     *\\n     * @param idx The index of a sleeve.\\n     * @return An array [name, cost] as follows.  An empty array if no\\n     *     Augmentations are available for purchase.\\n     *     (1) name := A string representing the name of the cheapest\\n     *         Augmentation that the given sleeve can purchase at the moment.\\n     *     (2) cost := The cost of the cheapest Augmentation.\\n     */\\n    cheapest_augment(idx) {\\n        // Sanity checks.\\n        assert(this.#is_valid_index([idx]));\\n        const aug = this.#ns.sleeve.getSleevePurchasableAugs(idx);\\n        if (aug.length === 0) {\\n            return [];\\n        }\\n        // Find the cheapest Augmentation.\\n        let name = \\\"\\\";\\n        let cost = Infinity;\\n        aug.forEach((a) => {\\n            if (a.cost < cost) {\\n                cost = a.cost;\\n                name = a.name;\\n            }\\n        });\\n        assert(name !== \\\"\\\");\\n        assert(cost < Infinity);\\n        return [name, cost];\\n    }\\n\\n    /**\\n     * The Defense stat of a sleeve.\\n     *\\n     * @param idx The index of a sleeve.\\n     * @return The Defense stat of the sleeve having the given index.\\n     */\\n    defense(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return this.#ns.sleeve.getSleeveStats(idx).defense;\\n    }\\n\\n    /**\\n     * The Dexterity stat of a sleeve.\\n     *\\n     * @param idx The index of a sleeve.\\n     * @return The Dexterity stat of the sleeve having the given index.\\n     */\\n    dexterity(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return this.#ns.sleeve.getSleeveStats(idx).dexterity;\\n    }\\n\\n    /**\\n     * Whether to graduate sleeves from training stats by mugging people.\\n     *\\n     * @param s An array of sleeve indices.  We want to graduate these sleeves.\\n     * @return True if each sleeve in the given array can graduate;\\n     *     false otherwise or the array is empty.\\n     */\\n    graduate_mug(s) {\\n        if (s.length === 0) {\\n            return bool.NOT;\\n        }\\n        assert(this.#is_valid_index(s));\\n        for (const i of s) {\\n            if (!this.has_mug_threshold(i)) {\\n                return bool.NOT;\\n            }\\n        }\\n        return bool.GRADUATE;\\n    }\\n\\n    /**\\n     * Whether to graduate sleeves from training stats by shoplift.\\n     *\\n     * @param s An array of sleeve indices.  We want to graduate these sleeves.\\n     * @return True if each sleeve in the given array can graduate;\\n     *     false otherwise or the array is empty.\\n     */\\n    graduate_shoplift(s) {\\n        if (s.length === 0) {\\n            return bool.NOT;\\n        }\\n        assert(this.#is_valid_index(s));\\n        for (const i of s) {\\n            if (!this.has_shoplift_threshold(i)) {\\n                return bool.NOT;\\n            }\\n        }\\n        return bool.GRADUATE;\\n    }\\n\\n    /**\\n     * Whether the combat stats of a sleeve are at least the threshold for\\n     * mugging people.\\n     *\\n     * @param idx A sleeve index.\\n     * @return True if the combat stats of a sleeve are each at least the\\n     *     threshold for mugging people; false otherwise.\\n     */\\n    has_mug_threshold(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return (\\n            this.agility(idx) >= cc_t.MUG\\n            && this.defense(idx) >= cc_t.MUG\\n            && this.dexterity(idx) >= cc_t.MUG\\n            && this.strength(idx) >= cc_t.MUG\\n        );\\n    }\\n\\n    /**\\n     * Whether the Dexterity and Agility stats of a sleeve are at least the\\n     * threshold for shoplift.\\n     *\\n     * @param idx A sleeve index.\\n     * @return True if the Dexterity and Agility stats of a sleeve are each\\n     *     at least the threshold for shoplift; false otherwise.\\n     */\\n    has_shoplift_threshold(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return (\\n            this.agility(idx) >= cc_t.SHOP && this.dexterity(idx) >= cc_t.SHOP\\n        );\\n    }\\n\\n    /**\\n     * Assign sleeves to commit homicide.\\n     *\\n     * @param s An array of sleeve indices.\\n     */\\n    homicide(s) {\\n        if (s.length === 0) {\\n            return;\\n        }\\n        assert(this.#is_valid_index(s));\\n        s.forEach((i) => this.#ns.sleeve.setToCommitCrime(i, crimes.KILL));\\n    }\\n\\n    /**\\n     * Whether a sleeve is in shock.  A sleeve is in shock if its shock value is\\n     * greater than 0.\\n     *\\n     * @param idx The index of a sleeve.  Must be a non-negative integer.\\n     * @return True if the sleeve with the given index has a shock value greater\\n     *     than 0; false otherwise.\\n     */\\n    is_in_shock(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return this.#ns.sleeve.getSleeveStats(idx).shock > cc_t.MIN_SHOCK;\\n    }\\n\\n    /**\\n     * Whether a sleeve is fully synchronized with the player's consciousness.\\n     *\\n     * @param idx The index of a sleeve.  Must be a non-negative integer.\\n     * @return True if the sleeve having the given index is fully synchronized\\n     *     with the player; false otherwise.\\n     */\\n    is_in_sync(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return this.#ns.sleeve.getSleeveStats(idx).sync >= cc_t.MAX_SYNC;\\n    }\\n\\n    /**\\n     * Whether an array contains valid sleeve indices.\\n     *\\n     * @param s An array of sleeve indices.\\n     * @return True if the array has all valid sleeve indices; false otherwise.\\n     */\\n    #is_valid_index(s) {\\n        const min = 0;\\n        const max = this.#ns.sleeve.getNumSleeves();\\n        assert(s.length > 0);\\n        for (const i of s) {\\n            if (i < min || i >= max) {\\n                return bool.INVALID;\\n            }\\n        }\\n        return bool.VALID;\\n    }\\n\\n    /**\\n     * Assign sleeves to mug people.\\n     *\\n     * @param s An array of sleeve indices.\\n     */\\n    mug(s) {\\n        if (s.length === 0) {\\n            return;\\n        }\\n        assert(this.#is_valid_index(s));\\n        s.forEach((i) => this.#ns.sleeve.setToCommitCrime(i, crimes.MUG));\\n    }\\n\\n    /**\\n     * Assign sleeves to shoplift.\\n     *\\n     * @param s An array of sleeve indices.\\n     */\\n    shoplift(s) {\\n        if (s.length === 0) {\\n            return;\\n        }\\n        assert(this.#is_valid_index(s));\\n        s.forEach((i) => this.#ns.sleeve.setToCommitCrime(i, crimes.SHOP));\\n    }\\n\\n    /**\\n     * The Strength stat of a sleeve.\\n     *\\n     * @param idx The index of a sleeve.\\n     * @return The Strength stat of the sleeve having the given index.\\n     */\\n    strength(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return this.#ns.sleeve.getSleeveStats(idx).strength;\\n    }\\n\\n    /**\\n     * Assign sleeves to shock recovery.  Only assign those sleeves whose shock\\n     * values are greater than 0.\\n     */\\n    shock_recovery() {\\n        this.all()\\n            .filter((i) => this.is_in_shock(i))\\n            .forEach((j) => this.#ns.sleeve.setToShockRecovery(j));\\n    }\\n\\n    /**\\n     * Assign sleeves to synchronize with the consciousness of the player.  Only\\n     * assign those sleeves whose consciousness is not yet fully synchronized.\\n     */\\n    synchronize() {\\n        this.all()\\n            .filter((i) => !this.is_in_sync(i))\\n            .forEach((j) => this.#ns.sleeve.setToSynchronize(j));\\n    }\\n}\\n\",\"filename\":\"/lib/sleeve/cc.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":29.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725391,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"sleeve.getSleeveStats\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getNumSleeves\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.purchaseSleeveAug\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getSleevePurchasableAugs\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.setToCommitCrime\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.setToShockRecovery\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.setToSynchronize\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { cc_t } from \\\"/lib/constant/sleeve.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n// Utility functions for managing sleeves.  Use one or more of these utility\\n// functions to help lower the RAM cost of our scripts.  Importing one utility\\n// function does not incur as much RAM cost as importing the Sleeve class.\\n\\n/**\\n * The index of every sleeve.\\n *\\n * @param ns The Netscript API.\\n * @return An array of sleeve indices.\\n */\\nexport function all_sleeves(ns) {\\n    return MyArray.sequence(ns.sleeve.getNumSleeves());\\n}\\n\\n/**\\n * Whether the combat stats of sleeves are at least a given threshold.\\n *\\n * @param ns The Netscript API.\\n * @return True if the combat stats of each sleeve are each at least cc_t.MUG;\\n *     false otherwise.\\n */\\nexport function has_mug_threshold(ns) {\\n    const all_cc = all_sleeves(ns);\\n    assert(is_valid_index(ns, all_cc));\\n    for (const i of all_cc) {\\n        const stat = ns.sleeve.getSleeveStats(i);\\n        if (\\n            stat.agility < cc_t.MUG\\n            || stat.defense < cc_t.MUG\\n            || stat.dexterity < cc_t.MUG\\n            || stat.strength < cc_t.MUG\\n        ) {\\n            return bool.NOT;\\n        }\\n    }\\n    return bool.HAS;\\n}\\n\\n/**\\n * Whether the Dexterity and Agility stats of sleeves are at least a given\\n * threshold.\\n *\\n * @param ns The Netscript API.\\n * @return True if the Dexterity and Agility stats of each sleeve are each\\n *     at least cc_t.SHOP; false otherwise.\\n */\\nexport function has_shoplift_threshold(ns) {\\n    const all_cc = all_sleeves(ns);\\n    assert(is_valid_index(ns, all_cc));\\n    for (const i of all_cc) {\\n        const stat = ns.sleeve.getSleeveStats(i);\\n        if (stat.agility < cc_t.SHOP || stat.dexterity < cc_t.SHOP) {\\n            return bool.NOT;\\n        }\\n    }\\n    return bool.HAS;\\n}\\n\\n/**\\n * Whether an array contains valid sleeve indices.\\n *\\n * @param ns The Netscript API.\\n * @param s An array of sleeve indices.\\n * @return True if the array has all valid sleeve indices; false otherwise.\\n */\\nfunction is_valid_index(ns, s) {\\n    const min = 0;\\n    const max = ns.sleeve.getNumSleeves();\\n    assert(s.length > 0);\\n    for (const i of s) {\\n        if (i < min || i >= max) {\\n            return bool.INVALID;\\n        }\\n    }\\n    return bool.VALID;\\n}\\n\",\"filename\":\"/lib/sleeve/util.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":9.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725392,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"sleeve.getNumSleeves\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getSleeveStats\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bitnode } from \\\"/lib/constant/bn.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n// Helper functions relating to Source-Files.\\n\\n/**\\n * Whether we have access to the Artificial Intelligence (AI) API.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have access to the AI API; false otherwise.\\n */\\nexport function has_ai_api(ns) {\\n    try {\\n        // This is the only function we are rewarded with upon entering or\\n        // destroying BN5.1.\\n        ns.getBitNodeMultipliers();\\n        return bool.HAS;\\n    } catch {\\n        return bool.NOT;\\n    }\\n}\\n\\n/**\\n * Whether we have access to the Corporation API.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have access to the Corporation API; false otherwise.\\n */\\nexport function has_corporation_api(ns) {\\n    // Are we in BitNode-3: Corporatocracy?\\n    if (bitnode.Corporatocracy === ns.getPlayer().bitNodeN) {\\n        return bool.HAS;\\n    }\\n    // Use the Singularity API to help us find out.\\n    if (has_singularity_api(ns)) {\\n        for (const sf of ns.singularity.getOwnedSourceFiles()) {\\n            if (sf.n === bitnode.Corporatocracy) {\\n                return bool.HAS;\\n            }\\n        }\\n    }\\n    return bool.NOT;\\n}\\n\\n/**\\n * Whether we have access to the Gang API.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have access to the Gang API; false otherwise.\\n */\\nexport function has_gang_api(ns) {\\n    // Are we in BitNode-2: Rise of the Underworld?\\n    const bn_name = \\\"Rise of the Underworld\\\";\\n    if (bitnode[bn_name] === ns.getPlayer().bitNodeN) {\\n        return bool.HAS;\\n    }\\n    // Use the Singularity API to help us find out.\\n    if (has_singularity_api(ns)) {\\n        for (const sf of ns.singularity.getOwnedSourceFiles()) {\\n            if (sf.n === bitnode[bn_name]) {\\n                return bool.HAS;\\n            }\\n        }\\n    }\\n    return bool.NOT;\\n}\\n\\n/**\\n * Whether we have access to the Singularity API.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have access to the Singularity API; false otherwise.\\n */\\nexport function has_singularity_api(ns) {\\n    try {\\n        // This function from the Singularity API has the lowest RAM cost, at\\n        // 0.1GB.\\n        ns.singularity.isFocused();\\n        return bool.HAS;\\n    } catch {\\n        return bool.NOT;\\n    }\\n}\\n\\n/**\\n * Whether we have access to the Sleeve API.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have access to the Sleeve API; false otherwise.\\n */\\nexport function has_sleeve_api(ns) {\\n    // Are we in BitNode 10: Digital Carbon?\\n    const bn_name = \\\"Digital Carbon\\\";\\n    if (bitnode[bn_name] === ns.getPlayer().bitNodeN) {\\n        return bool.HAS;\\n    }\\n    // Use the Singularity API to help us find out.\\n    if (has_singularity_api(ns)) {\\n        for (const sf of ns.singularity.getOwnedSourceFiles()) {\\n            if (sf.n === bitnode[bn_name]) {\\n                return bool.HAS;\\n            }\\n        }\\n    }\\n    return bool.NOT;\\n}\\n\\n/**\\n * The level of a Source-File.\\n *\\n * @param ns The Netscript API.\\n * @param n The Source-File number.\\n * @return The level of the Source-File having the given number.\\n */\\nexport function sf_level(ns, n) {\\n    assert(n >= bitnode[\\\"Source Genesis\\\"]);\\n    assert(n <= bitnode[\\\"They're lunatics\\\"]);\\n    for (const sf of ns.singularity.getOwnedSourceFiles()) {\\n        if (sf.n === n) {\\n            return sf.lvl;\\n        }\\n    }\\n}\\n\",\"filename\":\"/lib/source.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":11.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725393,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getBitNodeMultipliers\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions.\\n\\nimport { all_programs, program } from \\\"/lib/constant/exe.js\\\";\\nimport { factions } from \\\"/lib/constant/faction.js\\\";\\nimport { io } from \\\"/lib/constant/io.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { script } from \\\"/lib/constant/misc.js\\\";\\nimport { home, server } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { wse } from \\\"/lib/constant/wse.js\\\";\\n\\n/**\\n * A function for assertion.\\n *\\n * @param cond Assert that this condition is true.\\n * @return Throw an assertion error if the given condition is false.\\n */\\nexport function assert(cond) {\\n    if (!cond) {\\n        throw new Error(\\\"Assertion failed.\\\");\\n    }\\n}\\n\\n/**\\n * Determine the best server to hack.  The definition of \\\"best\\\" is subjective.\\n * However, at the moment the \\\"best\\\" server is the one that requires the\\n * highest hacking skill.\\n *\\n * @param ns The Netscript API.\\n * @param candidate Choose from among the servers in this array.\\n * @return The best server to hack.\\n */\\nexport function choose_best_server(ns, candidate) {\\n    assert(candidate.length > 0);\\n    let best = ns.getServer(candidate[0]);\\n    for (const s of candidate) {\\n        const serv = ns.getServer(s);\\n        if (best.requiredHackingSkill < serv.requiredHackingSkill) {\\n            best = serv;\\n        }\\n    }\\n    return best.hostname;\\n}\\n\\n/**\\n * Determine a bunch of servers in the game world to hack.  A target server is\\n * chosen based on these criteria:\\n *\\n * (1) We meet the hacking skill requirement of the server.\\n * (2) We can open all ports required to gain root access to the server.\\n *\\n * @param ns The Netscript API.\\n * @param candidate Use this array to search for targets to hack.\\n * @return An array of target servers.\\n */\\nexport function choose_targets(ns, candidate) {\\n    // Sanity check.\\n    assert(candidate.length > 0);\\n    // How many ports can we open?\\n    const port_opener = program.filter((p) => ns.fileExists(p, home));\\n    const nport = port_opener.length;\\n    // Find a bunch of target servers to hack.\\n    const target = [];\\n    for (const s of candidate) {\\n        const serv = ns.getServer(s);\\n        // Do we have the minimum hacking skill required?\\n        if (ns.getHackingLevel() < serv.requiredHackingSkill) {\\n            continue;\\n        }\\n        // Can we open all required ports?\\n        if (serv.numOpenPortsRequired > nport) {\\n            continue;\\n        }\\n        // We have found a target server.\\n        target.push(s);\\n    }\\n    return target;\\n}\\n\\n/**\\n * Remove any files created by other scripts.\\n *\\n * @param ns The Netscript API.\\n */\\nexport function cleanup(ns) {\\n    const junk = [server.HRAM, server.SHARE, wse.STOP_BUY];\\n    junk.forEach((f) => ns.rm(f, home));\\n}\\n\\n/**\\n * Execute a script on the home server and using 1 thread.\\n *\\n * @param ns The Netscript API.\\n * @param s A string representing the name of the script to run.\\n * @return The PID of the running script.\\n */\\nexport function exec(ns, s) {\\n    const nthread = 1;\\n    return ns.exec(s, home, nthread);\\n}\\n\\n/**\\n * Remove bankrupt servers from a given array of servers.  A server is bankrupt\\n * if the maximum amount of money it can hold is zero.\\n *\\n * @param ns The Netscript API.\\n * @param candidate An array of servers to filter.\\n * @return An array of servers, each of which is not bankrupt.\\n */\\nexport function filter_bankrupt_servers(ns, candidate) {\\n    assert(candidate.length > 0);\\n    return candidate.filter((s) => !is_bankrupt(ns, s));\\n}\\n\\n/**\\n * Exclude the purchased servers.\\n *\\n * @param ns The Netscript API.\\n * @param serv An array of server names.\\n * @return An array of servers, but minus the purchased servers.\\n */\\nexport function filter_pserv(ns, serv) {\\n    const pserv = ns.getPurchasedServers();\\n    return serv.filter((s) => !pserv.includes(s));\\n}\\n\\n/**\\n * Tell the script \\\"hram.js\\\" to resume whatever it was doing.\\n *\\n * @param ns The Netscript API.\\n */\\nexport function hram_resume(ns) {\\n    if (ns.fileExists(server.SHARE, home)) {\\n        ns.rm(server.SHARE, home);\\n    }\\n}\\n\\n/**\\n * Suspend the script \\\"hram.js\\\" to free up some RAM on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function hram_suspend(ns) {\\n    if (!ns.fileExists(server.SHARE, home)) {\\n        const data = \\\"Share home server.\\\";\\n        ns.write(server.SHARE, data, io.WRITE);\\n    }\\n    const target = ns.read(server.HRAM).trim();\\n    if (target === \\\"\\\") {\\n        while (ns.isRunning(script, home)) {\\n            await ns.sleep(wait_t.SECOND);\\n        }\\n    } else {\\n        while (ns.isRunning(script, home, target)) {\\n            await ns.sleep(wait_t.SECOND);\\n        }\\n    }\\n}\\n\\n/**\\n * Whether a server is bankrupt.  A server is bankrupt if the maximum amount\\n * of money it can hold is zero.\\n *\\n * @param ns The Netscript API.\\n * @param s Test this server for bankruptcy.\\n * @return true if the server is bankrupt; false otherwise.\\n */\\nexport function is_bankrupt(ns, s) {\\n    return ns.getServer(s).moneyMax === 0;\\n}\\n\\n/**\\n * Whether a given string represents a valid city in the game world.\\n *\\n * @param c A city name, represented as a string.  Cannot be an empty string.\\n * @return true if the given string represents a city in the game world;\\n *     false otherwise.\\n */\\nexport function is_valid_city(c) {\\n    assert(c.length > 0);\\n    const city = new Set(Object.keys(cities));\\n    return city.has(c);\\n}\\n\\n/**\\n * Whether the given name represents a valid faction.\\n *\\n * @param fac A string representing the name of a faction.\\n * @return true if the given name represents a valid faction;\\n *     false otherwise.\\n */\\nexport function is_valid_faction(fac) {\\n    assert(fac.length > 0);\\n    const faction = new Set(factions.all);\\n    return faction.has(fac);\\n}\\n\\n/**\\n * Whether the given name represents a valid program.\\n *\\n * @param name A string representing the name of a program.\\n * @return true if the given name refers to a valid program;\\n *     false otherwise.\\n */\\nexport function is_valid_program(name) {\\n    assert(name.length > 0);\\n    const prog = all_programs();\\n    return prog.has(name);\\n}\\n\\n/**\\n * Tell the trade bot to resume its transactions.  It can now buy and sell\\n * shares of stocks.\\n *\\n * @param ns The Netscript API.\\n */\\nexport function trade_bot_resume(ns) {\\n    if (ns.fileExists(wse.STOP_BUY, home)) {\\n        ns.rm(wse.STOP_BUY, home);\\n    }\\n}\\n\\n/**\\n * Tell the trade bot to stop buying shares of stocks.  We do not want to spend\\n * any more money on buying shares.  However, the trade bot can sell shares.\\n * The idea is to cash in on the shares we have.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function trade_bot_stop_buy(ns) {\\n    const fname = wse.STOP_BUY;\\n    const data = \\\"Trade bot stop buy.\\\";\\n    await ns.write(fname, data, io.WRITE);\\n}\\n\",\"filename\":\"/lib/util.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":8.4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725394,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes, crimes_t } from \\\"/lib/constant/crime.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Commit some other crime to earn some income.  We also want to lower our\\n * karma so that we can create a gang at some later time.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Continue committing crimes as long as our money is less\\n *     than this amount.\\n */\\nasync function commit_other_crime(ns, threshold) {\\n    assert(threshold > 0);\\n    log(\\n        ns,\\n        `Commit homicide to raise money to ${ns.nFormat(threshold, \\\"$0,0.00a\\\")}`\\n    );\\n    ns.singularity.commitCrime(crimes.KILL, bool.FOCUS);\\n    while (ns.getServerMoneyAvailable(home) < threshold) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Whether our combat stats are at least a given threshold.\\n *\\n * @param ns The Netscript API.\\n * @return True if our combat stats are each at least crimes_t.MUG;\\n *     false otherwise.\\n */\\nfunction has_mug_threshold(ns) {\\n    const stat = ns.getPlayer().skills;\\n    return (\\n        stat.agility >= crimes_t.MUG\\n        && stat.defense >= crimes_t.MUG\\n        && stat.dexterity >= crimes_t.MUG\\n        && stat.strength >= crimes_t.MUG\\n    );\\n}\\n\\n/**\\n * Whether our Dexterity and Agility stats are at least a given threshold.\\n *\\n * @param ns The Netscript API.\\n * @return True if our Dexterity and Agility stats are each at least\\n *   crimes_t.SHOP; false otherwise.\\n */\\nfunction has_shoplift_threshold(ns) {\\n    const stat = ns.getPlayer().skills;\\n    return stat.agility >= crimes_t.SHOP && stat.dexterity >= crimes_t.SHOP;\\n}\\n\\n/**\\n * Mug someone a few times to raise all our combat stats, i.e. Strength,\\n * Defense, Dexterity, Agility.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function mug_someone(ns) {\\n    log(ns, \\\"Mug someone to raise money and combat stats\\\");\\n    const stat = ns.singularity.getCrimeStats(crimes.MUG);\\n    const time = crimes_t.n * stat.time;\\n    ns.singularity.commitCrime(crimes.MUG, bool.FOCUS);\\n    if (!has_mug_threshold(ns)) {\\n        await ns.sleep(time);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Shoplift a few times to raise our Dexterity and Agility stats.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function shoplift(ns) {\\n    log(ns, \\\"Shoplift to raise money, and Dexterity and Agility stats\\\");\\n    const stat = ns.singularity.getCrimeStats(crimes.SHOP);\\n    const time = crimes_t.n * stat.time;\\n    ns.singularity.commitCrime(crimes.SHOP, bool.FOCUS);\\n    if (!has_shoplift_threshold(ns)) {\\n        await ns.sleep(time);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Commit various crimes to supplement our income.  Early in the game when our\\n * funds are limited, crimes can be a source of income to help us\\n * purchase/upgrade our Hacknet farm or purchase various servers with small\\n * amounts of RAM.  Committing crimes is also the best way to lower our karma.\\n * If we have already destroyed at least BN2.1, then we can form a gang in\\n * other BitNodes.  However, in BitNodes other than BN2.x we must decrease our\\n * karma to -54,000 or lower as a pre-requisite for creating a gang.  This\\n * constant is taken from the file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/Constants.ts\\n *\\n * The script accepts a command line argument:\\n *\\n * (1) threshold := As long as our income is less than this threshold, continue\\n *     to commit crimes to raise our income.\\n *\\n * Assume that our home server has 32GB RAM.  Try to keep the RAM cost of this\\n * script as low as possible.  Do not add anything to the script unless\\n * absolutely necessary.\\n *\\n * Usage: run singularity/crime.js [threshold]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Sanity checks.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    const threshold = Math.floor(ns.args[0]);\\n    assert(threshold > 0);\\n    // Commit crimes as long as our funds is less than the given threshold.\\n    await shoplift(ns);\\n    await mug_someone(ns);\\n    await commit_other_crime(ns, threshold);\\n}\\n\",\"filename\":\"/singularity/crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/23deb9b2-7414-4358-89fc-d8caafa3a209\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d68d42fb-77d9-4ddc-aede-fc97628e93ed\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/feac5618-aa97-4661-b18f-57b2d3078079\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/46d50c16-f6a3-425d-9ab2-5696e1f9526f\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d73b3a88-4084-48bc-828e-21385991e1f1\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0e6b0e42-f837-4f93-8255-6efd80b7261c\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3e3068a6-8e82-4c6a-a54d-8b7fea5e1cce\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3c835139-6ce4-435f-bd48-c2e843da2a90\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/18fc45cb-75e6-4468-b17e-c956d9903caf\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/65a9c6ba-a723-46af-9ef8-5014cd67f61f\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/89e6c628-07a1-4e7c-a390-182752c70396\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/57b15d31-727a-4f5a-9768-c94d2463a2ae\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ebe19d88-0d3e-4e96-827d-a648e70d40b9\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ab486f58-a2ff-43db-8b3d-7da3447db1c9\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8eb48b59-9cfd-44ac-9ccc-776bab1ba29a\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a5712934-38b9-4be1-bdbf-47dbab7bd9c7\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4dce82cd-1598-42ed-8c77-394c41764bed\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f9b3bb67-1c4b-4605-9c80-3f676c6da680\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a29426cc-75a0-4087-acb6-a6fe627ba390\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/0f3b1a3c-72bd-4a69-aaee-e7c707acdb8a\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0a01d91e-efb8-44a8-9c1c-e638e28c1d27\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6e1a6629-9d1e-4d93-9e2a-e0a9bd0e1f50\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/67777c7f-90a4-49ed-a534-ce5f3491cc52\",\"moduleSequenceNumber\":724816},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/99987ae2-b82a-40c3-8885-7956bed04290\",\"moduleSequenceNumber\":724813},{\"filename\":\"/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/b9977141-91e8-454a-b946-8f02e8e09260\",\"moduleSequenceNumber\":724920}],\"dependents\":[],\"ramUsage\":13.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725395,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getCrimeStats\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { augment } from \\\"/lib/constant/faction.js\\\";\\nimport { server } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { join_all_factions } from \\\"/lib/singularity/faction.js\\\";\\nimport { connect_to } from \\\"/lib/singularity/network.js\\\";\\nimport { assert, cleanup } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Find and destroy the w0r1d_d43m0n server.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function destroy(ns) {\\n    log(ns, `Searching for target server: ${server.WD}`);\\n    const serv = new Server(ns, server.WD);\\n    const player = new Player(ns);\\n    while (player.hacking_skill() < serv.hacking_skill()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    while (!serv.has_root_access()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        await serv.gain_root_access();\\n    }\\n    assert(player.hacking_skill() >= serv.hacking_skill());\\n    assert(serv.has_root_access());\\n    // First, try to raise our Intelligence stat.\\n    join_all_factions(ns);\\n    // Now hack the target server.\\n    cleanup(ns);\\n    connect_to(ns, player.home(), serv.hostname());\\n    await ns.singularity.installBackdoor();\\n}\\n\\n/**\\n * Destroy the w0r1d_d43m0n server.\\n *\\n * Usage: run singularity/daemon.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const augmentation = ns.singularity.getOwnedAugmentations(\\n        bool.NOT_PURCHASED\\n    );\\n    if (!augmentation.includes(augment.TRP)) {\\n        return;\\n    }\\n    await destroy(ns);\\n}\\n\",\"filename\":\"/singularity/daemon.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f34ade19-7ca5-4ae0-a789-40ad5935c089\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f7db174c-e922-4e7c-8450-90ddc12f4acc\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c0fe3d3a-8768-4928-83e5-1f9279296243\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/963ebfbc-0188-4c20-b0e8-9e26a0c52037\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7abdb677-dfdd-482e-b84a-5d1a17b402f9\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/895c27fc-37ef-49a2-8fff-bdfd99dee68b\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/470c66fa-19ff-41b3-9122-e2c52518115d\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ca49d2dd-2c89-4f2a-b44e-21ebacab9354\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/30cf3cfe-3d14-470d-8a2a-494f6fdcb563\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3cebcf65-e16b-40bb-bd35-8f0772aa1b9f\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e95b3483-98ff-4f1d-92cc-086904c9c2d8\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dfdacfb6-e57f-4d73-8f4c-ac64df594455\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/48fc2bbe-7f0e-4885-b87a-a2fa4f40fa88\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b5dea3d8-77a4-479b-b577-adf72ca78511\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/87163307-dc9c-4093-954a-7a45160bc1dd\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4f95ea69-64d6-4fb9-8bb7-9364429e90c9\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1d152f01-fc88-479d-b1de-f357dc6298b0\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bc959cd2-0c60-4c10-83cb-c1a6e2a3fd86\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/65c4766d-368d-42eb-91ca-60e669f05c9a\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9ca67a5f-7cac-4ae5-a2e0-177f7938f68e\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d4cc3c7b-86dc-4023-9562-2e0531bc43c8\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6ebac597-372a-4daa-8d19-77bc5aa4194c\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/484bffc1-ae3e-4e22-ae7c-9a7c296041ba\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7091fb5d-713c-40d7-ab1e-62a5ea781b06\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/50edab97-8824-4b62-ac59-6ae16eaab774\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fb1bd25b-acf9-4b9f-b888-416666f3987f\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b2481611-ce5a-41eb-8079-d320118658f4\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dc021228-fcd4-4162-a135-e23d806706f9\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/411d4769-dec4-4187-9559-234b2642c677\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ef1f3273-a519-48be-a55d-a39190de5e82\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/4563fed1-f305-45da-947f-a7673414c1a4\",\"moduleSequenceNumber\":724840},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e1c004d1-3ef8-434f-9d13-c6b23cae4e43\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f4ef6c10-cc89-47ec-9042-571b6a8d80c7\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3eb97864-c545-4fbc-8191-7a069f503ccd\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/120f680a-b8b1-41b6-bfa2-515cb2f0dc36\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e68dac39-e39e-49a8-acd7-dba68ed10410\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ef76fe0a-ae11-4542-b6de-fe7dec47e6c5\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8ec4c0ae-c274-4d4f-8c8d-95f7bb9da1cd\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2805f129-7aa0-4583-a248-fbde75f1b11c\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7361d071-160a-4c42-aefd-53f325e490c5\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cf3d09c3-f6cb-4571-ba1f-f1deaf00c652\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3593dbca-5942-484b-bc82-54bf5b6fa2c2\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9956610f-6c72-4e59-b8ca-e83895939ba0\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/7d46f181-6e09-41e1-a254-bca351b9bf3b\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8246f357-043e-4b30-abcf-6dbe0a93deee\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/de0ea482-a6ed-4e6c-82b8-f1ad7770a023\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4ec6f12c-b11a-4acd-9e9b-3a2dd3680708\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b059b2e1-4968-4d2f-a1d3-4c527ec4904a\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9741c44d-7bb0-427c-9e4f-a071de46fa8a\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/62ff42a9-7bb9-4c0a-9e7e-e3e859c2f776\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5cb2d56e-0fbc-47a4-870d-ee728a03876d\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9dd61b83-6719-4ed0-9a27-14595a18da25\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/001dcef8-87bd-4d70-b9a1-f2ff5169b432\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e5898b64-60c9-4701-aacd-06bfc55dddab\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c5e98cf0-5148-470a-8a1f-066767cb9126\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/189c4a95-89a9-4860-b0b8-9ab6d3adefdd\",\"moduleSequenceNumber\":724836},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0f96b901-398e-47f7-a78a-ca801282d902\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/77a6a241-8062-4bc8-8db5-bb8317394219\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/b85431b5-5c9e-447d-bc8e-60701aad9e79\",\"moduleSequenceNumber\":724844},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/93493694-b7c3-406b-a873-ac83034bdf25\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1b44f491-6b8a-4f7c-a7f7-35bb62d3e9e5\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fda34d1f-684a-4dd4-8149-46edfcb645e3\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5b8d1580-3872-43d0-b129-ea27c8ff3261\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e4a23791-4d89-4501-b004-2bb7a3921635\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/974a8658-e8a3-429e-8159-5ec7635cc112\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e6e89621-65d8-4b2a-83e2-daa392ed2a9f\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6aae19f9-b015-4d46-942e-2e3cca0f3711\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1f97d846-fc9b-4bf0-a6c9-8941a0d1f67d\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fe5b0100-0444-4cf1-8726-c2ae162605dd\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1c162f21-d5c7-44a7-aba3-3467f89f98e3\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e1e44c66-92e4-4c0c-b978-c63f3ce4d768\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bff8fa84-0c58-4573-ba15-5dbf59f6de6d\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/48787a61-905e-48b7-a4fc-0ff4ac001d61\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5f6ad8ca-2f73-4aa2-a10b-c4dac98bdb4e\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/96147351-cafe-4dbe-9466-c26fa0359fd4\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f3510a19-4444-4ddf-8a86-98d47443f53b\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/998a283a-df5d-4ca6-bb0c-88b3d0bc1d1b\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/246b817f-a6bd-4c21-8b3d-d216988c1999\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/7a6f3a86-3319-40ef-8483-c36587ddf202\",\"moduleSequenceNumber\":724827},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bcbe249d-215f-4389-8c01-6c7699a84f9e\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/646e02c1-9a38-45d6-ac0c-2f5e5ea37c03\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/b71b2744-8360-4aab-81c8-ae4e8a7f482f\",\"moduleSequenceNumber\":724846},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/831d48fc-703d-441a-8a50-5bf969af435d\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fabe5360-bcd3-4fa3-ab6b-e719d428049b\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9b4a277d-59c1-4398-befc-8c43840e3dd3\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6a7ae10d-e349-4195-b614-4eba0f10ef09\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/11456d86-f8ef-4f61-a6c8-c212f49c9d46\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a01d7997-916b-4b78-a99c-98e0ba2b62cd\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/11f87682-93ad-4b19-8149-76c8d3cf97a4\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f38adb4f-c6ac-415a-a04d-28ed69547c7c\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7e53084c-00c1-44d3-8a66-93ba5882417d\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9a0be980-c81a-4ecc-9ca6-bc8a2a9616d5\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/39977e8c-d1d8-47e1-9e25-8384ed879a68\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5692ccd4-022e-4199-88d1-6cea374bdd8a\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9d0dd75d-1ee2-4975-a73d-69928ae841bb\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/72a48078-928e-42f2-b88d-c6fe030febde\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/212a2640-6cd9-4d0d-8467-91345f845d3a\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/58f7a74c-1a40-48f0-a957-f097b9fd0792\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ec8606bb-bc46-4c24-8afc-f66d660cd512\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b3bceded-d263-40b0-9002-f1166d7b35b7\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/94200a89-14c7-404b-a149-528d92b3b753\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/039decc5-f52b-4fe5-bcfb-c29596e177b1\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ac34f90d-0359-47d9-b658-53e3cee1f633\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/664bd10a-b636-40b5-bf30-07b0a372d693\",\"moduleSequenceNumber\":724840},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/db186e15-984b-4f7e-a9ca-1a223c55fe43\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bb6990d9-0b10-4e24-ac37-cb7402a4ee39\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b11f55dc-0701-4082-82a3-6f79575edad8\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/53bb1c88-a729-40bd-b40e-b7b239300602\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3c1da302-b60c-49f5-9e51-6da35b62faed\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f8fc25bd-7b81-4978-8079-0b92e30b045d\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d170fca1-6c10-4ff8-8099-0b36d53d28cd\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c28e7bd1-bab0-4909-8dca-6e3b9e392eee\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e1f11704-0df8-4dbd-9d6c-50b984543382\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5aeac910-3835-49b5-9219-b66fa5420899\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d1bb7d41-cbeb-4001-b23e-5788cac55af7\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/799a61a5-ca0c-4755-8130-4de14b172357\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/0fa9b4a6-f1e5-48b9-8389-bf029a1d898e\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fa3fe5ef-4ddb-441b-880d-f1ba57bc636b\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/61a9c2c0-c09e-49ab-89ea-00a1880cc7cf\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cab87989-93cd-4751-8482-cc9f1022a783\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/144e4901-a455-4949-b14d-4d97c7569842\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/dcb3eda2-3d0a-4c1a-8255-9986a9f97fea\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/334b562e-5e61-4825-90a9-6a48c7590ecb\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3caf6fe1-30ff-4428-be5a-47edc35a6031\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bad34eea-f9f4-44e0-b25c-c0276c2e2e7d\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9e7e1c5a-de45-418c-8021-954aef995717\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/713f92e9-51c3-486a-bc5a-a7f58300f80a\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/db943c95-bbd7-4062-8cbd-a8f6d16b3286\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/739378b8-0b38-4631-82a4-aa9bdfe78bec\",\"moduleSequenceNumber\":724836},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/024d464c-78a0-49ef-b6f0-0651494b8955\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9d6b6bd6-0f52-4b95-a16e-2f76f8672afa\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/2c80d9d7-05a8-48d9-804a-4a10ed9dad91\",\"moduleSequenceNumber\":724844},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/97d46753-569f-4ac5-8659-5a6d09d0c6d7\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/492d5521-7976-4e2d-aaf5-5db8c51ae494\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c8a1b248-3dc7-469c-9fd3-73838464621c\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0ef537b3-dca2-48f6-b164-ee8881269b35\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bd614140-c6a2-4380-b7c9-437cc25603b0\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/411f51df-4fa2-487b-9472-17850e68c4f7\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3db10ee6-d3d9-4d2b-bab6-2a7caad770f5\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/54460fb3-0647-414c-b87f-268e690c8783\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7252adbc-c38a-4e06-870f-84b1a0d81245\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e92b6b61-c682-4170-b512-bdf84df10051\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b9bae245-7566-42b0-b85e-98346e53d63f\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/339c8159-295c-4d83-bec4-4b29097834ac\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a92dca8f-8d1f-429f-8723-2640776f2684\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b7029d6e-631e-4e57-ae14-321816109040\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/448dd5ed-5c71-407c-ad2b-2897c73f6255\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d0e665da-8f86-411f-bfe0-ad27d854a57a\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/42d46ac6-bf60-4dc7-b37b-0e2665dfb450\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/edb42f91-9798-4c41-ac3c-8eb2b0a48335\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ec12b8bf-ac8d-4ae9-ad93-527246292f3e\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e8b0c037-404f-4513-9037-34621e3230a1\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/682452bc-9dd5-445c-a9d3-d5fd319b308e\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/04236826-5669-4f34-aefb-4610b1658b44\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c3d8fe23-8552-4cba-a110-d14736dcfd33\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/98e1a02b-8799-4e2f-ab4f-21fe0306de76\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/502f73ad-223b-435a-af8c-0b6332aa9c43\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/548f45fd-7b89-4d21-852d-0c81a0f1d085\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/30e1fdd4-db64-41e0-8820-f608bef1a750\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/360dee03-facf-49e4-a955-202060dc193e\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/0f381cc2-ea8b-4bfb-9978-ab44aafde5fe\",\"moduleSequenceNumber\":724827},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8f367476-cc56-42e5-9336-efecaf9e2bf9\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/d50b2c3d-6d81-4dbc-ac26-a6b68771abb2\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/727da993-3b04-4bb6-abe1-692c3787e6b3\",\"moduleSequenceNumber\":724846},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6c7bba38-90b7-4167-805d-dd618b784fe0\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cb5ab93b-0bcf-4907-9da5-005dbb5de9cb\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f3170f24-2a60-45f7-9453-9188e638fa01\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9dbecba8-32cb-4787-96b4-f50e9017e7fa\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/92803488-ed32-4d8c-ba83-5bd41093862b\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e0278a74-2b1c-4980-82df-5c8b5242a7cc\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8c4dd0af-9a4b-4f39-a5e4-af874d0255ae\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/13d35611-1e66-4d25-8bec-9b9232fcbf4f\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6e1b9bf1-24eb-4435-bdec-96c3ee0659d7\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cdb4c4e9-8fa0-40cf-848f-617def7c8245\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6ca9a038-b45c-4b4e-94af-beb3059efebc\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8fd9b3da-67b2-4de0-a1ac-77189ea62a85\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/bf2b1953-437b-4ce6-bf92-8c59d7434b64\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fbe4aa6b-0baf-4ef8-a1df-5e5fa8f2947f\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6172f4a4-3dca-4365-9f5e-46f67fbcbac1\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c27f2c7d-aeb6-439c-853a-3caf65b9aeb3\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/be5232e7-5e27-48ce-a764-7ee509018ca8\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/df37058f-0e85-4782-8690-fdf457778a24\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e4c41dfa-d730-4fac-8dbf-391e5d3a2745\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9742f4b3-85c6-43a8-8e5a-56a94ec27e10\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0361ac85-e093-4c51-a2f2-e369a58ad884\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/578058cd-5730-4f80-a84b-a766cb02dbc1\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f86d4e41-db1e-463f-8a8b-fd162654b6d2\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/0064d4bf-1c74-49b3-9d31-7599908961b7\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/5c9509b4-25aa-4632-8eec-b563d59100c1\",\"moduleSequenceNumber\":724829},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/418a0a5f-95b5-4cc5-871c-8c62d1176b0d\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f9fcf463-a889-4d2b-a927-4e82f6d5d930\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8b92a60d-c374-435b-9cbf-062019b436ce\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b1c69de6-f04f-4d9e-99cf-d4e24ef97c85\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/e4ffab88-d92f-4936-9a8b-a41f822a0755\",\"moduleSequenceNumber\":724848},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8dec0d60-6bb9-4db4-a1f0-3a149108e38b\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e7960dd2-56a7-4a72-b96a-fdb4d8682ff5\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a6a528f8-2b1e-4750-8418-1f9f9aa47446\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5128c1fe-1525-419d-8a77-3977d5b3775a\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ff82c608-269b-45e4-a3df-07b8ab24e769\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/217f0e62-9302-49ee-936a-b30522c199ca\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3c0927d3-91f5-44a4-ad62-a55c43d85b21\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8aac59ea-b3ac-4fc2-9c03-39b0f4729478\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b50445f8-e3ed-4bcc-aef6-520d595faf8f\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/463d22e5-92e6-4ed9-8824-1f9967fc6621\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fd35038e-0a2d-4c24-9e0e-2a6ae0604b32\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cea21674-0bd4-409a-a965-d330c50e99e5\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fb5a18ae-f36a-4a96-9691-cb63c94eafe8\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b6483a3c-be44-465f-a5df-d4d8928dbe38\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/335da8f5-56fe-41e1-9b21-92f79e096682\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6ead37a8-3e83-4397-962b-630aa08e00ab\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a2e82e08-22d5-4798-8fe1-44a42f67162b\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/eea5b581-8782-4c31-acc5-d0c803a38471\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e6f20338-77b5-4925-bdcc-433485720891\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/faf3a9e0-06bb-4745-b0d6-cb9225176c18\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/10e211a2-8058-42fe-94f2-66620fff9351\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/daff701b-1c90-409f-94e9-cbc061f890c2\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/903e71ec-6c9f-45f3-af24-8df5691b7229\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6bbc7511-b332-4636-967f-d310e2443edb\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3faf20e4-bb2f-4164-b57e-d9e28c4b1242\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/99d038ec-3651-492a-a3fb-fde5c00d1cb4\",\"moduleSequenceNumber\":724816},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7e3b2c4d-f64a-4db6-9d37-2f05a4690278\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/29c1f0d0-2cf7-4436-84e9-fa3c252b9e87\",\"moduleSequenceNumber\":724842},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0d78e8d7-6fe5-4710-a479-93e3a79d078b\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/940e500c-081e-44d2-b340-595a6788a5b7\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ca4e31a9-90c0-4ec7-b3db-29929cd6c15f\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/50ad67a1-b0c4-4b20-8a7e-f6a45315562a\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2c1ee362-66f3-49c1-b567-c56367efcabb\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3b8f7605-3ab9-43fa-af32-5df2134f6c26\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b4a2ac0e-9e41-4690-9813-b9feaefa2db9\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a058c0dc-b30a-4ca6-864d-3ee0a1719386\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5157bb07-b59a-4fb1-a65e-a6efe68e0de3\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0aaf0b75-1c6a-4710-92a7-c252fc0dc13b\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/49b48df4-b3fc-4cba-8c46-4ab52ddd0c1a\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b8420106-8dca-459d-81ce-7f5d5df5b09d\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c45a1e99-7dd3-4053-a3b6-4f8f26562ce5\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4150d1bb-e76a-4af1-b5b7-ad22a621ef3a\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b8d0d9cf-335c-4d4f-8be9-22794e54eb16\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/fba335a3-10b4-4cb6-a306-f11df6365f44\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/1f994541-05b0-411b-be34-7ffa29bff231\",\"moduleSequenceNumber\":724841},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2acf7cc9-0b8e-4205-b771-9a512b23658a\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bc311680-0ece-4353-9b23-d4a3ac7faf57\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6df813dc-59d7-41be-b5c1-be5ba6d6dfcf\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/52d97805-57a6-46bf-920a-9daa2ad7230c\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c8366cab-5bc4-46d0-8dd8-a64e9f896153\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a3c9a20b-6cf6-4aad-b91c-9aad92f0d563\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/64dff5cd-89e0-4a71-9520-73b226e8a041\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c818f0a8-38c1-4ca9-aa6d-6fddeae1df71\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2bdbdce6-74f3-42e8-a1e5-a71391b95ba8\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b4e11e8b-eb21-4478-87ad-ab5549a79e7a\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/59ab41b2-6e10-4451-aa4a-984a2c1f4f50\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/667b1047-96c4-4779-9274-a3457d4ffc93\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/6469f692-0695-4ace-b2d7-dcaf85e1576f\",\"moduleSequenceNumber\":724840},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5b3311c2-14ec-4d1f-a959-0eb0dca7154b\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7dd64630-d0bb-4501-9618-623ab8230328\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5c4862c4-4b17-453f-bd7c-7475cac165a9\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bdb7ba10-bd60-4f4a-88a6-46f065ddee64\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e022243e-28b6-44a4-b28f-fd5444730fa1\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9af8a73b-c7bf-46d9-bbe1-0e99f1c1af75\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3de2e315-8252-4b78-97e6-c860caa95ddb\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dbc88a11-1758-4cc5-914a-60ccd6a77ebe\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/629dd83f-4455-4d92-864f-2ff4067a70f9\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8be2a1a6-bfba-449f-a0f8-faa56cd1846c\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ef851547-6085-4942-b7d5-b6a45d8e715e\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1f8f57d9-a737-44b7-8bc4-ee0855d22e12\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/6e227f1e-79c1-41d1-8aa4-0abe87608548\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/465f2cca-99c2-40c7-8181-481dfd3fb183\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/53a258bb-335d-4269-bd54-08ac3a3cb6c4\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2cdf5830-af3d-4a06-8e7d-d12f4c9aa2d9\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b29ac749-e56b-412b-a02f-e6ee0e5699f1\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2b2c0b7d-f6af-4a9f-bac8-3c4b4caea730\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/872e4f38-0fb2-4bf7-8063-8bfa49b76759\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9ea0926d-2ae0-476b-b02a-28a174163b72\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/15aca58f-0a14-4c3e-8a44-eb1f39fcb8e8\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3d39c3c5-6ef4-4c6a-ae27-1caee31bf650\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/106c8324-4bf4-4785-899c-4907dd97d30e\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/9138ca8a-2a06-4317-afac-de7a291c7098\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/0d39d376-2e4b-4b01-8b07-8add8b1f505a\",\"moduleSequenceNumber\":724829},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f6477ea6-856e-4ed4-857e-b21ca2eaaf0d\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/df0fc99c-5c34-4e01-b374-d4c260733ed5\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7d934ce8-e474-47e1-a6ad-46dc90fc8390\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/c4103cf1-85dc-4d31-b32e-00f94a21856f\",\"moduleSequenceNumber\":724816},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a6f08f42-6804-4cba-87da-6ec2c5f60e61\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/154f2d41-8d7b-4497-8a13-f3b1a6a9c556\",\"moduleSequenceNumber\":724843},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cf90e9dc-e050-4272-939f-f099e5c4c6dd\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/36ab1823-0f40-440d-80b9-d441ee69004f\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f3f7008b-6045-48b5-8c74-9ca654cf0f66\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9743d93f-4bfa-420d-ac49-3dad43e2f9c9\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f5a77542-4b9b-4564-8cc8-70aa4a7b405c\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fbcd22ba-c837-490d-8a64-be2b58ae3a89\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8000459c-88dc-4712-b2a7-91a9713e1612\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/16d9ffe0-5783-42f5-959f-f3d4f62949f2\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/49adb1b5-7560-4e5c-b46a-794b0726072e\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1d7f10a8-b56a-4750-be22-1adedd74a1cd\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c70ccd05-5bfc-4504-9625-06a49dcbf057\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/812e0acf-128d-44e3-89cc-485e7a670fe5\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/d3dc170b-1d4d-448e-b39e-209bb49d9b52\",\"moduleSequenceNumber\":724840},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8bba7541-4c23-4f6e-b291-92054484ca3b\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d8439418-2a3f-489b-84d0-62dca36fbd27\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/958cbbfd-8c66-4070-a743-f72595610f26\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3a7fe755-3063-474d-926b-24d86c55da93\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9455f5a0-2ca2-459a-951d-0185e162c18a\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/581b67c8-5342-43ec-b466-112a33733859\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/cfc2dae2-925f-4a8a-8b85-a7cdbfb258c0\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2d664c37-8177-4e4c-9b69-b840e420feb9\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/af17f961-8139-4a97-ab33-4f22e42897f7\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5fc8a66b-9dd6-4a92-9301-c50a2f837021\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ba76fe2b-fe23-41c7-9e30-cbac759c1002\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/47b5a430-86a5-4078-920b-353061ef4921\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/f965ff6b-0a96-40f7-94d2-6077b99f1f55\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c81b854b-726f-497d-93bc-664cb0f051cd\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0175a7d2-1f08-4442-a57c-6462c355baa7\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/11b85902-a895-405c-951c-e6dd17703ba9\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b8401dca-1879-4ed1-b556-e058524a931d\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1ce46312-f123-4ef7-a752-df0a32437268\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5e6d28ac-4fc9-4284-94f5-3dfa9cebc427\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e6d0a2bf-8025-4a72-9f1d-b73e761acd1e\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/667f6416-7a9d-4709-a53c-0d40477bbe69\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d1ae96a1-b2e5-4ed6-aa27-0c49995a8078\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cefa9b4d-c86f-4260-aa25-e88a28308c0b\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/8210c3fb-852b-42a0-8fc2-9c3e831e3dd6\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5258a740-19dc-4f18-86a6-83a9ffe3443d\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/acfb942f-b724-4a2f-a626-5997900d50cf\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e193c91b-e7da-4a8b-b7b3-891b4bc49132\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9c68b726-fcd1-4b6d-a60d-a1e459b1bb95\",\"moduleSequenceNumber\":724813},{\"filename\":\"/singularity/daemon.js\",\"url\":\"blob:https://danielyxie.github.io/a0aa5617-0f9c-4fc4-a26e-0c027dd9079f\",\"moduleSequenceNumber\":724923}],\"dependents\":[],\"ramUsage\":26.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725396,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { work_hack_lvl } from \\\"/lib/constant/misc.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { purchase_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport { commit_crime } from \\\"/lib/singularity/crime.js\\\";\\nimport { join_faction, work_for_faction } from \\\"/lib/singularity/faction.js\\\";\\nimport { visit_city } from \\\"/lib/singularity/network.js\\\";\\nimport { work } from \\\"/lib/singularity/work.js\\\";\\nimport { assert, exec, is_valid_city } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Join a city faction.  The requirements for receiving an invitation usually\\n * follow this pattern:\\n *\\n * (1) Must be located in a particular city.\\n * (2) Have at least a certain amount of money.\\n *\\n * Here are the requirements for each city faction:\\n *\\n * (1) Aevum: must be in Aevum; have at least $40m.\\n * (2) Chongqing: must be in Chongqing; have at least $20m.\\n * (3) Ishima: must be in Ishima; have at least $30m.\\n * (4) New Tokyo: must be in New Tokyo; have at least $20m.\\n * (5) Sector-12: must be in Sector-12; have at least $15m.\\n * (6) Volhaven: must be in Volhaven; have at least $50m.\\n *\\n * @param ns The Netscript API.\\n * @param city We must be located in this city.  This is also the faction name.\\n */\\nasync function city_faction(ns, city) {\\n    assert(is_valid_city(city));\\n    await visit_city(ns, city);\\n    // Boost our income.\\n    const fac = city;\\n    const player = new Player(ns);\\n    if (player.money() < faction_req[fac].money) {\\n        if (player.hacking_skill() < work_hack_lvl) {\\n            await commit_crime(ns, faction_req[fac].money);\\n        } else {\\n            await work(ns, faction_req[fac].money);\\n        }\\n    }\\n    // Join the faction and purchase all of its Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join a city faction.  The city factions are: Aevum, Chongqing, Ishima,\\n * New Tokyo, Sector-12, Volhaven.  This script accepts a command line\\n * argument, i.e. the name of a faction.\\n *\\n * Usage: run singularity/faction-city.js [factionName]\\n * Example: run singularity/faction-city.js Sector-12\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Join the appropriate faction.\\n    const faction = ns.args[0];\\n    assert(\\n        faction === \\\"Aevum\\\"\\n            || faction === \\\"Chongqing\\\"\\n            || faction === \\\"Ishima\\\"\\n            || faction === \\\"New Tokyo\\\"\\n            || faction === \\\"Sector-12\\\"\\n            || faction === \\\"Volhaven\\\"\\n    );\\n    await city_faction(ns, faction);\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/home.js\\\");\\n}\\n\",\"filename\":\"/singularity/faction-city.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/71e6e262-069d-4acd-bd4f-0147745dd632\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0eff8a58-379a-495e-b48a-c6ff94ee7917\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f5440b90-19aa-47c2-a25b-0b07870c1eee\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3024da88-412f-4ce0-ae70-9f817f1fc72a\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/30ef4c03-15a2-4cba-9ffc-a9dc8aab5cd7\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/113b1756-0bb4-4caf-b01c-270bc887acfc\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/707bafda-a3af-4ec4-8920-2ca927cb2458\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0471b3cc-7bd1-4352-8019-3e26e60c4b00\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/aad3a779-39f1-4d9c-8457-1ee0d0b926c9\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/44fdcc67-021d-48ba-825c-b5078842c3d6\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4f367b56-9f2b-43fa-bdbd-662a6935fc00\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3189935c-250c-4ffd-ac6e-7e0f4a1a48e3\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/55d056a5-d076-49e5-aaff-4042015058ac\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ec58e35c-10f1-4b85-8dd6-fc4393dc55d8\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/45ecc349-c774-441f-94be-b626756ccade\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f2b0521c-bd38-49a1-bfdb-43fc01a4030c\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5007f5fc-f1a0-4597-a7c8-334f0ff9440e\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/52b7f0bd-6bd3-47f1-9e46-cb5c48f7adbb\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3b5584ef-cfce-420c-ac07-6d96ed7aad75\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b1a93620-ade5-47d0-a992-70a3ddcbbe4c\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/84c83caf-e1f5-4904-b9af-0baea40d377d\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7a0ee17e-16cd-4bda-8a99-a4a052997890\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7c5d39b6-7238-474c-ac98-e97190c320c5\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d5bf1f47-ca0e-4702-b417-6cb15984ba83\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ae07b315-f3ab-474c-8ef0-311675c2b68f\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/36262d55-b1e9-4baf-be56-7df112dc06fd\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f80d795e-61b0-45e0-a3f9-07a410e7e38e\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bc7fc2b5-9521-4f2a-926a-b0b62f71706a\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/2d27adf4-849f-459d-95a4-61a9fba9a86a\",\"moduleSequenceNumber\":30710},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6a82e69c-e464-41a1-9980-e1b3e56a8953\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/13be9fa6-1047-4276-828a-45c3628bffbb\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/93b7d02d-5420-4658-b98d-1ca43e5625a7\",\"moduleSequenceNumber\":30729},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1945544f-3787-4fb3-a934-587f234013b9\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/edfec576-3205-4641-bcc9-e3d2eda75f1b\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1dff771c-3796-4737-8c58-2023e537202e\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c6355b18-05c2-43ad-affe-193791817d32\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ce1d4ad2-85bb-43ad-91e9-02573062ee24\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bdba4086-2346-4c09-9d9c-003c4ae072bb\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8de0b511-60e8-4ad7-8e03-837920849497\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e01043a0-36bd-4a4d-9d00-801aeecbe971\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3a0a8216-a0bb-4ce0-962e-a8832fe4fbad\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fbb6d095-ccad-4455-89e5-c62a8b16454e\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/55cd8d10-1f53-48b4-bea1-3ea6c05b27e3\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fb50ff98-ca10-4ae0-9239-13c82677d80b\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/27c8a8d0-d315-412d-bf6e-0b04b8e5b68f\",\"moduleSequenceNumber\":30720},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ad7e5dc4-a96a-4a14-8780-fd171e41261a\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9d64e05a-a727-4c20-9c1c-81661373d857\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cda73d0d-f4e3-4dde-b9b9-e22b13901eb5\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b26d0c67-c56f-4a2d-a3b2-3e15e0ed3717\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3a0ae933-8b90-49c6-a1cf-a23c93dd46ef\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/80e55764-9e6c-4a7b-8886-1e51c072c8eb\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8a1abb07-9eb0-4fc6-9e55-14a4f74d3629\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1a4bc9b8-1df6-44b4-988f-861f795c664f\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/19223a44-65bf-464a-a4f8-79a51b932d69\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5c8f307e-346d-46d8-ac0f-ad1a51b4cf41\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/b4f17426-ed92-4a4b-8c74-6065ac8599bd\",\"moduleSequenceNumber\":30717},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/fa29fd1f-2a53-42c0-b372-113ca678dda2\",\"moduleSequenceNumber\":30712},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c7459f3b-041b-49ea-917e-2b1cfee3ee17\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a69bb160-8b5f-41b8-914f-7fea30432b54\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/550883e8-fed2-4440-931d-baebcb4fdae7\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/e3a7f0e7-dfba-4e9a-88e7-578b624c155a\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/57f0ed73-f8d6-4706-82f5-87e8bd7ee9aa\",\"moduleSequenceNumber\":30731},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a063d72b-14ec-46d8-b73e-4a0aa8437cf5\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/38bb431b-f892-4a4f-b6c4-dc5d9bcf23e3\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b37f8fcf-bf30-439c-a4c1-3c6d81d85ea4\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a762c6c4-6876-487c-881c-eb6a6e1f1e97\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5c2bc4ec-9fce-4dd4-9f99-f3e4cabd7b63\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e9d07caa-43ee-453a-b819-877292908389\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/50f9ecc2-ec54-4295-8ace-19fdfe90ffcb\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b1911835-bf33-445e-bd54-d3018739a07a\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d826b8be-9312-40cc-9689-2c5ebda7333a\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7c7e3700-22c3-4f81-a1a2-9f7b83a0a9a0\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9a02957b-24ec-407b-8d79-9d64da804e96\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/da1ad5e3-bc1c-43bf-b0fe-4c5de4f1e96f\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7eb19bc0-6ff6-4d89-a2c7-9cab14556162\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c8a9e096-58d1-4fd0-847a-636e66932c4d\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b14d72f4-07dc-4f20-bb33-76ebf7e9f37c\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e68bcdc2-5318-47a8-a2bf-7d81ac6dae3a\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/be5c134e-dff7-4384-bb27-722df95d35c9\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1ed3c8f2-f3cc-4021-8424-4471ef35cdc6\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/eb0a97d3-403d-4e02-8258-a94b298286be\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/db72e82d-eb54-49ae-9e05-e50b74b4b645\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b93d7654-fd32-4861-95b5-2c2db61a23ee\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/fd820dcb-4b2d-479c-95bb-b19c38538146\",\"moduleSequenceNumber\":30723},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3568bfbb-1aad-4117-9e22-e562889a4f39\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4b69b220-127b-4416-abdf-516911e3edb3\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b4581f40-10d4-4edb-bcf2-b109c6919aab\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/56898cdb-294f-4da8-b84e-9120d642e092\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1d53521a-b750-46bc-9c30-c3e4e886a1b1\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7ddc65c3-f7bc-44ec-819e-1f018cf98412\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/172a4025-c347-4d42-a037-ef871ba92afc\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d0e492bb-05a8-4be7-bd45-2a46a09a386a\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dcb1e6b9-1b23-49d4-88eb-6a81b8574c91\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5b90bfbe-4d42-437d-89fe-919e4fa6a130\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5088c6eb-7979-41c3-ac1c-3c93633720af\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2ddcf05c-ff6f-4bbd-9b82-8552e334afa5\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/2cf7a74a-103e-4018-bf8d-8557b93f4f4f\",\"moduleSequenceNumber\":30720},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f1271a4f-de5b-4c8a-834d-7fc97be17ffa\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e56434c8-2b6a-49b2-9ea1-2e947edc3387\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d7e06171-41b9-4a64-af51-db7f925cc3f5\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/89adb4e1-319b-4cb4-9c1c-e0b9537569a6\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/757c7cc5-bba7-48db-81da-62c129741af2\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3831ec2a-964d-4790-bd9f-5e18c2b1391d\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fa575e8d-ca4c-40bc-8b40-6f97b3ba7331\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3feec60a-a7f0-47fd-9dec-cfdc6799fd6e\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ac79e52e-b2ad-4cb6-a7b1-bc632d9f3a61\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dfeff750-5617-4b62-a6f6-7103f2e7865d\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/0d470f02-5e82-45af-a15b-ce9aa3e639fb\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/32fbee51-8c6c-4239-b882-0d2f9c312645\",\"moduleSequenceNumber\":30719},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8e7d4ec8-294a-4e09-8b93-e224d82cc35d\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c282fcb5-d6ab-47b4-b031-639d4b2d36bf\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/328855a7-aa52-4b0b-82c5-b180cbeb0a53\",\"moduleSequenceNumber\":30727},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1339e361-5283-4bde-8650-d0c5a6f9a239\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9f67fce5-f643-475a-a36c-b191d78f4d84\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/53a1c1b1-0684-42d3-bf67-22b019957632\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/180ce50c-ef71-4a6a-8af5-a1071d303498\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/655ccc70-0684-4608-a80c-2260648964b7\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f60f2665-97af-43ab-b379-4a38cd102c8e\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/74af3128-6159-458b-981f-b12ba57e803c\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8b9a6072-25f3-4eb7-b104-5b64a815ce8c\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9ab04811-12c4-4bb2-82fa-bb1a60294abb\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a8d52049-6852-4d5a-8437-c9248b0909d7\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/eaf00406-8c57-4b57-9d02-fba696cb21ea\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bd733cb4-3705-4e29-b103-3f7f6d58628e\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bdd5104c-62da-47ac-858c-506c693bae87\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d979d572-8a0a-47e3-8fba-60b6d64c4771\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/baa890e6-135f-49e6-9280-c7afb966916f\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6c022590-a0b4-4bb2-928b-3e076a148b07\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0bbc1685-a3e2-432a-8568-6304ad57a40b\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9ff4cda9-70f7-4e0b-9b51-b044eb5317d8\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d210f651-5072-46d1-aa04-17fc16992d45\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/0b18459f-580a-40f4-a05f-d4a7cfdc8df3\",\"moduleSequenceNumber\":30710},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9573f78c-23bc-4d73-95a6-f94c284eee93\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c766e638-735a-4056-8754-f61a581eedc5\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/87615100-0190-49a8-afd5-968946c8b2f4\",\"moduleSequenceNumber\":30729},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/abacee5e-9017-4245-a839-3d9d45b04382\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4103feaf-50ce-4f6b-b673-44d3579b9649\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0997455b-79b8-4c34-97ed-d618221467b0\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/19ec6526-a316-4473-b302-2bf0dfa04c6e\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2bebea13-fa18-4a8c-bff9-7b0ac5b839cb\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0a5ad48c-0f37-4b5a-bfb4-7eed0838dc2d\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9279bafd-03e1-41f0-8773-c3d1f8f9d181\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0225c27a-d843-4136-80bc-e57ba04014a5\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/df626c9b-81e2-4176-9d7f-bd1a38fc3ec6\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f3eb2179-d02f-416e-b072-d9f567fa4b94\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7d310f22-0186-479b-bddd-156385af1e96\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/400c2b43-e8b9-420b-9214-001cc0216b86\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/be4dd263-8a36-4a23-b69f-38d26f55b1de\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8d31d56d-4fc8-486a-be7f-7fae38db0a1b\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/dc5d0e78-36a9-4aa1-bf09-f51ae4d97d96\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/33f545c5-d70b-4b9a-b729-fa74e4fcd500\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7916b594-9267-440c-92e6-4e8d51300ea2\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/16e5b334-9284-45c5-b13f-f1a977954fee\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7d072bdb-22b4-4c07-af3c-9e0236751909\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/401fb1cb-4469-44a2-a1ae-89bd831ddc8e\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/28188f37-c3c3-4e25-9905-1bcb4c12059d\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/5d46245b-775c-4f20-9d6b-6092d2a01557\",\"moduleSequenceNumber\":30723},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0b0b653d-4715-44be-9681-d8f74f60daad\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/001fc543-6d24-45e4-b7e7-eda6e4e6475f\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/41eddaa7-1f89-4d97-8fa4-687a84eb9de7\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8f9c97e7-5e57-4feb-a751-85ddba302a3c\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1842bf3a-56b3-4ebf-8c76-c154898d68a5\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/78de3ce0-f3e7-4fea-80be-88b8a8e3bb66\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e672c9e2-cf3f-499f-8885-1f87d08223df\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/84133214-38c6-49fa-aee1-0a4789324a55\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/10741529-476b-40e3-a1c0-c46f3a0d536a\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4dfa6707-45a4-4bd3-b7f5-c97f38f04b45\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/516b5e70-8765-4afc-bc51-5ebf8bcd7c5e\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7f4a834b-e587-4571-8f4f-671aa50073fe\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/507c2f3e-94ad-4933-8630-efb7e7dcac86\",\"moduleSequenceNumber\":30720},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/651d5f2a-120e-4ecd-bf24-9722dd95f524\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/af9e9309-8d86-49b8-807e-85e7f78a5d1f\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a23b8256-47ba-4f3f-818a-c51679f86ac9\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d98c3b6a-85e2-449e-934c-8709d10d4d4a\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/644f8267-4bc6-48b2-8276-8d58c843bf4c\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c6c12d40-cdd6-4816-b120-e591ea406aa3\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/189f7889-95da-4ff8-9467-f671faaeacf4\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3a540002-d09b-422f-87f7-63444dfff5f5\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2e58a268-680e-4a87-960b-375a831ffbe8\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c2e979c0-f6d0-4df2-aee2-a7d8584dedef\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c876093c-c900-4f12-b321-5365ca163c28\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/3d380747-4a50-46f4-8a04-9517ea6332b0\",\"moduleSequenceNumber\":30719},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0bf50107-c9aa-49b3-985a-1f5eaa181639\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e89cfc7b-bf78-44f1-aa49-36a8af3e3d3b\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/440e587e-588f-4206-bc1b-b003fdf61e6a\",\"moduleSequenceNumber\":30727},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8eed485f-8d23-4750-8b1c-d39ede6a7ab7\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d4f997ca-b1e7-4b4f-9505-824e0cba3360\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7089ae77-c01b-43e8-9c6a-d9e6969f2529\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/481de3d4-9a69-49b9-b8c3-9978c4fd29b1\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a1ffee04-5f93-47a1-aa80-46b0759dee5a\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2b781941-6511-49e6-8469-c56430acca23\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/85b09f0d-0d66-497e-9fdf-a24ef2b80b9a\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8ff3bc53-d0b3-4ba0-8835-d258e9d524ba\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/53115958-4663-4df3-a807-b2773a80556e\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3b6daf7f-abdb-4c2b-bd39-2ce498246387\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8b8d853b-7364-43b8-b83d-c4e3f0ac6d61\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d59ccbbf-141a-41ca-bb77-6727b6391b99\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/96e09632-ae80-4bea-911e-a9f091e67ca9\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1b09aa1e-18bf-4575-bd48-5a1394419aba\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3974b436-3022-4351-a3b3-192a046d92b8\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c56977fa-dd41-4e87-87b8-f91464addc12\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/59e42a17-e861-4e0e-815f-49fd6b800f50\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6f4021d6-a1db-45c7-92a7-f452eebf0b9e\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/263d244d-3cee-4519-a164-ffd4651bf7bd\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3932a887-73c9-4029-ad0d-8396aaf0c107\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1fd8a164-bf8a-4902-9e5b-badf849ea91e\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/741c10f8-f115-4389-b44b-a03396ed2d94\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/73665b7c-d716-4cf6-8839-0950cbc5d92f\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/38362ac5-872e-436f-9bea-0d0d24bb3f3f\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e66837bb-4afc-4969-808a-640eb9b569cb\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b2ded6f5-0505-4cd9-8c17-c439960017e4\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/62681953-b933-4e9b-9a4c-e4675bd316f1\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/60245660-2d8f-4bf0-8975-be0839b4004b\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/ab812638-dcb9-4e23-a1c2-146c53b857d0\",\"moduleSequenceNumber\":30710},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2dfbfdf3-cfab-4e9d-8d66-5e98e3bc95a1\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/44a36a3a-30bd-4a28-9955-badb4b5ea10b\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/fbb8fce7-c47f-4c9f-9293-2c898ba901e0\",\"moduleSequenceNumber\":30729},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/75c6733c-c7fa-4ed4-b5c1-9822ce33b50f\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/911eb672-b9d0-4a90-b0df-1d7ed28d99b6\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f973f848-2e4c-4dd9-ae3d-9da2859fbf7f\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/11df4921-fbc5-4f64-96a8-5a4a80f3b781\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2e0e9af6-7999-4f38-b989-44d524123bfa\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e4b78aec-e06a-4767-93be-55e44ef4eaa1\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d4b79798-0ead-4a97-ade7-43e57b297665\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/481da375-0cea-4a03-b9dd-219842d3b382\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b8dcda71-230f-4c1d-9283-c8c85fcf2969\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bc8c8fb6-dabf-4583-b650-a46d05402858\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/23972d04-e4a0-411d-8b3b-a12e460e2565\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1a531450-5876-42c9-8023-3830cda1df56\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/930bcaae-4acb-4904-9b52-1fecca080804\",\"moduleSequenceNumber\":30720},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2e7fe024-796a-4f4c-bb17-0e6b5f6c53b0\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f101b431-bc3e-42a3-beaf-a60f3c14a8d3\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ab8e93bd-77c8-4d3f-acbb-ad911fdbacef\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/514740ec-e477-4b0d-964b-2fb4946713ab\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/90d672f0-8eb0-43ff-b815-d898a07ce2e5\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9897790c-b79d-4cf9-a70e-a7dc7226dc19\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/13ac0bb9-28cc-4a9d-abf1-35e9d8603f9a\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/af01011c-2047-4bc2-ad54-637a1ad909d1\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/43c2a2f1-4aac-4939-8476-070395a60b0a\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4ceb1296-5cb3-4467-8b44-5243e17e7201\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/18084965-9f2a-4b4b-b17d-046909964fd1\",\"moduleSequenceNumber\":30717},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/40e51327-3268-441c-81c8-800fe6279656\",\"moduleSequenceNumber\":30712},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4b3e905b-251c-4b82-b90e-fc42f00947d3\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/69aa6b7e-9e98-4da5-92bc-37a5bd175f48\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fb859396-6777-44ea-b108-4ca0cb6a116d\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/fba02075-07db-4383-bed4-1377be9fb728\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/f5af3cd2-4e23-42fd-bbb3-c4e53b77a49e\",\"moduleSequenceNumber\":30731},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f763c4bd-123d-4fdd-a7ad-55e647539734\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f8b2b320-009e-4b23-8ab8-91dcfb0dfadf\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ee43861e-77b5-4c73-b344-21e6c0e7f944\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/db33237f-2aaa-49e2-b24f-c88e2f067609\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ab269b55-9ab9-4fb8-9dad-d782a5d9dbf2\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bf5daf1b-bd19-4729-8da7-0cc52ea03186\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/53393a09-f810-4505-9f20-1c996a3c7d67\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/aec9f574-81a9-4120-9c69-fecaa837c902\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0fa9a213-6632-4433-b9b9-90d564795373\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c7930cef-ffdb-4c05-a3ea-faee120fa1b5\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/88e66a85-b892-4cef-80e7-7f1b58d42fb8\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b8ca3490-4384-4eea-a788-3dc8981c28af\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2ffef1fd-ebff-4b01-a37d-0cc4a82ca1c7\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/70fdf327-75aa-482a-88a7-fdb838729cf9\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0a68b2de-6359-46f5-94d0-b43180f5a0df\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/eea44511-041a-45c1-81ec-86de6d87e7b2\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6046d9b1-fed0-44ab-8e95-b381aa1b9d5b\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ab345c47-32be-40eb-87e1-5e65b4b1cf58\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b505eeaa-beae-443b-9c29-3d2f007bbb3f\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1b4e4b76-4f1b-4354-b8ec-a95dfd70ed20\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1c823669-22b1-484d-a332-2a22268513d2\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/905b8d44-ee40-4dc7-9c5b-1db41f5da77e\",\"moduleSequenceNumber\":30720},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/22fdd6b8-5481-46a6-87c5-4810c1fe2d1f\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b5b8f571-67cd-482f-abd3-dd87b891b08c\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a96296dd-8d1e-4d48-b329-9337ffd626a4\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/09654cd5-94d9-4159-b93a-806052f39684\",\"moduleSequenceNumber\":30699},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ba58a864-6e97-49f6-ac50-a4e406bf02f3\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/2e9b1c41-69ff-4923-b4d3-ee7fb82b4c62\",\"moduleSequenceNumber\":30725},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9c677357-8809-4581-afba-c558bdb8df46\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/421e8565-ec51-46f9-b114-a2b24611492a\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d7a3d386-7be6-4dfa-a758-3fc1d636553d\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a8b1d056-7664-473c-98fb-e14a8313a4cc\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8d421d2d-af10-47fa-ab4a-c87b02749b6b\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a1b003e3-dac0-4241-91f9-3b20e4ecde06\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0065c6cb-8ec7-4820-b987-b965bd560eb6\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8287120c-b266-4c01-a209-2306084bb1a4\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/76b5485d-7f72-4879-bccb-308e85399f93\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f7a822c5-3687-4235-9425-284f08c79bc6\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/1efe2886-8bc2-46ba-95af-12f95d8b65e9\",\"moduleSequenceNumber\":30717},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/131efe79-c426-4e96-b9c6-75f574da2e79\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/32bd9e9a-db51-46cd-8738-f9040ba37d61\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9177f80b-869e-4be0-b256-57814a09f729\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3ed7e84d-4ee1-452e-be18-6286045d5a6f\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6e7a4431-62e6-43f7-b185-936ce718e909\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/b211b0ab-c6a7-46df-a681-89a9e7af2e90\",\"moduleSequenceNumber\":30724},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/867be34d-de34-49c5-9178-cf95b318cefc\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fb68631a-2f56-40b8-a9d1-c8038ec74348\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c27fc2a2-9aaf-4461-a2a4-d5fd19a23a46\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7aa5ecd5-c117-4d96-b30a-57efa2e2834f\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/01f59aa2-db0e-4900-93b5-48835b118b88\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e019c57a-d1b3-4af6-9baf-c198de110da6\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/55729805-1f41-4494-b877-5e85a40da239\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/08e6401b-2ce4-4841-a247-99a6cb338832\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/82bd0d92-107a-4dfe-a7d9-ca2302e03d3d\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/861b256c-22f6-4e55-bb63-4171507a6f65\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/60c5a115-0203-4aa6-b553-bd208156a72d\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6a3bc48b-d7b4-4058-913e-645c04874ba1\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/a053c6cf-f082-43d3-ab98-536d234184e7\",\"moduleSequenceNumber\":30723},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4ec3fc78-035c-44e2-9a39-bb74cd9ab21a\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9f375088-53df-47c6-9921-de4a684773f6\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a0c9371f-4acd-4e9c-81fa-2de894b9857c\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4325f805-7b48-43a9-b047-f9c54bbdcbcf\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/990bc899-6778-4811-9832-c9526cff4a04\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c833e40d-f10d-4ad1-b70d-c029bff560a5\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/19106e6d-0efe-4125-b92b-9da80e09ac19\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/421f0b50-c775-46a2-acbd-c029199f7317\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8c8d44f1-e3ca-43ea-8473-d37d84aa5fcd\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b1bc83d7-f5d7-439d-950b-8163a9f86d73\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/88269e62-309f-4d7d-9908-6aec66b6b0a8\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/708ce462-eae2-43a7-8bd1-1d6b2c273113\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/d2231431-6a59-4d95-b518-f3e5c7bc617e\",\"moduleSequenceNumber\":30720},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6fb15db5-5a4e-46bf-9fdb-9d9ea7383dbb\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e684ee8e-93d4-4892-9aad-c6decbe6847a\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/54bf1af3-b65c-4a8f-bc0b-080de5b58a09\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/269f3319-62bc-443c-9290-76e8da35a707\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9a320f42-7cad-4e43-9852-ab24f1ccce36\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fcab04c4-90e6-4a16-a9d6-210b76dec36a\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/80e82a28-19b7-467a-b519-6598575a130e\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f5d71bc0-57bd-478a-93e2-9187a80bba66\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8a821baa-9942-4702-a369-2db6f813c558\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f4757411-90db-46d3-810a-09718ccfc83b\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/970f3632-88e6-4466-8b10-5ceafba6efc0\",\"moduleSequenceNumber\":30717},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/a6c3037d-85d9-4854-96d3-63cad13ccaa3\",\"moduleSequenceNumber\":30712},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/73cc87f8-3ace-402b-b8cd-44486cc957bb\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/90b83b54-fe5d-40f4-9742-6010eec27bc1\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a5f3cdca-b26d-4bef-890a-2aad4c85ddba\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/7b491090-eeb3-4f79-8c56-e65dfff43331\",\"moduleSequenceNumber\":30699},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/691c9b41-2438-4df8-b651-d1aba8b7af95\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4819f6fb-3ebb-4d63-953c-1151196e2de7\",\"moduleSequenceNumber\":30726},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4596f986-dfb9-427c-b824-81780de52c08\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8bbf302c-da83-4943-a936-d9cd9ef2a25c\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/13bc33f6-703b-4d77-a0de-676ac96f5551\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/02e8f9b2-cbd2-453e-bfb8-e69502be3751\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3fc07a4b-459b-4095-968a-975188b7b7ec\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d1088327-fbd1-410a-95ab-ee574a3ee528\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0bd65a04-806b-4c43-bb71-f39eedec16ca\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4a5ae9f0-923c-4dec-bd9e-3962f9dfc7cd\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e76ee648-754f-4c00-ab59-874cdbe18ef2\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e8d50778-12a7-48d1-bd55-6c7888e421b6\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/84fcbf7b-1b05-4fad-b88e-3d83db78ea6c\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3ed052ff-b2a8-4a5c-b000-b6105405d767\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/50d04846-2318-4572-a5f6-348ad2a6f2cb\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bc1504c6-82d0-41f7-89c4-2dbf5bfe7103\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/148bab62-73bf-4587-8375-1e79f240ce41\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/19e93bfb-ac3b-4e56-985e-f560a48b15b9\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/27e0e329-3287-4e16-90f8-21970642fe58\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c7f7ea5d-b0a8-4fdb-9f01-7ed4e6fa1630\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2ef275db-4962-49f3-a44c-bfcefad6449d\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f1839888-3a91-4558-8ea5-7453b99126c7\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/df6490dd-b8c6-4a67-a852-0793685e71f3\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/6bd4e782-5bd1-4ecc-9b5b-956e101dafb0\",\"moduleSequenceNumber\":30720},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c6c0dc64-6542-41e4-9ff4-01d67d55b5e5\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/56658804-8ebe-4474-91e7-85c8e7dcdc97\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c6adafbd-02b0-4a36-8a17-6e30c5e2de6c\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/38d79b42-4b1d-4368-9e21-8a7c68c51534\",\"moduleSequenceNumber\":30699},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/71529b56-3332-4c40-924b-869f529d9b9d\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/dfeac00b-8056-4f94-931a-699aabfb996b\",\"moduleSequenceNumber\":30725},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/16f4d4d6-5266-4d10-bcc9-d8bc50c4ded6\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/32a8b231-ca7d-4e28-a866-6c66d282786e\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b106816f-db5a-4f2c-9c2d-8ce73f949181\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/307eaecc-82aa-45cd-8e26-13bd78c124f8\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8001a2b4-f380-4e7e-aa64-0e1079eecad3\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7d54b9e8-bd03-4c0f-bb06-60148281c82e\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8993eeaa-a3a9-4cfc-93b1-4754267841a9\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/38511146-5c5a-498c-8082-5e2d273d0057\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6ff108a6-a2bf-44f5-93e3-8da251a8fb08\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8cbefc54-f8b3-40ad-b1a4-784669780206\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3121ee81-8ff6-4910-a6ec-f80efffafae2\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4ad0e024-ced0-428a-ad59-d19cb5ce8dbc\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2f68cb7f-d5d1-4d26-934c-ea9b5cc5c1a3\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bf48e742-54d9-4cd6-93e9-e2e4c893997d\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3c27fa2c-14f7-4ddf-bb27-2ab0df065b5e\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/820a8244-a54e-4a8d-b977-a405e19b7d0f\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c6085cea-3c8e-4110-b304-99ecd3f59202\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cb7dfd0b-20a8-4e4f-b3be-f048a05c71fd\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/078bf73a-9924-4b23-b7b0-cfbe00e712ac\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f4d91873-d937-404d-b2a5-8c37974cd364\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/84dad4ba-9895-43c4-aad9-6847627f21dc\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/12bc8470-85d3-43f4-b8b0-74a82abc621f\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/afddcb0d-146a-4a39-a1b5-4f81ff7f1fa9\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0d79439c-9801-4d59-bb86-07c7419769a8\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1b00d092-45fe-4a75-80d4-9c09d5e0468f\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/16e3e432-85ae-4582-a3d6-fbf3d02bbec5\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2614fe18-4fba-4dd0-ab4c-7c171ef45a53\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/699fa1c8-e468-4805-a984-9744f912e472\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/08691074-5838-44bc-a94a-3be3524b60d8\",\"moduleSequenceNumber\":30710},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6cab91d5-10b3-4b9b-9c67-4e385ba88e9c\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9b03d7b1-1fe5-4b1d-a539-4badbeba82d7\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/6889004a-e3b9-4f18-b4d8-21e9ae6f8981\",\"moduleSequenceNumber\":30729},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/59344ce5-5e5e-49ec-aa35-10799d6d4139\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/93a088d1-95d5-4c93-b5a9-eac88ee9b12a\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/539d5fc1-97db-4d6c-bb7d-2c4f77a39dc6\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f8943d13-e3b8-4be3-af48-d9efef01302f\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d83b95b7-a74b-494d-9565-58d4ec6e1827\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fd0cbbc5-0312-49e4-8133-76aaddc1f53c\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6bb05a6d-afd8-4660-84bf-ed90e8a0b2af\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0c1c3eb3-0ce7-4b93-a1fb-8bc1680e0f53\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/82527551-8d1d-444b-8bb8-e68311d2f978\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ab8ddebe-16e0-4d0c-9aef-b0b4552a77b0\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d1c5efc0-2156-4cfb-8c2f-3d4df656de84\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/63c679f6-0d50-424f-8a66-53c30ec78b0c\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/d8761879-afbf-453e-b9af-ccd991bbac23\",\"moduleSequenceNumber\":30720},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6305b68d-3f7f-4412-a9d7-3bf4a3ae90e8\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b01e5e62-bc23-46cb-80c6-abfb4404b024\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ef197288-6692-4d14-b391-9a752641c979\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/559f7cf2-122d-4639-bdcc-868d4b111279\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/11882f71-d92e-4a91-9989-4a322e827add\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a1b54a39-b178-4a30-af85-425f9a3c020c\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dbc91e1a-bddf-428c-bce7-76c67d70650b\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8b40e803-8e6b-4997-8cde-f0e38a7b7fd1\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/71ca5e58-ff5d-497a-8627-cb17ac9c81d5\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c1ee17d4-f8fa-4c7a-b9b9-7bbd895d6cda\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/dc98212e-ef8a-4027-b71a-7110f19df602\",\"moduleSequenceNumber\":30717},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/f5c2aeaa-a928-4770-9039-3a3c74971d5c\",\"moduleSequenceNumber\":30712},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8daa9b95-fb0a-4e69-958f-c62a3991b2eb\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/79c928ec-f8af-4798-b99c-63f462db8981\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ff6a7319-ed9b-4e38-861b-e05df9908b94\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c169a9a5-6a4a-4983-9acc-017fd10d63f0\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/b9688856-70cb-487e-a1db-cb14a75f42af\",\"moduleSequenceNumber\":30731},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9f7ec6c8-3ac6-417c-82a0-732cb255971a\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/59b56f25-4163-4132-b5ed-16a60761f8ad\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c0e42a23-0240-4505-925b-a3ef1d56669c\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e3637f64-4c71-47d8-afa7-18f5b32c4c96\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f0a2053f-fb1a-41a4-8f57-057078b0a133\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8dd812d2-de0e-4d65-96d8-4df742c12be9\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b353b6e8-5c26-4769-af38-71de69df973a\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/958187ab-1428-4370-b65e-f7ad4743ebdd\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/40c5cef7-ded6-411d-95dd-8508c589293c\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/db5b7138-101b-42b5-a690-171c29edfca0\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3608040a-db71-4c4e-951c-c260a82a496d\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7d354488-e3c0-4287-892f-b3f57a26e9c7\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3e8b8f9c-1d9e-4c0c-9cee-a8c8e5733b7b\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9790a29b-4e13-40d6-b673-2cb1db87376d\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6ca139b4-a1ac-4a43-95d8-7d2060df851b\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8191abce-51aa-4983-bba7-f97bd81e6c83\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d7f39da7-1f7d-4810-94b9-be667643b203\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/02e5a71b-e6dd-4302-bc46-946decdf3c28\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/36ae01c9-d715-4d1f-8db0-141f228c22af\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1801f91d-2903-4154-a270-01b90be546f5\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f7bf3b03-e702-4fc7-a1f5-da21994244be\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/59c819f2-57d0-4aa4-84a5-b150b6b7b464\",\"moduleSequenceNumber\":30720},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9cb6607e-4ae0-427d-9ae1-73fdaa0ccda0\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/75bbac8a-0df5-469d-b31b-6f91e676e30e\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e37076d5-545f-468c-8f34-5e49f828cc9e\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/35bceb60-3562-48f0-a771-0444411966c0\",\"moduleSequenceNumber\":30699},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/3a5f05c9-6805-4e9a-8255-de6bf3f9c4bf\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/ff191475-3194-409e-b36c-a0eda6690169\",\"moduleSequenceNumber\":30725},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/020bb418-c039-4388-9b4c-a0e6afb853cc\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5a9c3e2d-c316-48a3-90d0-18faf5105a12\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/160d92fb-a1bc-40fb-b54c-b0b35ab6e3eb\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/27a4f454-825a-49c5-a644-c20ec9fe7938\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a9600e8f-58d8-4b85-9a44-6fc5c87946be\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/00e22315-497c-44aa-add7-0966ac1fa74f\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/aa8a8423-79cc-4688-9b3c-47e6c6f63438\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4566a9ac-a954-4116-a7d1-a24e524a88fa\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/36ab8116-23ed-4a31-9d44-d99a25845af4\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a85bc2b2-fbd8-4474-af5c-33b01d9fb43a\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/f321c0da-cba7-4a40-8f7e-7f1fe7737e7a\",\"moduleSequenceNumber\":30717},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/361e5228-cd38-4212-9268-ce5063f799b6\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/831688ef-91db-43f2-a853-8adcdb798686\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/65405a94-53b2-4ec7-a413-010386b50077\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9c32c585-323e-466a-872c-e8a486a66707\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/06ecf0a5-5ac6-4eac-b8a3-b27ea6cb999d\",\"moduleSequenceNumber\":30696},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/27776101-bb33-4001-9c79-25a84a5bfc28\",\"moduleSequenceNumber\":30724},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/32402185-70ef-4086-b962-1d2249b20960\",\"moduleSequenceNumber\":30713},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c609c7af-c156-4466-a05b-2edeb7279aac\",\"moduleSequenceNumber\":30711},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/46bcaba9-6edf-49ec-8aad-2f6bd60094ab\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2df5f966-3695-415f-97e0-0edb261052bf\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/82a09184-c401-4e62-b859-a01b0e9c64c0\",\"moduleSequenceNumber\":30705},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9890622d-c280-4fe8-9cec-343f4238625b\",\"moduleSequenceNumber\":30704},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3a302056-9451-4413-b546-4457f09234b3\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bf0c3cb3-1824-4a38-8380-f4b7c440754c\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4bdf3f1b-2b7d-42ec-91fe-75f5b0ef823f\",\"moduleSequenceNumber\":30735},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d5dd70a0-52ee-4369-be51-cece590bc651\",\"moduleSequenceNumber\":30708},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/de1b895d-86f8-44e4-9693-5c3b7bb914dd\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9c57de58-91ed-4e0c-95db-c593438b3aba\",\"moduleSequenceNumber\":30700},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/9b5bd4b0-73f6-4ff3-b066-bb29d508ea98\",\"moduleSequenceNumber\":30720},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/bdd4249e-0098-4e5b-9abc-bb08a931de2e\",\"moduleSequenceNumber\":30712},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0ea726e0-730a-4a51-aa6c-e3c872c40e57\",\"moduleSequenceNumber\":30706},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f850f2a7-e761-4fbe-92a8-38b2afd1141f\",\"moduleSequenceNumber\":30701},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/e96a5097-ea53-42bc-a164-47b9280d5709\",\"moduleSequenceNumber\":30696},{\"filename\":\"/singularity/faction-city.js\",\"url\":\"blob:https://danielyxie.github.io/66ccfae0-000a-41de-8755-162883fb08d4\",\"moduleSequenceNumber\":36391}],\"dependents\":[],\"ramUsage\":71.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725397,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { work_hack_lvl } from \\\"/lib/constant/misc.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { purchase_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport { lower_karma } from \\\"/lib/singularity/crime.js\\\";\\nimport {\\n    join_faction,\\n    raise_combat_stats,\\n    raise_hack,\\n    work_for_faction,\\n} from \\\"/lib/singularity/faction.js\\\";\\nimport { visit_city } from \\\"/lib/singularity/network.js\\\";\\nimport { raise_charisma, rise_to_cfo, work } from \\\"/lib/singularity/work.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Join the Silhouette criminal organization.  The requirements for receiving\\n * an invitation:\\n *\\n * (1) Must be a CTO, CFO, or CEO of a company.  An easy way to meet this\\n *     requirement is to work our way up within a company.  Choose MegaCorp in\\n *     Sector-12.  Have at least 250 Hack.  Work a software job to raise our\\n *     Charisma to at least 250.  Then apply for a business job.  Work the job\\n *     and after a while apply for a promotion.  Rinse and repeat until we\\n *     reach the level of CFO.  The promotion chain at MegaCorp is: Business\\n *     Intern, Business Manager, Operations Manager, Chief Financial Officer,\\n *     Chief Executive Officer.  We stop at CFO of MegaCorp because we do not\\n *     want to spend any more time on becoming CEO of the company.\\n * (2) Have at least $15m.\\n * (3) Karma at -22 or lower.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function silhouette(ns) {\\n    // Relocate to raise Intelligence XP.\\n    await visit_city(ns, \\\"Sector-12\\\");\\n    const company = \\\"MegaCorp\\\";\\n    // Rise to a top position at a company.\\n    const charisma_lvl = work_hack_lvl;\\n    await raise_charisma(ns, work_hack_lvl, charisma_lvl);\\n    await rise_to_cfo(ns, company);\\n    // Lower karma and raise our money.\\n    const fac = \\\"Silhouette\\\";\\n    const nkill = 0;\\n    await lower_karma(ns, faction_req[fac].karma, crimes.SHOP, nkill);\\n    await work(ns, faction_req[fac].money);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the criminal organization Slum Snakes.  The requirements for receiving\\n * an invitation:\\n *\\n * (1) Each combat stat must be at least 30.  By now we should already have\\n *     joined and purchased all Augmentations from megacorporation factions.\\n *     To raise our combat stats, we simply re-join one of these factions and\\n *     carry out field work.\\n * (2) Karma at or lower than -9.\\n * (3) Have at least $1m.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function slum_snakes(ns) {\\n    // Lower karma, raise combat stats, and raise money.\\n    const fac = \\\"Slum Snakes\\\";\\n    const nkill = 0;\\n    await lower_karma(ns, faction_req[fac].karma, crimes.SHOP, nkill);\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    await work(ns, faction_req[fac].money);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.FIELD);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the criminal organization Speakers for the Dead.  The requirements for\\n * receiving an invitation:\\n *\\n * (1) At least 100 Hack.\\n * (2) Each combat stat must be at least 300.\\n * (3) Must have killed at least 30 people.\\n * (4) Karma is at -45 or lower.\\n * (5) Not working for CIA or NSA.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function speakers_for_the_dead(ns) {\\n    // Lower karma, raise combat stats, and raise Hack stat.\\n    const fac = \\\"Speakers for the Dead\\\";\\n    await lower_karma(\\n        ns,\\n        faction_req[fac].karma,\\n        crimes.KILL,\\n        faction_req[fac].kill\\n    );\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    await raise_hack(ns, faction_req[fac].hack);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    // Perform Hacking Contracts so we can benefit from the extra reputation\\n    // gain when we share our home server with the faction.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the criminal organization Tetrads.  The requirements for receiving an\\n * invitation:\\n *\\n * (1) Must be located in Chongqing, New Tokyo, or Ishima.\\n * (2) Each combat stat must be at least 75.\\n * (3) Karma is at -18 or lower.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function tetrads(ns) {\\n    const fac = \\\"Tetrads\\\";\\n    // Lower karma and raise combat stats.\\n    const nkill = 0;\\n    await lower_karma(ns, faction_req[fac].karma, crimes.SHOP, nkill);\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await visit_city(ns, faction_req[fac].city);\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.FIELD);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the criminal organization The Dark Army.  The requirements for\\n * receiving an invitation:\\n *\\n * (1) At least 300 Hack.\\n * (2) Each combat stat must be at least 300.\\n * (3) Must be located in Chongqing.\\n * (4) Must have killed at least 5 people.\\n * (5) Karma at -45 or lower.\\n * (6) Not working for CIA or NSA.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function the_dark_army(ns) {\\n    const fac = \\\"The Dark Army\\\";\\n    // Raise our Hack and combat stats, and lower our karma.\\n    await raise_hack(ns, faction_req[fac].hack);\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    await lower_karma(\\n        ns,\\n        faction_req[fac].karma,\\n        crimes.KILL,\\n        faction_req[fac].kill\\n    );\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await visit_city(ns, faction_req[fac].city);\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.FIELD);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the criminal organization The Syndicate.  The requirements for\\n * receiving an invitation:\\n *\\n * (1) At least 200 Hack.\\n * (2) Each combat stat must be at least 200.\\n * (3) Must be located in Aevum or Sector-12.\\n * (4) Have at least $10m.\\n * (5) Karma at -90 or lower.\\n * (6) Not working for CIA or NSA.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function the_syndicate(ns) {\\n    const fac = \\\"The Syndicate\\\";\\n    // Raise our Hack and combat stats, lower our karma, and raise our income.\\n    await raise_hack(ns, faction_req[fac].hack);\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    const nkill = 0;\\n    await lower_karma(ns, faction_req[fac].karma, crimes.KILL, nkill);\\n    await work(ns, faction_req[fac].money);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    // Perform Hacking Contracts so we can benefit from the extra reputation\\n    // gain when we share our home server with the faction.\\n    await visit_city(ns, faction_req[fac].city);\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join a criminal organization.  The criminal organizations are: Silhouette,\\n * Slum Snakes, The Syndicate, Speakers for the Dead, Tetrads, The Dark Army.\\n * This script accepts a command line argument, i.e. the name of a faction.\\n *\\n * Usage: run singularity/faction-crime.js [factionName]\\n * Example: run singularity/faction-crime.js Silhouette\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Join the appropriate faction.\\n    const faction = ns.args[0];\\n    assert(\\n        faction === \\\"Silhouette\\\"\\n            || faction === \\\"Slum Snakes\\\"\\n            || faction === \\\"The Syndicate\\\"\\n            || faction === \\\"Speakers for the Dead\\\"\\n            || faction === \\\"Tetrads\\\"\\n            || faction === \\\"The Dark Army\\\"\\n    );\\n    ns.singularity.goToLocation(\\\"The Slums\\\"); // Increase Intelligence XP.\\n    switch (faction) {\\n        case \\\"Silhouette\\\":\\n            await silhouette(ns);\\n            break;\\n        case \\\"Slum Snakes\\\":\\n            await slum_snakes(ns);\\n            break;\\n        case \\\"The Syndicate\\\":\\n            await the_syndicate(ns);\\n            break;\\n        case \\\"Speakers for the Dead\\\":\\n            await speakers_for_the_dead(ns);\\n            break;\\n        case \\\"Tetrads\\\":\\n            await tetrads(ns);\\n            break;\\n        case \\\"The Dark Army\\\":\\n            await the_dark_army(ns);\\n            break;\\n        default:\\n            break;\\n    }\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/home.js\\\");\\n}\\n\",\"filename\":\"/singularity/faction-crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/bb7d225c-2087-451c-ab0c-d2ba924dbad1\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2ca3c5ea-7fbf-430d-b30b-38566ede4889\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/67f363d1-6eac-444b-b371-dba1d002f2aa\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0de28f68-26f2-4c35-bb8d-b495a041ee56\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d5f0c214-275a-4399-9c7f-470cc9236771\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/43b52cb7-5bc2-478b-a41e-fa5b529fb572\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4f3cd9bd-c0df-48ab-ac14-7912e21f5bfb\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c05b85c7-f351-447d-8d4b-43b4039ac216\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6ea07ce3-48ee-4aeb-b3d5-6172fd4b6c63\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a8417f2d-e920-4f16-aab9-84b9f234876c\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9182ae2c-77d3-40a9-86ad-ca4ad519b314\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e6885399-d129-4f77-8b6e-41ff958dcc8b\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/48b02c65-0de5-4197-bb3c-bb12bb414b81\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fd9d46dd-cba8-4a28-9e15-c85cbbee717d\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fd8a821a-6d90-4b85-aa3e-1a2159e3d3c2\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f0712ebc-3783-4e87-afa1-ad9e7a718cdd\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f6499495-0990-4f70-9558-f4453ed4b140\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d069e451-9c49-476a-ab56-60000f182e83\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c7a79e58-addc-4a60-965f-086d16202803\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/702a23b3-1f6a-4bcd-b3e7-eda3027f1c9a\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/52c1eb37-1ee8-45bf-ba90-60cda88faf2f\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1900019a-e1d0-4653-85ff-4ce9c4b80c06\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ee891f71-0fe3-416a-8454-4b586cd434f0\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6452324d-92af-4a2c-ba76-2143e368d292\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2e3ed1f3-abd4-42a2-908f-022fd8c21ff0\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1586afab-09e3-4c70-aa6b-e53237f8804a\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/06990276-8609-4b33-9f02-361f1dc08424\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f6798aea-61d7-44f8-ab70-f828061dad00\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/5eaa4e87-920b-4272-a70e-84086ce55735\",\"moduleSequenceNumber\":705837},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2616030c-3259-4391-a73d-0228e456e755\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/4287b023-6475-49ca-beb1-8ab8a535bf3c\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/727f7e4b-d435-41e4-85d0-3d9220cd6ade\",\"moduleSequenceNumber\":705856},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/faa4f081-bb96-4b95-b049-8c7883425b67\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/22aa62fe-2b1e-48ba-ac18-95e5e97228fd\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e1e322c6-3065-4c33-9c2a-eac948c5c33d\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9e53ea16-e41e-45db-8cbc-6e185d5a01c3\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/34b361e1-dfba-4417-8ab5-f54e6196cb2a\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5bf48037-6c5e-456b-a837-915a1323f9b1\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a6eedd84-2823-44b1-81c2-cd0bab2993ae\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/10be2dda-c070-49b6-b69f-2eef91df0613\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c541e009-5721-4951-ae12-8d2db3c21fe6\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a268775d-ab36-430b-9933-eac86494c154\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/630dd9f7-696d-4f9a-b33f-effb25e31c8c\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1b1df4b4-37e6-4f5b-8cee-88c5b1329b0a\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/a2848020-1ce9-4149-90d4-7b59203a9965\",\"moduleSequenceNumber\":705847},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c9bc910a-9155-484f-af49-039e93a0aa5b\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d9ee0ea6-efe8-45e5-b069-00627d4eca4d\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/72ae16ef-e7a1-4c25-8884-9cec690cd9cf\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7b68526a-11de-4756-93d2-effff93593c8\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/78f31b72-5790-4f6f-bb4c-dd886a39fe08\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3b4169fd-2517-4ebb-8203-2f8f90af4fbd\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/adcf9b8d-5e07-4efc-9744-be5c2b812f9c\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e4b7780c-04df-4495-8782-1ee5bb823a13\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/50f82f7b-4ea2-48b9-ae4b-fdbaecd239f6\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3757146b-62e6-4dfc-9699-3cc085853fc1\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/c3090b3e-9839-43a3-bb6a-51ca93100456\",\"moduleSequenceNumber\":705844},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/fff70340-735f-4617-835f-5cc19c23a4c2\",\"moduleSequenceNumber\":705839},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cf68e4ef-3f26-481d-a1c8-9f043b5544aa\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4e689105-f450-46a1-8613-0daf3a308bea\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2350790f-33fe-4509-8d1b-272f39476117\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/0ec26838-37fa-43da-b5ce-8e459a01d6c5\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/ee1be0c7-d0dd-44f9-9ac9-1348841b81c2\",\"moduleSequenceNumber\":705858},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ea45716c-8220-4554-8cb9-8e5de9f79aea\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/81e265ad-5d7f-493b-9b6c-c055990a81dd\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3016b805-2bcc-461e-9d9f-ab1b281b7b3a\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6383479a-8826-453e-a2e4-0620676c4e92\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fa323978-8f08-4258-870c-aabdbc98573b\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/854145b6-9455-4034-b5c9-847c8b01b225\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/11c15b01-689f-4170-8d4e-96e96d225b28\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c4f2b6d2-8b9b-4b8d-b561-907f1180fdde\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5abcc15d-c6ad-425e-bd07-03568c928554\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8eccd5b4-aa11-41dc-80f7-58daa5df19b2\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d41f90e0-5850-4563-9747-0fe4432ed2b0\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/afd35aa2-cc3d-47b4-9465-364f2fc5ea6a\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/429efa07-092f-42af-83bc-e2deadc78dc1\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/133f6fb5-647f-48c1-8114-6540f297ebbf\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ae4f0ead-12ec-4e5c-ae4c-15b5f124b03d\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3332fd86-272b-432e-b45c-d351c6f88eab\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/22c726dd-0858-4bcc-83e3-7530f5f21cf7\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9719c47f-5135-4617-82ef-7a393eed3b6f\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/09efb401-cc76-4b40-b84b-b35d83b4e52c\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2639ffe8-21a4-45d2-9f4c-7813705a545a\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/765a79c5-6c56-408f-99da-fa03f62f633d\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/08607a91-957c-46eb-b89c-d984a2c4b0be\",\"moduleSequenceNumber\":705850},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d05238b0-0ac7-45fb-a9e1-7ad5926074ba\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b04cc3da-4bc0-4b33-86be-ad137d4ec05d\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8ccfb977-0b1e-4aea-b946-07f5b18ed5cd\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4fd24ad8-f086-42d8-b0c2-93b3b921287d\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c9a73820-4746-4da6-9df5-71c7dd88adb7\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a2115c08-180e-428f-8214-c6440e47742d\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8a40b589-2ce5-4f1c-bacc-a5be9f2ce554\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ab679a87-5e1f-48e0-8722-777b91d57c6b\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1f726c35-0c11-46b7-b497-a756de200ab6\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/297c6271-29da-4777-bfee-0ba634839537\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/01f831b0-d590-425a-83ba-3ae4d1dbff18\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/53e1b8dc-57b3-4846-be48-ece7fcafce7f\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/5ad10ce7-3ada-4743-b564-66cb49a5a29a\",\"moduleSequenceNumber\":705847},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f2aa2296-03ed-4a84-9995-b904e2199211\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4fce8277-8c75-4a7f-91fe-395dd3f2f411\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/563b8b24-a072-4335-87f0-9b6b403e91c6\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1a45ce6d-addc-498b-b633-2abb3a4f2496\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/443c63b7-c371-412c-a7da-c8c30f8b3e17\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7efffce7-f89a-4b43-8df6-96e0a93ec068\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/241b2b06-b534-4722-b131-6f9616f4fb6f\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5c481359-c82a-4344-8861-b853ba30b3ad\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7d354256-6443-4992-abf6-e70400e8e71c\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cfed41b7-027f-45b2-b077-1b3eb5fb45e4\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/488f35ae-cc61-4ddb-b4dc-921f0a60e40c\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/2f7930b4-a165-491e-ad15-ffc362848299\",\"moduleSequenceNumber\":705846},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d54d635d-5477-46f9-829b-8ccf939bef15\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bd825175-07ee-440e-ab85-6ca117da11e7\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/911f985e-23b1-4128-b674-c83503c81838\",\"moduleSequenceNumber\":705854},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/bf2ee1fe-45c7-4e6d-bcd3-d4c4aaa0013d\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/774d107b-bcc5-431e-b83f-e3874e3ae4ef\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c6a25eee-4822-4f4d-adb0-ef7b7c004233\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/81dc146d-61e8-4ed5-8d80-eb81bd50174b\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4928d7cf-3122-44cf-8fc5-a90b3d2883f9\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bde0fa75-8d31-4f0f-8c91-600c68b8abf1\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/aed2e2d1-62fb-4f8a-80dd-9e1324d92821\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/515048cf-b609-4d76-90b2-4a8fce2151db\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6de03470-69c1-471d-b461-5ade9c575803\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/021e35d7-0015-417c-9b20-76c4efcffe74\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/13ff064d-eb5c-4f3f-b45d-b5e446374ade\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2651663f-6fe6-403d-95cb-c800849dcbf6\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dcf7a5d5-c551-433b-bcb0-22444d6689d7\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/db029f6c-af84-4adc-ab72-d25709fea804\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b4cc556c-444b-4587-87a0-60b1737700a6\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0583ea91-b26c-44b9-80fc-160b28451acc\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/58b887bf-63f3-4120-9d2a-491be744bddb\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4d3f76fb-077f-4036-929a-67325b9d2ad7\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d3ced707-06a5-4b31-9fba-41b3d7dc1053\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/4a8b6932-5050-4a38-89c9-03d470965751\",\"moduleSequenceNumber\":705837},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9c2739cc-9d8f-41ce-9156-b625765dcc8a\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/cdbc534f-7ca6-46eb-96c0-843433f49f68\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/e892632f-2637-47ba-a03f-6c6195a12d9b\",\"moduleSequenceNumber\":705856},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f0239b9c-a8f6-4398-81b4-b11ce7eb18ff\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/962c9b30-8192-414a-8cc6-e75bdafc7a0b\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/886f9357-d0a2-42d3-a593-f937a5d5c13b\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cc9e7b54-001c-430c-92d7-5dfc4c08553e\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f68df0c2-fda4-4b2d-a2a4-e73996cf37ae\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/933c23c8-30f6-4144-901a-0e6a931094d2\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/48f71ba8-991d-4870-9073-56d287d3f774\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/839aaa44-d0ab-4fc3-9431-66496c22413b\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4dc42a3b-886e-4dea-97b3-a0f444703524\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/365f3adf-90b9-4766-8331-12af07559a35\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7211b993-6b86-453e-917b-057a1fa1d9d4\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/261fb214-c40e-4cd8-a343-c9f4fe475652\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/91191116-4956-4801-88e0-1ab13d4d4e24\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/30946f56-6570-456b-abcc-4689f5b8b237\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/df559c95-6ecd-4934-ba44-8684d8b33c63\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3103a68a-1e94-4cd0-a576-1e1c9d621234\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4e34f337-a6dd-499b-8467-be5b823f642c\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9c84d02c-2169-428f-8b61-78596500818b\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/72893f1a-09be-472f-a13c-159eb0a2583e\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/03fea414-7c8f-46c3-ae14-a8ec86b17937\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/485110e4-0b39-4fa8-b6d5-af125e296067\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/8e96d01e-c33e-4fd8-bcd1-6d4590921836\",\"moduleSequenceNumber\":705850},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5a44769c-1e13-4e85-aae1-d68466f8f4a7\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2150e9a8-409a-440b-93a1-46766ee9e414\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0ce4e468-1047-4b19-8b3b-2112fee40ceb\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9f774dd5-0cab-43c0-9856-8f81b017db08\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/480e828e-611c-4ccd-92a7-eb595a6c0e65\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/38b96d86-298e-42e0-8c56-d8777a797da8\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d26187c0-158c-4f9f-acec-867279e44236\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/86b1eb3b-8f4d-4bf7-9e58-af17ddc2ecda\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/297c46bd-68eb-4415-8d07-d0c4f030a8f0\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/65315e20-3729-41eb-915e-676f6252df35\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4a8bfbe2-1eac-4e56-872c-cb9880115c05\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6d013a04-3616-4822-ae77-fd0cade49436\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/4b9d5f5a-f27b-437f-b2e0-8d7b982ba9ec\",\"moduleSequenceNumber\":705847},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/06d05b07-cf1f-4752-99f5-27611d0a2ba0\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1a32df6a-4f14-4b5c-bc6e-27ec2cad46cc\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/871fbb9b-e6db-4c6d-95c9-eb03b7d82cef\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/41700a5b-df1a-42cc-b2c3-35c67a55c8e8\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2811428e-c366-47c6-94ac-0536bc5dcb3b\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0d2768b8-e25c-4536-8503-34ef8acba7ee\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d672dd44-686e-4f08-aafc-12d47f9f7cc8\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c19204dd-0bba-4170-bd14-c64915d4750d\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ab515d90-85e2-48ba-982a-6834222a97da\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a9d9c738-1755-4b65-8b53-7f837b9fd413\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/21ccb423-8e33-4634-b90c-2cfa00196c67\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/a275f13f-e8b4-4903-bdde-816f3f926d93\",\"moduleSequenceNumber\":705846},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/43997d38-4cc8-4a5b-ad59-27c2645fee73\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ab6b70f0-d71a-4fa5-82be-c65850491924\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/b121356d-83f3-4b6b-bb58-48bdb9615c28\",\"moduleSequenceNumber\":705854},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6dc2ef01-ee4b-47b0-accf-a4a94a82122f\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/22997def-a767-4aa3-a9f3-e70655763cac\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1cf7f8b0-005d-4940-938f-416b5749bea5\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/70a150d1-3575-4610-95a3-fe7b651bf1fe\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a10cae4a-eb34-4ae9-845d-6962bce35cd5\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f198bdc5-5e68-4184-86ac-0b651106d860\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/02efbee7-8f2d-4137-a441-ec612d0d3af1\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4fc5acee-98e1-49dd-9be4-228d0f7e86eb\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fb3e13fa-b08f-4bca-80cc-de402406eedd\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/267be605-8fcd-4c4e-8ca3-f6ef113c2217\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3dcc0909-9751-4043-baa5-5c378248ebc3\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/60dd0b4f-05f0-45d7-9690-dba982f67cfa\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/300785cb-02ff-4b05-abf9-dd89d0d7f0f7\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7da75f16-7ffb-4aa7-86b0-f0e859fc8cf9\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0b250173-c9f0-4a45-8bd8-b2e9dbdafcad\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f388dc34-01d2-4daf-b6dd-11ba7af34b03\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3ced74f3-ec47-4388-b029-e514bfefe1a4\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/34aa511e-4727-48ea-90dc-30f0948a102a\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0a693304-c6d8-4a06-954c-843bb0ade731\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6740399c-b32b-44db-ac16-4ae03c66a2f4\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b9767e24-98ee-46f4-b608-c015cd0f58f7\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9a211c03-6524-409f-9418-219ff459bc11\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4b98fc9e-866c-4289-a81b-b63951891275\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/933499a8-78a3-4243-98f7-f8f153d1bd40\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/376ab5f9-7a12-4bca-afba-0558ea1fa425\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/595a433e-36be-4c43-b451-b09672847a3b\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1d5206ea-f133-4f2e-9cde-083af1ec8a6a\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c639b2cd-6d45-4733-8206-e96b07342b35\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/f21520a1-597d-477e-9e99-555d1ff4aa0f\",\"moduleSequenceNumber\":705837},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3b1355b1-6b2d-4e67-a726-f2268c038027\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/e291cfe4-09b6-444e-8842-c2dfd97e42e8\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/e504f812-1043-4ba3-9473-e1d8b753d78c\",\"moduleSequenceNumber\":705856},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/18fe76bb-0a32-4ae5-bfc9-aa3c35214789\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3cab3217-70a2-4a29-8c52-68a093494b99\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/de4f71b0-1ad6-44fe-9840-8f00cb7835b7\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/414b4b54-c802-4ecf-b832-783003eaa73e\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3c6d68c6-27b6-4978-8b90-f15eb8a5bb0d\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bd754796-db25-4a7d-9c68-e3f7a2b27c21\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f580b000-810c-4571-8222-397d812a77af\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ee15dc7a-9cc5-4d9d-b885-1cb3e35b417f\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ed1a2417-c7d6-4843-acaf-97fbb02af90d\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/741d6fdc-0354-479a-8705-5771c2356479\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4d66deba-0381-40d5-988a-4ce276ca16cf\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9572ba85-3123-42f3-a4fe-2814fcb42ebb\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/23791027-805c-4fda-8ab9-30bb7aed4804\",\"moduleSequenceNumber\":705847},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/33d84972-911b-47a7-9b84-e653024684d4\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fd7c6a36-e7f6-40e6-90ff-dabb67408559\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c8ea25c6-d590-422c-bcce-f0b4eae9a3fd\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2f880a7d-b049-442c-a873-9e1e1fbf4754\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/193e9bb3-2bf9-4711-9afa-de7c35077dc0\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7bf12b13-ffed-4696-9ef5-ce04864aa31a\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/129e8c21-c25a-4658-8d57-b3072cb18b82\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0bb1e932-aaa1-48e7-8ab6-149ab5ab3398\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4394bde9-86bc-4d9f-a81b-4b1fa6a35c0d\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d1f902d7-ef4b-417f-8e95-3e4d835723c5\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/27081281-e7d1-409c-9472-08463c3fbf95\",\"moduleSequenceNumber\":705844},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/00af0e73-f4e0-4c05-ac0d-51ca64793fd6\",\"moduleSequenceNumber\":705839},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/881796df-52db-4fc8-92c2-601bc0faf6c6\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f604ef47-0e0c-4e04-b0df-a0bb70f852ed\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5d0942a4-668a-44d6-871c-784008167b24\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f13309f2-e446-4011-9424-5c03637af4e8\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/6c83f950-c8f6-43b5-b72f-c11eabba17e4\",\"moduleSequenceNumber\":705858},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ee45ecbe-b833-436c-89eb-c5e0707fd54e\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a585b304-0715-4a40-9abd-ffed4b6910e8\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b3c168f6-dd57-4133-9bc8-94419aaeb4ad\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ff090c70-c667-441a-b186-60ea44bd8b61\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5256d3dc-94f2-42b4-b80e-e072b7872b6a\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9073d69f-ab85-4351-ad9e-101c8e7dd5df\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6da96449-4e58-41ab-8843-93098f2c8ef8\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/efa060eb-d61b-4bcc-ac16-0219c89a82ef\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/eb09257a-1fa5-4433-9e54-db919f96e52a\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8dccd943-0007-4fee-8400-c0422bb75512\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e9355ad0-5c60-4312-a222-842f81b50fd3\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f05f5aee-5e23-4948-89d5-0bbf7918a863\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a1118cb4-9fd5-4a6f-8f78-02dceae98fe1\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/541f9adb-df74-4ed0-a2cc-083964ecb9e8\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d912364b-652d-4694-a43d-79ef86fe3e82\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1e2e8d3b-445d-46d8-afc4-067d0e86748d\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/87150d76-cfdb-4870-b986-edfe8bdc713c\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/82b87d54-2981-46b1-bd08-4ee0cd0ca7e3\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f1936024-ad1e-493e-9c66-0cf84c075638\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7946e629-a4dc-4807-b3d2-b8dc26b76a1a\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/41b30929-0c92-47d5-acd4-b8cf7d4fa512\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/6a355f11-a2c9-4fab-a11a-ef8fa757343a\",\"moduleSequenceNumber\":705847},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dc2e02f8-034d-4d65-9848-99d752cd8556\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0e43dc65-0abb-4ed7-9267-e18fa526b6d0\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a8032617-7430-4513-bfd4-0dfb94bc57b8\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/05637ca3-1a40-45ee-9b55-7e0c8e289400\",\"moduleSequenceNumber\":705826},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/114c2d91-badc-4fe4-aa57-6a24af95eabb\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/82494e25-f065-4c6a-972b-b874c9913077\",\"moduleSequenceNumber\":705852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/06d9a496-9547-4195-9fab-1dca4f53fafc\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/49c4dbfb-31a1-43fd-834f-e866f522aead\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/17cbeb2f-3c57-4111-b33e-e3ee98193f7f\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2bb491c4-df6c-400e-8640-104ecc066896\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7d41c4d5-ed06-4ccf-924c-553a173456da\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/64f2f43d-3112-41ac-a4fa-4a0e833e4c0c\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6078bbdf-f116-4ab8-a2cc-9cfaf1c89ec6\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b36fef2a-145a-4af3-81a3-442718a5a433\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/70102c13-4559-494d-bc32-41e1abdcbddd\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2af6f31c-2574-48de-b8b4-26fb6716fda6\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/a6de3443-91db-4683-afd4-4232f6dfb1f9\",\"moduleSequenceNumber\":705844},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/202d8a8e-bfbd-4f25-89e3-4173bff5feff\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ebf3c7fd-6296-46d7-9f50-ec6df8969a7b\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/af1426d2-a6a5-457a-b8dc-c04cdcc82fed\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/287c417c-2b0f-479a-8e4e-c19cf4a80aac\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7762743a-3d5a-41e3-b1c0-c18566ca7c11\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/01845f60-8a61-471e-b9a7-90a42d1b8e49\",\"moduleSequenceNumber\":705851},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/16c297ea-7438-48a4-bae2-24e079eb16d9\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c609d55b-b01e-4045-ba36-3de67f8e927a\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3271fee7-5f91-46c7-b677-9929b4aeadfd\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/57b99a82-af2b-4186-a8cf-30343d64eff1\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b332b442-e61e-419a-954d-2b872ddd650d\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/709fc664-6176-44d0-8d4d-90d3d8e6cc08\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/99793f76-55a8-4256-ae55-b7dbef0a91d1\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/411b48b8-d151-45dc-8a80-1b126e08bd87\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/50fc90f3-28b1-4f05-9931-3ca4cc828f95\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/38b78a97-d529-4232-ab41-3171ae9238b0\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f922fd50-7414-40e2-a772-f0a062b7f2f8\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6b332916-26a5-4a88-af4f-fb944be8a999\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/679b1ba3-7028-4140-aae3-a450a60c3d74\",\"moduleSequenceNumber\":705850},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/47221191-78bb-4042-be9f-bbd865364ad3\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/277fa37e-9e30-4da0-bdb9-4038dff6fe29\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a61ffe45-3438-4845-8e7a-e7b9b9dbf186\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1398982d-592b-454b-ab95-21fce66e4dcb\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/734a6082-84d2-4904-bb47-906c9f1b1c16\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/85470c8d-81c3-4c54-b8d3-8ceb4b325f72\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/791899a5-9073-4c2b-b212-41887815d693\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0c1d1694-4eea-45e5-a2c0-dd0a05e94a6f\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1dc3cfab-2453-4341-b882-7e300bb84024\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4ecc67e1-3554-4648-9969-51d53df50607\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6fb72719-baf1-4f04-8229-ed4cd6b31d26\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cc74200a-b976-4390-a04b-d53961f4fb1a\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/c97a1599-f7c3-4b5b-9f5f-471dd8f621aa\",\"moduleSequenceNumber\":705847},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a39b0602-9ebc-4728-9887-e54e51e41d25\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a448363a-2a2e-43f0-92c4-7ffc5641f957\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/44ba6c79-30f5-4051-a02b-2d31b24e84c5\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/80e4bbfa-d610-4ecf-8a6f-61352c1a397e\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1e705e3c-5010-46b1-9adc-06f908771f82\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d4a652a0-98e0-4397-90f5-3512db30fa56\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/222b4f2f-227f-42e4-a42e-b158ebcf8512\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8945d455-7101-4703-9971-f54c546c2e03\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d9812b49-97bf-412c-82a4-c2b2ea08f243\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fffe41b5-09d8-4094-a613-7ce4005dbe13\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/efa5f67f-1183-4406-9015-b425f869e8b0\",\"moduleSequenceNumber\":705844},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/89115d09-07ac-4fcb-b012-010e8fbdcf4c\",\"moduleSequenceNumber\":705839},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/64e7614a-6360-4068-bf22-dd2bd4854df4\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/99ea9c50-d1bd-4bca-a3b6-d25cae38bd71\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/63e36f77-b46b-43ce-aff1-c0d4d33c2a86\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/d5a47aa4-525b-4f24-ac64-5775868d86fb\",\"moduleSequenceNumber\":705826},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/639b50db-fef7-4f05-9ef7-71b96dfe437c\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1a8e576e-13d2-41ef-bf36-983d33553b84\",\"moduleSequenceNumber\":705853},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2ad50f00-4f5b-45e7-b65f-8db8af8fe0b7\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fd2d79e2-6fcc-40df-acfa-aa4960df9e55\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/732bd7c5-0200-4ffb-845e-13211a0d8012\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a2169f86-6767-40e9-98c2-65c9906ad9d3\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f7b15c1d-5322-463a-a192-68e70d798847\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c86721e4-27db-4ffe-a8b9-2494da43bd8b\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b4321bb0-4b8f-4ae5-a6d3-4c49bc19eac6\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4a46ebc3-8724-45db-904b-38fac5b0b5f2\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ccdd9a88-5c7f-4af8-a1f1-3ca2ce9df3b8\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/49029b31-8186-42be-80ff-34ba589713af\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/aae1f05b-7fbe-4e90-97b4-f3ef56766a61\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/60233e89-df99-42f3-a649-36d8a3db0e50\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0abfec61-ff3a-48fb-80aa-4a8708124b77\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a535aeeb-02c0-45db-a146-54ee082dde8d\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/55e654c9-0657-4877-87a3-195143072da6\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6017ecdc-50a2-48a9-9bfd-71a52e016eaa\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c76d7cf4-e05e-49ea-973c-dbae77ffff46\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/34a835e8-45b7-443f-9199-75962ec07686\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d4a4511a-48a5-410e-b693-4201768573a5\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/21f35709-f874-490b-adc3-47a2e87e808f\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fe311777-804f-4214-ab32-de0ffc36dc49\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/b1738e39-20dd-48c3-bdc3-3859912f8a00\",\"moduleSequenceNumber\":705847},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a59c9998-9ccd-4d50-8fe4-7a7618046cc5\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8ccdca7e-52db-44d9-97e1-6fb7b9cab884\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4f7dbda5-a433-4731-b97d-73145a9ab701\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/a46acfdf-ab86-4a4d-944d-111922b1d09f\",\"moduleSequenceNumber\":705826},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7fabab7c-92bc-4cbe-8394-7372b5b85563\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/3944dbc5-884f-48af-be74-02dabbfb0404\",\"moduleSequenceNumber\":705852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f54ef13e-8b3f-4a58-97d9-2c05fe2144d5\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1ef8ca54-d168-462c-9a98-553773732363\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9d511272-bec8-48ad-b56a-2d6d241d019f\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/284af8a7-3197-48f1-861f-014909fbf59f\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/17164626-8d58-4be4-b78d-0d04c6b72eed\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ea915b14-7b10-46cb-b33b-d87bea4b9516\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1eacc0da-b4b0-4d44-ab4c-7463a39c38ab\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6454473f-d89a-4822-b3bd-945cb9bb8907\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e1d67508-8744-44fb-a238-cd01b73623a3\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1783f25d-87e6-419c-ae32-91a13df51b53\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0b35e3b7-a4a7-43f0-94f7-d0ba680cbc9d\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4c46c755-c1e6-4b17-aef3-fce473f5e6a7\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7eddaec1-d59d-416c-9d0c-5a0934591a3f\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8a481599-240e-4b73-a37c-b13fafb8ee1b\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e60e3de5-71ff-46e4-bc79-634e657d3612\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/aef519b9-2403-4527-9fc2-c81af6f8e5cc\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8b858c73-0e05-48dc-b2a3-7e9afe3dbfcf\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/60984680-6c35-4e3e-90a4-ad0cc3a60171\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8edb9563-b88a-41d8-a080-49eeedfb0aa6\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2ff73730-f8b1-4291-8a50-547002529623\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f46f3750-62bb-408f-bc9c-1ae5ded4f400\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/02e8cc35-59f4-45a9-9f1c-5c899e37e8c1\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/19de352a-9d93-46c6-a1b6-401d6623b320\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/057bc3d6-d8fe-47ba-8512-de679281628d\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a432507f-8eb0-49b1-b83e-d7c26ae747d9\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5cd3c90d-c9db-4488-8367-0be0a96fcffa\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/eced8022-c6c5-4a95-ba14-1f64fb697657\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c533a396-bd60-4e9e-9e25-b0356b15c0b9\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/f0f94271-fc34-4a48-a034-484087b0aedf\",\"moduleSequenceNumber\":705837},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cc400601-d9f0-4c19-aaf6-51bef185b322\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8cd39fef-5d0a-4336-b9d3-b090d2876801\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/fc92af3d-11aa-4f92-be07-3e1c0eb0a05c\",\"moduleSequenceNumber\":705856},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6cca7670-334e-47a2-8520-6cd31c5ef06f\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8e8cf938-de67-403e-bfc1-4a74f5612fd7\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/72ddd081-a4ca-4a71-93d6-e6aa3dffd183\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ff3f41bf-0ac5-4c2a-98e4-64e7461410f7\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7f7f8fd2-58dc-4c1b-bf6a-5bb680ab7ae0\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1999407a-37c7-4108-bdda-17cc74ed3f85\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bbf9b31c-8ec4-4154-a61d-ca488e4f2112\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5d604dc9-b82c-43a4-9b81-3efe04afad09\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1c40586f-dc02-4d95-b4b1-692669ddef9d\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/60624365-e613-4efe-a4d0-1cb4b465deec\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8cc8131a-20fe-41e6-9b01-07c61a0448de\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e840fca0-45f3-4b58-8cc0-eea2888029e5\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/17383c15-b2d6-476c-80b1-419165271996\",\"moduleSequenceNumber\":705847},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2b99b919-7704-403d-adce-c6df83ba397d\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6082204c-fa3a-4744-adbf-869a9a7b8168\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/59bf3860-e1b6-46f9-9670-378d6a17fc46\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3b443e2b-c8de-492e-bc2b-e146812645c8\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e3182ae0-5937-4b67-9156-34ab7cf5515a\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ac616412-ca9c-4dc2-8877-50421ae4734d\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3293cbcf-d995-4e6b-b6cd-800429c2d1ac\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/54da716a-77c8-4f0a-a70c-dd6b8e20dae4\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d27b2252-408e-4f96-8ad1-55707da250ff\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/45e808a4-9398-42d9-b034-19860cea085d\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/6aff772f-b47a-4bd9-9c4e-9a0d22dfa38d\",\"moduleSequenceNumber\":705844},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/fa7ba181-611e-443e-ad4f-83120e1b0bf1\",\"moduleSequenceNumber\":705839},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/52288436-930b-48b3-a77d-b6e9556a437a\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8cba8ab0-bd51-48e2-85cd-9449a75def0f\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3473d0cd-1eb3-4176-8272-add03a959383\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/84ab5976-2511-476e-b85e-f57ebf5a60b0\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/eaf918a5-6dda-40c6-9ddb-d14b605a6b36\",\"moduleSequenceNumber\":705858},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a949bba9-ee61-449d-8e2a-8427ad74b2a8\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/99c3cf76-86dc-4028-92cb-1836b6bdc9fd\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ee9bcd03-de88-4995-98fc-e0484eb29699\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e6b29395-f278-4e84-a33b-0c78c1d0aadd\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c992aedf-73fa-45ea-9bab-11465250a7a6\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/45f8e529-4d26-4841-a0a1-2c3ebb9f55d7\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8fcc919b-7340-4b33-aa1a-800c75a8ee47\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f4be47c0-f910-45ea-a870-9e2b238b6a0b\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f1de5a74-a741-47c3-be45-2020a75ddcdc\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8db908d8-d541-415e-b410-9cf4d957bb0f\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1fc3de2f-3643-4b02-b097-308df833d9bd\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/52d37fd2-b518-4977-bbe4-6d64c41a7e40\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3efd5ad1-7903-4f8d-8656-2be628deb511\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e28e4177-b882-4e1a-8a02-d9e8dfa44f9f\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/df439dd5-209e-4f33-8bae-26a3f8c10171\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2c470d78-7c67-486d-abba-cc710f949f6d\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/da61c58e-186d-4b86-a30b-29be4542a2ea\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3058d3ee-4fcd-46e8-a1c4-c59ee34f1d80\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/143128b8-e2f7-4487-87d7-1817a7a49fd8\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/76f4fc9f-2084-409d-aca8-a69692f6ecfa\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/00b4138b-ea83-4540-98be-ce5c69d7c9f2\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/f680cd04-5bd9-4776-8f11-c53a04d2de08\",\"moduleSequenceNumber\":705847},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f46d91db-d504-4020-86b5-77534887c782\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/692a7648-0e79-4f34-b9c8-054c018dba1e\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d141dfa1-afab-476a-9eba-ec908eb5aa9d\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/47ec72d9-d9a4-42bf-9322-3d49dbd37017\",\"moduleSequenceNumber\":705826},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a30882a2-9b51-47a5-81fa-b7a9ed73733b\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/cb480e53-941a-4c13-9d41-9c355a7fe49a\",\"moduleSequenceNumber\":705852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/34a26c51-3a3b-4985-8d6a-47f4d9c94a5f\",\"moduleSequenceNumber\":705840},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c0ca353d-33a8-41cf-bf42-1026c5f97cf0\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e30489c9-7ef5-4fed-bc04-a131f4465219\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4bba0948-83d8-429b-8ef2-da83dea6f174\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/56969d41-0c34-4f81-98d2-6d84d4a8191a\",\"moduleSequenceNumber\":705832},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f6756144-28fd-4670-9e6c-2b36f550533b\",\"moduleSequenceNumber\":705831},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7b8ed43c-ec9e-466a-be4e-bb9ccbd04a47\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1aa1e3f3-4d0f-43f0-8b08-9881395d95aa\",\"moduleSequenceNumber\":705827},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/72b16b16-f8c5-435b-9eec-61b8c3d70999\",\"moduleSequenceNumber\":705862},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c7f534c1-fdf9-4c3a-a2e9-532ac27692bb\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/20a52c5c-00a7-4268-8edc-83226584d9f7\",\"moduleSequenceNumber\":705844},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/74d08e13-0497-42ba-9083-0f58a9b20fda\",\"moduleSequenceNumber\":705838},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ababf29b-21ed-45e9-be91-c912f552fdd7\",\"moduleSequenceNumber\":705835},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/39900269-e678-482e-bc1c-4675a32ac700\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/78b01949-4418-4a4c-b626-19fbcc7694d8\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7fe40259-6139-4322-9848-aca16bf018c7\",\"moduleSequenceNumber\":705823},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/201059ca-cab2-416f-b52a-6ea3af1293df\",\"moduleSequenceNumber\":705851},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/19756145-24b8-41aa-a005-8c7c6d68d31b\",\"moduleSequenceNumber\":705839},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7247f39d-aafb-4c9a-babe-a7ca05bfac90\",\"moduleSequenceNumber\":705833},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f5f89c7c-bc04-4127-be67-b48566b93928\",\"moduleSequenceNumber\":705828},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/563a572c-1fb1-405d-b07c-9fc8a10f8cff\",\"moduleSequenceNumber\":705826},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ea51c424-ef8b-40a6-a14d-a853db9d7160\",\"moduleSequenceNumber\":705823},{\"filename\":\"/singularity/faction-crime.js\",\"url\":\"blob:https://danielyxie.github.io/93c2a593-1f05-4a0c-bc78-2c0b7f938df4\",\"moduleSequenceNumber\":706210}],\"dependents\":[],\"ramUsage\":79.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725398,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { work_hack_lvl } from \\\"/lib/constant/misc.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { purchase_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport { commit_crime } from \\\"/lib/singularity/crime.js\\\";\\nimport { join_faction, work_for_faction } from \\\"/lib/singularity/faction.js\\\";\\nimport { install_backdoor, visit_city } from \\\"/lib/singularity/network.js\\\";\\nimport { raise_hack } from \\\"/lib/singularity/study.js\\\";\\nimport { work } from \\\"/lib/singularity/work.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Join the CyberSec faction.  The requirement for receiving an invitation is\\n * to install a backdoor on the CSEC server.  The requirement can be broken up\\n * into the following mini-requirements:\\n *\\n * (1) Have at least the hacking skill required by the target server.  This is\\n *     usually a low-level server, typically requiring a hacking skill between\\n *     50 and 60.\\n * (2) Gain root access on the target server.  As this is a low-level server,\\n *     it requires between 1 and 2 ports to be opened before we can nuke the\\n *     server.  We need some time to acquire the port opener programs.\\n * (3) Manually install a backdoor on the target server.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function cyberSec(ns) {\\n    await visit_city(ns, \\\"Sector-12\\\");\\n    // Ensure we have the required Hack stat.\\n    const fac = \\\"CyberSec\\\";\\n    const player = new Player(ns);\\n    const server = new Server(ns, faction_req[fac].backdoor);\\n    if (player.hacking_skill() < server.hacking_skill()) {\\n        await raise_hack(ns, server.hacking_skill());\\n    }\\n    assert(player.hacking_skill() >= server.hacking_skill());\\n    // Ensure we have root access on the target server.\\n    while (!server.has_root_access()) {\\n        await server.gain_root_access();\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    assert(server.has_root_access());\\n    // Install backdoor, then join the faction.\\n    await install_backdoor(ns, server.hostname());\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the early game faction Netburners.  Requirements to receive an\\n * invitation:\\n *\\n * (1) Be anywhere in the game world.  Stay put where we started,\\n *     i.e. Sector-12.\\n * (2) At least 80 Hack.\\n * (3) A total Hacknet Level of 100.  This means that all of our Hacknet nodes\\n *     have a collective Level of 100.\\n * (4) A total Hacknet RAM of 8GB.  All of our Hacknet nodes have a collective\\n *     RAM of 8GB.\\n * (5) A total Hacknet Cores of 4.  All of our Hacknet nodes collectively have\\n *     at least 4 Cores.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function netburners(ns) {\\n    await visit_city(ns, \\\"Sector-12\\\");\\n    // Ensure we have at least the required Hack stat.\\n    const fac = \\\"Netburners\\\";\\n    const player = new Player(ns);\\n    if (player.hacking_skill() < faction_req[fac].hack) {\\n        await raise_hack(ns, faction_req[fac].hack);\\n    }\\n    assert(player.hacking_skill() >= faction_req[fac].hack);\\n    // Join the faction, provided we are currently not a member.\\n    const joined_faction = player.faction();\\n    if (!joined_faction.includes(fac)) {\\n        // Upgrading our Hacknet farm requires a huge amount of money.  Commit\\n        // crimes, or work at a company, to boost our income.  Continue to\\n        // commit crimes (or working) as long as we have not yet received an\\n        // invitation from the Netburners faction.\\n        const factor = 1.01;\\n        let threshold = factor * player.money();\\n        let invite = ns.singularity.checkFactionInvitations();\\n        while (!invite.includes(fac)) {\\n            if (player.hacking_skill() < work_hack_lvl) {\\n                await commit_crime(ns, threshold);\\n            } else {\\n                await work(ns, threshold);\\n            }\\n            await ns.sleep(wait_t.SECOND);\\n            threshold = factor * player.money();\\n            invite = ns.singularity.checkFactionInvitations();\\n        }\\n        ns.singularity.joinFaction(fac);\\n    }\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the early game faction Tian Di Hui.  Requirements for receiving an\\n * invitation:\\n *\\n * (1) Have at least $1m.\\n * (2) At least 50 Hack.\\n * (3) Located in Chongqing, New Tokyo, or Ishima.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function tian_di_hui(ns) {\\n    // Ensure we have at least the required Hack stat.\\n    const fac = \\\"Tian Di Hui\\\";\\n    const player = new Player(ns);\\n    if (player.hacking_skill() < faction_req[fac].hack) {\\n        await raise_hack(ns, faction_req[fac].hack);\\n    }\\n    assert(player.hacking_skill() >= faction_req[fac].hack);\\n    // Travel to Ishima and wait for our income to be at least $1m.\\n    await visit_city(ns, faction_req[fac].city);\\n    if (player.money() < faction_req[fac].money) {\\n        if (player.hacking_skill() < work_hack_lvl) {\\n            await commit_crime(ns, faction_req[fac].money);\\n        } else {\\n            await work(ns, faction_req[fac].money);\\n        }\\n    }\\n    // Join the faction and purchase all of its Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join an early-game faction.  The early-game factions are: CyberSec,\\n * Netburners, Tian Di Hui.  This script accepts a command line argument,\\n * i.e. the name of a faction.\\n *\\n * Usage: run singularity/faction-early.js [factionName]\\n * Example: run singularity/faction-early.js CyberSec\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Join the appropriate faction.\\n    const faction = ns.args[0];\\n    assert(\\n        faction === \\\"CyberSec\\\"\\n            || faction === \\\"Netburners\\\"\\n            || faction === \\\"Tian Di Hui\\\"\\n    );\\n    switch (faction) {\\n        case \\\"CyberSec\\\":\\n            await cyberSec(ns);\\n            break;\\n        case \\\"Netburners\\\":\\n            await netburners(ns);\\n            break;\\n        case \\\"Tian Di Hui\\\":\\n            await tian_di_hui(ns);\\n            break;\\n        default:\\n            break;\\n    }\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/home.js\\\");\\n}\\n\",\"filename\":\"/singularity/faction-early.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7e6c3c66-dbd4-42d2-a165-eadfbb8500ab\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8f413318-4ccc-4d43-b50b-db56ac748f28\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/629a71e3-c583-4982-b420-0e234f990099\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/66f7a41b-ea87-4ce6-bdb8-91a58252befb\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c1f49024-5573-40b2-9271-ca7b266f8e73\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5fffa5cb-232f-45bd-89a3-997eb4fd6073\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f39cc993-cc6a-4e0c-976e-d204de5f7802\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/08afcb42-5214-4408-9905-c77111c41749\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5bdb39ed-2087-48bf-b631-321994e7010a\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/beb6d368-3b25-4517-b2bb-1ba63b1cb4e1\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d288fb6c-6b59-4b81-b31b-bba0ee4b56b0\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4a3cf316-dc26-48f4-b943-262dad277c65\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/716b4f6d-835c-4945-9b9e-047be182c4c0\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3c169015-9d98-4103-8a4e-236bf34a662d\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2101a3b4-542c-42f9-9010-299be8478a93\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4256e3b2-7759-4239-a80e-8016cb48c429\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b1ff5f73-1b58-421f-97ba-9670e11dcdac\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3ef0b405-93ac-41d2-9964-50c27e255760\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/64f95dc9-fe32-4e1e-818a-a51c79a63974\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9d3e7b4f-3d1d-40cb-b633-2dbc312af8a1\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c07b0c25-22bf-44a4-88a0-47b18adee697\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e843906e-dd33-4c4b-9cdd-03cff95effcf\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/26e9420e-be85-4b50-bdc2-a74e5e6b9278\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b546fc9d-4ee3-4020-b774-450f7d899c75\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/db105aef-5869-48e4-b309-6204f5235671\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6fa01cee-f771-463f-a290-89ca391c8f25\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7043add9-c842-4c0f-a45a-bc6aeab821ce\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/519522df-3a70-400d-86fc-77cdb8501f0f\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/c339d1ae-532e-434a-a33e-25ba2d4ca014\",\"moduleSequenceNumber\":64566},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c1567e37-8829-41e6-a409-9793f7fb9faf\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/812dd002-05bb-41b5-8c81-e8000a63a155\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/048f9847-cd90-47ab-9672-32f7910f956a\",\"moduleSequenceNumber\":64585},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/953cf585-00e2-4883-88c6-59ff535fecfc\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/48949cd9-b738-4688-9430-1c64b9450543\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a901b39b-70a4-4f9f-af33-d2d1dc383d78\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8090fe4b-ccaa-4206-9820-97ab8c065e43\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/19dd1ef3-08a5-48db-a355-4dda6aeb9caa\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/11f076d0-9163-4a10-b194-815675f6d441\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b84087a9-b25b-4cff-ad5d-b2dcb8072287\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fcdcbfec-bd6b-4039-94a7-232aa53ee038\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c4e0abea-9322-42d9-a462-6c4f454f96ab\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ab605a5d-84c3-4c8c-95ae-7f0b25f23fb4\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c9fd8a1a-24ee-4c7a-915b-e06f987eaee2\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/24a64e6b-6baf-414e-8f91-feec5c991231\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/a97af023-6ac1-421a-b8d4-600d6db6fdee\",\"moduleSequenceNumber\":64576},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8e662193-7419-4700-bdcd-3b22a0e549a2\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3b7ef655-394b-4583-b2de-6e6f4acb64c6\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/870aef72-2562-4ca5-93aa-4cb8d046edc9\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/74a71668-673d-44ee-ac9d-d6b8c9f776d9\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ce122656-920c-4d10-9d7a-dbb8d7d0a9bd\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4a723741-ac82-4489-854e-86755bdb82e0\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b7e44067-ece0-4e33-a508-904fe3ede578\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/57cfe122-5c71-4952-851f-eed939a48174\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/db8419da-a388-4f5d-8e7a-9ee1447a206a\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f4669324-0183-47fd-a23a-6cea68d4c8d2\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/8784c2aa-1a6e-45fe-9811-02868ebb7e78\",\"moduleSequenceNumber\":64573},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/00b914b1-4fa6-4740-a168-453a8e76cee9\",\"moduleSequenceNumber\":64568},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a6d765f7-0ad7-41d4-a9c6-dfd3c02330b9\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b3f8f873-8107-4d8e-883a-dfe87827cb05\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4237efdf-fe16-4fef-8d7e-2ac353cddae0\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7a375d19-8949-46f0-845a-981eec2a5eb8\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/67f22c6a-1d01-4c37-9ab3-6ada9e9ac4eb\",\"moduleSequenceNumber\":64587},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6c10fb89-88f8-49a1-a0c6-074fa630ca5d\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7170b2a7-b829-432e-89a0-a44c071ad94d\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dd309eef-0617-4765-927e-07302d45c97f\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ec8132b3-f95f-4edd-8473-b8b876e89d5b\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/51ae83ec-df3f-4f9e-82e8-0291941560db\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/adfdc239-5319-425a-8f84-63e84d879fa8\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8820e231-1e35-440c-970a-806d6a7a9c33\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/52ade61c-dbf8-4603-b152-1ff6e2079fca\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d1b9f88a-d680-4fc1-93d0-207433b8f35d\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/74850d84-9638-4ce8-87e4-08ed69761790\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/70956e3d-689f-4a0f-9c81-0ef8c57e1d90\",\"moduleSequenceNumber\":64566},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a8015455-e23a-40c8-9987-bf3dee60ddee\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/3f15cb9b-69bf-446e-bf7c-f74f6f70f9fd\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/0d09e8cc-6776-40e9-be02-ca1def2cf313\",\"moduleSequenceNumber\":64585},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/da21d7f1-1d9e-448c-89ca-67766ba10109\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0e9d2f6e-ebd1-4689-b154-5bbc88a9c63b\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/eff4711c-edb9-47ec-8791-247ecb2d0c91\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c6a54670-d7a3-4826-9775-cd161f515fc3\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f1438182-b646-4e1c-80ed-6ba6b020bd7a\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b6af30b9-22ba-46ae-8126-87848e176dee\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/43d5ed06-0190-4e85-a0ce-880d8a827fc3\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3855e2ae-357d-4d7c-9b84-4b2f7602056a\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/516ca3b6-7fc3-49b3-863f-c14f3745c1f8\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e3598286-eee8-4ce9-9263-cec94788d4fe\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f901dcae-9933-4705-b0db-17550e389e77\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0d750c95-edff-4318-bf92-c16c8bcd82da\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e2d727aa-7fc6-47ed-9180-d3257cf7fb99\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/312882b7-5291-4033-8c29-34e3e2c68020\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/321b6e64-1382-4768-84b0-096ad4e9dc63\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/09631cd3-b4d8-47c8-85c2-9ef32343ca67\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/686b6c4c-f834-4e7b-baee-926b21588b0e\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0e1a4115-5001-45f9-a839-00b60502b615\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7f354282-c634-4d9d-bfaa-51e6c810028c\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c9202a6c-0d87-4dc4-b698-1e16241a6118\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/eaa8f3eb-1902-4b1e-9139-8de64c909070\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/c68deab7-3182-4e54-bda9-cf13dcbd0303\",\"moduleSequenceNumber\":64579},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d63ae6aa-df37-4ba0-b2c1-c6765f41efcd\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/50ec5484-9fbe-4760-8244-6832e5ad9d9f\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/66574366-8abd-46a8-8012-b4e4014e3e57\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1f2d4e1f-e00c-40eb-83c4-e17a2a1cad76\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/88d7d845-f59a-4530-930d-6ad53bb7abeb\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a83f7d13-04a4-4e82-b2bf-b459c4536454\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f28b3c0b-6142-4142-bf9a-55d0b2a04b75\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5e948b67-f246-424c-bf44-367c01fa74a8\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/df1eb47d-0e30-4861-8ece-e18f3e514bda\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0b78c17e-e39b-4fb5-8d23-53d5b0920a05\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c4c31ec3-fccf-4051-9be2-6567aa75e901\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b0b20ad8-3131-4aa8-b6e4-66089049195e\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/2226798f-b3b5-4515-bbc5-25cf6b5fbf8b\",\"moduleSequenceNumber\":64576},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d7cd2719-4921-4663-9865-74712a42bfa4\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4d4dda20-135c-438f-922f-8ecedfc6871f\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/862ee351-2160-49c3-b569-3cc81425a565\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/97d5a52e-a923-4dee-adbe-392e45900dd7\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/200e7e4c-0ca6-4643-9df1-a2ce1f361193\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9c6e98be-eade-47ae-9061-f1439a62c205\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e568302c-594f-4f0f-a9d0-ebf50e4ab800\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0addbd87-56ad-47c3-aecb-0b4cc76f777b\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6515ebdc-21ed-4a5a-a0d9-866f65d46a87\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/29e3076b-7c87-4c8f-9267-290de4c7c7de\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/d476908c-5b08-439e-986a-99e873ef88ca\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/05fc7fc0-1e6a-47d6-8ca9-738b88fd8e47\",\"moduleSequenceNumber\":64575},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a594022a-3676-402a-b32e-3d9f17f78a68\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/619a491e-fd8c-468e-bce9-b292f46d553c\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/1ae9c867-bfc7-45fb-91e7-2707cc9833ee\",\"moduleSequenceNumber\":64583},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d25bcd52-7718-4ed8-8a99-afffa44003ab\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5e48b27e-6fe4-4685-a64c-48eacce286a8\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1af2c637-17fc-44a8-9de7-e3a6a2fcd69f\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b4cfff02-9ab2-46d1-824e-2526d26480d6\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/af0e11fa-7e13-4450-ac34-1aa1916cddf3\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/19634fe8-1620-46aa-a32b-0f542362a8a3\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dcf1ff2c-8b84-4f9e-bbec-fd109ac30982\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/534e1700-cc53-451c-96ad-16701f0dc5fd\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7a82f244-f674-4677-8b1e-3be35d07b690\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0f37ed17-01c5-4c43-9eab-02da6112fa6e\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/00c024e4-6a64-43df-bf16-a6ba877fae60\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/546fc041-8d9c-4ae1-baa8-a59cb9d8fe26\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4f3f746d-7dbf-4695-9cc4-7c6126a1bae0\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6ff54365-b751-4b5f-b8e4-e39be9e17191\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c509d81b-0673-4234-b2fa-0d88004dfa23\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3ec268c0-88c9-4901-8042-5e4bf446c70b\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8abd5248-a810-49dc-99e8-7a097450d303\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/91d51e83-92ac-4064-9743-6ff8bd8ccedd\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/69aa4372-3c61-42a6-99c9-f61538e982ef\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/04767c5c-ce8a-4e36-9ae8-faecef4fd390\",\"moduleSequenceNumber\":64566},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d96dd1f8-00d5-4498-b7a5-a942a4afbe55\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/bfb50a6a-687c-4614-9fb1-eede589a1c5c\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/02c84f17-b28b-4cdb-8936-f8b14cb2ca26\",\"moduleSequenceNumber\":64585},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/731cb619-dabb-4be0-91bd-70f7e5d80717\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ef296c9f-bbd1-41ed-ac43-77e979b82c23\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0253bc1b-aaaf-4bc4-a48d-d647387fdf46\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0bb63e36-db79-4fab-941f-83ca7dc86eb3\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0abb1a63-2a95-4ad1-831e-4a8c0571ac90\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5f98600a-5614-458a-ae08-71e075b0c7cb\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4f0ec7cc-a485-4225-83b8-73c6ec593acf\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/07eb61ba-314d-4678-b828-0e885657f87d\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f765e75d-83ad-4ad5-b5c4-80ab9648fdd2\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5c463644-dda7-4e3e-a6ca-17fa0c1c62eb\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d6b26b3f-5095-40bd-9159-67c5a345def6\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2d8f07bb-89db-4773-81b2-b2e642b2ef43\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f6027b5c-ccfa-4e0a-9b92-663b2139991b\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/79e2465b-0cac-4b92-9e8b-fd062a86955e\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2c2fa846-2f67-41ed-ac6d-92889e0cd65e\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5c4122e2-2a39-4dd3-a93c-d3c349098d52\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6420af2d-5897-49dd-84a0-563e0caeec5e\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6183d18b-2158-4c27-90d3-297e4c1fd4b8\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/79198114-c333-4c6c-a649-15a1555fd335\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/588719dc-cc1b-4224-a8d4-b864183bd547\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9b8d02fd-f3d1-4906-8934-658ce301c9b8\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/80a38930-a9d7-4ea6-b8a9-3d66b984fb58\",\"moduleSequenceNumber\":64579},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9e91a789-2bb0-4726-82ee-615d49fddab3\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b2d2991f-ee33-40c3-ab1f-dc9d6d8aa10c\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/de9fe07f-7229-47cc-b465-87a410bdfecf\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/64f2ce63-f949-4721-901b-c5cce33a3da7\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/439c93bd-f2a9-4508-a585-d84963b063dc\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/17efed4d-4b70-44a1-8a5d-5c334d938141\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/eb6581af-8c06-4e5e-9433-8c4e9d2a0d9a\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/71f9a212-03f6-46e3-a036-09f4222f990b\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/eab267b7-420c-4841-8e45-5c504e0542e7\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5852e7b6-6caf-4f36-9fb3-4f660a1f2688\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/44c7dd4c-ce74-4e34-9b03-e56e84bbcf44\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1fbd9d42-1b9f-4c92-a5e3-58e03ec27fcd\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/c97cc866-4ddf-49ea-8a12-22eba75435c9\",\"moduleSequenceNumber\":64576},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/37b3be5f-082b-4054-9c9e-486b9423c55f\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9fc6c6d7-41a0-4a4d-a459-c2d38e68592b\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c3af1302-6fb5-4dac-a604-572580f99a4a\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/31068fbf-436c-455d-9e2e-836bdf9797c7\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/20de7553-8e42-4082-aab9-bfe9fb901979\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b216988d-521a-4ddf-b66e-3bddedbe7852\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/26d06355-89e8-4f83-a0e6-4ccfbc6f5508\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6586c431-2d7e-453a-b131-8978bf058553\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/da6e90d2-d511-4606-88bb-8e081823489f\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bd891bb7-2f18-47f0-bfef-6971b595ec31\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/e6e999ad-94e0-4556-9cef-015b1c5951e6\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/f295b96e-3992-48f8-8c2d-15f6ba0c4319\",\"moduleSequenceNumber\":64575},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4e23a893-b095-44a4-a964-dc19e933159a\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/008465eb-e2e5-412b-bc10-97b4ecde4917\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/bcc0d9c4-f0f5-411d-a2cb-a9174cf0ce9f\",\"moduleSequenceNumber\":64583},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7f38cb1e-431b-4e8b-ab1f-93dfcfbb4f05\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6b187e64-b7ee-4a03-bf52-104a456a1010\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a6151107-e3cf-495b-86ef-0cf0fc9f5112\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dfe4500d-9fb4-412b-9f24-a22deab7a351\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e456eaac-a7a5-4808-baaf-40ff3d8dba2e\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f22f11c6-4bee-4588-b408-e095e945078d\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/db6e24a7-c15f-48fe-b50a-d6d4e68272d5\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f15e0536-6fc5-4fba-9d9c-ac8ef6297a09\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/54c3025c-f4ae-4a1d-9f9c-c83d8e8f8eca\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7d124266-6fa6-498c-a867-ae6e6aa09bd5\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/91eb005f-7d12-4458-94e1-3d94e956e321\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/93549e2b-d094-4ba8-aa63-2c27640769a5\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d9599491-f194-46e1-8925-6df244763e7b\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b69d311a-39f7-47aa-929a-b34dacfd0a70\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d42620b3-c6a8-43a9-8c9b-165b2540f2e7\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c888bee0-e0f4-43dd-848e-f5562a81165d\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3af63cc1-6898-4345-8629-1fe43ccfee7e\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d9b30896-c8ea-4dc9-b6c8-2e7c2eaf0402\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/62a5edba-04e0-4854-8cba-32184d6faffb\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/69d7efc0-28fc-4cf5-aa4d-ddf7d793183c\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ce535fc8-ae9f-47c4-a8fd-d7a85ea47692\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/aa976173-73fa-469e-85e6-f2cb07d57619\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8f41ada0-34d7-44f9-9f96-e34e9cb16304\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/41270c76-c74a-4677-bf1b-1b2a3b32776c\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7dde39da-122b-42e8-899b-aa309940af46\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1c1876e9-87ac-4d4b-8fdb-29256113c783\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ad535606-1467-4eb5-8b97-219b38580854\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8188678f-856d-4bd5-8578-6d2a8c104620\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/8034fd5e-4501-44aa-bd57-c71a9de9e3c1\",\"moduleSequenceNumber\":64566},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c2ac75b8-0059-4494-bb9a-a0ca4d6de9a5\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/54798f12-c73e-4858-b356-b860eb391b87\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/79d15e03-994c-4a09-9d8b-dda1238061d8\",\"moduleSequenceNumber\":64585},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/335be4a8-9846-4e4b-95cf-677bb76a952b\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/81a25dd1-7c00-43b2-a0f5-b4e6cad8789c\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7a5f206c-7234-49fb-b7fc-dc5b36218cef\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/693dfb6c-f023-497a-b1a2-7c1102a0ccf2\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3afe14b5-3f6f-43fb-8005-0f1e1c8ce9fb\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a650120e-61d1-44a0-ab72-c6dca4a38b39\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/79300281-4c60-4391-8b61-e8df84f00755\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/faf2155a-94ae-4f6f-b074-f80a2476497f\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/50e2adbb-c5d0-4fdf-afcf-def966b05acb\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fef3ffc5-1947-4aca-ad89-ec7071b5fcc9\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/aa170655-a4fd-413a-958d-cafa80646118\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fb837e5e-50b8-423e-9404-7a922f420a24\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/87c4443f-1cf3-4e9e-b7f7-0aa16e8a8ea9\",\"moduleSequenceNumber\":64576},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4f3a0a49-099a-4e90-902c-e8665e362171\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0f0d6a49-ff79-4bc2-8f13-75da8ea02efc\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/92b1bc3d-b548-4759-9d61-b2cf25fd3fc3\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0166ddcc-47a6-42c0-9278-8c1c2393df9c\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/91158016-760f-4f9d-9bed-98fc8aa520f7\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/aade90b4-3209-43d8-9679-9617d6f41a05\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/678dbcea-02ec-458d-9abd-dbbb9361595b\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8bea0691-e923-4bd0-bc59-141e200604ec\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2176d639-2902-4370-99e8-28af0905a89c\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/98a4b61d-37a7-4a7a-b636-bc2d7f68496d\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/32921a75-31ab-4623-874a-b17acba6772d\",\"moduleSequenceNumber\":64573},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/b4b3e4a9-dc5b-4b00-934a-4ca86e5ea9fd\",\"moduleSequenceNumber\":64568},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/98af0e84-9e07-4327-943f-f9963c57d76e\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/98ec45b5-883e-4745-8697-1d0da897e3d1\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/88c077ab-8559-4019-b250-4fccfadc04fb\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8801f6a9-23b2-405e-8022-abbbba1f1a0a\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/b0e8482a-f359-49c6-86f9-b7f75da36b7e\",\"moduleSequenceNumber\":64587},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cbe99ce2-2a49-452c-9843-6d102237629b\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5979ce8e-7634-49ac-a6a2-a2f5b62b0849\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/aca1363b-b500-4aa2-8877-a403d40f38d0\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b0abae26-d81c-4f7e-9843-8b4ce211cb4d\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6914897e-1c07-43e8-81b8-9e3fbd24da31\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3b565fec-dd40-489a-8121-7bbc09db38b1\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d2be2f75-07f7-46a2-a0cf-e1d72490ab81\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/508a0fa7-2647-47c3-a103-13f8e72ad19e\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/818be0f3-ecb8-426b-b6eb-035af5f776a7\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3f5ba9b1-3cc9-4896-9794-2d222cf23942\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e9d60764-765c-4f80-8714-3e1963576051\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/36fb4c90-9b42-4130-8f97-3351bb8da5b4\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/08d9fcac-a8e0-4f34-a8cc-440535ec0f7f\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e1911cef-eea9-4b02-a655-ae972d2c0801\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c220ca3f-f02f-4bb5-b22a-c44427e2377c\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c6ab0234-63f6-463e-8837-1a851688858a\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bd5b1beb-a249-4a32-b907-e42f9c06c794\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3d6cd3e4-81af-453d-8d93-3ae02f767218\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9bedc0e9-9049-4d2e-8e9c-9f548353549b\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/460e5f3d-7d79-46a9-997e-a29c075bbea3\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5756ef09-b492-4205-9eb3-bea9c868e8a2\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/ccd6f1a2-028a-484d-8552-7998b5ee85c3\",\"moduleSequenceNumber\":64576},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2aaa09d4-74c3-4778-b5fb-ee879cfaa37e\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/64213228-5cba-4ac5-9a45-e1cb6f5105e3\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/df36edab-3f0b-4e99-97aa-d7f410cda6f8\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/dd61496d-89a9-448e-a22c-510762aa6114\",\"moduleSequenceNumber\":64555},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/579e7d6f-4158-4f04-8bfe-7fea57e7f6d8\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/9c5eb30a-71ca-4272-8f82-1d5070ae46d7\",\"moduleSequenceNumber\":64581},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5476fbcf-159a-4a86-8e15-66dd9bb6dce9\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9cbefc68-b65c-484b-a685-d5b5d0839c68\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/68d29efc-4c7e-443b-b79e-78584f5edc36\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0493fc1a-558b-46de-b626-236c640a61ef\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d17e1150-c7ec-42c1-a9e0-063ca505cf6d\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1dcc398c-5386-4297-9a6e-d84475609c6e\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c1abe5f3-0bcb-43b6-90c6-7033ad2b640a\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c2363f37-f1ee-415a-bf76-a45a6e48502d\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a76dc5e0-74ca-4cf7-88c6-e85aa623188e\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/95442398-9806-4bb3-af52-686cad36df73\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/1485bdc1-9017-4a29-bd51-f53fdc4a3ec5\",\"moduleSequenceNumber\":64573},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6cac2c4d-7d5c-439c-bd22-aa46a86d346b\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d63099d4-b9cf-423a-9553-b9f1702ffa2d\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/06321981-d9be-4a0c-9cfe-87d354a7cb40\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e996cf91-8741-4eca-bace-fd24c5d675a4\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/220f261c-680d-4f5d-a497-626fef017aa0\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/43873364-1cd0-41ef-98f1-d80b0043cd48\",\"moduleSequenceNumber\":64580},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f9671c1d-2412-410f-a42a-aafbd0474c46\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1cc471ba-40bb-457a-8e38-dd5ee896b122\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2e2cc37b-e105-41dc-b9d9-f69f007e2938\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fdabdf1c-1f92-4224-b338-eead1d1b9244\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a141029c-2a6c-4acd-b19a-6c437365392c\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5378f95e-40ad-47e2-94ad-84a8ecc00e98\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3de76e2a-e7e5-484e-b431-07b1d576be46\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/070c185c-f5cb-44da-84df-40917e081505\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/194fd035-e500-43a3-bb69-f7b9ed4b1e7d\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8a6eda3c-a627-45e7-807d-3162074566f0\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a3eedc03-4876-401a-a2b9-d64009557d1e\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/d7612c0d-a5d1-405b-ab0a-f520587fb0e0\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/fb11a5cb-8f0b-4c43-a310-92985a74c12f\",\"moduleSequenceNumber\":64579},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8af47684-af56-4855-af28-cc2312f57f38\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2f6e3d16-e591-4d9f-acd8-9865a1dcacf1\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7a28c664-ea39-4059-8601-3234ab29ca8b\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b06d06e3-a50f-4092-bf6c-5e081661b3ba\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8e146a54-cbb5-4c88-a17a-4fc050e1283c\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b7f4e19d-efd9-41c3-a533-c26f437a36cd\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1e63ee72-9789-4938-a8a7-3eeabf4734bd\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bf5c4e4e-1022-462a-a7fe-b94f9118a86d\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6ac55c0a-7a27-436d-81e6-982f8a116d05\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/64bfe11c-9f4c-4217-895e-a443f5410459\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7af7745b-cb5a-4fe1-9400-fb1cb476a4f2\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ef2587d0-63ac-4aae-afef-ceeab92083ff\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/319fff88-ba09-417f-a01f-8c5fffc8edf9\",\"moduleSequenceNumber\":64576},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0073d13e-021b-41e5-8859-f2f612ae81b1\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bb9ab042-dfb4-438f-94d0-f0e973a2bd17\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ef2917f0-5cdb-44f4-9c54-6fda0652a8eb\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7bec85ba-57ca-45d6-a5ac-be3f2341ec36\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0e51bf09-9f0c-48e6-ac28-99b79176cfea\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e53d1b86-5469-48ba-8e53-1cb4743a9dc7\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2e4bb266-69a1-4784-9e21-e09a107fb050\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/06df73da-d30e-48d4-a74d-163faca63f7a\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/683351d3-dae9-4672-ac4a-00993384512d\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cdbb5804-d1d6-40b7-971f-4568fc73ce14\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/56726b15-c209-4d54-958d-08fd66bca509\",\"moduleSequenceNumber\":64573},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/c685f08e-47f5-4e19-9c70-24d73db95331\",\"moduleSequenceNumber\":64568},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/216747dd-615a-4121-b33f-271d9bb32032\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/68b28eba-7a44-40bc-9ff9-a34d7f55a337\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6e6a1153-83ae-473e-8598-1835b3deb931\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/c42b0d8a-f4d1-492e-9861-07b18397b3cd\",\"moduleSequenceNumber\":64555},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/56d517ee-082a-4586-87b8-c78cec85c8f4\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0f3c571c-bfd4-485a-9f78-a5848c78cb81\",\"moduleSequenceNumber\":64582},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/eeea2a82-a42f-4122-89bc-736569a99a3e\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cbe3e23b-5d4e-41ef-bdc6-b97c348125cf\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0f02d118-7456-4593-8a34-a253f0933280\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3222d8c9-ff7a-42ae-b41c-08eec3897a84\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/32512f0d-b2c4-4560-a1a6-bb20ea1d4720\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/be4e5ddb-acc4-423f-8708-0ba3113bf4aa\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3698210a-302f-4028-954a-6c264cfb44ff\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/351fba95-9cd5-4af1-aebf-090507f84eae\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0ce56b10-6622-4371-9c03-ea2f44cddb76\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1ac12261-1a4f-4b6b-83e0-d220b8421829\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d61ed927-4d6f-4df4-9c1e-b9592f1cda1f\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1d435270-8b2b-49b2-be09-3b039a11a55a\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/804a6102-1bce-47b3-97b0-4dd9b0496f96\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/df696850-6b71-419d-8e74-fd2af9029475\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a1d561fd-9edf-4c6d-b76a-082232d57538\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c1fde589-9287-4dd5-ae71-99865c1eb881\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1bd2aab7-c74b-490f-8b17-d57facf84c5a\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ce2dddfb-62ca-446d-b8d9-e413f7fba7c6\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b7cda6b1-a688-481b-bcc1-b8c7d6909229\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5dfb94f4-80bc-4801-9d90-2d51441c661d\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1bcf1286-69c2-44da-8763-e013a6d65df0\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/a0fc37ff-84d5-4677-8fcf-4520f6c0aa9a\",\"moduleSequenceNumber\":64576},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c7afb68d-d69f-4165-8a82-31ad365ed70b\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5919e989-250c-46b5-9f53-ba9846e1a899\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a9d391b4-0623-4f45-92d5-a4b9e35684d1\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/5e17f062-dc16-4ce1-a10a-10cb345f4ef4\",\"moduleSequenceNumber\":64555},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9264b152-45e9-4fc0-8e96-e12b707a8804\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/571f5d5e-8d25-483f-9e8b-0102b5d2a6ec\",\"moduleSequenceNumber\":64581},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cb1cb1b4-abed-4b1c-b002-c103a4740639\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7b2c0f37-e242-450e-8b27-623632413c17\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e2e497c6-7517-4728-8046-f53e3d935bbb\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e3b933c3-1f32-400e-a71b-32a896a56148\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/23558e5a-fc57-4ab6-9b02-31388b20f3a9\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/53da2650-4c29-4f08-a999-455174d31ac6\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/78a24667-5bf8-4610-bf98-478b6c662335\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f7b22fbe-1f62-44b4-a821-521a48112ec9\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/068fcb0c-84c6-431d-b22a-4c1a0fa13830\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6ef3eb0d-fd6c-45ed-9158-ccb6cc51ca73\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fb5463b8-25a5-4613-9bfc-6a6251191754\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3e3bd50b-1db6-4772-8530-44a8a4530881\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/adc57a2c-4d97-4294-bca5-4031489a15cf\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2b864fe1-9669-4b6c-8837-4e9fab8bdc0a\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2a48d108-4949-4797-8c3a-b5e8d2c387fe\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/56f67147-e2de-47ef-8a0f-44658b9ed1cc\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4b89b602-7d0a-4d5d-b79a-b7effb1ec6f3\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0210d448-acd7-401b-b216-5ededbd79ac8\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/64de9be8-a02a-4d6c-a8ca-7bc3cc68276d\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b6721634-0d6e-471d-a2f5-b09076ea27a9\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/408dd3b0-fe63-446a-87ea-98db517c5bbe\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d3185d2e-d592-4bf9-8d79-a98484a07390\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b745b0c2-0ac7-4d07-b536-e8ba71b05bec\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/20d3a870-d559-4ae4-ac86-4d0afa691fa4\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/71aee8eb-3c97-40aa-aefc-9ed691d8a764\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6013e47e-1fb1-4ece-9638-e4f6ca87f466\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a2aca1ec-473d-4037-9bb9-afa02724ca28\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b8710ca6-448c-4fe6-b47a-0d3ffe4ca754\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/749ec07c-e1dd-4dd8-9461-445823408168\",\"moduleSequenceNumber\":64566},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4ba5f11d-b8f6-4bbd-961d-92b3f8f1e4bc\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/619392e2-ff3c-4868-b71f-a5f46e1419af\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/3516a613-df39-4e5e-bfd6-6b6a5127beef\",\"moduleSequenceNumber\":64585},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/795b359d-9550-443e-8d6c-36a852c2d814\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/69937ef3-01d5-4ebc-99a5-123471f4cb81\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e11af618-0352-40ca-89e3-befafc6f6915\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1d9148eb-98e9-4d44-9847-6939c52bf5cf\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a4369ba2-eefa-4b92-9e06-ee50d5951bee\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/16f0820b-fa4a-4273-a544-ad4db9b3de1c\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4d08083a-f88e-408b-af55-2af9b6a897f7\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/047b584e-a3b0-493d-b181-e04b59a7b1cc\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5cbfa7ca-53f6-45c1-a883-0c5095c09e90\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b102fdd9-a59c-43c4-9b33-eb3f4474f93f\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1104c052-c8a4-48b3-bc73-d2d6e8c49eb8\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0684fdcf-2009-43cb-8f58-d8b4caad6b15\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/d9108709-a9a0-4c68-b02f-692d82600449\",\"moduleSequenceNumber\":64576},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d899ccd1-edbd-4f67-bbf5-9b996df57d70\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/09f2e2c7-0c97-4b4d-a787-59427d7acd30\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a4bc2e29-631f-4a60-9578-8a85e6537286\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/956bea93-7fc5-4454-b4ea-5df3eb2e1590\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1d9ff830-0aae-4948-b0b9-a64b221658ed\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e1d56d2b-5fe4-4c61-bc9e-bbac45732f49\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bb243f6a-90cb-4d9c-8a9c-3d72a9c29f83\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4a1e1ae1-112e-4de1-b31f-a5c29d5169cf\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5b776e07-fbd3-4cf4-9f65-bae020cc6219\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d7c0344f-a0f3-42f2-a40f-35664fd8ec6b\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/dbccbd5c-2935-4d1c-a036-19e3078b54a3\",\"moduleSequenceNumber\":64573},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/56aa5bb1-9006-4212-8b0a-0268873b76af\",\"moduleSequenceNumber\":64568},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f8c1ba36-4a7a-4ee0-ac56-0e7f612f160f\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/320f1c4e-6aef-4871-ae9e-7a6ebb372c0b\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/30eb686f-7480-4f07-9cc4-1bf95d6c89eb\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/208ad85f-bcc7-4f9b-9ee9-daa85f435f91\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/ee8cd04e-558b-44b8-9bd8-177d52c8a755\",\"moduleSequenceNumber\":64587},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c83eb42f-176d-4ec4-801a-7e09e539ec38\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/990efa76-a8e2-49d0-a2b0-f333a5c0fc2e\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/97213746-6e1e-46ad-ab3d-a70d2d25e2e3\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/357bb9e4-7280-492f-a7e1-e553b888cd8b\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e799a21e-74f9-4545-90bc-b86f6c8cbcd2\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/08c3a1b0-401d-457f-bf4c-c4667f75c434\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8cbfe120-0196-4f27-ac71-6e9b82ff9aed\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0d3b2949-39f4-453c-a76c-4b427a29e4da\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d1ebeef4-c914-4a25-bc13-9281e9bddcdd\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ae466b86-c495-4808-93e8-32deb5d3df6e\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6362982e-5420-4bd2-a897-1727742c6433\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/00ec746c-4c34-4e95-95cb-63b5fb68401e\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/89bd85b2-880f-490b-a2fc-a7691c6ffc08\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/84db352c-a699-4307-b700-eb51d516a5f3\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/65e3a466-0bd6-423f-9fc7-16cb66850e89\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b46e53eb-f644-4e0a-95b3-6a184afef9d7\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0ecd3cdb-0f36-4c13-b9f6-206ee5ef7b5b\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cb483b5f-97d3-44d8-9dfe-8caaf7513268\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4bd52257-3fe8-4230-adfd-03451fba2fb6\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bb9d5c17-005b-4436-b7ae-559e06ece8e4\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2d6dc110-b994-47ab-834d-d8bbff21dc92\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/cbd12058-5c37-4d74-9540-e0660bf14245\",\"moduleSequenceNumber\":64576},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2e7d2fc6-93d7-447b-8de7-13e57a731322\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6e1f2686-69bc-4bb1-a953-eefda35212c0\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e0faaff0-8fb6-45e6-89bb-377b390ca7b9\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/1ab0cc21-213a-49ce-8bc4-e66c9b0e7472\",\"moduleSequenceNumber\":64555},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6056fe35-748e-4bf1-980c-87c3b45307cc\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/959ce2ae-a3b5-4ef7-baf4-92333e6205b4\",\"moduleSequenceNumber\":64581},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ce85cf47-d436-4943-bb95-16de8b071f62\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2c3b48de-86e4-48a1-b20d-bcb465eb04a5\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e5fcddcf-a72a-4ed3-ae2f-859217b12860\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5213c8b0-6f75-4eee-8561-806997c6c700\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bdab925e-3726-4021-bb80-64d68928b411\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/97cfe34f-d951-473c-8533-0cbc2c8e52ed\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/923124c6-7ce3-4d0f-8223-8fce34f89446\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4a7f1a0b-dea8-4378-87c1-0487f71484c1\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/813c0fc0-337d-49cf-8200-08aed4fe3941\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ea5b433b-469b-425c-8751-023d1005741a\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/579b3f6f-3451-4e62-9c6b-36d719e289ec\",\"moduleSequenceNumber\":64573},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/32b425f8-c201-4276-a99e-cd7c95f8e8dc\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/99ceb793-017c-464e-8ceb-e65592a0a7d6\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/78e014d2-31ca-498e-a78f-884fa075e4e0\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/25e0516b-ea19-4a0d-96f8-29cc454373f6\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c738f167-d843-45e7-ba53-cdf15c7d0803\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/0ed10724-9d55-4458-8048-f0c82669d403\",\"moduleSequenceNumber\":64580},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a4a41bec-5727-42de-95bb-664528c53728\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fe53ba53-da68-4b15-9e2a-69cc74117f3e\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/098a5408-bba3-4893-9d9a-c2a9213834d4\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ac599b8b-21bb-4241-ac2d-7d85d0743135\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f863f6e0-37a2-4b6d-85f9-748166bb87b5\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bc9e5e80-28f9-4fbd-a470-66e8eef73c9d\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/52a1705f-b75d-4a55-bb3d-d7d90c0f9b11\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f4ef633f-28ba-4a38-b822-f5751cad549f\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fb5e0340-6907-413a-a157-9accbf2e164d\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6f725210-f7a1-4113-b922-07157e3a5a99\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e55dd040-4c44-4ce6-9140-758b731805ce\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f638b3b6-03b2-4b61-ad14-cb55ba2673e2\",\"moduleSequenceNumber\":64552},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/d0adb3cf-391f-4218-b513-17726f2d7af5\",\"moduleSequenceNumber\":64579},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5161496a-b255-4444-9f7b-5bdc8a3c1be5\",\"moduleSequenceNumber\":64569},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/16504ff7-a733-4d69-8b10-18e9f5714b0e\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0ea8e588-4241-416c-a419-a6fb39422257\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ae0ce85c-d625-4214-9691-67fda886b91a\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c7e2d162-35f5-4e64-8ae0-7dd7142b76c7\",\"moduleSequenceNumber\":64561},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/60689cec-3040-4eb5-a194-935d0a7b7b2d\",\"moduleSequenceNumber\":64560},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/61228bb9-05fc-4a08-9ec8-c5d850a27d5c\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/55862b9c-6fa6-4a22-8eda-ca925ebf8482\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/286349cf-312a-4cd9-bba1-cd29d600444f\",\"moduleSequenceNumber\":64591},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6ed6a2b4-1640-40a5-9472-6dad7cd086b9\",\"moduleSequenceNumber\":64564},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f2b82541-0364-44df-91e6-252514bb7197\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ddb7543e-dfda-4f7b-941c-880aedd7e312\",\"moduleSequenceNumber\":64556},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/09fe2a88-f68e-4fd1-9bbd-5f6286303639\",\"moduleSequenceNumber\":64576},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/4ce2fd0f-426d-4adc-adc2-7c86a8da4a16\",\"moduleSequenceNumber\":64568},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/237ddb34-a6d1-4013-a53d-0c642d72f085\",\"moduleSequenceNumber\":64567},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/99dec479-90d3-4bb2-898d-906ac4c8ca86\",\"moduleSequenceNumber\":64562},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e7579dfb-0627-4f53-abba-51d3912f268e\",\"moduleSequenceNumber\":64557},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/94b0b6be-0e02-4296-af43-084298372012\",\"moduleSequenceNumber\":64552},{\"filename\":\"/singularity/faction-early.js\",\"url\":\"blob:https://danielyxie.github.io/781ba018-fcdf-4d38-9b53-6f2ec9a031f4\",\"moduleSequenceNumber\":68819}],\"dependents\":[],\"ramUsage\":75.9,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725399,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { owned_augment, purchase_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport {\\n    join_faction,\\n    raise_combat_stats,\\n    raise_hack,\\n    work_for_faction,\\n} from \\\"/lib/singularity/faction.js\\\";\\nimport { work } from \\\"/lib/singularity/work.js\\\";\\nimport { has_ai_api } from \\\"/lib/source.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Join the endgame faction Daedalus.  The requirements for receiving an\\n * invitation:\\n *\\n * (1) Must have installed at least a certain number of Augmentations.  This\\n *     number varies.  It can be accessed via the getBitNodeMultipliers()\\n *     function, under the DaedalusAugsRequirement property.  The function is\\n *     available after the destruction of \\\"BitNode-5: Artificial Intelligence\\\".\\n * (2) Have at least $100b.\\n * (3) Either of the following:\\n *     (a) At least 2,500 Hack; or\\n *     (b) Each combat stat must be at least 1,500.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function daedalus(ns) {\\n    // Ensure we have already installed a minimum number of Augmentations.\\n    const augment = owned_augment(ns);\\n    let min_augment = 30;\\n    if (has_ai_api(ns)) {\\n        min_augment = ns.getBitNodeMultipliers().DaedalusAugsRequirement;\\n    }\\n    assert(augment.size >= min_augment);\\n    // Raise our money and Hack stat.\\n    const fac = \\\"Daedalus\\\";\\n    await work(ns, faction_req[fac].money);\\n    await raise_hack(ns, faction_req[fac].hack);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the endgame faction Illuminati.  The requirements for receiving an\\n * invitation:\\n *\\n * (1) Must have installed at least 30 Augmentations.\\n * (2) Have at least $150b.\\n * (3) At least 1,500 Hack.\\n * (4) Each combat stat must be at least 1,200.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function illuminati(ns) {\\n    // Ensure we have already installed at least 30 Augmentations.\\n    const augment = owned_augment(ns);\\n    assert(augment.size >= 30);\\n    // Raise our money, Hack stat, and combat stats.\\n    const fac = \\\"Illuminati\\\";\\n    await work(ns, faction_req[fac].money);\\n    await raise_hack(ns, faction_req[fac].hack);\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the endgame faction The Covenant.  The requirements for receiving an\\n * invitation:\\n *\\n * (1) Must have installed at least 20 Augmentations.\\n * (2) Have at least $75b.\\n * (3) At least 850 Hack.\\n * (4) Each combat stat must be at least 850.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function the_covenant(ns) {\\n    // Ensure we have already installed at least 20 Augmentations.\\n    const augment = owned_augment(ns);\\n    assert(augment.size >= 20);\\n    // Raise our money, Hack stat, and combat stats.\\n    const fac = \\\"The Covenant\\\";\\n    await work(ns, faction_req[fac].money);\\n    await raise_hack(ns, faction_req[fac].hack);\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join an endgame faction.  The endgame factions are: Daedalus, Illuminati,\\n * The Covenant.  This script accepts a command line argument, i.e. the name\\n * of a faction.\\n *\\n * Usage: run singularity/faction-end.js [factionName]\\n * Example: run singularity/faction-end.js Daedalus\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Join the appropriate faction.\\n    const faction = ns.args[0];\\n    assert(\\n        faction === \\\"Daedalus\\\"\\n            || faction === \\\"Illuminati\\\"\\n            || faction === \\\"The Covenant\\\"\\n    );\\n    switch (faction) {\\n        case \\\"Daedalus\\\":\\n            await daedalus(ns);\\n            break;\\n        case \\\"Illuminati\\\":\\n            await illuminati(ns);\\n            break;\\n        case \\\"The Covenant\\\":\\n            await the_covenant(ns);\\n            break;\\n        default:\\n            break;\\n    }\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/home.js\\\");\\n}\\n\",\"filename\":\"/singularity/faction-end.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2feb613c-8608-4fbc-ac0a-59ac8bb47158\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/be6c3317-2920-4621-8ede-a15b65471bf3\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/68d78524-9d86-47e9-bc01-c4575a08999a\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/816c44fc-9863-41b1-bff0-b01e919b95b0\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b7ee14ec-c17a-44f9-bbca-005d49ce8b40\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4bf6e683-0259-4f94-8303-9769f67073ec\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/62c794e8-c316-42a1-bc3a-126df06034b4\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1ba9ffc2-5f4e-4d95-af4e-b90d7398ca8a\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/450598d5-68db-4281-ab7c-7c38e29f2331\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f8462715-31a9-4c2b-b756-4153ad34eb2e\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b1272a2d-a809-40c9-bce9-d6a94dd01998\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/982710eb-5ec2-43ea-ae3a-91612529472e\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/48899eb0-ca8c-4884-aad3-25aa44f35fd2\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e8138480-750d-4411-915d-2d75fd9e9d2d\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5dd82953-4d14-4c53-9a20-a401ca4ab6d1\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/98dc8e19-529b-418b-b056-eea68cb9510a\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/21df1ef0-5fa3-4b1a-8b8f-8bd7ab17b704\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/20f99f69-48f8-4112-a0e3-06dcfd593493\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b817c1ea-75f3-4470-9a82-646630896fd4\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/066535b8-0692-4f77-9fe5-a001161e4115\",\"moduleSequenceNumber\":719396},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/2f6c15b1-0769-4975-a7c9-7ff86abd87ab\",\"moduleSequenceNumber\":719435},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9f577822-2792-4d8f-b5e0-a694a1c4c3ab\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0dbb176e-87e5-46e8-b0df-1396278b02ff\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d0e8ef83-ea04-48ac-ad72-5bdfa2822335\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/169644bc-c091-4652-b777-9f9a5a2dee02\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8c04b0df-758b-4adb-af56-54d4a5a439c6\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/aa24d260-551b-4c0b-ab2c-5ffff6e7e348\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0ec47746-4b9c-4465-bf3c-04daeef227eb\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fa89f359-4611-4774-ba80-5a705edbc1cc\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/05a502a8-05c8-418b-ba92-4f867d8be2d8\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4aa6a82f-a58b-4f50-bfef-cc7fd526218a\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ff9331fe-13fe-46c8-be3e-992288ed7d69\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/553ab480-8c6d-4a38-8f84-0442b498fc2c\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/841e5f9b-c61f-44be-bace-4722c18d8650\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/babfb278-1519-43fd-bf03-61ab4a863413\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cca32f8a-320d-4c5e-bc56-aaa0759aa239\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9ad5500b-98d7-4321-b0b5-d7e61d9b385a\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4390ec3c-9b00-49bc-a9c5-d9da79a4dda8\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/501bf6e3-be94-4aed-b0e2-3b1878a2ca01\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a52e66b0-c209-4711-9e10-b5cc06fbcaa6\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/10798599-00d2-457c-a378-39c36a5c5ed9\",\"moduleSequenceNumber\":719411},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0ac1a754-5e4a-4538-81ac-acc654f24463\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/eda99102-271b-4559-a613-ab32d3fa7281\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/4b2169f3-08ff-4fd5-b765-e5fb768959c2\",\"moduleSequenceNumber\":719430},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8c62ffaa-7e14-4c80-a498-7b6d17e3d838\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/98b79697-01d8-4d78-902e-f4aa9c9471a9\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/83c38531-bbfe-495e-bee5-f3de0ed784d9\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b106aa5f-abe3-4ed1-9150-0cc5c8ca0429\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7bef873c-3c61-4ae9-8ef0-0ba554d909ac\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/173bf97a-09e7-4224-9b30-28523594de1d\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/65442fc1-9e9b-4d69-a656-064aa7daa89c\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bb787f41-2149-49a8-a1e7-e568db325769\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8b148acc-2833-4121-a2ce-1524d53cd655\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8b0b3af1-a00b-4af3-8aff-106944dee78f\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e23d71af-a1dd-4870-a1f6-6f361be9c5c8\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/66c59521-042d-4670-8aac-f17fef2825a4\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/44948c44-6685-4618-a43a-b3073f0443c8\",\"moduleSequenceNumber\":719421},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e8256593-e947-4f69-b504-d6b1450a4294\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/754beade-da26-4b64-90fd-dba0a9cc48a2\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f741dce4-fcca-44e9-8f85-c69452b66ae8\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/30dabe31-0978-4cf6-8721-3638c4f8eee8\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7727604f-8648-46d2-8a6b-fc9bbf6234e6\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ea8dd06e-fd7f-479f-8389-01172abcb4cd\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/da37c969-825a-4da1-9698-d84305f17b69\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ef414399-98f7-4b8d-8350-5ab699954933\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c479a03b-b0f0-4152-b0fd-4c658f001257\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/08f96017-21aa-4683-8b69-e62026afa389\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/17e6b592-ca20-4d8c-8d41-fdc9db575ab2\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/8a4fad55-1ad6-43f0-a58e-9a07e7c1d355\",\"moduleSequenceNumber\":719413},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b2a85f21-9d0f-4956-b38d-98f44eedac03\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d77d3968-6ccc-43a3-89e1-b3b3a1c496e5\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/95e56916-a030-4f7b-9b18-b2eb69f5c958\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/d56a212f-df54-4a50-8233-eef46872a315\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/1cb77660-a8f8-4b85-841a-34091edeaf3d\",\"moduleSequenceNumber\":719432},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b0e6d3bc-58d3-4aaa-b5c7-18683240661b\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/05a432d5-2455-4302-b16e-82bbf1f1b120\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/afa28543-31ca-4fff-8afd-754a501d9aec\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a854aefd-9763-4e13-a3b7-2e7f72db3c48\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/869ac5b4-2f37-4778-b8d3-61cd77e6bf9d\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/de3a59a9-3fe5-40b4-aab1-97919ce5fafd\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7bb546a4-939a-4e7d-88b9-b6007a8015e5\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1d93d4f0-5837-4d9b-b595-d9d676400146\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3351fb11-19db-4f3e-a6dc-81f65b3cac5e\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/73b46943-55f9-4c9a-8ccd-5ba65a96c93e\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9f099625-3f59-4e66-81d9-d0bf8517503c\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/03ddb9b0-7cc6-4892-9df0-6919a3cb9663\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7016ba6e-a167-4e1d-bb73-1261a903fd2f\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/84f3f764-f07d-4152-8d6d-7b971a5149b2\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2d704773-f0bc-40a7-9fec-9125932b4b73\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/186b61e4-2a7c-4071-9b24-4cd9f6f1d9d9\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/25e7c7bd-9daa-4eae-b234-8905f079cf04\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8fec9c79-7bb9-4f2b-9ed0-6ae8d9ccf993\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/93a0d201-b0a0-4f55-8127-35b77aa7490c\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/e6dddd97-7870-4ec3-bb20-64771c14f828\",\"moduleSequenceNumber\":719411},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/628f2ce8-2c77-49fa-a50a-d0583cf5706b\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/d9c215c2-66af-4175-886c-33d593915e44\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/d7f374e1-a28f-44f0-8426-e570ada743d8\",\"moduleSequenceNumber\":719430},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0b969ae0-2260-40d3-9887-c7bc40020177\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9f704cf6-b049-435c-b874-f6f3f334a662\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8b8b977a-f7f9-437f-9b58-9fb640351d44\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d40fb707-092e-460b-b07f-1b823f7692f0\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/041111f6-5df8-49d5-97a4-1d300573ac2b\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/37b6d06c-f375-491d-8065-ef72dc0169de\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/65a987f2-16cf-4b7e-9146-7d703677d2fb\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bb9bf93a-c437-41f5-9732-4767933ba888\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e205c210-304f-4c57-988f-fc03961bf28b\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/431950a5-d41c-4c4a-848b-0358b30b2d75\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/302afc2d-703c-47af-ac74-3a6508b812cf\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/52b86d32-d8fb-4070-8a78-2e1dfaebf4d4\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8e9ae77f-d52b-4c1a-98d3-36e8e757d31d\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2c5d2324-7c8e-4622-a8ce-85b496f70eb6\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/33690e45-f6b4-45c8-b295-dc1f4466ee54\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4e7dabcb-81f6-4e0c-8c6a-977a5e5c12b3\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3c4cda5e-9a59-468d-8b8e-2db3544d83bb\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b8e5ea92-1842-4f4e-8aa6-d8d1f96dfca6\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0ef9e5a5-feab-4a93-a39c-70ebbddcdcc4\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a5fe7489-ca0d-4bfd-8b9b-7a06cc367117\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/cf8c5de1-d79c-4dc7-ab24-7a4a85fb5f5b\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/7c1e7e30-8731-4af3-a617-83346c5badb3\",\"moduleSequenceNumber\":719424},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b640d67e-8ed1-4ca5-8fb0-fc3043be19e5\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e5b5a81e-e385-4cf5-950c-4433e213413b\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5fe49a9c-46bc-454d-a835-e1c15c8f9275\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/366318c4-71bd-4bbf-9678-d7a3f9286c5c\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/eadb0ceb-ed0d-48f0-a145-867f48289638\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a1016df5-5156-40d6-aae6-ecf93a2bef77\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2fc932f5-e87d-4363-874f-2097d79f227c\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/02dafd9c-3a06-4e52-806c-289b9917556b\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1a40c9b9-2c1e-4686-be21-9ec618b26f7f\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a2ba4f70-012a-4cfd-ade7-cbc53fb3d97d\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/da22d1af-ad06-4200-9157-1463e59655a1\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3393f520-80da-4b79-8c5c-69a419253ac7\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/c41a20e0-9b7e-48f5-8607-5ee78cb0f12d\",\"moduleSequenceNumber\":719421},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3508efeb-39d5-448f-871e-3ceb212a7a0b\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9b628fab-7864-487c-8919-7f0bb17074ea\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2218bbf3-a400-47a2-afb6-9797adfefb2b\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7310f842-4cb4-4d0d-b503-52eab4b32f0e\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0b1ce5ed-9a21-4fdf-9127-c2469812b859\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b0319336-c5e6-41dc-9835-8f7c0ae949f3\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e8776ce6-29de-418c-a4ed-cf754360ba35\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9d32da1c-51ef-4532-a5f2-d87b76bb0f51\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9a76086c-9ae5-4752-8fac-ca0ffd3d668c\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9217f545-a3ff-4b85-b1b1-2c4e179fe77c\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/dbe00225-3839-488c-8680-ebf0cc32a030\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/7f4a5a27-a34a-40a2-8e90-191d398308f7\",\"moduleSequenceNumber\":719420},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7fa7efdc-aada-4306-b1a9-0a121265e0b7\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bdcff0e6-481c-49b5-8630-397aaeb43b7f\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/dc4d9342-82ab-49f6-829f-99574473c5b2\",\"moduleSequenceNumber\":719428},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/07cc2f08-cfa8-4903-ae59-bfa674bc6dab\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d2f96b7f-eb90-4c49-92eb-8029caad9bb5\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a4e6c17f-0d9e-44e2-8c33-1a50421ea797\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6a63e871-94ff-4e5b-b96b-66285fc8cbdc\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cd5d6276-6850-4de9-ba32-d88f5d8c5917\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8ed982d4-6733-4985-99c0-092484fbd040\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/279d4216-71c9-407e-9602-77e4e31bed1d\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ea1666d6-78a8-42ce-8041-3f5b338b4915\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8f957741-7cb5-4b32-9154-fd3997dc9169\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d1414284-c38a-4394-9547-d0af6744d45b\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a66d1949-bb7c-4b6d-aa72-51dfc483dec2\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a2bdca67-d00c-4762-8c3d-f3472d78e622\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/da5547f7-90cf-483d-8f0c-9960f46292e6\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/066f9767-aa03-4df9-bc18-82e98adeb5f5\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/95b6b0f5-9d86-492c-8b6e-51a5ba1266b7\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6cfd07cf-50ef-44bf-a27e-68c786bdc729\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0ea718ac-9730-4ea5-85d5-226e23c2247f\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/896a38d0-d15e-47aa-8e7e-7da2b93783f8\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/18c95e70-559e-425d-8dfb-73b152a9d587\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2c00aca3-b98c-4be1-9dfc-ae09f9658bad\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/06276d69-6a03-462b-8961-cf24d0816ec7\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dfea71f4-bdc9-4108-abb0-c7481ccea7d9\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9d9672ad-007d-4ea4-862d-da553644de0d\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/43dee666-6c16-4a7e-acd0-b3b0ce346f5a\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e39e4d9a-a0c7-4d64-8d07-2dd8c9136c1b\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a3893833-ea70-4fdd-9ffb-d3b5053a8c80\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6e84a7c0-7667-410f-b25c-877cb47847a4\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/75c253ec-583f-4578-8497-cb5f16e14837\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/c660add8-ab93-4660-991c-79c6dbf575e7\",\"moduleSequenceNumber\":719411},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d9fb9ecc-c275-4472-a729-0b6cd23c7c24\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/d83886a2-9501-447f-873b-9fb48c2afa00\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/a22027ac-8865-4efe-a27f-5d846b0032ec\",\"moduleSequenceNumber\":719430},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a7a645b4-e527-4424-ade6-a5457af32223\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3240f68f-4949-4ac7-8029-a98d2b08480d\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2864a2db-b237-4e4d-80c6-f5296ea3fd9b\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/103e879a-625f-424e-9ab7-ea5c84ed97ec\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e0cb2ff2-7de5-4360-bdb6-ec052fbcbe3c\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cc37af66-1b7d-4184-b420-8ae1a919ebce\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1a4a02ba-e17a-4d16-a82e-3f6dad5dfbcc\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/933f40a3-1f3b-43c0-a4c5-92d353ab1a55\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8da596c5-d09a-4fbc-bdc2-d0d58414def6\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e39b1d18-7a4c-4450-a0dd-30b3ae52c3c0\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/36f675cc-399d-4c5d-9e3e-93f581f7feb3\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a8ff2e13-d3fb-4564-9341-726b125757aa\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/2d0ca121-9fde-42d6-b8b4-429883ffe672\",\"moduleSequenceNumber\":719421},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b464c593-ad29-4042-8623-bc95080c33b2\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ea10bf5a-d573-42f2-8934-e0a5c4959144\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7cd5e4c9-23c2-4b5a-b090-b8d81536d2db\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c9c795ac-a7a2-40e1-8e75-f225adfc0726\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b0e38e7e-f08d-4d1a-9997-2516577bd6ca\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/12df5591-da52-40f1-99a9-c5c542f764f7\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6dbf3186-2677-4f50-b51c-7f85413be002\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b21cbb1b-fe6c-47af-9121-f51b9bbcc89b\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f80709c6-c5af-4642-8c2f-aa8df1f57440\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d490c6d1-9830-49f5-a505-aba7282d72fe\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/663c243d-f6dc-433a-b412-0f3a57ff1017\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/13b0b4e0-dc49-4a1c-9817-1b69aa44714f\",\"moduleSequenceNumber\":719413},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e863209b-e81d-499c-9bac-efe865d007cb\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/15cb268f-af2f-4dfd-a996-eed2debab356\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5d7c3c07-f6a2-4a5e-b5a9-9abf5f4da48d\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/22e8ae64-cc99-4aa5-9bcb-421e94667a3a\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/14ae9389-1abd-41b1-b58c-45f58902802a\",\"moduleSequenceNumber\":719432},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f0358586-1b9c-43a7-80be-b1c24992c36e\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1e1505fd-07d7-46ea-a1ec-47d4a99a5c13\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8800d267-b2de-41e1-a770-0f7b94a83f09\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4958c2ad-0b4e-4f5a-b238-04a5ccc07cbb\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0f597165-900b-4a27-b5c8-eeb699967d70\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cf7007d1-1d8d-4bd5-9019-42d361a33fe7\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d2b4f39a-fa19-4102-9135-28e878532502\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0104e7d0-c747-4471-ad28-ad7cecbb38be\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/35f6cd35-0ea1-4f03-8025-ff11f1207763\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5df060e3-70d4-453e-92eb-28430ca8c6f2\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1de3d23c-2949-4f5b-83bf-18ca2a17f5f3\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/618682b7-aef4-4917-b784-36ba1e272eb8\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/969c305a-5447-49f9-9126-58281b26a867\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6a9babb4-2829-4899-a750-416622dd3e30\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/814b1611-e1a1-4e80-8931-46ada904afd0\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e7abf6e1-8167-4d9f-8703-1e2096d8936b\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3e8772b8-69ac-495b-8760-4e69573e58b9\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4dfd5093-93a4-4211-898c-3a2b27317e41\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/88f580f4-c745-43d4-93b4-140cc1ea4c33\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/379f5e2a-23ea-4512-ac7c-cdde1c4162aa\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a9e1eb69-0b46-4c7f-a276-77a1c5ff0bfe\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/19673aca-f0e9-4e05-bc5a-b90daa193f12\",\"moduleSequenceNumber\":719421},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8565206c-cd5e-467f-a042-0228ba583eba\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5c420fc9-699c-4784-823b-5d6fbade32b1\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/956f79fb-b047-497d-86e9-a03b10f5a530\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/c7ad4025-a34f-414c-8bda-46ddf0d08bf9\",\"moduleSequenceNumber\":719400},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/15124537-f48c-4830-bdec-1ed4b828ddf8\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/cbf6402a-23b2-44a1-9b78-dc33c3fd02b2\",\"moduleSequenceNumber\":719426},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ac8b7e6d-0be0-40a9-a3cc-281ab9afb3d6\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0b682635-5791-403a-b0c8-e692fcda93e1\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1c1382e2-9e6c-4b0c-958c-c3868e720c76\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a3a4c070-b5e3-4857-a150-ef7b807b8eb5\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/876c4f28-d852-47d2-bc93-ffc682ed5c1b\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0f068f64-466a-44c7-8db3-81791d7566b2\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8c341513-973e-439a-8bd8-1aebd302e75d\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2a11348e-b1c4-4570-aea6-87968915f3be\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fa314120-c27f-42b0-884c-27059b1f665d\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1cd4ac76-13db-4851-b1c8-186beaa9a341\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/8845de4f-862a-44c0-a64c-a4ce313077ae\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/45ab946a-0473-443c-84f6-d32d0cbca110\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/96124e83-a454-4daf-a7c9-749735755e64\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0dd71429-b49a-4e21-88a6-e7671df67c2a\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3dc87347-b432-444d-8ef2-4e7dfa7d61a9\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f40d520d-1d31-45b1-b01e-03844c3024cb\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/3e2b9e26-f2cd-4a50-9a36-aabe54e9fbe9\",\"moduleSequenceNumber\":719425},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f5132e4d-2b4c-43e6-a5a6-e56ab5c5d27e\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/feb36a63-b777-4fd8-aead-07ff40d08e38\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cbfb8434-420d-4ece-b8c5-d9e1250a1643\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/badc1feb-dab4-4da2-8bf7-2423e00a6a65\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b7fc5a2f-4a24-4d06-8688-e32427466c41\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/66c4e1fa-3ee6-4e81-8003-85c5b9322331\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dbabf64f-2e07-4da3-a864-2f45eb91d37a\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b63bf82e-8018-45e7-8212-cd48063a2993\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/20367a24-69ec-4920-80be-9d224c5ab1d4\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4c7ab441-4e77-45ef-9672-8d346a4ed72a\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/72ee0efb-3262-4447-bf3e-49c3eab9d467\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/83a29f84-1351-4e07-b7b0-807fd6f605f9\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/f9c13cca-b010-46bb-9e18-681b27dd6cd9\",\"moduleSequenceNumber\":719424},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/48e8c558-fd87-439f-b33e-1c0d5f6556c8\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ac32841f-a952-4cd1-8a02-9951faee65dd\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3a484382-c192-4088-8b62-34433a3cd416\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/825abc9c-950f-47e0-a44f-08c098041b0a\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9e506919-b79b-4933-a0ba-155bba7912a1\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/036be4ef-4773-4a1e-a240-2a614807eb0a\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6d37242e-cd91-4735-9fe2-a10e66ad9c1a\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ab6aeb28-cb3b-4bfc-8e4d-bdce23152dac\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/efc7a199-b0be-4f65-b894-8774b16f0f64\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/240a1341-8d8c-41cc-b504-38b7fe00692f\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e9c5c443-fa69-4d9c-8392-76347575f0c4\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/91fe1a72-78de-4944-a231-903eea11c9db\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/54b6e0a2-3016-47d3-994f-22702587c523\",\"moduleSequenceNumber\":719421},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/aca7b98a-ab31-437f-95c4-3072a7ea1a52\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ed4da4df-edb3-4302-834a-207c519c17d1\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/990441e2-5e31-4452-a72e-4ce8d6f02c7c\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/363f18e1-b786-40ce-9413-8dc7267d51ca\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5f9d479f-8e57-4927-b70d-978d960d1f35\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5464fc3e-4dbb-4b15-b385-56b7e4ccf00c\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4d7764dd-4bcd-4d0a-90f8-4442aee47880\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e704e109-639c-4a9f-a000-6e00e79c5818\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d1c47c84-a80c-4061-baa0-95d4d8026858\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7e77d8b8-2f52-4da9-8a8e-e45207b6fd81\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/1e54d034-bbfe-4f32-9756-8fc884433aa4\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/0e7b2af9-7602-4b9c-96c4-46f046f8935b\",\"moduleSequenceNumber\":719413},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f5f0a73e-8c07-464e-9af2-33e80fb00bb3\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2c67f77b-8535-4a52-923a-9fa7dae416af\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/703ab3a1-530d-4bb1-b169-4acaed720030\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/f7e93588-740c-41b1-a3aa-b910cc27e2a3\",\"moduleSequenceNumber\":719400},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8c9d4769-c68f-4279-8f75-2bff3668b2f5\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/656d03e3-fe8d-4cd9-8e2a-df8faec1128f\",\"moduleSequenceNumber\":719427},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b8cfdd03-762f-4545-822f-a617b5f2531a\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dead4944-7aa4-477a-8df5-9e171c0efd6d\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1402e946-8ef2-4392-aa25-30e67aed6fac\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8306eb86-24d3-44dd-b03b-6fc56c63119c\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/74d3b0cf-ff26-4d61-a8b8-b1017b15169d\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3c6f8f6d-0b8d-4660-ae62-c5a148209ee5\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bebe93e7-e2a0-45e8-a039-9e31c1beef17\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c4f0cec0-2bc9-48c4-9084-772f007e6159\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c891e3ce-68ed-447c-9035-e2de0a6e2f95\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f4b4120c-9a18-4204-a4a4-c93c817e93eb\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c919ced5-82ea-4e3c-b271-a844223b9f66\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b4ed3a4d-8144-446f-8dac-7a4bd8e3afa2\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ed64c5d3-a852-485e-8972-1aa6d969f1cb\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/84c25d16-dd23-4c5c-9c34-dbd2c280a1df\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/891c9e7b-ffae-4afd-bcf0-3ea35fa65863\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/985fd8ec-c2b1-416f-b399-5ba8428b8058\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e4655327-fd92-48e0-af03-e627312c47eb\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/60c153a8-62f0-4fdb-8c39-0c2d5c3a1bc6\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e6f5c266-6bec-4b55-b515-7001cf762447\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ec913de4-f46b-43f4-9e7e-75740c6a7488\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9f4e8a2d-9b5b-404a-9b0e-ed1489bc280a\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6855b100-73f0-4bb8-a956-0a92813d2a3f\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e28bbb33-eecf-4919-8234-55e6f4f34527\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c6fd2ad2-e1c1-4b5f-a5b2-c4bf76f0dd7b\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/49c66c0e-793c-468f-98db-f0d5d01d3cb2\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1773025f-da95-42cb-8e1e-e364c9c92575\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e6590347-4ce0-4f41-91ac-4937a074a0cf\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0c490508-bd27-4653-8d16-62f4e9e2c976\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/f0f80699-c336-443c-9238-55312180a048\",\"moduleSequenceNumber\":719411},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2f16f2c4-89e3-4e83-9b89-959a05c5bf3b\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/52e2fabb-fa40-41bd-bd8b-24018be236a0\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/458fcdb3-372f-43f8-8b49-bfc90d0fa533\",\"moduleSequenceNumber\":719430},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2b8615e3-572f-499d-a8f5-f7d1f8eb4da4\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2fb32963-3f25-4d0c-866e-8a4904062c02\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/86f70405-fda7-47f5-a12e-c1b7d787b581\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/073c2be4-6b00-4638-a666-43f0fea233bd\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/59ac3d8d-9e68-445a-bf26-2d052ab431cb\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5c1d6dfa-ae1c-4a3e-82f1-85593f8d492f\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/10903b4e-912a-4eab-b71d-7b695b29a636\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/206f0e1a-cfd3-4d98-985b-684d3d2e3039\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5bd43186-8ee6-4dfc-8312-7c28663f3b7c\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f0af5583-788e-4a29-8999-14f0161618ff\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7fb8cce2-f42c-4505-8c7b-72bfc32dc3b9\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3042e011-b0f6-4eee-bfad-3fbd2cf6d380\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/0a4e0250-b691-4402-863b-84b59a6d9058\",\"moduleSequenceNumber\":719421},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3af6094f-8022-4323-868d-f2f03875faf9\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/758dd9cc-cf0a-473b-b505-1ece73d33fba\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/413b7b4d-59ed-44b8-b49c-da70f3c1f624\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d33bff3c-21d3-4f6c-9b42-d96fd714d59b\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0c967456-a487-4464-9f86-8ca3ecfc2ce9\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3eb391d2-b92e-40a5-b956-6c6f8c8c27f2\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a9e1c8d2-baae-46ba-a334-24b9ff3a8699\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/02db106d-c4da-4553-82b5-fe76e188cc9e\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/678994dc-ee38-474b-963e-e38e54292e61\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/404a40dc-39fc-40f7-8060-50642a99be00\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/8de3a4cd-709b-457b-a7e1-cce2db26f39a\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/a4694433-f310-4a4c-8d41-5ca03b30928f\",\"moduleSequenceNumber\":719413},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/215ea350-8761-44e9-88c9-6a1346f614f5\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/95d557e8-3c00-49bd-ad0f-404a0d686512\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d66c2b04-51d8-4afe-9f63-0dc800fd6198\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f8371fdc-74e8-4941-9197-6b00ee8c6fec\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/8a489788-4a2a-46c8-9eae-31687502285c\",\"moduleSequenceNumber\":719432},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4c577308-4c8e-41d3-a20a-9eaf455277b4\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0b748e62-d0c9-4f79-917e-10b3458442c2\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/add7fb07-fffa-4445-8a3a-c12d20e5ef4a\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fc47e8de-4ddf-47f3-867a-1611d2beeff2\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c0649455-57ea-4223-af36-5c1cfcd1124b\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a7fbba86-0a38-423c-9d2a-53535a051dc4\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5ff28f95-12bc-4d22-8aca-aa6abe0ad75d\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b3db0d58-3cc4-42b6-908f-72a4ffaff9cd\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/02e1c7cd-68d0-4eca-afa4-4bbf53b12c00\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0bf70a06-35d5-4311-8231-8716fb23a9ff\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/19e0daeb-ee14-4345-b7b4-589d28268303\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3686d9f2-2b1f-4da1-a81c-38de4d926dbd\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/201254d4-076e-4316-9a5a-bcb2220131fd\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3d22e446-eb67-4cb9-ae91-60e39bc817e8\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1d46723d-e803-41db-a8ac-770356d3149c\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b2a01d3d-10cf-4e56-a5a7-a90e4f9492b1\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3f8ad15f-04d3-42ec-a247-406ce6219654\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6110b0e2-75b3-430f-a162-8334fb1afb06\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1af76000-4f14-400f-8b1c-ec4f28efb045\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bb3afb4e-de18-4319-9871-875c657769f6\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a3e9391d-5dec-4396-b0a7-db508861d80b\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/4a65fbb1-ee12-4c24-8179-d75d0ffc4f46\",\"moduleSequenceNumber\":719421},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/05ada806-4471-42f0-817d-5d7af2255361\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5e0bac2a-4f3a-4ddf-8662-16492c5b0a06\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6b38d3fe-9dd8-41e8-8472-2a75e4ea02cb\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/ab2090b0-3a26-4da7-8e8f-579ae5ea6be3\",\"moduleSequenceNumber\":719400},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/70dcfdad-7473-4926-8b8a-daaffce7855b\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/7fa66e83-d7e3-4fd1-8a6e-ee3399332ce7\",\"moduleSequenceNumber\":719426},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/74dee71e-31c2-4f50-95f2-18f50e1a25b0\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/08406469-20f1-4940-8a3c-6da9c5ad33ed\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/aaaca4a4-28cc-426e-9e3a-33b6278f2b05\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e65f4116-a1b5-4ecb-a325-b4c89d8e9a57\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/40ef0bd0-16a4-4166-a750-fff0de86285e\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4661140a-3552-4bcb-9312-ddd34fa14cc1\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5652de00-1746-4e3a-aa6c-c9e2d4377ae1\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/268ea0f3-edce-4636-aa10-b4ac75d415cf\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9e100c9b-418e-4bf3-adba-3d8830d18311\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/77c931d2-07da-4ab5-9196-9dea6168008e\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/73c7a28a-3768-4ce5-8098-bd031f70a8f1\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4a0a6c76-a14f-42ca-b9db-a033ecec155f\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/432d8bbd-b076-4f58-80f8-df321b69f2a3\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/75a39e32-b66f-48ff-9306-68f3a3365b88\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c4a64cc6-fbfd-4426-8b9b-d492387b57b0\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/209190f5-db09-49bd-82dc-108e00e1ac17\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/0f006303-c771-4d55-952a-c043776251fb\",\"moduleSequenceNumber\":719425},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/4900d3bd-d337-48a9-92e8-cb33fc919e8a\",\"moduleSequenceNumber\":719413},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2dedec8d-7c45-40f9-9a3d-07f8b2160db0\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/56f964aa-2c5a-42eb-a39e-9f53c4003e62\",\"moduleSequenceNumber\":719397},{\"filename\":\"/singularity/faction-end.js\",\"url\":\"blob:https://danielyxie.github.io/258f4959-032e-4990-917d-492140362f75\",\"moduleSequenceNumber\":719810}],\"dependents\":[],\"ramUsage\":83.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725400,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getBitNodeMultipliers\",\"cost\":4},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { purchase_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport {\\n    join_faction,\\n    raise_hack,\\n    work_for_faction,\\n} from \\\"/lib/singularity/faction.js\\\";\\nimport { install_backdoor, visit_city } from \\\"/lib/singularity/network.js\\\";\\nimport { raise_hack_until } from \\\"/lib/singularity/study.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Join a hacking group.  The requirement for receiving an invitation is to\\n * install a backdoor on a target server.  The requirement can be broken up\\n * into the following mini-requirements:\\n *\\n * (1) Have at least the hacking skill required by the target server.  This is\\n *     usually a mid-level server, typically requiring a hacking skill of\\n *     several 100s.\\n * (2) Gain root access on the target server.  As this is a mid-level server,\\n *     it requires between 2 to 4 ports to be opened before we can nuke the\\n *     server.  We need some time to acquire at most 4 port opener programs.\\n * (3) Manually install a backdoor on the target server.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to join this hacking group.\\n */\\nasync function hacking_group(ns, fac) {\\n    // If possible, we want to perform Hacking Contracts for this faction in\\n    // order to raise our Hack stat.\\n    const target_fac = \\\"Sector-12\\\";\\n    await visit_city(ns, target_fac);\\n    // Ensure we have the required Hack stat.\\n    const player = new Player(ns);\\n    const server = new Server(ns, faction_req[fac].backdoor);\\n    if (player.hacking_skill() < server.hacking_skill()) {\\n        await raise_hack_until(ns, server.hacking_skill(), target_fac);\\n    }\\n    if (player.hacking_skill() < server.hacking_skill()) {\\n        await raise_hack(ns, server.hacking_skill());\\n    }\\n    assert(player.hacking_skill() >= server.hacking_skill());\\n    // Ensure we have root access on the target server.\\n    while (!server.has_root_access()) {\\n        await server.gain_root_access();\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    assert(server.has_root_access());\\n    // Install backdoor, then join the faction.\\n    await install_backdoor(ns, server.hostname());\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    ns.print(`Buy Augmentations from ${fac}`);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join a hacking group.  The hacking groups are: BitRunners, NiteSec,\\n * The Black Hand.  This script accepts a command line argument, i.e. the name\\n * of a faction.\\n *\\n * Usage: run singularity/faction-hack.js [factionName]\\n * Example: run singularity/faction-hack.js BitRunners\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.donateToFaction\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Join the appropriate faction.\\n    const faction = ns.args[0];\\n    assert(\\n        faction === \\\"BitRunners\\\"\\n            || faction === \\\"NiteSec\\\"\\n            || faction === \\\"The Black Hand\\\"\\n    );\\n    await hacking_group(ns, faction);\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/home.js\\\");\\n}\\n\",\"filename\":\"/singularity/faction-hack.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/080ce1d3-13d9-4beb-97ed-f8632ee48a56\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c8bee8dc-6c70-4ecc-92f4-04d34e31d3f5\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5bb42ceb-10b4-40ac-9ecf-13c0d274cb97\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/94eab997-e660-4ea7-a848-3c893b2a8f1b\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8a76b09f-ae1a-43b3-b592-18dd3ef93bae\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5ef6844e-5a9d-4197-9600-56dd3db9e2d1\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d53db0f8-8632-4599-8485-7e790eee8362\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/394574f6-9802-42e7-907b-b8f8e871dcad\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/88c1b79b-10ed-4e50-9b7d-dd09b9b4f3d6\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c02caff5-fcab-4d61-83e5-c9cf6dcc5efc\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c80a0cbe-bd43-4ed0-8735-dd9bbd2655fd\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/833f9d96-127f-4cb8-9cb3-1b882c7bdf55\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/85df301b-8b12-46c6-a7fc-0567b9fa5a38\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a5550d8a-6b0c-407f-8226-f4622a472320\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3b66a288-5b37-40c4-bc4c-cdedc1e21aee\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1e233ac2-e967-43be-8e6f-203409de47f7\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ddd5552f-0d1f-4efb-b6c5-761d516ad821\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6d09b56d-6cd2-47bd-ad80-f2b57efa5bae\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/be6a7ba6-3fe1-4d70-b521-a86e602bb878\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/fc0ef3e3-b2fa-4a97-881a-2620487d0cd2\",\"moduleSequenceNumber\":618289},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/87f57fc0-ba93-41e7-ae81-38fed4314648\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/285d0ba6-b90f-4eaa-91bf-deca09016e9f\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/97f71bbb-c77d-48ba-adf6-0aa9db5ced5b\",\"moduleSequenceNumber\":618308},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b42b6599-9072-412d-ab01-4ba37e9d3994\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/40c90181-f82e-42f4-91e6-aedd761f53fd\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4791ada7-e942-48a6-8709-7b1aaf151fd3\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/26e2fb47-b807-43f7-be51-2bc61391d0bd\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2a8d8ae7-811a-4020-94e7-fb627ad42d1d\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/83b50cd9-7779-410f-8f25-94a22308d431\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f7ab4344-8ea3-4c01-9b28-34a53ad349f0\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/59482c46-34e3-44f1-b8a0-ac9ac7306ca6\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/26ad2d32-2f23-4dc2-9437-9554e7b83e54\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/79583eb3-857a-4bb9-a6e4-866290349959\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3145d822-c281-49f6-912b-3213e93d378a\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1a752a38-0b0f-4921-b27e-377e7652bfaf\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d0d8d899-5d5e-43ea-9e94-7b7959a934bd\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d0b17f40-f1b7-44d9-a9a1-3a784cce4f28\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3adc68c3-1d85-44e5-95d7-e706e2b1221d\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e8f44f70-89c7-435a-b2b7-c3d0c46cb22a\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/aa810c6d-d55e-432e-8a71-1315e2f27ff2\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/89565c56-5b46-4758-95ee-ee9210fb9007\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/773d2071-0b31-455f-80f7-355cc7098962\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1716b461-0ac4-4e3a-b3db-a38911170b74\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/372ddc7a-f4ee-421e-b0d4-ef33b69b148e\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/a040e6ad-a44e-4bb9-92eb-91f522e27c67\",\"moduleSequenceNumber\":618302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0f29dbd8-946b-47fc-b993-0f79c831bbf1\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3938cff8-fe9b-45bf-90e8-d86baa21379d\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/22c0f49a-47f6-405c-a9ac-bdb826e89143\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bd805108-3aef-4dcd-a8a2-d11a97876f96\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e09b4de6-825a-45ed-8311-a6f671c4f0be\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/16ac951b-c106-4017-81f4-dc66192810a5\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b19ef63c-5f69-421a-af32-8d3158272e5f\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ee226baf-c82a-4b3c-9f5d-1233cf7e249d\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3ac791bb-a03c-4f7d-aa21-05f9b3fa51e6\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9cff1ddd-f20d-4d46-a79e-bd9c02b1a6c1\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c883218d-98c3-4c3c-8a11-a79901349911\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a2ead2ea-793a-498b-bab0-1f74fe3dfe9a\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/b435dc8f-f9cb-416f-8dd9-dc7a50a694cc\",\"moduleSequenceNumber\":618299},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/24683b3a-71d6-472b-b90e-2d8205548a1c\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b9b80861-ed17-4b27-ac70-f78f0fba1426\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d437ffca-c6d8-46ad-85f8-9d747497555f\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ed6790a5-0c71-4d1f-a54e-91c80dc79bef\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/43568430-dfdf-4667-8266-cd29f4949d76\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6bcd79dd-a055-4b12-a100-c00410ad4421\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/99143430-fdc7-42b2-99f2-0ad22c64ede6\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dcb52cf5-3f60-44c2-874a-7ce6aca235bd\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/90ef12a0-d3b2-47d8-bbc4-4b9dfa6fe935\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8c8f881b-a5ac-4950-bea6-d9f7a517faa1\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6b1b9f0e-4ed6-4293-86b4-3e067e5da3ae\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/101154e6-331d-4d7c-a056-22b7c3d3b7dc\",\"moduleSequenceNumber\":618298},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/28449422-c37c-4e31-8d5b-1539d8aebc55\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2b6f6498-003e-4eab-8909-0f707b3d8505\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/3bb32c85-6c5c-4ee3-8559-98648246fa74\",\"moduleSequenceNumber\":618306},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/50018d6a-95e3-4a65-af46-fa6c92f9cdb6\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/04268a21-313f-4421-a6b3-e8aa6a62d5a5\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3b6191c4-11a1-4eae-989c-3cf7b3187eec\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/41dd1d3c-00b0-40df-8802-87380e317d25\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a2ecee1a-725b-46e6-99ff-26966280b339\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fd7d8f4f-fdf5-43cc-a0d4-3edd8d0b3b36\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9e827fec-14f8-476b-ace0-8a91dba8be1f\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3142d3c1-53e5-4169-afe5-efe973cebfcc\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fae8df84-525e-4b02-a476-42d89aeb4299\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/30517371-7f68-4dbd-b6c8-1a0b35c4df8f\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d57df7b3-1c3e-4ecb-b746-814810a0be5e\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1be9506c-a490-4ee5-9716-91d9dc25b015\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a89d8acc-df2c-4139-a63e-82c6ece5e991\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7c43088d-662c-40da-a4bf-a1e82f8dd27c\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a10e2274-5fe3-48c0-9cb2-706989f62262\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0b6c1bda-fd30-4b5a-b210-c71fb8a2a4ad\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/eefbc320-c21b-4f70-997f-f74403415f3a\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0702c95b-0221-4537-9531-d8b5acb9f1b6\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a955437a-79d7-4edf-a963-7ca0342c4270\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/653533c6-0d6e-4bcd-9569-efa5950bd624\",\"moduleSequenceNumber\":618289},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1e5c5ed3-2171-4e7a-84c1-aae7f0bc1e0e\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/117edd15-2f2d-4ba2-8562-04ec837fc4d2\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/8c684646-35dc-486d-82ff-399644455d08\",\"moduleSequenceNumber\":618308},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6699de82-ab1f-40da-9ac5-f4790e771554\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/68b656e8-7ca3-4176-b2f3-88982fd70134\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/126fd565-a4e5-411e-90b1-f3920551f1de\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a0b1b7e7-cf34-408e-a0f9-75380bd45857\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/28306462-3309-422f-9597-c4e42219c74c\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e208df4c-0bbd-45b8-8a6a-d1b9225d3fb1\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/03f29f6b-d197-403b-9345-73ed41217c2b\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/79ff9f23-3c40-464b-98c1-2a16b5d6836c\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5bd2cf65-7a13-4c2d-81a5-81ec323eaf0d\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/defd62bd-722b-4378-9831-7235a0455499\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b86a01a0-238b-431c-9577-4241107d7de0\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/eea14e6d-b3df-4e01-b4b6-3f62ebd1a99e\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/02ed8224-7224-4a99-81ac-997e7e4bbeb6\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/22d4b2fc-a26f-42bd-95f6-3ee816f14834\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4ade2988-f899-4376-bd38-9760e6418395\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0a3fc2eb-05b2-4a09-b021-b59555fe836d\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8bad2a5f-0e0c-422f-b385-936a37f6d2e8\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c40a9322-cd32-4a2c-99a9-1e1cef9a5b9b\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6980e8c6-13ec-4d83-b145-a281e446a1d1\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f95c8008-db84-4db0-ac93-671b6dc14dab\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6c853027-998b-4616-be8c-29694741b1cb\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/62ca3624-f8c3-4630-955a-1767c54efe10\",\"moduleSequenceNumber\":618302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a2b4216b-f717-40df-a589-cc595104e87e\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d350bfda-e53c-4de9-bdea-fbede1fb4a02\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f4fca30c-a72e-4de1-b0d7-58e194480d2e\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a9974c1a-c277-4620-99d9-004bd490cc82\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fa800f96-dd55-466f-bc5c-b065d417136c\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a284d16e-a69f-470d-91f9-7a948113622e\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bf4dae49-98d4-41e1-8f49-c2cb0c026886\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3601eccd-ef22-4bdf-b1d7-b12e783bb67f\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/34669501-43b3-4abb-af03-a008d7524c99\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/da5835dd-c305-4618-ac8d-eeb4f42f7b4d\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8fc83928-940c-4063-a64f-1fa0dc09272f\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a7f41f11-9faa-4c93-9bf2-b61e61a76ce1\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/355b5095-e321-4448-b656-15937e502a47\",\"moduleSequenceNumber\":618299},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/47899294-88b6-4400-a20a-f316baed51d3\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/295df1fd-2b1a-4da6-9a7b-48f33a883534\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3b2a06d5-7ca8-4cef-bd80-1af89cfed4af\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/37cd1c36-d9ce-4375-95ff-148cd8e0d748\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/79140333-2a1c-485b-9db1-faeb320acf5b\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/39b1a143-394b-4a11-9bf1-ac910030ba27\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b886a814-5caa-4f5f-9ea2-7c078a129989\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b79b1322-9150-479a-8a98-4395a3babe1b\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c545d664-ab49-489b-846b-f26ad3dc6d3f\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b190d9b8-40f8-4f4b-9132-1903fd059ec4\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/e52d1825-0bb0-4bf9-b3fd-5b6ee9dd626a\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/a68671d9-880e-4e11-b1fe-cafffa463581\",\"moduleSequenceNumber\":618298},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3d6c3e21-a215-4542-b338-85bfc1056002\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/76988e2e-1568-4d5c-8ce5-d77609221790\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/452a6848-3c62-4ea0-a557-2433de78c052\",\"moduleSequenceNumber\":618306},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/70b4b647-dfe6-4174-bb78-23e74095dc86\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/51369a80-825c-45ed-b14f-0383f018fc5c\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c3834b24-7b6c-41c6-9c56-02c64e2d9297\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b449584b-3e77-4a7c-b862-7962624fd462\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ad8af971-2c0e-4ee7-bf73-81b2adfd4f6c\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b0205bd2-2173-45c9-9ea1-e55e699d9864\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/34ae0306-d223-466d-a3ea-3696bad94da5\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3b7dd2b6-8ec4-4451-9d8e-6dd841e961cb\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0b283795-932d-4b6c-928e-0c4c43762b4d\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/62007893-fa4d-4358-9ca4-1b6850b5225a\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c1334993-5bd4-42cf-94cd-a0e307f03c56\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a4029cdc-92c8-4480-814b-eb79fe712589\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9ded812c-39a8-415d-af0b-35e797fdfd56\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bdf8bbf5-4c1d-4e0a-b968-3315aa03f5fa\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e916ef3a-e5e6-4110-b712-386cbd891f9f\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f413d711-b04b-4aa9-a2ae-20bede343d9d\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/44fcb006-36d5-4367-97cb-14b5234b40dc\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e6d0de77-4c38-4e50-b50b-aa30fd16db21\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/18ad1919-7af7-4cc5-bdf1-a78663d2aac1\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ad8c6154-2be4-42d3-b98c-84d0900deb9b\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f6bcea9c-58a9-4e46-b227-243172373721\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/84505424-237a-4285-bb2b-a4ec098f680e\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4a9bf70b-4e1b-43d8-98ce-b06a46d556de\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/75acea67-6305-44ae-bc80-a90296d1b020\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a0da4d9d-7270-4c7d-b8f9-067bb0423f67\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/285fbbfb-1ead-45a1-8b39-b3caad46016a\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f5561559-9fa5-4c04-a4e8-2f6649cfa2ac\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0c800cd7-2af5-4aa2-bfcd-6947593b7ff6\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/e451267a-3a9e-465e-8efb-d0b6d4e93b34\",\"moduleSequenceNumber\":618289},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ccb2d618-e51b-4b26-bea0-ecce5d5bf7a3\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/5ff915e2-95e5-44fd-b7a7-54bbd040b13e\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/9c5abf7f-d0e6-4c6f-938f-e6ea4f497da8\",\"moduleSequenceNumber\":618308},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c2a924a6-f5bb-4e11-9cd9-65a0c5a4c6a0\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/937a9946-6b31-467e-b4d2-2616c543a801\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/736c523f-60f1-4500-ad0c-76199104ba25\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bfa01251-b4ab-4029-ad32-0841fe07e737\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4144adfa-685e-4512-a76f-6759ea557813\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c6c70dbd-a3e7-402e-a948-47f6cf2f228f\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/709746c2-6193-4ce7-ba50-2e11c26519c9\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/47d58588-65f2-4900-9c64-58c9b63d763d\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7707aff1-c64d-41f3-89d3-d8fa87555cc1\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/57bf4227-32f3-40f9-a202-99f646b62856\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ce825cbc-8da5-4297-b776-de869577b655\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ca6cf072-039a-4e86-8e12-745087d79525\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/6953d0f5-f910-4131-8456-fada048259be\",\"moduleSequenceNumber\":618299},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/25399c59-5d82-4f53-869e-f41a853d0ff8\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f7a668f6-a2ed-4119-a401-7590ce368adf\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/70e4af13-0969-4899-94f9-404540dc0460\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/31db51f6-58d6-4bf3-8c9f-56773472a217\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8925e767-716e-4a06-8cdf-bf33d8505c1a\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3dece594-fb5f-43e1-a7ba-72fd391e3bb2\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f01f378f-0006-4a22-b6e7-54e6aff66973\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8eac3d5d-9236-448b-b069-a9b0fbf157be\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b8234bb7-706b-460a-8f86-742a700eef22\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/10d8eb9a-b68d-4fa8-a827-5e82125fa038\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/99387394-54fb-4804-8650-cdb52b2dfe6a\",\"moduleSequenceNumber\":618296},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/b279db66-50ce-48df-b38e-d25e1efdd53a\",\"moduleSequenceNumber\":618291},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/76e8db3c-f924-4e4d-a5aa-c0b3debadfc8\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d1a19873-dcc2-4236-8e3f-07daf0995aef\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/59f5053b-cdb4-4b21-8c33-06d33dc12f00\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/1c8af654-301f-4956-ba03-4fcbb560d357\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/d18e305f-2ef4-4ffe-b788-b5280ed4a3ed\",\"moduleSequenceNumber\":618310},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a51f830d-249e-4089-b11c-c209a33fb1eb\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5dd77a0a-672e-421c-9f9e-1c0a11a797a8\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/be5b7a25-787d-40f3-8add-e66549abef62\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3199bd4b-1530-4bbb-b367-30e5ce5aa9c1\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/14ddca99-1b47-4739-a006-64d8f72ea059\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/af6125e8-096d-4192-a8a0-64f867ab2604\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0dc257ab-03a5-4944-9180-8194dfa3aa1d\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/baa27a40-2b29-4b98-9801-0078fb2ccf30\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c8fc9f57-fff3-4dd4-bcad-b2eece4acb57\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/22ee19ec-3744-4267-846f-cf2fe2a732e0\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/11570535-80b6-451b-942d-f65e5fb75c81\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3b06b902-2214-4e60-940b-f6fc6ef1d46d\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/469adfc9-4a21-4cb7-9f42-f1cd21384f40\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8f94ff01-0435-4381-bc29-67238f248895\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ba30eecf-e8da-45f1-88e5-8b86ed4dd4df\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/93109db3-4c99-40f6-ab67-7bfa9a48f28f\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7f82a1ea-60cc-495e-ae63-7b4b63f00332\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0603b98b-1f70-4eb0-8386-bec277a091d1\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5f7301a5-e0ae-44be-b9f1-a913d5eff311\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d77c9bcb-8ffe-4218-bfda-30d166359751\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8cccd450-2ee1-46e9-91f1-0cd1a9c03fd0\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/23211c96-672f-43c0-b275-e4e05026c4b5\",\"moduleSequenceNumber\":618299},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d9126612-4c5b-469d-b46e-b1a4b5720162\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/35fa6c02-f278-43b5-b353-ce028d671cb0\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/71a245e7-60b6-4046-99c2-4823b6038f2a\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/8a98d55d-05db-40c5-91ff-ae1e6d1ac3ec\",\"moduleSequenceNumber\":618278},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/e55a4ee7-5458-4eac-8766-1eb5f5db79ed\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/8b3529c8-8505-43e3-acfb-adfac72811fa\",\"moduleSequenceNumber\":618304},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/306f1abc-096b-4a96-8452-1d6872db61ac\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6f7c70c3-32c8-4e6d-804d-188d719c31e2\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0276b1e9-577e-411c-9526-33d9d2ca4367\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/75b0ad84-cb00-4f51-bd85-81e5586635d2\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/43c07394-e434-4767-bbe4-ada9288a208b\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a0692b3d-ca6f-404b-9c1f-4ccc5c42dd98\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c3f5a5b6-3d8b-4271-b5e3-058b03ef45f6\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2d6d6285-4bc0-4db2-9b0e-d089106af458\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ced8b412-99bb-463f-8a42-eaa96ca3fc3b\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/82c32b4a-0cf0-44a0-b8ca-2ac3fccbb9cc\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/473566e9-dc0d-4bcb-ae32-331e19bb76e2\",\"moduleSequenceNumber\":618296},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/747a109d-af92-4c5d-a7a7-9dfe2f054114\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/01bc67e8-d406-4544-bce4-3a983a9180a1\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2717463e-75c6-4437-b5cd-a97e610262fb\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fcffc9dd-cfbe-47fe-964e-5ded2a0aa3b1\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/da2b5fc5-3684-4ba4-9449-f502d02dbcc8\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/8b9241ad-8881-4bf1-a276-11b57518eee3\",\"moduleSequenceNumber\":618303},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/12d4bdeb-157a-49ea-af74-8ad2779f55ab\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/619ccb4c-6297-425e-a479-4d1c39485786\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ef68cda0-f512-453b-a1a3-612191637435\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/524d1589-4408-4851-9673-ebe296151b63\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/04470df8-d204-4e28-bd8b-93c4d4126b5e\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/313f6076-060f-4b49-95c7-325894b4536a\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ffb05963-efc9-41b4-a1fd-82c587b815d9\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/982a57b3-0e1d-4728-82ce-434aecc5a57c\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e7be4e57-83c9-426a-96e1-cf100fbe8bd6\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/afd3bca1-c4b6-4a5b-81aa-4f87dded5200\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/449ce419-ac09-4061-88e1-d2881eff857a\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/4861eca0-e54b-422c-89ef-36185227eb34\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/b14cbd4f-12ae-42b5-8498-1ae0e58f4df7\",\"moduleSequenceNumber\":618302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ec6f7b30-24f6-454d-b16b-79b2a7b3b49c\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/68e79dd1-8374-443a-9b28-86d44ed42dac\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/730904f0-1a48-428d-831b-437e76f6f67f\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fa22e332-ea94-43ac-a512-b86a7af6cc1b\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/65e1b895-047b-49c0-b2e6-951859ed44de\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/acbbd672-a057-4c56-93c4-24a895c8fb45\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/04a37421-3a2d-42c7-ace2-543e02a5d330\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e0aef7dd-c7a6-4703-b7d5-144b2a74ab30\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/658eec13-6433-4995-b42f-4b627bafcaae\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a2c686db-b3aa-41a5-abb3-a42b804f1ec8\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/97854ebd-aa31-457b-a8be-6e5c721d1064\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/01e9af5c-2302-4429-b43c-6e17e823515b\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/4e64c87d-0bf7-4d97-8607-d311741360b9\",\"moduleSequenceNumber\":618299},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/78fb768c-ac38-413e-ae46-890cb1e13a49\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f6ef6899-0536-402b-9de2-8374bbd6fb1d\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/38e9c4b9-4769-4acf-9c85-cc8f2c615977\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b1b4630d-0b74-4e0d-8178-ffbacb41564c\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8ac547bd-bce6-4b4a-a819-cb18394b40d4\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f14fc244-29e5-4cb6-b3a4-09576462215c\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/754ba58d-bf5b-4de8-8222-4b0c4a5b21ce\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9549c6c0-33d3-4856-828c-2127a22a5942\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/15e6c0e9-be85-45bb-8012-c76ffdc65160\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fc98cd07-78dd-4715-9cdb-df8b563d8f54\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/26c1be37-6ede-4f00-9a60-8b99e492e890\",\"moduleSequenceNumber\":618296},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/0274558d-6261-4389-87b2-c7c9cb36d59c\",\"moduleSequenceNumber\":618291},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c8544160-71b1-4136-9c8e-4fd16997c742\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a4c8e5d8-1fb0-4de3-b431-db27e58cd77d\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bb55a087-8d6e-428d-bcc6-9e1bbf57dfa2\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/33b3f75e-29e9-458e-aa64-361c5fa24ff8\",\"moduleSequenceNumber\":618278},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f4d1cb93-ba34-4d56-addd-28dc36c6ecd1\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9c5b4f36-365b-4558-8762-4846bc7e278e\",\"moduleSequenceNumber\":618305},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/242b8bca-44df-4bf2-89f8-7289f1f3e302\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f42cde44-3e12-46cb-b8ba-3931fd1f3c65\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8773db15-1af4-467a-8101-1a9dc45644be\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c2692998-ef1a-4463-a0f6-a2ba8c10a23c\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/055e3660-f9ea-473e-b178-8c8a5585c31e\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/419f645b-86b8-4ca4-8d03-bd6066598557\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/42fcefd6-8efb-4da4-8d0a-3ec302715df9\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bf83b00d-31c9-44f3-985d-d894afc4c557\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b989c502-620a-4d0c-83ef-900b6c00d881\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5d9ee582-9718-41ed-af3b-f0ab61883d33\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d4f95359-421f-4de8-8978-05aff00b03fb\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bbb09435-dfde-48aa-9041-4ba8e5d88f94\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/62363216-435d-4ecc-893a-664b53e7c99f\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4430cd71-7b31-4ca2-bee6-1425dd1ab0e9\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a48be7d7-5f88-4621-9d8d-fc5a3e0595b5\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/116d22d2-3de7-43ef-828a-fde8a7fc3bbe\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/df85f7ac-dbd2-4863-bfab-4f85aaa87383\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d9ca1121-f38e-44a4-ab27-4b15542cb481\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b3a45d16-9062-47d1-8c09-56b2e5799d18\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0942fa07-99bd-4781-a36e-5c1d7a51e385\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a4ea2e3c-2357-4f59-90f0-20abbd211dcd\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ba643c97-489b-404c-98ec-79de77d4335a\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1bf11fd3-a98b-48cd-bda5-322e56b5150d\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ee5d9e40-df40-4949-bef4-cc90c20033db\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0bedbc5b-0904-42cb-8c6e-96afada3ba72\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9f9e39ed-98a5-4e7c-86dc-a3c256c776cb\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c8ad8aac-c3a6-4714-80fa-050bccd264a2\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/26a6a664-9dcd-44bd-9c5c-8432e3faab74\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/6c63645e-a863-4f60-9387-5945b0e7ec8b\",\"moduleSequenceNumber\":618289},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e196be92-f22f-4ef3-976b-45d98e7ee6f2\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f83e0bc8-5924-46cd-8c58-fd0716974c37\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/ce5a3dab-99fd-4d03-8523-90bead2f82f6\",\"moduleSequenceNumber\":618308},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5ecc0a94-19e7-463a-8610-14686d9dcc40\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5fbda608-96d2-4632-a5c9-a83bc0f3fb90\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6bc2535f-4836-48a8-b9c3-5d808599a05e\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/00d9f12e-b612-4f96-8c6e-ddecba9b15fe\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a0d58142-6a29-4096-ac5c-35e243c40c66\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/17b8e7d4-2124-4f30-bed8-ce16c830aec1\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6c12db85-eb10-4e4d-9942-7d4b17ad3e78\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/72409c7c-c08b-4bbd-a50c-b76cde49674f\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f675fb41-b43c-45a1-8c9c-8c8157dc5eb3\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b3772304-9577-4ad8-8001-98a861d1fab3\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e190b53c-ed46-4924-be1e-af1bd31339a1\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/32b5c75d-7359-44b0-9893-ecc1944237ee\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/e5cc34ea-ff1c-41ac-8355-bc4981f10514\",\"moduleSequenceNumber\":618299},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3fc79184-ee81-43c4-8139-dc82d5f82d64\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e34db033-5db2-49e7-ae5b-494b5ebe5adc\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d3fb1d28-73ec-4cc3-a403-8bb5f1b62d1b\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/272714ef-cdbf-49bf-a089-b7f20f37e805\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/23dd1596-d413-493a-82fd-d4f25350caf2\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/29cc2a39-ad5e-4bfe-a1eb-e115ae794a63\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/199e27a6-d328-4551-a069-b833b02e4db9\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a43376c8-ef5f-45da-9121-548c98324115\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7641a5a3-6a67-4037-9c17-09db290ac254\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/21507aca-83d4-4ebe-9db8-9e0cfe88f81f\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/f275067b-a823-458f-92ee-5858ab5e4ce3\",\"moduleSequenceNumber\":618296},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/ac0ce09a-a15a-4610-b3b4-eee25b1c0590\",\"moduleSequenceNumber\":618291},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/31e0f2da-06fd-4b2b-b44c-189c098d87ca\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fd3ff042-c35c-4c03-9d14-cbd69a41f6a5\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e889b7f6-d4f8-48c9-8d01-4c89c9bce106\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7d27c46c-3cdc-44aa-800c-5c4f8169b6d2\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/2d0d4722-cc50-4108-9e9a-d3896f0d43ad\",\"moduleSequenceNumber\":618310},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4c0ca145-f43c-4dd4-922e-dc4c18264499\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f6bb198f-ad41-44da-a685-b1845a281e65\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/351a8ee0-7990-413c-9b42-7b86939d67a5\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/51f3a5db-024b-4f90-ae12-136f063367ec\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ec34e6d6-6573-4aa4-93a4-ad2394ca7fdb\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/304ebee8-e7a6-42fe-bb60-af19a7dd316f\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1d8341d1-170b-419a-b628-81bfaf3b401e\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ef22b796-94b6-4471-b84b-fa137eae29a8\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/65d32245-c397-48b1-a61d-f47e53f6d08c\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/dc04b001-f38b-47a3-b3ca-b95f400aec63\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bb3b92f6-dfe9-41bd-b361-0b03c4e2aca2\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7c9f9646-e335-4fd6-8d29-efd9409ece08\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4490ad43-4476-46a4-a176-7aa07ea544dc\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0ced2c04-8659-458e-9470-cf47bfe3f01f\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/97641dee-8d0e-4e25-ac17-4122dbfb0efd\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2ce1b99b-c137-4b96-ba26-d356381bac43\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c8c02734-2d7d-4d4d-b80c-fb2f17fca708\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fd7b57c1-eed9-453b-8594-89411c26c0b5\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d76dc913-2d34-4c62-a74c-a2b448012b21\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/74bb34e1-055f-4faa-ab30-a2b8b07a3971\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e27e39ec-540f-486d-9229-d71b731b44ae\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/c885183e-7897-488e-a261-ecfc78b0f53b\",\"moduleSequenceNumber\":618299},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4dfdb45d-2f75-47fb-8260-7dd8f090228b\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0d5db4fe-2ce9-4b2e-a0ad-8c25ce197511\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/eea2d53e-dcf6-463e-8c3a-49ed7098a320\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/74a42a08-0fd3-4f35-acb9-d9cdb3e44a11\",\"moduleSequenceNumber\":618278},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/46e306df-3924-4a16-ba9c-4e603fbf85b9\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/0278ae5a-ac19-4b8b-86ea-7eb915f77fe4\",\"moduleSequenceNumber\":618304},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c1b8f93f-19ed-4528-9e8e-be69288bcd48\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c334cb4d-2b3b-47c1-9413-e58036211651\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2c556fa8-ca84-4a0f-9602-98321024b765\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/34941c81-91c0-4d79-b521-27980700a34c\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1a87141c-7223-42d8-b8c6-3efb6ecc299c\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d3680fa8-e54c-45a5-a9fe-2268e38da217\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b710d5a1-5fec-4186-836b-a6e70a37ea34\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1a87a1fe-4d66-40ab-be1f-6633300fcd9a\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5764fb90-e5ac-41c3-910b-20627fcbc9b9\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a6dd4c38-bd2b-4ec8-9268-b8aac12724a4\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/f90eeb98-5b78-4818-a21c-87af53376523\",\"moduleSequenceNumber\":618296},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/696b976c-34ca-49be-ac38-fe8307225d7b\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/75795348-2713-4986-91f9-5a3b55751df7\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/072029cf-e9e2-4078-82dc-fd2195157b77\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b6c81c52-4d9b-4e1a-b2f2-341c210644dc\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ba1c4ae8-d61a-4fd2-a3a0-68436812f4a1\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/ea4a5270-be1b-4fe1-8c14-20ce35be8b59\",\"moduleSequenceNumber\":618303},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/00aec553-e996-4a7f-83fb-e775c30f725d\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/94ed81e9-a06f-4486-921d-1d85d0e00570\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a700f66e-d2a2-4a79-994e-f7bd239a68a4\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/823d7d1f-07ea-41c4-bddf-2ebfc0ce4112\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a4edc79c-bcff-4d32-b4fc-91bbfa92a9ee\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/43f7cd31-8a06-4bba-9587-d3ea4ef06b62\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4d4aa5c2-44e5-49b1-aae9-38155b6d582c\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bc9f8fe0-ae4a-4bbf-94ca-2942e1afc2cd\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/40211136-caa2-4032-a4bf-7bd1def5620c\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3174541a-6a0d-4595-a3d0-974d59997aa3\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4f2d0933-3ca0-4657-b576-de7f21580327\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a4517703-8cd8-4a64-861b-dc10f7a0e12a\",\"moduleSequenceNumber\":618275},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/c9135e2f-bcd1-4920-96a9-5dce86b47e12\",\"moduleSequenceNumber\":618302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cf3179fb-0897-4b92-a1c9-c8ab67039c9d\",\"moduleSequenceNumber\":618292},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/499bc997-f17a-4705-92e3-2c9d5aa054eb\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/83f13879-4664-43b3-a142-515d965f8fe3\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2765cb82-4527-4163-964e-03220fd853df\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e5d4c043-9458-4bd6-8cd4-b30974bfc19a\",\"moduleSequenceNumber\":618284},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/280705eb-6a4b-4c51-b36b-52a124375bd5\",\"moduleSequenceNumber\":618283},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/04f81b70-62da-4f65-9769-d2283dd875f5\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/16b0be26-9c32-4c0a-a1f5-4a530d1e8dce\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/87677a5e-0688-4234-be0f-ad46cceac657\",\"moduleSequenceNumber\":618314},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8dae01a1-8129-4445-ab1f-053f66866c10\",\"moduleSequenceNumber\":618287},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/60359f84-ddf9-4239-9eaf-2304b3ab1f15\",\"moduleSequenceNumber\":618285},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/31156a8a-05ce-406e-b7a2-0d78b0804e81\",\"moduleSequenceNumber\":618279},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/82f68a15-bf4a-40a5-b06c-263b9119fd95\",\"moduleSequenceNumber\":618299},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/2d0f3267-880b-4cac-889c-f4fe8c4628ab\",\"moduleSequenceNumber\":618291},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/859e8b38-eca2-42b0-bec0-26c4a339132c\",\"moduleSequenceNumber\":618290},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1d275afa-80a7-40a2-8831-49d588d0b3a0\",\"moduleSequenceNumber\":618280},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/64b6bea7-83c9-45c8-8735-66655a0f4f4b\",\"moduleSequenceNumber\":618275},{\"filename\":\"/singularity/faction-hack.js\",\"url\":\"blob:https://danielyxie.github.io/0e0e91c0-24c8-43c1-a754-8610a6cc1e37\",\"moduleSequenceNumber\":619117}],\"dependents\":[],\"ramUsage\":75.9,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725401,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { faction_req, faction_t } from \\\"/lib/constant/faction.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { purchase_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport { join_faction, work_for_faction } from \\\"/lib/singularity/faction.js\\\";\\nimport { install_backdoor, visit_city } from \\\"/lib/singularity/network.js\\\";\\nimport { raise_hack } from \\\"/lib/singularity/study.js\\\";\\nimport { choose_field, work_for_company } from \\\"/lib/singularity/work.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Install a backdoor on a megacorporation server.  Since version 2.0 of the\\n * game, we must have at least 400k reputation with a megacorporation as a\\n * pre-requisite for receiving an invitation from the corresponding faction.\\n * Installing a backdoor on the company server would reduce the reputation\\n * requirement to 300k.\\n *\\n * @param ns The Netscript API.\\n * @param fac The name of a megacorporation faction.\\n */\\nasync function install_backdoor_on_server(ns, fac) {\\n    // Ensure we have the required Hack stat.\\n    const server = new Server(ns, faction_req[fac].backdoor);\\n    const player = new Player(ns);\\n    if (player.hacking_skill() < server.hacking_skill()) {\\n        await raise_hack(ns, server.hacking_skill());\\n    }\\n    assert(player.hacking_skill() >= server.hacking_skill());\\n    // Ensure we have root access on the target server.\\n    while (!server.has_root_access()) {\\n        await server.gain_root_access();\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    assert(server.has_root_access());\\n    await install_backdoor(ns, server.hostname());\\n}\\n\\n/**\\n * Join a megacorporation faction.  The requirements for receiving an\\n * invitation are:\\n *\\n * (1) Travel to a particular city where a megacorporation is located.\\n * (2) Work for the megacorporation to earn a given amount of reputation points.\\n * (3) Continue working for the company until we have received an invitation.\\n *     Even if we satisfy the above 2 requirements, we would not receive an\\n *     invitation if we are not currently an employee of the company.\\n *\\n * The exception is Fulcrum Technologies.  In addition to the above two\\n * requirements, this megacorporation also requires us to install a backdoor on\\n * the fulcrumassets server.  The invitation is sent from Fulcrum Secret\\n * Technologies, not Fulcrum Technologies.\\n *\\n * @param ns The Netscript API.\\n * @param company We want to work for this company and raise our reputation\\n *     within the company.\\n * @param fac Our aim is to join this faction.\\n * @param rep Must earn at least this amount of reputation points within the\\n *     company.\\n */\\nasync function megacorporation(ns, company, fac, rep) {\\n    // Relocate to raise Intelligence XP.\\n    await visit_city(ns, faction_req[fac].city);\\n    ns.singularity.goToLocation(company);\\n    // Work for the company to earn the required reputation points.  Must\\n    // continue working for the company until we receive an invitation from\\n    // the company faction.\\n    await work_for_company(ns, company, rep);\\n    ns.singularity.applyToCompany(company, choose_field(ns));\\n    ns.singularity.workForCompany(company, bool.FOCUS);\\n    // Join the faction, earn reputation points, and purchase all\\n    // Augmentations.  Ensure we remain an employee of the company.  Wait until\\n    // we have joined the company faction, then quit our job at the company.\\n    await join_faction(ns, fac);\\n    ns.singularity.quitJob(company);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join a megacorporation faction.  The megacorporation factions are:\\n * Bachman & Associates, Blade Industries, Clarke Incorporated, ECorp,\\n * Four Sigma, Fulcrum Secret Technologies, KuaiGong International, MegaCorp,\\n * NWO, OmniTek Incorporated.  This script accepts a command line argument,\\n * i.e. the name of a faction.\\n *\\n * Usage: run singularity/faction-megacorporation.js [factionName]\\n * Example: run singularity/faction-megacorporation.js MegaCorp\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Join the appropriate faction.\\n    const faction = ns.args[0];\\n    assert(\\n        faction === \\\"Bachman & Associates\\\"\\n            || faction === \\\"Blade Industries\\\"\\n            || faction === \\\"Clarke Incorporated\\\"\\n            || faction === \\\"ECorp\\\"\\n            || faction === \\\"Four Sigma\\\"\\n            || faction === \\\"Fulcrum Secret Technologies\\\"\\n            || faction === \\\"KuaiGong International\\\"\\n            || faction === \\\"MegaCorp\\\"\\n            || faction === \\\"NWO\\\"\\n            || faction === \\\"OmniTek Incorporated\\\"\\n    );\\n    // Since version 2.0, we need at least 400k company reputation to join the\\n    // corresponding company faction.  See\\n    //\\n    // https://github.com/danielyxie/bitburner/blob/dev/doc/source/changelog.rst\\n    //\\n    // However, the reputation requirement is reduced to 300k if we have\\n    // installed a backdoor on the corresponding company server.\\n    await install_backdoor_on_server(ns, faction);\\n    let company = faction;\\n    if (faction === \\\"Fulcrum Secret Technologies\\\") {\\n        company = \\\"Fulcrum Technologies\\\";\\n    }\\n    assert(company.length > 0);\\n    assert(faction.length > 0);\\n    await megacorporation(ns, company, faction, faction_t.CORP_REP);\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/home.js\\\");\\n}\\n\",\"filename\":\"/singularity/faction-megacorp.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/512ea247-17b9-4ac3-ad40-4abb3ff01bd7\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ff57d3a9-f26a-4db3-a0b8-8d38882459a7\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7a419b72-826f-4dff-aef1-574c78dc46d3\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c2af70e2-dd57-45fb-a2e4-0e589c9e6f9e\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ca4c12b4-1b38-4f10-8a68-b02832ecee5b\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6c8ae8e9-5257-45b2-8125-fcffc92e96a9\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/84fa187f-9cbb-41e8-ace6-8d2bd3aa2a40\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b09a0985-dd19-48b6-9784-9fb10f00f69c\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3a561ad1-2f49-4e7d-9db3-70103e8a6001\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c7cb903d-09e8-485c-b678-111538ba9a47\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/23812fa5-c5fb-4ca7-af57-286f7ce6deb7\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/63489f9e-9362-47c9-87ea-d6d856e0fed0\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/16dacf83-5adc-4d36-90a4-ac107d4a521f\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ad019c9c-f061-485a-9dd8-ccf63a8e7f23\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f61fbae2-d4e6-4b1f-86a1-120081734d0e\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/603da0d0-526a-483d-8e5b-a265f37f38c3\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/95e188d7-9ef8-46b0-8e7e-5bc9d56d5bcc\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2a63a9b7-23fb-49cf-9b4f-ece5fb3cb876\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6c2cb7bd-a9eb-414a-9e3e-d7ac605f13ec\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3c2a4410-378e-49b1-b781-1411a123966a\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c8946db7-5787-4f6c-839d-03023793bc28\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d9495107-d248-4ebb-8ce8-32fb6ce1a3b3\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5c6f9708-6df9-41d6-80d7-c96e206713f0\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7d1d5830-3115-4935-937f-855b8f3d80d7\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c79ee0e0-4095-42b0-b6a7-fc87f7666e7b\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/16bbbac2-e211-4c9c-8f30-068c047aa7a2\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/358a5795-3c73-439c-b86c-6af1688a9c3c\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/231197a9-68da-414f-8f49-58faeb7fdaa1\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/d719281f-5406-4269-a246-33724934a717\",\"moduleSequenceNumber\":700986},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/01c66c56-bad0-4f08-98b4-a25502a49d19\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/824db479-4db8-4f1a-8df2-865a61dd00b5\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/08f6e152-834c-4119-89cc-f2e78a4ccc04\",\"moduleSequenceNumber\":701005},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2a5610f0-5fb0-43f9-a94d-ae2b946bc7fc\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/288f7b94-f82d-4e6e-98b5-ae78314c226c\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d64f1b63-99d2-4137-ab23-538e64762d34\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3e7327f1-49bf-4ec9-9bee-506b65df8e9f\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3a41322f-7784-4c5e-ac31-348af85a9bce\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/28745d1c-02c5-4234-ad95-0f22c899b1eb\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5bb95758-dba1-4f62-8920-7094431cb8fc\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a3ca8c32-2c53-4f2c-9354-255fb083c4f1\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/859e7507-7f47-4b8e-a47b-b3f4f530f7f1\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/88ba4e29-85c0-4ed4-8659-8c206361b8ad\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7def93a8-5149-42fb-87cc-b2f19a2b211b\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/59d09b2f-701c-49b0-85c0-9ab106dafbd0\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/d3f58467-8ce6-4d2a-8584-b8cd7fd4da13\",\"moduleSequenceNumber\":700996},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2cf5859e-de46-4502-af82-49d613ecf59e\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0c6c24d9-4530-4e4a-96f0-3870a7e7b31e\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f5b864dd-5927-40c2-8958-c36c371b2bba\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/04101d40-99fa-44ae-9404-e264d8bd5428\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/78ac5538-f095-42a6-92af-e0c0edc6d333\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8a997412-5b48-4c98-9387-5cb6249826c2\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/17f1efa7-93ef-492e-b0d9-016df7f97394\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fa722653-c25d-4245-9237-8781101c5034\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3387df87-7942-462c-bc3c-1409a2a41b2f\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0bdc3167-f6c1-4bbe-bcc1-8b8756a67415\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/225bae08-7754-427a-baf5-6b9ca55749de\",\"moduleSequenceNumber\":700993},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/6c440033-7bd2-479e-881e-0c81c1bf6dbe\",\"moduleSequenceNumber\":700988},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/55d0911e-52fc-465f-a4ab-1fd1443f0073\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ac59428d-9ce5-4769-b418-228e6a1f027f\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7b7c0f30-fe43-4bbf-b1b1-d1f72736ac8b\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/05e1cd7a-673f-48a4-8fca-d4bbfd97687a\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/38e697df-d34d-4b74-b970-ad8fc63950ba\",\"moduleSequenceNumber\":701007},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0f18f3ef-6d12-4c4e-9f00-779ce4926369\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c91f4a05-aa78-4cc1-8ab6-e9b1a8586458\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/30d7c6b3-0d1b-430e-8bc7-cfb619b4d00b\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f1ea9ce1-679e-4a7e-ae32-717bd83c205f\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/375d6a08-5f8e-41c5-8780-0da28ff33c1e\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e0247e61-d58f-45cf-b42d-e1ac1cc454c9\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/41b032a5-e280-4370-a214-1de72ce13c1f\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2d6b99d1-05c0-44cf-a6ae-b8b8258116f1\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5006d46c-a24a-4a21-8f59-f2a2c55b2ddb\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/537686df-4de1-412a-8e03-cd30f495d4ba\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/89a44c5c-da9c-4006-b506-3477defec21c\",\"moduleSequenceNumber\":700986},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/320657f3-f7db-4304-bed3-4d2d1688a291\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/69608ec6-68b2-4a46-8fac-efa879665c95\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/737b5ad6-fd28-4f0f-966a-3f45091495c7\",\"moduleSequenceNumber\":701005},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5ae87e86-b4d1-4790-8959-226e2de92d86\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bcdb0be6-fc76-46ad-9e40-ecc5a8b85cc7\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a94dc99c-aa77-429b-afd1-adf8140834e5\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1d74a450-cf1c-42ff-96b2-3e916531c0aa\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7c7f58a7-db6c-4760-90c6-0bbb3e8f23c8\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2bec080a-d362-48a1-9547-1707b6669776\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b7c61f26-7630-46b7-865b-7b7a2ab7c098\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3fea1333-2aab-4779-9479-2cf49d6fd616\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9982a697-3111-4649-8818-18b69b415f03\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e7f880c2-3d07-4cff-a17d-3e8d7af9c155\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cf259613-0dd8-48ae-ba85-504d4c488e5f\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4fe7e2af-3469-4a75-8119-5311b633a0fd\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0319ec2f-9208-4419-b153-992270a43e51\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2806365a-d67b-4bdd-9ac6-68a4fb7a98d3\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e4f9d3b9-6975-4cef-82a4-a678393dc516\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/817e745b-6382-485f-b0a0-75c45632ec1d\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/96e8fd6b-4762-435e-8318-7b265c4ddf76\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d4150563-ce64-465a-ab34-e69ab4da0f49\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/93a66fcc-d1d4-4ce9-ad30-203e928a6e2e\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2979813f-062b-4271-8c51-e250a5cba64c\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8cb384d7-28a6-4866-aea8-75c7c8828fbb\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/5fd9326c-f625-4159-a742-4f2422aa2afd\",\"moduleSequenceNumber\":700999},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f2fd1eb4-d48f-4084-9384-b7ed450b82d1\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f7706911-bf14-4aca-8f0e-0b35272257a7\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5fe8e06b-3c94-49de-a613-bd00cff147aa\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d303fbf4-8d03-4b67-bd41-80583a1e35db\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f0e229db-72e3-40ce-8022-1d3ea4cd11b2\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/08f5f4f5-115b-44b1-bf9f-12386c7191b6\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ffcddb8f-cb85-48f5-8ecd-647f8e3c5996\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f67b8fa8-d95b-435f-9a45-ea5647ae8fd9\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9ea46383-c7d7-448a-8d91-a515f128869c\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dd68f714-08eb-4e3b-b4d9-de3969695c45\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a85aa89d-fb1f-4ab2-bf77-41bb9d453fab\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/36ac71a2-9162-4247-b0ed-b6e7d59fdd97\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/513d7851-1904-431a-9251-cb86dc82b19b\",\"moduleSequenceNumber\":700996},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f1b47168-1477-44fa-beaf-1266f527c3d7\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/46ff7fc0-12ff-4516-b14c-b46a1777a03f\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f903e4dd-8cac-4dfc-90af-0bb900a977ce\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c253c413-d037-4d03-9488-2e4305b1f777\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/291adce1-38d4-4050-807b-c6da96894edf\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/75b95346-2b66-41e9-8df0-d9ba411e2859\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2a4a2157-d0fc-4b4b-8dbc-65c2e7bc1022\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/83d0d68e-ae4c-4410-8bf7-653471ac27bf\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bdc7505a-8815-4b1e-92b0-a61b0c90fdff\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bc6ccc96-cba5-4ba1-be15-de6792347678\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6b98bc64-82fd-419e-9eed-acab89f421a2\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/5e0ba884-f2ff-4805-86fd-3c9094751571\",\"moduleSequenceNumber\":700995},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e1367143-bcc6-47ec-906c-86bdb4d714e0\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5ad07909-bae0-4418-9270-f1685f4cd8be\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/23aeeb15-8a85-47f6-a9a2-6f9054677a92\",\"moduleSequenceNumber\":701003},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/46e89787-470e-4d04-831e-8cc4c5d2d279\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/021a563d-af84-4a7e-aafe-0c0733f538b8\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ac44aeba-27b7-4db3-9198-25a23ac4e74d\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8f6290db-f5e8-4bcf-9f1c-796a80078786\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7b0c82b4-d312-4382-80d4-42ab13117bb7\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ca5ef16a-3f61-4736-9973-c30d44e74afc\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/df32dd36-6b38-4af4-ab20-b156c654eb3f\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4bb25237-c0bf-4a6f-90f8-398e231b82a8\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5ded4d8f-3bf8-4d1f-a2de-589d5fe04d18\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f9cc9485-7827-4213-994b-e6fb7dc7486e\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/06333574-0ec0-4b6c-8c44-eece06a963aa\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4ead119d-67b4-4d1f-aad4-9702c86a1ffd\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7df0a50d-38ff-4614-896c-d46193f2cad8\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f9ae533c-7bbb-4d0e-96cb-2e50e5e44191\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/51074a45-a1e7-4bee-82e4-ead0ad0052c0\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0091e331-ed9d-4963-af0d-98b11c32145e\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f0bee124-27f7-43ff-9485-b382147ffaa0\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3c242acc-66ae-4d00-8edd-b7811560d742\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8e6bf916-8ed0-4223-89c6-5439c1d32838\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/df80747b-b511-42c3-b740-ba7ae990257f\",\"moduleSequenceNumber\":700986},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1443c43d-fc8b-4244-b535-beb45df7d589\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/404a9811-b062-49b5-bde4-c16347e57563\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/0222c13a-cdc1-4b7f-acd4-99be0e79f0a7\",\"moduleSequenceNumber\":701005},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f430f351-185e-4e7d-8c15-2fd385490cd2\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8d21675b-75b2-4ef7-ae9f-17105a7c67af\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/aad6ed59-2168-48ce-8f3d-a0b98dfe7b58\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7414e4d9-45ac-40c5-bd56-10a12b81102e\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d564e95c-ecdd-4faf-81eb-f135dc50b0bb\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5cf701a5-caf8-4341-9b3b-3618eb8b4441\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dfca0d52-231f-4462-aa3c-24190c0435e1\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0c5935ee-ed1d-417b-8745-9a5221408019\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/55d82f17-9089-432e-abe8-628f166b4634\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d26c806b-fe09-4741-9f40-9b800c632f56\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/22fe225b-5312-42de-810c-b510d51ff57f\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/88d799fe-610c-42b8-87e0-9e90bd7d5553\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7287d8d2-a790-4592-b213-38db955fa7a8\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/44251f1d-ab6b-43c0-aa5e-35bcda9f0932\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e9f34dc5-e858-4659-889b-9eb37c4f26bf\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5bdad545-5a45-4522-8221-63470f495ff2\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4b709121-4482-42c0-bbc8-c06af35357c4\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dc2b8916-aa66-441c-9f62-bb4f42d20b07\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2e7ce839-bbd4-4d04-9657-c21455bec417\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3b3d82fa-3316-41dc-a84d-d10b8946bc3a\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6999fe26-6531-4681-8cad-f5582a015298\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/3f4d5887-a8ec-4e72-b6e3-0dfa46e971ac\",\"moduleSequenceNumber\":700999},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/93106907-701e-4127-85ee-bae5b07719d7\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4c7d5251-538f-4e57-a900-dc210189b565\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/10a7d26a-8644-40cc-b1f9-3c53222e8a18\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/18fe908f-3a78-4251-b5d0-1eb4fdbe4fc9\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d3238944-ccb6-4afa-9973-a22e834d80cb\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c1554681-7100-48f4-9dd0-41726b5c11f9\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6f69937a-bfc4-4562-957c-9c383edd2bed\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/21c35937-1ca5-4025-9881-9f7e09429539\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a4d90796-a4b0-45b0-80c0-b5c62767e722\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/656db805-e041-475d-9ed8-52238fed00e9\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/511f2100-6c1a-4d30-84fe-d37ee85f13e9\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e0656720-5397-4f46-8c9a-6ecec349883f\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/f0366470-04b9-4bca-924d-ee8549b86e8f\",\"moduleSequenceNumber\":700996},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d55b5a39-8fba-4652-bc31-fa8c20ee0fe9\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c9f0669f-c8ad-45f0-addf-85d8d7782861\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e2489abc-6504-4b12-8195-d44ebadbbc5b\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/63ca2378-860a-482a-b4d6-b525ba22aded\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/00ac5718-2f62-4cf9-b4e9-43e8e57303cc\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c4675cc9-bed3-4916-b727-545a6c675c7e\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/834b9ccb-c8f1-40bc-b3c1-d67e3ae275f9\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/45cf890a-f136-4eab-80a3-6b973a197f8e\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ad597b33-72ed-4cec-a000-040e6b3a17a5\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9d9c672e-ca3e-4c20-b254-e9e80730da52\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8ee46a54-58f4-4ebd-8048-b213e51aee61\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/f42fe27e-f17c-494b-accd-dc5ebd7cc016\",\"moduleSequenceNumber\":700995},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3867e989-b22c-4625-b3c6-7a71e40e23e7\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/056703db-a580-4b25-b78e-02379d3460d7\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/c4fe296e-7072-4e86-a40d-e74ae82ff0f1\",\"moduleSequenceNumber\":701003},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f17713e8-b229-4059-8740-70f78198dee5\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7db68f3f-1bab-4be7-ab3f-07524aff03af\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/85972b31-cecc-451d-b438-5e448d9c94ff\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2c8aaed7-dea9-4809-8780-d95896631ddf\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/26b0de02-b5be-4bb3-9a31-f7323350b49b\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ba0ad050-dce3-4692-8ff2-e0ed4964abfd\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fd75fc31-25f5-475d-8aa3-807b36a915c4\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/36a8565f-56e7-470b-9177-6e7202acf59b\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6b068cae-3a94-4df1-b781-c622155b2991\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a12e06a9-ffa0-448b-98e8-fb4b86f547c0\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0d58a866-1094-4da9-9ef4-4403f9f4fa52\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/35787be0-c198-4184-911a-9ff27222dd1b\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e55dd062-c1e6-4919-a3ce-d5f9acc0740c\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5dfea178-4142-44db-ab17-8c8ee3e94e01\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9475a2a3-a366-44c3-a3a6-80439beee7bb\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5c9f63a9-badc-4552-ba97-47962dad80be\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/11229015-d063-47bf-8c87-9a36f4f32106\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7bbf11c4-fbcd-42df-ab1c-8826ba2e1a67\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d39798ad-a609-467f-b413-3c323912d3d2\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/47322ee2-51f5-465a-af09-342acd704353\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/41d29dac-7b07-4017-a4bb-4015919b0582\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8611fcff-1ca6-4a74-bb3b-9e52fdce32c1\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1ec1741c-f7ea-4be2-a535-e41b428d95fa\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9171a029-f83d-4c32-913c-4595520e7da1\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4f19f31b-fbb8-439f-95bd-d8c86d2d440a\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0a85d85a-941d-4f44-98de-d50dacc69cde\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ab518fd4-85d8-4dd6-9d83-3883ae042c56\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1c913c6f-a5f9-4b9c-99e4-fb488ed99ab6\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/024266eb-4cb9-44a4-a332-2066cdd9483e\",\"moduleSequenceNumber\":700986},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3bffea3a-7a17-4037-b793-43f1747da626\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/63930793-0775-43e8-ae7c-6f59f9c0c297\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/5def4111-f08a-4199-8e5b-289b3b948286\",\"moduleSequenceNumber\":701005},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6d10966a-a466-4e5b-a80f-ea3c3c770bf1\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dc842586-ae92-43a6-83e1-715fe935818d\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ca47f150-b83b-4914-a7e8-3c79868267e4\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ca8e55a7-14f0-42c1-bd31-3833a33bc2c3\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c8511aa9-2666-4d51-9589-c50c6b693434\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c8bdfb31-4e44-4118-9ebc-2f2da7f2e5d6\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f86a7056-bd3e-4fe0-bf9b-6577b1a217e8\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/09706098-c7b4-471f-9e42-34811c1f84a5\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c88fa4d3-b9e7-4977-bd32-fae2cbc8e99f\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a8db4128-3230-44dd-9cc2-6d9367c3b6fe\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0e7aa8e7-74f3-4bb1-9213-c8aa385fdd22\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1b09634b-6648-416f-8684-e0358b430ad4\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/90daff76-023e-4919-a865-576dc4a014fc\",\"moduleSequenceNumber\":700996},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cb337848-14ab-4f20-9cd5-0edaf91d6a80\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4eb013b1-532f-4fb6-a449-8ecf7630658d\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/351f9218-87d6-483b-9377-3f46adfe3283\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f4e0f88c-7355-4da8-b835-58a4b4a5594a\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7f8d2618-9144-4efd-8e51-2bbf915bba0a\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7cd81759-f1f1-4816-8ff9-39ff94c8ae00\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c2ffc575-631e-4fc0-8fe1-f789d2a55f27\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6ffb58a6-aa63-4ee0-b4ee-51f7213b1054\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0940e074-d2bd-49d8-8f3a-0e795a182892\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5255250e-24d2-4de6-8bcc-f45bd4ad57b2\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/cde35b77-c6d8-4fb4-ba83-e130d979f4f5\",\"moduleSequenceNumber\":700993},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/245b0e5d-040e-41d3-9a3c-f34464e8a33c\",\"moduleSequenceNumber\":700988},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/62ae3fc6-4f13-465a-8a19-1acfeed13296\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/86b6d05f-ca1f-45b4-b163-b3493ffcb2ac\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5501823f-7b3a-477b-a984-384f99bb8bcb\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/1ced0924-8502-4b43-b3d8-36aca5d5ba03\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/b8737b93-6c4c-4b26-b824-900f69290382\",\"moduleSequenceNumber\":701007},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/69ee82d1-c6d0-4a97-b8b4-2af4fceae839\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5c66f86e-7c8f-4242-8b02-d8228e8ea55c\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/784d0190-8369-4a00-a7ef-eba362444e3f\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8a498edb-d77d-466f-a39e-3fa0d804f0ca\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5ca3440c-35ba-4d86-b512-3b6427ab0d59\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/00fd4beb-63f3-4dd9-aaea-0c7e11ac9cfe\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ee6a7243-e084-48ba-a506-067313d77115\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7a068e09-9712-44c5-b1f6-39f7c3281ed9\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fb0eae71-86b9-4226-aefc-23efa6e2112d\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f04a048b-a44d-4fb4-a08d-df1eb28ef3d3\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/97cb02da-a821-4ec0-a06f-a7276ef378ec\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7a3373bb-2508-40c2-9a05-802f9b5ce493\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a2e0ea37-90ff-4514-bb19-ec6da89c144c\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4ee47a83-db54-444b-a78e-b8deb57ec348\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8696f20c-9b53-4c84-bb5b-1d4d23f2a9e8\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f7574e69-395a-4e7f-ab1b-87349d5560f5\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/27f2e60e-e27a-4296-8a34-0b0aa24d85cc\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/21fb4509-2c0a-4f5b-9221-f754bdd57290\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/447ebf88-999a-4d32-8515-f998aec09f8c\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e0b32be1-aa57-4c82-92ab-d73ce830deb8\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9874e39c-1597-4456-8275-9a5639bbee87\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/4d533ca3-be6c-4798-aa45-9cd33821e6f6\",\"moduleSequenceNumber\":700996},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9552b85c-06f8-4e4d-92ca-f91bc2933d42\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7a7b8292-9ee1-4493-b576-f127fbbfca1e\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/af052c52-224f-415a-a5bc-8aaff013246e\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/384658de-0728-4f94-b236-76ba8925e654\",\"moduleSequenceNumber\":700975},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/5a17302e-b430-4f5e-80e7-aac1c53d6ba7\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/c915b08d-329a-472e-8e45-eea0f96b1f10\",\"moduleSequenceNumber\":701001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/62a84d07-a615-43c4-bab1-4d0fa65f30dc\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4dc29495-4d93-4e63-bb68-3502f25f5247\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e7e5019b-16f8-45e5-bafa-d60c2fe7dd2a\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/db2caf76-2d35-42c9-a17d-b2754e2a9d80\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c1d048e1-06c6-4a74-8795-916496a6d52a\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a0a9febe-1329-4359-b28e-b07e2284c023\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c6f98703-c830-4453-8dfb-e27d0b896cc8\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2997b39e-7408-4ef9-acd6-476cff650a41\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8512b39e-68fb-4797-ba67-d4c1c1cd9a8b\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1e503dbd-3ad8-42ad-a54d-86b2560d72b2\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/d37254d0-bdea-404d-8e47-62dfac7617ef\",\"moduleSequenceNumber\":700993},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9c8a50ae-8cc9-49f0-aba8-615fec8d3c8a\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8b19db4d-2d99-4244-8452-ca6329aa41ce\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/19a32ca6-1142-45cf-bd76-e836aa114296\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5914b8e3-9a20-4de9-9dbb-9dd7dd11f89a\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/2c675c40-d922-4596-803f-2710a52e1043\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/e0b2a702-a146-4f77-bc91-d3857106f520\",\"moduleSequenceNumber\":701000},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/18160e7d-89a8-417b-b160-1541416e168b\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b3332610-2998-477e-afbc-4246abac9d1a\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/510c8731-d8ea-4893-8044-85d70d45e5af\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cbb0512d-4745-4b4e-a942-e29f649c0404\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fb5513ec-a2d6-4093-8da4-b680ee1f55fb\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/52f3d6f8-dac8-427c-af29-fe8f5e09fc43\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/08075afe-4dfa-4612-a123-9fe8a7e747ce\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5f076335-ce14-45c4-9835-a3f41fd1b39b\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/34a2f2c3-0c65-487a-992b-9375503a61cf\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4bce439d-8ac4-407f-a71f-d88a55030ba2\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/66dca82b-0cce-416e-b497-55e7b161b949\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/76062fd3-ee0c-4c9d-80b6-67baf935a382\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/79623a46-9ae2-4bde-8695-9e2a26ead1e5\",\"moduleSequenceNumber\":700999},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/038210d5-becf-4a44-b331-cbda33cf7794\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d06bd4d7-856e-4bcd-935b-b0cdb947d990\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9757ee08-4efc-453c-9cdd-488f8daddbae\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/42ba1b28-9fd1-41bc-8603-36ed84f02287\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/85f9ebb8-f71f-453b-87b8-136db4bbbb10\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d4540244-e8dc-4b8c-bd76-c772facf0291\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/551a8165-3482-4e6b-ae08-92c672d0f57e\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/da97c137-7ef2-4030-9c2e-04f66d79712e\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cd80541d-7840-4c82-9ed9-537831575a40\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/23ff453e-4d4d-4574-923d-116ad37b0988\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/aea93210-9332-4944-b795-284d7002c775\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8df41052-8572-48ed-ab0a-3ec4ba928cee\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/728df07a-274c-40b1-b011-9dc41b0543b4\",\"moduleSequenceNumber\":700996},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c8219bd5-fd5a-4945-a8e2-5355c34c2194\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1c4f7e89-0fb3-4ffa-893e-8fba278c8e60\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/be429d44-5adf-40b5-8b81-a615bad0cb3d\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6df6d114-7ceb-4111-b1a9-d631fcf638ab\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d237c967-1b57-4838-a9d8-1a61ee9a132a\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b2e7cded-ea8f-4e47-9eea-91288632150b\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/28b11dd6-eba2-4125-8e70-d220cac94a94\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4ece3e95-5e88-43dd-a4b7-ea8421e31ae5\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/16551042-151c-453f-8ff0-35fa4bc06622\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/62d570f1-29f1-449a-9fa9-938c20d4e180\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/a1386e5e-c9ff-4ac0-8b7c-d8be544fc015\",\"moduleSequenceNumber\":700993},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/f3cf263c-1054-4ba7-b55a-211458bf3593\",\"moduleSequenceNumber\":700988},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/88d2b011-84dd-4593-8788-748035db50c7\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/51cd0642-d538-429a-8001-a8f0af3ee560\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1e2aca52-7205-4a1c-9b2f-146d1e6b212e\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/91a2cee8-a6ad-48de-b332-4a1208b9cb7e\",\"moduleSequenceNumber\":700975},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/98b414a5-7f19-4d4c-a52e-618ae8bece4c\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1fce16d9-8630-4e3f-aa7b-0269c56e1406\",\"moduleSequenceNumber\":701002},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2409e79a-27b2-4788-8e7b-3df14c9f3e42\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4ad57239-01b9-4ab1-ac6f-ce77e16cfe4d\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/79839701-1cd6-4bf7-a7e6-c64ec27abeb1\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9b76dc1e-f907-4ad8-b149-949ae81b63dc\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/66eb5d72-9f29-4dda-9721-1535ee3c6963\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d8b5ac11-d704-4c15-8128-235efe6a5325\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0b09a4bc-09cf-49ec-a153-490460ef7195\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a59057b6-3dea-459c-b24a-ce1cf9954dd9\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1c0c9652-43a2-4b16-90b2-1fc85cf2ac75\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/47965ada-c3e6-4849-b8e7-cf501d3e60de\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/38b03b07-094b-40ac-ae2a-0450419556a0\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0683d4a8-ebeb-49d3-ab08-b14de229673d\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4738fa14-32f5-425b-b728-25d77e697186\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0abd3ff9-8ef2-4bde-b4fc-60258f57527d\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5493ef54-4d00-4c53-8d66-90420e2a2a58\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/26701cb1-a2e6-4a05-bafb-7f937023faaa\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1788ea0e-e962-424e-866f-0de0e9b04cb6\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a4579511-700f-45b7-b48e-29b9a7d2bb6f\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/80f8d41b-44c7-4035-a4c5-1d086f76af3c\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c77846b1-cbe9-471f-a2ee-fa9b931f3724\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/36ad7214-b60c-4817-b7aa-20930e2a1b50\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e8edcc69-0c70-4476-9154-986dfaa925b2\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cdd2a545-a671-42c2-9da8-bb190d45bd1e\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d6f0d356-c011-4c32-a701-610e77e3abdc\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8597d002-979a-42f9-95aa-badd7690d1e6\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b4a049d8-2a69-46b7-9f68-91e8b53585b8\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9baf76b2-31ef-4378-9469-237df3e3c243\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9d575a75-97fb-4a70-9782-bfc64066e4c3\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/8ef7919c-4160-4281-adca-9c6131a58d1d\",\"moduleSequenceNumber\":700986},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a54571b2-3596-4db9-b1a1-6292914c21f0\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a677f623-6184-41af-b75b-303af2c23533\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/43981adb-d32b-4166-aa38-22b32ab18a81\",\"moduleSequenceNumber\":701005},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/152fd6a9-1f05-4377-a2f0-bceec7ad1b1b\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/37ec6179-a9d3-49f9-81b7-c2d0698924e3\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f6747529-b427-41ee-8803-fa14ae57c3a5\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2d148fa1-e9c0-4e65-bba3-f4a33f3aedfb\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/71f034c1-2708-490b-be0f-20f6d03284a9\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b3786d40-1727-4e86-9ec7-ec86329179dd\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f404d422-899b-45a4-bb5a-aa7797694656\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b59a49b8-2137-4390-b71f-48674ba625f7\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e1505225-2dca-4fb8-884f-d950588b16b3\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a7fa1940-fd30-4a62-80ee-ee1b91ef342e\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b47ff064-735e-4ee2-862d-ed094392b3b4\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9e5705ad-201b-4cfd-96cc-bce78cd454c1\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/5f69befa-f69e-4b2d-9eee-2e97e96cc739\",\"moduleSequenceNumber\":700996},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f9fde42c-2837-4afc-8b70-e5c4b6cd0469\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d6bf7399-a17b-4f30-96bf-da97cc0f94db\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2ffd842f-ce22-457a-88a3-88ba0351db8d\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/beea9ec6-fe6a-477f-b99b-824632d143ea\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/42c3e7fc-08fa-4f34-85bc-64f53315b02f\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/374f09bc-2f2d-44b5-a96b-65ced2358386\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3d88f58b-0f5e-4572-88a5-da28b8c0edf6\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1388ea8f-fc02-4611-8c51-8f00c3d37bbb\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0015c0f6-203a-42c3-ad6d-a42809818576\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/393194db-f2d2-4450-a173-89cff52e0699\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/ef3298a2-eabc-4444-9441-d81f9c1369ed\",\"moduleSequenceNumber\":700993},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/84d18e16-8a4e-4aa1-941f-27ba5d8394f0\",\"moduleSequenceNumber\":700988},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f1303adc-a14c-45a7-a29d-79314647a0be\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/90d63355-65dc-4552-b4b0-c158249cc175\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d2334eb6-1b25-4825-9980-0c2b292c23d9\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/90785b81-f0f2-4662-9411-fd2ca10cbf85\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/9b0b839e-d891-4b5a-9e09-4e7a92f8bac3\",\"moduleSequenceNumber\":701007},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/42ad0194-164c-4c36-94e4-5b2a7aca1f75\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7cc4619a-248e-49fc-88e7-b99068d7ba8a\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/36ba3367-05e0-4133-a845-652f0628db9c\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/aeb9ce4e-bb5e-4081-88ad-24d9be3c5503\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/aee08aad-0076-4202-afbd-16f3cbf76810\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/02e50663-ba51-4ae5-990a-f6f4e27e0c28\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ee704e1f-614d-4d34-a37b-033fd4b9f520\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dfded1cc-cbae-4167-b091-28d811ea4b51\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dbb59aca-feb5-48f8-b58b-6b79c166fe82\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b9fbd657-3794-482c-8cac-bc684334fb85\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/06316b2f-1dad-42a1-a94d-109846bc692e\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5fd829b5-d496-43e0-8f3e-cf19dfa23a8d\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1bfb2bcd-aba1-4c28-af86-30f19ac213d5\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6dacc99f-23f5-4ac9-a131-e79509496e2e\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/df6e94c7-5d36-49f4-9a0d-7e710aa8e793\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/97643244-a37c-473c-b210-5fa3b3882b9c\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a48154da-5660-4d5b-a42d-8ae6577c19cb\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/685365bc-33de-45cc-92be-6e74b8fa18e9\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c7017558-9b9c-48fe-aaae-7c3c86f447a8\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/03e3a103-ddf5-4d96-949a-ea9fafbfef6e\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/08f214b3-4081-45c7-a868-145fee02ec45\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/902f10cf-0921-423d-928a-c0a588f395da\",\"moduleSequenceNumber\":700996},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ee4e2cfc-520c-48ac-b64b-a433507c74aa\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/104da597-995c-484d-9773-4d901bb91456\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/accb9511-e521-4cf5-ba61-7585ccc67521\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/c3fe108f-2d25-4d09-ad33-92ccfe9b7ade\",\"moduleSequenceNumber\":700975},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/4e051948-2d02-4ac1-9ecf-3230060b9893\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/f6444768-ec07-46f8-92d3-328e0ae5647c\",\"moduleSequenceNumber\":701001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d27db0b9-71e7-4766-807f-8afaccb90cf8\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c1fe4b90-9426-4f04-a6bb-a5919d5727ee\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c08d1912-abb4-4b1d-bbf1-c578bda896ca\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/48f8fce7-bd68-4ba7-b7c3-5faa880e090b\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/11247c56-ecba-404a-ac7d-f05d9605d3a2\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d76a0af9-db58-459e-9f31-acb456708611\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b04a2707-049e-4747-8103-bbc959ad9401\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0ce99163-f86c-4b93-a52c-c9c89f467265\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0636cb6d-d021-418b-84c8-0693c9bb06cb\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5d1ee495-7031-40a7-81e5-50e3b3d5d5d8\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/a7844450-69ca-4025-8cae-a2db3b235106\",\"moduleSequenceNumber\":700993},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6d5abf8f-2e52-41ef-bab1-7525767e16d6\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b9da7b71-ca96-492c-8df1-0a03cca3bff9\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3ed08318-56ca-44f5-aa67-eca3414ca12c\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0957b609-46f0-4355-b5a5-69a18636ebad\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/1ecd7b0d-1573-4cfa-80e5-c8ae249fa98f\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/d9a670d2-65c8-4f6f-bd74-96229124af08\",\"moduleSequenceNumber\":701000},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c20892b5-b3d3-4486-8918-f2d9d625b1aa\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f67af1a8-0029-42f6-99e8-6c521d4ad2ff\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bd6f0d60-432b-416d-93aa-42fe30875a9f\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cd715beb-45d4-48b3-89bd-bcaa3cc016b2\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/32868462-8aa7-4d87-b480-b96d58d88331\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/454e5a7f-6e1a-4372-8cf8-ddbad7d502c2\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/41791722-527e-4970-a5cf-a94167f61992\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/22df11b4-53c6-4746-b5c2-f0c8146e7cf1\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4f356295-f745-45a0-ac21-5aeb9799c4ec\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/643500cd-84de-4dc4-8d46-43d07e00d614\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f4c3d81b-bccd-414f-a98d-cbf1a5261597\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b99419dc-edb4-49fe-8275-d9b4e90f0660\",\"moduleSequenceNumber\":700972},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/41da2654-a827-4059-8790-b5fe7801c0a7\",\"moduleSequenceNumber\":700999},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f1875814-fcd7-4910-bc45-a931b12cb94a\",\"moduleSequenceNumber\":700989},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5c05e3ea-0ce5-4abe-bf4c-7fa5a36c02a2\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/093e8aff-b41d-443e-86d6-a7e3ac20b193\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/22636f89-07cb-48c5-88f5-63b765716589\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b61e7348-e444-4d37-b3a2-d3f9e5b53d86\",\"moduleSequenceNumber\":700981},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3b577f4e-b5be-49bd-a05c-16844f5b178c\",\"moduleSequenceNumber\":700980},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ceba9812-d6c1-4b70-a67d-f1bf67fe2fef\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dbedff37-ee14-4a66-aa52-ea1db2c2386b\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c6d06099-bede-4d91-a7f4-0ecf7a4d62b9\",\"moduleSequenceNumber\":701011},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ca84f53b-2d14-4eea-bc42-0e57a03a4e58\",\"moduleSequenceNumber\":700984},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/538b37a5-832e-4330-a04b-d7b65a7e01ec\",\"moduleSequenceNumber\":700982},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/23c5bb8a-3bdc-454d-b5f0-cea4ea4fc215\",\"moduleSequenceNumber\":700976},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/49d2409a-1cc7-445d-b315-a99de883721e\",\"moduleSequenceNumber\":700996},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/e63de805-ad5d-445b-8e14-3603d59fbb2e\",\"moduleSequenceNumber\":700988},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/47bb649f-7395-45c1-9729-8e6f4051d1bc\",\"moduleSequenceNumber\":700987},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/24da034b-d34b-446b-80ad-97d48d6c02c8\",\"moduleSequenceNumber\":700977},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8f6fde8a-d0d0-495a-b0ab-f7e1d10de2ce\",\"moduleSequenceNumber\":700972},{\"filename\":\"/singularity/faction-megacorp.js\",\"url\":\"blob:https://danielyxie.github.io/18c96511-f03b-4700-a1cf-30b386cf9f60\",\"moduleSequenceNumber\":701380}],\"dependents\":[],\"ramUsage\":76.9,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725402,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getCompanyRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { factions } from \\\"/lib/constant/faction.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { owned_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport {\\n    assert,\\n    hram_resume,\\n    hram_suspend,\\n    is_valid_faction,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Choose a faction to join and join that faction.  Work for the faction to\\n * earn enough reputation points to allow us to purchase all Augmentations from\\n * the faction.  We typically choose a faction for these reasons:\\n *\\n * (1) We have not yet joined the faction.\\n * (2) We have not yet purchased and installed all Augmentations from the\\n *     faction.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction choose_faction(ns) {\\n    // Determine which faction to join next.  First, consider factions on our\\n    // fast track.  These factions have Augmentations to boost our reputation\\n    // multiplier as well as allowing us to start with various port opener\\n    // programs.\\n    let faction = \\\"\\\";\\n    for (const f of Object.keys(factions.fast_track)) {\\n        if (join_next(ns, f)) {\\n            faction = f;\\n            break;\\n        }\\n    }\\n    // In case we have already joined each faction on the fast track list,\\n    // consider the remaining factions.\\n    if (faction === \\\"\\\") {\\n        for (const f of factions.all) {\\n            if (join_next(ns, f)) {\\n                faction = f;\\n                break;\\n            }\\n        }\\n    }\\n    if (faction === \\\"\\\") {\\n        return;\\n    }\\n    // Join a faction.\\n    assert(faction.length > 0);\\n    let script = \\\"\\\";\\n    switch (faction) {\\n        case \\\"Aevum\\\":\\n            script = \\\"/singularity/faction-city.js\\\";\\n            break;\\n        case \\\"Bachman & Associates\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"BitRunners\\\":\\n            script = \\\"/singularity/faction-hack.js\\\";\\n            break;\\n        case \\\"Blade Industries\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"Chongqing\\\":\\n            script = \\\"/singularity/faction-city.js\\\";\\n            break;\\n        case \\\"Clarke Incorporated\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"CyberSec\\\":\\n            script = \\\"/singularity/faction-early.js\\\";\\n            break;\\n        case \\\"Daedalus\\\":\\n            script = \\\"/singularity/faction-end.js\\\";\\n            break;\\n        case \\\"ECorp\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"Four Sigma\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"Fulcrum Secret Technologies\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"Illuminati\\\":\\n            script = \\\"/singularity/faction-end.js\\\";\\n            break;\\n        case \\\"Ishima\\\":\\n            script = \\\"/singularity/faction-city.js\\\";\\n            break;\\n        case \\\"KuaiGong International\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"MegaCorp\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"Netburners\\\":\\n            script = \\\"/singularity/faction-early.js\\\";\\n            break;\\n        case \\\"New Tokyo\\\":\\n            script = \\\"/singularity/faction-city.js\\\";\\n            break;\\n        case \\\"NiteSec\\\":\\n            script = \\\"/singularity/faction-hack.js\\\";\\n            break;\\n        case \\\"NWO\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"OmniTek Incorporated\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"Sector-12\\\":\\n            script = \\\"/singularity/faction-city.js\\\";\\n            break;\\n        case \\\"Silhouette\\\":\\n            script = \\\"/singularity/faction-crime.js\\\";\\n            break;\\n        case \\\"Slum Snakes\\\":\\n            script = \\\"/singularity/faction-crime.js\\\";\\n            break;\\n        case \\\"Speakers for the Dead\\\":\\n            script = \\\"/singularity/faction-crime.js\\\";\\n            break;\\n        case \\\"Tetrads\\\":\\n            script = \\\"/singularity/faction-crime.js\\\";\\n            break;\\n        case \\\"The Black Hand\\\":\\n            script = \\\"/singularity/faction-hack.js\\\";\\n            break;\\n        case \\\"The Covenant\\\":\\n            script = \\\"/singularity/faction-end.js\\\";\\n            break;\\n        case \\\"The Dark Army\\\":\\n            script = \\\"/singularity/faction-crime.js\\\";\\n            break;\\n        case \\\"The Syndicate\\\":\\n            script = \\\"/singularity/faction-crime.js\\\";\\n            break;\\n        case \\\"Tian Di Hui\\\":\\n            script = \\\"/singularity/faction-early.js\\\";\\n            break;\\n        case \\\"Volhaven\\\":\\n            script = \\\"/singularity/faction-city.js\\\";\\n            break;\\n        default:\\n            break;\\n    }\\n    assert(script !== \\\"\\\");\\n    const nthread = 1;\\n    ns.exec(script, home, nthread, faction);\\n}\\n\\n/**\\n * Whether to join a given faction.  We exclude the faction within which we\\n * created a gang.\\n *\\n * @param ns The Netscript API.\\n * @param fac The name of the faction to consider.\\n * @return true if the given faction should be joined next; false otherwise.\\n */\\nfunction join_next(ns, fac) {\\n    assert(is_valid_faction(fac));\\n    // We have a gang within the given faction.  Must be in a gang in order to\\n    // get information about our gang.\\n    if (ns.gang.inGang()) {\\n        const gang_fac = ns.gang.getGangInformation().faction;\\n        if (gang_fac === fac) {\\n            return bool.NO_JOIN;\\n        }\\n    }\\n    // See whether we have all Augmentations from the given faction.\\n    const owned_aug = owned_augment(ns);\\n    for (const aug of ns.singularity.getAugmentationsFromFaction(fac)) {\\n        if (!owned_aug.has(aug)) {\\n            return bool.JOIN;\\n        }\\n    }\\n    return bool.NO_JOIN;\\n}\\n\\n/**\\n * WARNING: This script requires a huge amount of RAM because it uses many\\n * functions from the Singularity API.  To reduce the RAM cost of this script,\\n * destroy BN4.2 and BN4.3.\\n *\\n * Join a faction and purchase all of its Augmentations.\\n *\\n * Usage: run singularity/faction.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Try to free up some RAM on home server so we can run some scripts.\\n    await hram_suspend(ns);\\n    choose_faction(ns);\\n    hram_resume(ns);\\n}\\n\",\"filename\":\"/singularity/faction.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b1d6c8cf-8139-4b37-b80c-198c235b7662\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6e8b8c36-101c-4900-b15c-1395e1ff8ca6\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6beb5c0e-6ab7-42c5-8529-421449eac3d0\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/96b60767-36ca-4e8b-8232-e42fc48b910e\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5597e096-0bd1-40c8-910e-d4a15f262420\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5e267a63-2d84-451b-bf5e-dd14d20b4c67\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1184cc04-2e75-4443-909c-adf35fbb6345\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2766ead2-f657-4a56-97e5-83828b9fa8e4\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bca4bdc5-d334-4c52-9795-21e44d6b173a\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/de7dbaf7-5883-42b7-98c3-a54fc5268fec\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e1db6087-5e8b-49cd-9e14-12d9228b1200\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c39baf9d-d6d5-4b2b-b732-e05256f2bef4\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/877fd4e0-cb6c-4aa5-8811-ccb0d0266cdd\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/591b6060-1586-45b0-8c20-00e774b56a3c\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f8420753-d495-436c-90dc-c4b67b888a67\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e4598c7d-544c-4b13-8755-906c9909eb66\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ee77da9d-83b8-4b04-a06e-95050369bacb\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/afe2548d-fcee-48b9-b753-f028bc6fa9ea\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/bc450da5-a32d-43e3-9acc-b6a75b17450e\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/23b55570-4db8-4a37-97a9-d606245926e4\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/02f7c5d8-573e-4c87-a347-f5ad44969345\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/adeb064a-ce69-4150-a1f9-05f615f5f6e6\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/75709ab4-bab7-470e-b6fc-691d2126f073\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/829b4d2e-f7d2-473e-8ed7-ec6ed2317bec\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a836082e-d011-4d0b-bc7f-a18f2ddc1383\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3b22e9fa-8e7a-4aad-ad48-309e15ff2673\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/06e1c2b8-9f2c-4305-a854-89d66e348527\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/33858fa1-4446-4fa0-85c7-5ef2ada8fea5\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/58a88895-a0d1-4bd2-b2ec-93e362b0d514\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0e8510c0-7a3f-415a-afe5-24a806ca969e\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6dba82e9-9d6c-4e4b-a379-8ba1a6356704\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fa17cd69-7dc4-46bd-94a2-f5e9347f2255\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/070ada4a-8b88-48ae-ba79-703ebf74ec41\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/66fbf902-354c-4865-bffd-c02a972cee32\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/14e96e6b-4f29-4dc7-a36b-40e4505ce724\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2fb3d99a-2c36-4934-aa09-a8a98e886a67\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4235b856-cc51-4422-bad8-b652bab23432\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/2ff92b10-dfd3-411f-8088-a4dce881769d\",\"moduleSequenceNumber\":724827},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1ff7b10d-aeb5-4734-8a0e-9ec439bf8474\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c5943b23-3733-47ca-bfea-06dda9641723\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/5537e90d-4070-48f4-917d-8b4d461f6f69\",\"moduleSequenceNumber\":724846},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/dc9084d3-2a26-4a76-b994-677c42e91509\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0ea201e3-0879-4714-a8ad-8c4b37c060d1\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c17d3494-a016-4aeb-b0ba-570561d74d41\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f708a5c1-9767-4121-a5ee-efc1a7a4ab90\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/dc54ee7d-c9d2-4f96-a8c7-c587af65e0c4\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1d170eca-f81d-40d1-b283-c96f74836bc3\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7bfa858b-24c6-46e0-bbbf-dc8dd2fcc1b0\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/abcf5c27-3898-4771-ab6f-6ce114a0d919\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8afd4b5b-376b-43f6-b003-cce1eebdcdae\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/edb4ed3b-f6f5-4d8b-9a7d-38da9fecbdf6\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/af557481-e7cd-48b7-8102-7f5de05abf83\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/37d26fd0-0803-4158-b55d-8c0adff84960\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/e6d6fef7-0c27-4334-8b90-4e5e792c0e23\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2cbfe979-7c0d-4673-82ad-603023f013b2\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/34b57c02-8d3f-4ed1-a7c2-5ddf25929f22\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3526bd98-8657-48e8-8c0e-db12902b5332\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/75097e67-b09a-4878-835a-269c1b3bff4b\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2294bcba-c845-4676-96ec-1999d00cac55\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1dc2d942-af15-4f2c-89b9-5ec09fbe2b5b\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0a74b993-59a4-4c09-be45-3326eecbaaef\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7d4f640e-64d1-42c1-9b47-dd65c806fe57\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ae63cdae-2ca5-4979-9ce6-2ade0e62760d\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/33a41368-f186-48bb-ad1e-0db5bce0b423\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/45d685b7-d743-46ee-b3a2-eea7fe028675\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/b4b04dd7-39ec-41ad-acfe-08e1dc109adf\",\"moduleSequenceNumber\":724829},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/edfd7dc2-bb15-44d4-9fe5-abd3a15f6755\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1cd40ce0-539a-45ac-90f2-ccffd8ee270e\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e480d965-2442-4854-a385-9699ee195846\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/db72880b-1197-42ad-bdfd-9ee412ef331e\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/c73edb71-8818-417a-9528-17c04c07cda3\",\"moduleSequenceNumber\":724848},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5120ad2e-a1da-41c6-b155-c4dd0902f201\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3f3b2f6f-52b5-4a69-a023-8d379813775a\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/165bb966-fe99-4e92-a792-7cc3d5b1c8bf\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a802c160-4ac9-424f-882b-9b10c4f2ecf1\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/028d9d95-87f1-463b-9d45-2b7d1bd8bdbf\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/aae23519-1a5e-417b-b88d-d38523368028\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/62de461c-27ef-44c4-bc7a-aaeeab90650d\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c3231083-1aa5-40f2-ace9-58e799aefaf5\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2c953dac-e76a-4b5f-b198-0674da6bdb80\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/861949b6-a9ad-4637-b60b-7ee16a8c995b\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c33a86be-eae7-49bf-a2b7-73c28420df93\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3d8ac462-f63b-47db-b60d-9f1cc665a056\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/420e62d3-70b6-44bb-bf55-7a9b85acb582\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4507ed4a-4355-4074-9d5e-aa02e97c1bc4\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/208558f7-ddfb-4ab3-86cd-5931444b0058\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/82d6b017-9972-4e17-91b9-66a795a6dff1\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e9cd4657-7430-4479-8aa2-d930fcde029d\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ceffd4d3-92cb-4ad2-a58e-867ed47561a1\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3ea6f423-0ae5-4f59-81b7-6f9e4ee9d477\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e65b61e0-49b0-40b6-a794-205e923c3674\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/39198dcb-edc1-4ae3-8a07-b88ccb641c1d\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/92aeca7e-37d0-49b2-b780-7fb1935cdbf2\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bd0a9d67-f0bd-4078-b883-cfd86f23afc1\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/92264041-e212-46db-bd61-5882144df329\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/10f31f77-83ce-4a53-a5e5-0dc54d169594\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/75fef1d0-1080-439c-a6d6-afc0c5edab3c\",\"moduleSequenceNumber\":724816},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/114fe429-9fce-4adf-816b-b134750ece0d\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/a77dfe45-6098-4771-a9e4-b6b8eaffc93a\",\"moduleSequenceNumber\":724842},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/125ffb30-fdee-4232-a568-89c6cdd22d53\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5f9fe894-3e17-4231-81f3-a665ebf2af29\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/087472f5-9c38-4d5b-be13-0ab853afc929\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4ad0919a-4bb3-4405-944a-93262aae0e11\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5d43054d-02f5-451e-84f9-2b2b24621d2c\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8627b646-d7ab-4d64-a2dd-72c10d0d2d68\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7003f22c-afc5-46f1-8f1b-ee4e59b79b5c\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/661b6eb3-e2d9-4e06-b0d3-6e6276e0602b\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f9010424-ff48-49c0-a477-d33ad7d1ebb7\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/625bba70-3cfa-4c70-afec-15e0330322b6\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/993fd568-91b8-4b84-8f97-b2c7a1f921a7\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0a73eea9-973e-4faf-9eb5-2829b490d736\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/13452b9d-4f25-46f0-a77c-a65f6b188a5e\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/59fdabc1-304d-4b18-8c12-68a229d87186\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0e2e6162-e619-4cf0-a5c9-82e141b4dc26\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/bb545659-bb75-43ee-bb01-723150ea43c4\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/fa48e322-475e-4e9c-9507-30162e50e87f\",\"moduleSequenceNumber\":724841},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/29d4c392-6348-48b0-9793-b90beae293b2\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dd69f8e5-86fe-4b71-90eb-2313d9212800\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/2fdbdc47-f31b-4312-b923-6906f99db7e7\",\"moduleSequenceNumber\":724813},{\"filename\":\"/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/298a1c8b-5cee-4936-ac08-05281ba8163f\",\"moduleSequenceNumber\":725191}],\"dependents\":[],\"ramUsage\":20,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725403,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { choose_hardware_company } from \\\"/lib/singularity/util.js\\\";\\nimport {\\n    assert,\\n    exec,\\n    trade_bot_resume,\\n    trade_bot_stop_buy,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Determine which to upgrade on the home server: Cores or RAM.  If the script\\n * \\\"share.js\\\" is running, this means that we are sharing our home server with a\\n * faction.  In this case, we only need to upgrade our RAM in order to run\\n * \\\"share.js\\\" using more threads.\\n *\\n * @param ns The Netscript API.\\n * @return A string having exactly one of the following values.\\n *     (1) \\\"Cores\\\" := Upgrade the Cores on the home server.\\n *     (2) \\\"RAM\\\" := Upgrade the RAM on the home server.\\n *     (3) \\\"\\\" := The empty string, meaning do not upgrade anything on the home\\n *         server.\\n */\\nfunction choose_upgrade(ns) {\\n    // Do not upgrade anything.\\n    if (is_at_limits(ns)) {\\n        return \\\"\\\";\\n    }\\n    // Is the script \\\"share.js\\\" running on our home server?\\n    const server = new Server(ns, home);\\n    const script = \\\"share.js\\\";\\n    assert(ns.fileExists(script, home));\\n    if (server.is_running_script(script)) {\\n        return \\\"RAM\\\";\\n    }\\n    // Upgrade the Cores.\\n    const core_cost = Math.ceil(ns.singularity.getUpgradeHomeCoresCost());\\n    const ram_cost = Math.ceil(ns.singularity.getUpgradeHomeRamCost());\\n    if (core_cost < ram_cost) {\\n        if (server.cores() < home_t.CORE) {\\n            return \\\"Cores\\\";\\n        }\\n    }\\n    // Upgrade the RAM.\\n    assert(ram_cost <= core_cost || server.cores() === home_t.CORE);\\n    assert(server.ram_max() < home_t.RAM);\\n    return \\\"RAM\\\";\\n}\\n\\n/**\\n * Whether the Cores and RAM on the home server are at the artificial limits.\\n * Even though the Cores or RAM, or both, are at maximum, this does not\\n * necessarily mean we cannot purchase more Cores or RAM for the home server.\\n *\\n * @param ns The Netscript API.\\n * @return true if both Cores and RAM are at maximum; false otherwise.\\n */\\nfunction is_at_limits(ns) {\\n    const server = new Server(ns, home);\\n    if (server.cores() >= home_t.CORE && server.ram_max() >= home_t.RAM) {\\n        return true;\\n    }\\n    return false;\\n}\\n\\n/**\\n * Upgrade the Cores or RAM on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function upgrade(ns) {\\n    // Relocate to increase Intelligence XP.\\n    const shop = await choose_hardware_company(ns);\\n    ns.singularity.goToLocation(shop);\\n    // Suppose our home server already has the greatest number of Cores and\\n    // RAM.  This does not necessarily mean we cannot purchase any more Cores\\n    // or RAM for the server.  We place artificial limits on the Cores and RAM\\n    // to avoid having to wait too long to accumulate sufficient funds.\\n    // Initially, we are willing to wait to upgrade the Cores or RAM up to and\\n    // including the given limits.  After the limits on Cores and RAM are\\n    // reached, we do not want to wait to accumulate money for upgrading Cores\\n    // or RAM.  We simply upgrade if our current funds allow.\\n    if (is_at_limits(ns)) {\\n        if (ns.singularity.upgradeHomeCores()) {\\n            log(ns, \\\"Upgrade home Cores\\\");\\n        }\\n        if (ns.singularity.upgradeHomeRam()) {\\n            log(ns, \\\"Upgrade home RAM\\\");\\n        }\\n        return;\\n    }\\n    // Wait to accumulate funds to purchase upgrades.\\n    const attribute = choose_upgrade(ns);\\n    assert(attribute !== \\\"\\\");\\n    if (attribute === \\\"Cores\\\") {\\n        await upgrade_cores(ns);\\n        return;\\n    }\\n    assert(attribute === \\\"RAM\\\");\\n    await upgrade_ram(ns);\\n}\\n\\n/**\\n * Upgrade the Cores on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function upgrade_cores(ns) {\\n    log(ns, \\\"Upgrade home Cores\\\");\\n    const success = ns.singularity.upgradeHomeCores();\\n    // We are willing to wait some time for our funds to increase.  After the\\n    // waiting period is over, try to upgrade the Cores again.  If we are still\\n    // unsuccessful at the second attempt, then move on.\\n    if (!success) {\\n        await ns.sleep(wait_t.MINUTE);\\n        ns.singularity.upgradeHomeCores();\\n    }\\n}\\n\\n/**\\n * Upgrade the RAM on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function upgrade_ram(ns) {\\n    log(ns, \\\"Upgrade home RAM\\\");\\n    const success = ns.singularity.upgradeHomeRam();\\n    // We are willing to wait some time for our funds to increase.  After the\\n    // waiting period is over, try to upgrade the RAM again.  If we are still\\n    // unsuccessful at the second attempt, then move on.\\n    if (!success) {\\n        await ns.sleep(wait_t.MINUTE);\\n        ns.singularity.upgradeHomeRam();\\n    }\\n}\\n\\n/**\\n * Upgrade the Cores and RAM on our home server.\\n *\\n * Usage: run singularity/home.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n\\n    await trade_bot_stop_buy(ns);\\n    await upgrade(ns);\\n    trade_bot_resume(ns);\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/install.js\\\");\\n}\\n\",\"filename\":\"/singularity/home.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/691e7543-0593-4e13-9522-2919ae78a805\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/486a3c32-05cf-4ccf-bd91-a7831739f11b\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9764fe79-81a3-4c2b-b7f0-c63f1f2254cb\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/123ce426-c34f-46c3-86c5-9171a071946d\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b2cebad0-126f-4b84-b252-df986a74506b\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d0c4b62c-722a-411c-a112-4e86045225a0\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bd2ed802-f0c6-44a0-859e-13b25dfb4882\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2578dfc9-6af9-4d33-80b9-da6b5b1c1115\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3780ad49-9a89-4745-9a98-976271745ada\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/09bf3301-3365-499f-8403-c6d2da0ca1ce\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/11ab102c-35dd-4048-887b-3901df556004\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/singularity/util.js\",\"url\":\"blob:https://danielyxie.github.io/d5304f63-ce89-4160-853a-5d56332eac50\",\"moduleSequenceNumber\":719431},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/441ff3f2-721b-4cdf-8370-d81b4ebafcbd\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b73c8f1d-df39-49ad-a434-0ce2dabeb1cf\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5a3cde29-4e58-4590-8c75-d39049004456\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/94c721ea-12b6-478a-9804-b6369068d7c8\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e9e29bd7-08c5-405f-ac44-347604e1e2b6\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e892ee00-b820-4b9f-b5e5-9ff940235979\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7c4f7199-c0d1-4ea7-b24a-9d4d1248f9b4\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f417cc68-1fe0-45cd-8a53-7ccd05c7ef52\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d24d5dfb-8656-4e5b-9003-48d47d62167f\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/be287b55-dc29-4729-83dd-06884daf4113\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ba7ad768-64b2-4ac6-931f-b26c57551d75\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b3fc32d3-c67d-4da2-98a2-d4dac04bd902\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/5bf2c223-e2be-44d8-8fb1-98027b1217cd\",\"moduleSequenceNumber\":719424},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4d127447-09ad-4233-9ed6-dd032281a1c2\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5cbc6442-d649-4cb5-9397-a637153ca8c6\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1ad85f4b-41c9-42ed-9324-bffa6e175002\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5e70b863-eb88-4f0d-bad9-5ee890a4c723\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0329aec4-d096-4605-87cb-e40dd70ba009\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1bfb91f0-7686-46ac-a659-909be82969f2\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8ae58d79-9620-4703-8989-b297ff39bc4c\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c0d5e3ae-ec42-4161-af7d-b286a3e23df1\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6118510c-7df4-4850-a052-7e17fec3b412\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b509cd4c-e096-4b12-a095-118418845cf8\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/49779efe-9a75-441d-86f4-b714d2c52a14\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8c4db063-3193-4c19-bbce-0be3a6c10bbb\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0f57178b-47b9-4428-b9fa-4fde2c327630\",\"moduleSequenceNumber\":719409},{\"filename\":\"/singularity/home.js\",\"url\":\"blob:https://danielyxie.github.io/6d2ae7f0-1401-4f5c-8c1d-6b53ab5ae989\",\"moduleSequenceNumber\":724746}],\"dependents\":[],\"ramUsage\":25.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725404,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getUpgradeHomeCoresCost\",\"cost\":1.5},{\"type\":\"fn\",\"name\":\"getUpgradeHomeRamCost\",\"cost\":1.5},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"upgradeHomeCores\",\"cost\":3},{\"type\":\"fn\",\"name\":\"upgradeHomeRam\",\"cost\":3},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { cheapest_program } from \\\"/lib/constant/exe.js\\\";\\nimport { exclusive_aug, augment } from \\\"/lib/constant/faction.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { wse } from \\\"/lib/constant/wse.js\\\";\\nimport { Gangster } from \\\"/lib/gang/gangster.js\\\";\\nimport { reassign_soft_reset } from \\\"/lib/gang/util.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { join_all_factions } from \\\"/lib/singularity/faction.js\\\";\\nimport { has_ai_api } from \\\"/lib/source.js\\\";\\nimport {\\n    assert,\\n    cleanup,\\n    trade_bot_resume,\\n    trade_bot_stop_buy,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Purchase Augmentations that are exclusive to various factions.  If we have\\n * a gang within a faction, the faction allows us to purchase Augmentations\\n * that are exclusive to other factions.  Exploit this feature to speed up our\\n * progression through all factions.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction buy_exclusive_augmentations(ns) {\\n    if (!ns.gang.inGang()) {\\n        return;\\n    }\\n    // The faction within which we created our gang.\\n    const gang_faction = ns.gang.getGangInformation().faction;\\n    // Attempt to purchase the exclusive Augmentations.\\n    const player = new Player(ns);\\n    const installed = new Set(installed_augmentations(ns));\\n    for (const faction of Object.keys(exclusive_aug)) {\\n        for (const aug of exclusive_aug[faction]) {\\n            if (installed.has(aug) || aug === augment.TRP) {\\n                continue;\\n            }\\n            const fac_rep = ns.singularity.getFactionRep(gang_faction);\\n            const aug_rep = ns.singularity.getAugmentationRepReq(aug);\\n            if (fac_rep < aug_rep) {\\n                continue;\\n            }\\n            const cost = ns.singularity.getAugmentationPrice(aug);\\n            if (player.money() < cost) {\\n                continue;\\n            }\\n            ns.singularity.purchaseAugmentation(gang_faction, aug);\\n        }\\n    }\\n}\\n\\n/**\\n * Use our gang faction to purchase any other Augmentations we can.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction buy_other_augmentations(ns) {\\n    if (!ns.gang.inGang()) {\\n        return;\\n    }\\n    // Sets of Augmentations to exclude.\\n    const installed = new Set(installed_augmentations(ns));\\n    let exclusive = [];\\n    for (const fac of Object.keys(exclusive_aug)) {\\n        exclusive = exclusive.concat(exclusive_aug[fac]);\\n    }\\n    exclusive = exclusive.filter((a) => a !== augment.TRP);\\n    exclusive = exclusive.concat(purchased_augmentations(ns));\\n    exclusive = new Set(exclusive);\\n    // Buy other Augmentations available from our gang faction.\\n    const { faction } = ns.gang.getGangInformation();\\n    const player = new Player(ns);\\n    const aug = ns.singularity\\n        .getAugmentationsFromFaction(faction)\\n        .filter((a) => a !== augment.TRP);\\n    for (const a of aug) {\\n        if (installed.has(a) || exclusive.has(a)) {\\n            continue;\\n        }\\n        const fac_rep = ns.singularity.getFactionRep(faction);\\n        const aug_rep = ns.singularity.getAugmentationRepReq(a);\\n        if (fac_rep < aug_rep) {\\n            continue;\\n        }\\n        const cost = ns.singularity.getAugmentationPrice(a);\\n        if (player.money() < cost) {\\n            continue;\\n        }\\n        assert(ns.singularity.purchaseAugmentation(faction, a));\\n    }\\n}\\n\\n/**\\n * Purchase programs via the dark web as many times as possible.  At this\\n * stage, we do not need any more programs to help us with our hacking and\\n * faction work.  We buy the programs over and over again to help raise our\\n * Intelligence XP.\\n */\\nasync function buy_programs(ns) {\\n    const player = new Player(ns);\\n    assert(player.has_tor());\\n    // Try to buy at most this many times to prevent the script from hanging.\\n    // If our income rises faster than our spending on programs, then it is\\n    // possible for this function to hang and buys indefinitely.\\n    const maxtry = 1000;\\n    const p = cheapest_program.NAME;\\n    const cost = cheapest_program.COST;\\n    ns.rm(p, player.home());\\n    for (let i = 0; i < maxtry; i++) {\\n        for (let j = 0; j < maxtry; j++) {\\n            if (player.money() < cost) {\\n                return;\\n            }\\n            ns.singularity.purchaseProgram(p);\\n            assert(ns.rm(p, player.home()));\\n        }\\n        await ns.sleep(wait_t.MILLISECOND);\\n    }\\n}\\n\\n/**\\n * Whether we have Augmentations that are purchased and yet to be installed.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have Augmentations that are yet to be installed;\\n *     false otherwise.\\n */\\nfunction has_augmentations(ns) {\\n    const aug = purchased_augmentations(ns);\\n    return aug.length > 0;\\n}\\n\\n/**\\n * Install all purchased Augmentations.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction install(ns) {\\n    assert(has_augmentations(ns));\\n    log(ns, \\\"Install Augmentations and soft reset\\\");\\n    const script = \\\"go.js\\\";\\n    ns.singularity.installAugmentations(script);\\n}\\n\\n/**\\n * An array of Augmentations we have purchased and installed.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction installed_augmentations(ns) {\\n    return ns.singularity.getOwnedAugmentations(bool.NOT_PURCHASED);\\n}\\n\\n/**\\n * An array of Augmentations we have purchased, but not yet installed.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction purchased_augmentations(ns) {\\n    const purchased_aug = ns.singularity.getOwnedAugmentations(bool.PURCHASED);\\n    const installed_aug = installed_augmentations(ns);\\n    return purchased_aug.filter((a) => !installed_aug.includes(a));\\n}\\n\\n/**\\n * Prepare our gang for the soft reset.  After the soft reset, there would be a\\n * period of time during which our gang script would not run.  Set our gang to\\n * be in a neutral state during this waiting period.  At minimum, during the\\n * waiting period our gang should be doing the following:\\n *\\n * (1) Have some members engage in vigilante justice to decrease the penalty.\\n * (2) If a member is currently in training, set them to mug random people.\\n * (3) Disengage from territory warfare.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction set_neutral_gang(ns) {\\n    if (!ns.gang.inGang()) {\\n        log(ns, \\\"No access to Gang API\\\", colour.RED);\\n        return;\\n    }\\n    log(ns, \\\"Prepare gang for soft reset\\\");\\n    // First, kill our gang script.\\n    const script = \\\"/gang/crime.js\\\";\\n    const { faction } = ns.gang.getGangInformation();\\n    const player = new Player(ns);\\n    if (ns.isRunning(script, player.home(), faction)) {\\n        assert(ns.kill(script, player.home(), faction));\\n    }\\n    // Assign vigilantes.\\n    reassign_soft_reset(ns);\\n    // Put anyone in combat training to mug people.\\n    const gangster = new Gangster(ns);\\n    const newbie = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_training(s));\\n    gangster.mug(newbie);\\n    // Finally, disengage from turf warfare so members would not be killed\\n    // while we cannot run the script that manages our gang.\\n    ns.gang.setTerritoryWarfare(bool.DISABLE);\\n}\\n\\n/**\\n * Install all purchased Augmentations and run our bootstrap script.\\n *\\n * Usage: run singularity/install.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Tell the trade bot to stop buying shares.  Wait a while for it to sell\\n    // some shares.\\n    trade_bot_stop_buy(ns);\\n    const time = 3 * wse.TICK;\\n    log(\\n        ns,\\n        `Wait ${time / wait_t.SECOND} seconds to sell shares of stocks (if any)`\\n    );\\n    await ns.sleep(time);\\n    // Raise some Intelligence XP.\\n    if (has_ai_api(ns)) {\\n        log(ns, \\\"Raise Intelligence XP\\\");\\n        join_all_factions(ns);\\n        buy_exclusive_augmentations(ns);\\n        buy_other_augmentations(ns);\\n        await buy_programs(ns);\\n    } else {\\n        log(ns, \\\"No access to Artificial Intelligence API\\\", colour.RED);\\n    }\\n    trade_bot_resume(ns);\\n    // Set our gang to a state where it at least is working to lower the\\n    // penalty.\\n    set_neutral_gang(ns);\\n    // Install all Augmentations and soft reset.\\n    cleanup(ns);\\n    install(ns);\\n}\\n\",\"filename\":\"/singularity/install.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/54e6b5b1-bf0c-4055-ad1f-882c4039d041\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/762c3282-a011-4490-90d7-95fd7be00839\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/63636908-adf9-4c42-b599-cdbf75623de8\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fcf9d255-5035-4c0c-abbf-41f197baabd3\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/65dbe862-2a22-42af-b09c-4dfb0c79a568\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0cca04e1-1af0-4310-945f-bc1a95e6de86\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/15546bb3-1b12-44b7-9e8d-5326ae06be68\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/095635fd-5c53-403e-b3ed-90a9d1804352\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8eaf54ac-ecdc-4318-a165-dd1e88bd6b47\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/62272fe1-0718-4053-bb06-cacaf84e88c7\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e7bea0ac-d3ce-4b25-91bb-735eccfd34fc\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6fb56e4c-c19b-4336-ab88-309d092f89b2\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8ff1a2f6-c263-4d14-818f-82f0283ad0ea\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/49e5066e-00c8-4880-a076-7de3b75bed54\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/68d80a58-76c9-48b3-9507-60a9d6ee448f\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/cde32769-856c-4a51-8457-6e554396c01c\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1f076361-a578-4b79-9a97-0b9959d7eac2\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1d14886d-9c3f-41bb-b9c1-fdab9e9cb8dd\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/888e199a-8ddb-451f-bbc7-4358795219e4\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/7844781b-13b5-4d0f-b3bf-16614f65aec3\",\"moduleSequenceNumber\":719396},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/88d0680d-1143-4019-9fac-8c78c39a87cd\",\"moduleSequenceNumber\":719435},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f9127ed4-6790-48cd-91d1-263b6cd5f7a6\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4a2f508a-a78b-45ed-82f6-0cef96405f20\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8bf912a2-c89b-4e97-936e-6b75860562c8\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/546a1cc0-c4c9-4c7c-b78c-e42b6a964b4b\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ed5585db-6aee-4548-8239-d3b571e17f0a\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/37ff546f-3e0d-43fc-bbb0-a161a0744078\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/88127637-ea74-4abf-bd0f-3ca710fc1858\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b8005cf7-1a98-4784-94ca-6b37aaf80d3a\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0948e43c-b406-44e9-a520-b8059cdcd3f3\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/23a1ac0f-ed24-4063-8c10-6010bbcdbe4a\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ffcab85d-c514-4aa7-8a53-735415ed4118\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c183a868-1ce3-4bcf-b711-cce30f1a61b3\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f617eed2-20c3-41f9-97b2-d833b0e45802\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2bfa24b5-24b9-4a56-b979-2099655f5178\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/afb9b7dd-a1f5-4992-acd0-5c682096763b\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/89b07363-0139-421f-b0fd-fc9b2f3886f3\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f1b492b7-21f7-4b5b-895c-583de0f81792\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a425d2ca-cc43-402f-870c-a16452fd459d\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c704ab03-f27e-4b6a-992b-86f2e9c19149\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/79687ddd-d1f4-4749-b450-8ffc403530cc\",\"moduleSequenceNumber\":719411},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/783a9268-32fd-475c-a5ff-fcebd949fa70\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/5fcb19da-17f9-48e8-b3cc-4470cbf3c59b\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/840c51e9-c191-44aa-945f-b6dec9dfd786\",\"moduleSequenceNumber\":719430},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7b8a6d91-31ad-4ee9-9ec8-0a23258f43eb\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a81a3478-4dd0-47ae-8e90-287b63c97f6d\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5e674755-362b-4627-a5dd-357182f5269a\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7dc0ae1b-ef30-48f2-a4d9-3c4b8adb51c6\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1c4d9b09-868c-4afa-9eb6-a9bebae7245b\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/88d7d9c3-337d-4dd9-8592-4fbe10af8d44\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9a82b98e-3225-429d-8786-437b4fdbcb79\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dbdef87d-b0a6-4716-bbd3-15e88b26792b\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a8d6f562-abec-40e6-9baf-cd51b3e4c211\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/49158327-75de-432f-a869-ca72ac4261ad\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/43580008-0fee-460a-91ba-be7bdde20119\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/88366f11-b3c6-4032-94cb-48165157f9d0\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a71a2e28-4aac-4906-a84c-c543050f99fb\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/62822988-7b83-43e6-b204-6d38bda0279f\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f1408b61-a522-4920-b463-b179a2f53a68\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2811f210-8996-4d6e-ace2-b2819f4b2033\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/039d3eb2-5095-49ee-81ab-0d1fc2bbe879\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0afe0b73-c094-40e3-95f4-6297887b3e32\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/37062c08-c41e-4c71-b367-1d12bb4b7ead\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/713111c2-b35b-415f-8085-4d21de74551c\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/755de3ad-e53d-4275-aac3-b51c7e580c8b\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/3eab89b2-32dc-4b68-9396-9b0a0eb17e52\",\"moduleSequenceNumber\":719424},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6d0ba3b6-a1be-418c-9bf2-c9fe9253fc34\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4711de5e-0001-4376-8f62-052df2e9c846\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e7fbf0c3-39bb-41ec-b910-417a1552bfa9\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/44df640c-f863-4a1b-8d21-f7a34e595f6f\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1ea1f078-3bb1-4f14-ba73-35c34fb47460\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/274b1c6c-7cca-4745-8501-b245ceafea5c\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/292c8c1e-f2af-478a-a38f-348319142266\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e75392c4-976d-4970-b439-c2f0ca6feff0\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dfbf463b-6cd7-4c23-8832-5c6044912891\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e59bd2e1-9c4d-4038-8d35-f7794ab104c1\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2a86407f-b9d2-4d34-a4f3-e386abb33a45\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b12c91d0-d956-436a-a810-47c4ce1d0c3a\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/29a831d8-f38f-4993-8e57-519a5ab51930\",\"moduleSequenceNumber\":719421},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7a1dd8c7-80dd-4346-893f-0d4422a50b29\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/679a1837-4cee-41db-9640-87e57e669235\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d0a70007-64db-4846-85a5-45a347d66f71\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d0f54fa7-3c52-4bb3-bd72-a6980506e602\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f79d8fe1-aaa2-40ea-bbff-ba4484a36699\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/955a8fd2-5317-4725-bdd1-e1ae7170c936\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5dcc3a8b-82b3-48d5-97d4-46a41dab62f1\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/11aa5fc8-4e15-41be-affa-142be6778133\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dfe91cf5-3260-4fcf-94f9-686235179e11\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ef18e489-9ece-4be4-9902-cfa47819761c\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8e55eafa-7ccb-43f1-9e1c-54070f44d99c\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/d133c584-dcf9-4f49-8c7a-50d68a4bc1be\",\"moduleSequenceNumber\":719420},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/200e491d-3767-4e11-ae0f-fe4612352d67\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/474168c7-590b-4201-87a0-08063c519d58\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/f4bb4368-f561-4759-a109-ea2eff5ccfb4\",\"moduleSequenceNumber\":719428},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d3f5aa0f-057a-4829-913a-b46370603dc3\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/df5ce8ec-3da1-4714-a7f0-041d242e210a\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/11c415bb-d3e5-43d6-a0ce-ef04f0e3e311\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8678e1ed-7639-4653-be93-511af1542d74\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9181d025-2d57-48c8-936f-78d89ff2ce69\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3d986904-eb57-43a4-b752-e4e9b6686d5a\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/778f9544-0c54-4cb8-a8ff-6a1f7f7a23e1\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/75a21752-ddbc-424a-8378-30862888b458\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2b60e6e5-de5e-4707-a439-dc3ff13388a8\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8f4ac8da-6f28-452e-ac9f-944547f23d1d\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/94c29002-7d2f-43eb-a565-ab56ec001c39\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c276c9f9-0b53-4cca-a496-fe6abe42d1d0\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fae42833-1953-4a07-b608-37e1dc2f088c\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2ca29ade-e2b7-4c6f-b340-2ccc6dbb4fdb\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/290feebf-bb3a-46bd-bd18-5bdfaa295745\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/009b3193-ddda-4e99-83ad-3b905bbe586a\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1e10199c-3e08-4a67-baea-d7d95208728e\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e6f2dd72-c159-48f0-92a9-28487c7cfc34\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3c116d86-01cd-464a-81bf-deef4b73031e\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/24896965-857b-48d6-9d99-8a3c43b55863\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/af40714c-c3ac-49d2-88da-25910f5880e2\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5fdd00bf-9664-4a54-aef2-615c6768a8ff\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2ff6a832-b235-446f-8af0-921b1842e580\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/98ae9318-cae2-4e16-bf27-bfe6267a8245\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/54232c15-b48c-4e54-a457-30b317ee70bd\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/df3e5bc4-52ac-4361-b5c1-68696a6edc7b\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f0ad2c7a-e8a4-4090-919a-3bcee12aa12f\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/eaab261a-ada9-4aea-acad-d152fed4cf34\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/910c608d-5283-4214-b07e-fbeb2cedf63f\",\"moduleSequenceNumber\":719411},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7d97259b-d600-451e-998b-5a03f193ce41\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/fcd91be6-38f6-47fa-8dbd-4a1409404774\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/d6fa904f-9f6c-4c6b-902d-677d16e5ffe4\",\"moduleSequenceNumber\":719430},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4447e514-0b48-456a-8d04-25f0f5688e5e\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/46db2509-23e3-4d5a-93cf-4287e9cad05b\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2f7ae2aa-1b37-43de-9ba3-097e119819d2\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5f7406bd-5da3-4135-a091-27fa7683aefb\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/86aa74ba-1e68-44d0-abdc-92333df03b15\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e2c2e5da-1ffe-4649-aace-6c1d6edca944\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3b324f9e-7d7f-43f1-9bcd-1d1ad2803662\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/853b39f4-996d-45f6-a16a-7941571c1fdf\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7caae43e-1976-4d11-a3f2-3a2c6c81a043\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bc9531a0-7731-41e4-bfee-f40d54206e28\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c8168dc6-ddc0-486e-8b7a-3aa3623b92b0\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3088268a-1138-46f3-a8d0-60f8197edea1\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/c32388d2-465a-4d39-b876-5fab3081c781\",\"moduleSequenceNumber\":719421},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/59d63056-db7a-4665-bdae-25d811c17585\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8b63c228-da4b-47e2-b592-a1f5526ba551\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/290e0bb7-7f11-4539-87af-501472a5612e\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d7337435-904f-4e4a-b299-b03a7e5c5e18\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4d9b1234-c97d-40cd-812e-79f251e99eb4\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/08bb3a95-372f-42cb-8eaa-d31260718f6f\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/49fbbee3-280d-4c81-aba8-01fc447c8329\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f144a6c2-463c-4ca8-bd89-1c81d8203770\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/03d325a0-46be-486f-8a59-9633734d3469\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dcfba3ec-4915-40df-961d-c6d79c94ae8c\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/42cbbf11-ed38-4716-9f31-9c45a8f405c8\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/a9d6b1e2-2276-4fff-937b-ce6e98538357\",\"moduleSequenceNumber\":719413},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/78a85773-357c-4722-8612-8910143c0d50\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c4bb8009-a52f-4e47-8a7c-3f4bb6e1b970\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3d037129-a5c4-4a88-9989-e89c2d7d98e0\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/cc2b7893-54a0-4578-8e8d-af22a7335e27\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/e67ff6a5-52a4-4072-8e07-bd59d75bc5c4\",\"moduleSequenceNumber\":719432},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fc97e0bd-8592-4fa6-8ea3-35ae348bb412\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/744633d0-1b69-40c5-9baf-f50e6dc80d75\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e18f906a-81ec-462c-9f2b-b7d8eda78f13\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c64ac41b-0066-47ee-908b-ecf7d4e9afce\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/36b31f51-df7b-4033-9234-fb45211fb375\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d4a48b35-73e9-4039-8f55-e3dfb79d51a0\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d34d579f-4dc0-452a-ad0e-624c3f59529d\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0f3be2c8-4ba0-4d28-a7f9-a5e030d66f45\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/75f9d718-04ea-4d3a-890d-bcd32afb8652\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/abc1800e-5127-4fe9-8017-7c86ac17a8d3\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3eb2e63e-e8c7-4187-abe3-8c388282cf17\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9636a7f3-5295-451e-a92c-d1a587b76899\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/65e39b0a-0640-4650-a785-7bca6e4ceccf\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3205dace-d9a4-4849-a7a0-40a9b6c5a483\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/18a320a7-ecf8-4ef3-b388-8bd1b69ac5ec\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1dead3f8-bb75-4e06-9dcd-4751e5327651\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bffde68c-86b9-48de-ba02-1b6ab3889472\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1dac09ca-8a39-4479-b0ae-47e190bf46a9\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8bd873ed-3c10-4e67-830d-cc78dddf1146\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ea06f6fe-dccd-42dd-847e-2dd92834b320\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8ade7290-b174-429c-9aea-cae311a2dee5\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/e9ef3ae1-7263-4a5c-926f-8760f3912704\",\"moduleSequenceNumber\":719421},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a1a20650-52af-486c-bc3d-7600226f7ff4\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8e9bac2d-3a45-485d-b6c9-6243b29c4c34\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/46e6153b-2ab8-497b-811a-ad6dc7fdf548\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/bec962ad-c144-4cfb-bd99-8c1f0741ec00\",\"moduleSequenceNumber\":719400},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/90e75be2-ab8b-4ce7-890c-eb47fa8faab7\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/6d622d4f-c4df-4f6e-91c9-ce973ce7a916\",\"moduleSequenceNumber\":719426},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/752a3746-1233-4951-9a21-bc08550c0349\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/91e67a94-9df9-4908-8299-b8c250dedeeb\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3be8d585-6f3e-47b9-90b6-7470bf328e31\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bec687b1-c539-4148-a8f0-befd96700f40\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cf3f4e5b-ab12-49a9-a1d0-c81263e29f89\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d8d84753-e5b6-4aa6-b08b-29b6a4fb19f5\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ebc773ad-1011-40b8-9f63-74b6035d9094\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/20b64067-5fd0-49bd-ab3b-3d0f775d056b\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/87fcedf0-38c6-4234-a35d-0333cc48abb7\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2ca0ec4f-abea-4295-9ff0-a2917f9ae585\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/a8d35b22-2479-4101-96eb-7eac7fbffca6\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b3f11d36-0c90-48bc-8e1f-50a2a3515b1b\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d6298761-f66b-49c3-9c5f-91279e6e0379\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/577d959b-d540-4f93-9e74-b78b2cdafb29\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ff1e2574-3310-41ca-91e7-73c7ba4e0a80\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ee58eb4e-6da5-4df8-8032-080883099f8a\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/f59b8fc2-f69b-444c-9dbc-e87c632a99fb\",\"moduleSequenceNumber\":719425},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/08e3004b-23e5-4628-9894-9dd92c127a38\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0c8d5c4c-9201-4a7a-a9e0-42b79a18cdee\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1b0a94e2-fcd1-4953-9968-a32b5ba7a52e\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/acbf8788-cb30-4ca1-9aff-4c9a5bbd4240\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d4466ab8-f8bb-4b48-a791-49e6db08e444\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/eac2b8e0-ddbb-40ce-bcb1-f49a040aedae\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c531818f-2218-4af3-8b1f-5151579587bc\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1d7e6f1d-909a-4339-8868-5e1f5c52361b\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c90310f1-530c-49a3-ae71-6b27fe66e580\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ad6c224d-da7e-4811-8574-a6e0edc0a5ad\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d902eec0-1a77-44b1-ab66-188783cccf7a\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/11da031e-7f05-454b-82af-8f4005463ae0\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/413dd005-c291-473d-ab43-431769402b61\",\"moduleSequenceNumber\":719424},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e7b726e5-27b1-47a6-9c11-c0b772dc7c75\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3cc011c4-368c-44c8-8bf3-574c30ca9ccd\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a22e2774-af63-4c3c-a2bd-940ef10fdab2\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dd05931c-fa00-4ec9-afdc-c175dce08c5a\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ee7bfc75-9a89-4cfd-bef8-a6c26545244c\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/23b765d0-5f20-4e02-a0e5-87e9e2ab90c9\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e3a73579-5d06-45ab-93d1-fc61c1d8a1eb\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4227da5f-ab15-4de6-8899-c3a0c1250b06\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8375941b-f2d6-4282-aad1-1d943c15bf79\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3ab3490f-2a9c-41b7-a2f9-92149db191fd\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/188c1467-d6aa-4ae7-b71f-f32591bdcc6d\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a2bfd6c5-35e0-4387-a0c3-474e16972f95\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/39b68751-c260-440c-b210-3236d06cb648\",\"moduleSequenceNumber\":719421},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a9e1a448-7048-493a-b6ee-933349e9f171\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1e8822c4-7ef8-4205-9870-e2e88bbbd033\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c3917195-af4c-4b38-b77d-e46523295954\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ec4b2492-ed6e-4a2d-ab8f-d861180f8ff7\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/70261306-abc3-42ef-a468-b1b82fbdb4b0\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7e3202ba-e4b3-4eef-a5c7-c82f9fceeb7f\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ce9e8381-f379-441c-913e-643693b0671d\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c84e216c-1029-45df-84cc-f3182331f849\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/01ce4418-1ea9-4abd-9135-ac15f2a645c4\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/144b9e2d-617b-436c-8860-378f275aa59c\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/9a47dc97-9166-40d6-baa3-2258d208557e\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/843adb01-aad9-4c1e-b589-02b273190718\",\"moduleSequenceNumber\":719413},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8822ff67-d6d5-40a6-b559-74ca52bee091\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d87b9e8e-2f6c-4529-9ec5-17fe9d13417a\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/aa904e95-58b8-4be9-b9ec-83e9ab33914d\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/6d2d992f-910b-4ef9-a846-4c4b177e49a1\",\"moduleSequenceNumber\":719400},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/235f4292-bd25-493b-aedf-b57d1bb16dcc\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/df091316-ea19-4929-8b09-c99ead1055a7\",\"moduleSequenceNumber\":719427},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5fcb8f59-e5c8-4dd0-af8a-2776972c6387\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a38e1946-c87e-4e49-b777-d226777681cc\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0de591f7-b9b6-4254-a0ff-220dabbf6a1f\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1e1275ba-dfa3-49bc-b893-77825fcac36b\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9d0d8496-9515-4c5a-bd8d-820c4fb4e6b8\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3f858a47-6f98-4eda-b6e8-2f5f63c7a99a\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e0682073-f803-4574-864d-4f9012eb7c3a\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/29b85f84-4405-4d95-b9c2-3b1949fba042\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/badc95b3-4980-4983-825b-3d891cc633c6\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/22a63e9b-3522-4262-b81d-20e62368af88\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/07405e68-2910-41c0-bced-005bd342b17d\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/eccf980d-e791-4d4b-a54b-cc055f68e1a2\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/2b3fe215-f129-4e91-99a2-9db6f6c126ae\",\"moduleSequenceNumber\":719421},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/22cf00ec-cd45-497b-9dbf-ef166ea32c9b\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fbfea76b-780b-4727-ae81-b1ed4d290e2d\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/026d7afe-af75-4103-b94f-c33340fbef95\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bd4a1cc3-14a0-42c4-8e4f-5ad6e595a91d\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2c2d2d5a-5e70-49aa-b3a1-f9f71a52c1fe\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cfe3202e-50f6-47ed-818b-04ee2685ec7e\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c4c435c6-646f-4e45-a9ae-bdca8d2beda5\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/46869837-b313-4cb5-8024-6c7ced56d050\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3043916e-63db-4a3b-a5a9-41f15a4d5234\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b9875ab4-f56a-4a41-9003-198b15061aa6\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/d7cefd63-7a69-4d6b-a11c-8445f0407897\",\"moduleSequenceNumber\":719418},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e5ab3d6c-e15d-414e-98fa-c7df079662f4\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/db279894-15a2-4753-a956-e51fa44cabe7\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/af157034-14e1-417e-8c45-ad430a7f8ac4\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6c126524-8df9-41e3-bbf0-549a8ee9568c\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/20a8995d-7181-4843-926b-d3c3e9efdfba\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e0e792b5-0b0c-46dd-87a6-11f858c6cbd5\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/145207ac-b24c-4f9b-a299-fe95551dc9de\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8b66b69e-5948-435b-af50-14940130a6b1\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0f754803-dbb2-4d0d-bcbc-b998594c8a16\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f7b3d0f5-b4fc-4b9c-9a55-b81e9b57d9cc\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e27ab6ae-fb55-4d8b-9e2e-a4180a00e82c\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0c303a17-fb11-4041-a348-2b792bb5ff53\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f55c7a66-1bc4-442d-800b-097cf90bc6c1\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3c4069de-a0ff-485c-a57c-b655472e0c84\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b0d77547-acbf-4def-910a-cd1d2c9a129b\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8e483152-7b0f-4353-a72a-aaaf07a7d6b3\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f3b3aff1-5b32-4367-bbbd-79d91ff4e18e\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/081c743d-f545-4df9-8bfb-05da672eb082\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f4b6005d-7b79-4346-9f52-4b99ca8ea149\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8fac035a-62ae-4fe0-b0ae-86c8f0511afa\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a9c75bca-1057-46af-bde9-a9deacb3a9d0\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5a56bf47-1c2c-4e9c-b733-70feea8724eb\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/dfddd8b1-ad28-48b6-86d5-5e529f87f85d\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5ee6fa01-5054-4c3d-b89b-e592d5b22605\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bbdb1e68-b70c-4492-9246-d54b6a2e9958\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b03ffcf5-1537-47d2-90db-21bcaede11e3\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cda532df-d2b1-4e92-91e5-eae60a1d01e1\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/random.js\",\"url\":\"blob:https://danielyxie.github.io/73960e1f-64d1-45be-91d4-5510ef6b9ef5\",\"moduleSequenceNumber\":719423},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/70897e49-512a-4a04-a9b4-1f2d11aba407\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dbb747fe-2638-450d-8884-f10a4a2a39b5\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/gang.js\",\"url\":\"blob:https://danielyxie.github.io/e22fee81-2917-4e2d-8b6c-981ce55f1441\",\"moduleSequenceNumber\":719403},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f05d05a5-3fbb-4cd8-b8a1-ebc9b0d0cc64\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/gang/gangster.js\",\"url\":\"blob:https://danielyxie.github.io/58f2b82e-0c68-412d-87b7-40f8aa0527ce\",\"moduleSequenceNumber\":719416},{\"filename\":\"/lib/constant/gang.js\",\"url\":\"blob:https://danielyxie.github.io/e2e33a53-ed99-46c6-9d3b-8f724ef7e261\",\"moduleSequenceNumber\":719403},{\"filename\":\"/lib/gang/util.js\",\"url\":\"blob:https://danielyxie.github.io/f84844ff-a2c8-4abf-bce7-a4ba264c1137\",\"moduleSequenceNumber\":719417},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fb3b7825-8a1a-4bd8-b684-a35f80357ba0\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/67eebeae-a46f-484c-b0bd-47f70dc43c51\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/761c2a0d-3d13-48ca-9e78-805acef4f975\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a1c5a31f-4632-4145-874d-7de2f3af939c\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f2cb4bd4-a0a0-444d-8f66-7d0e33e80b2f\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a1721376-0ef6-4008-84d3-8b09926c69c0\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ade2f959-5730-4861-ab61-427de6f38cae\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/111ebdd9-c1fe-4e2c-8133-e420442145ab\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7903cc94-17b7-439a-982b-1085f5a61d9f\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/88db404f-20c4-46bb-95c4-591be128dd16\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4e8327b3-beb9-4797-9ed5-0a4a1b16b402\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d54f4a64-a375-4005-a573-57f60ac77210\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/10169a99-3a6c-49ac-aa30-a94aba487254\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bd70e3e1-3420-42d5-a3db-4483d2c90d50\",\"moduleSequenceNumber\":719406},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f730421c-f152-4f2f-ac3e-777cf4ce299b\",\"moduleSequenceNumber\":719405},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/27950e73-35ba-4e59-9d86-30fbf1d495df\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/828177f0-5f9f-4f1c-86d0-649c71020317\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ba13542a-c21d-4d64-8748-8dac5b21021a\",\"moduleSequenceNumber\":719436},{\"filename\":\"/lib/random.js\",\"url\":\"blob:https://danielyxie.github.io/7cd39db9-8db9-4c9a-9028-e8c7a28ec0ac\",\"moduleSequenceNumber\":719423},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/310bec01-1359-4ebc-8f40-d5c905d729b3\",\"moduleSequenceNumber\":719409},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4a77c47f-d069-4dbd-abf5-574c6801fc6e\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/gang.js\",\"url\":\"blob:https://danielyxie.github.io/342c7520-e1ab-41fb-a08c-91a7e0567ed8\",\"moduleSequenceNumber\":719403},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/0adb7acd-e87d-4d46-a0ee-78006e7c823f\",\"moduleSequenceNumber\":719397},{\"filename\":\"/lib/gang/gangster.js\",\"url\":\"blob:https://danielyxie.github.io/dd42eb25-6260-4de1-bb88-9e2b0f1800d8\",\"moduleSequenceNumber\":719416},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/59a5a16b-118c-4bfe-9d35-31eb6e0c77f6\",\"moduleSequenceNumber\":719414},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a54ee20c-266c-4d7d-a8e8-06dbd5080fe2\",\"moduleSequenceNumber\":719412},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cb7c787f-e8b0-4552-9908-ea5eaa4e199d\",\"moduleSequenceNumber\":719407},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/cb58f2e1-e8a8-456b-9bc9-19d980d5696a\",\"moduleSequenceNumber\":719402},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a291dd96-fe74-434a-a220-04c46da55e89\",\"moduleSequenceNumber\":719401},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c8f17041-994c-4701-984e-eda93a07c433\",\"moduleSequenceNumber\":719397},{\"filename\":\"/singularity/install.js\",\"url\":\"blob:https://danielyxie.github.io/eecf8500-3ae9-44b3-b53b-a304a45d4717\",\"moduleSequenceNumber\":724748}],\"dependents\":[],\"ramUsage\":75.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725405,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"purchaseProgram\",\"cost\":2},{\"type\":\"fn\",\"name\":\"installAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.setTerritoryWarfare\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getAscensionResult\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.ascendMember\",\"cost\":4},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getBitNodeMultipliers\",\"cost\":4},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { buy_schedule, cheapest_program } from \\\"/lib/constant/exe.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Money } from \\\"/lib/money.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { has_ai_api } from \\\"/lib/source.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Passively farm Intelligence XP.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function farm_intelligence(ns) {\\n    log(ns, \\\"Passively farm for Intelligence XP\\\");\\n    // The minimum amount of money we should have in order to purchase one of\\n    // the cheapest programs.\\n    const m = new Money();\\n    const min_money = 10 * m.million();\\n    // Must delete the program if we have it.  After purchasing a program,\\n    // delete it again.\\n    const player = new Player(ns);\\n    const p = cheapest_program.NAME;\\n    ns.rm(p, player.home());\\n    for (;;) {\\n        if (player.money() < min_money) {\\n            await ns.sleep(2 * wait_t.MINUTE);\\n            continue;\\n        }\\n        const [k, time] = purchase_schedule(ns);\\n        for (let i = 0; i < k; i++) {\\n            assert(ns.singularity.purchaseProgram(p));\\n            assert(ns.rm(p, player.home()));\\n        }\\n        await ns.sleep(time);\\n    }\\n}\\n\\n/**\\n * The purchase schedule, which tells us how many programs to buy and the\\n * amount of time to sleep between successive purchases.  Both the number of\\n * programs to buy and the sleep interval vary, depending on the amount of\\n * money we have.  The higher is our money, the lower is the sleep interval and\\n * the more programs we buy.\\n *\\n * @param ns The Netscript API.\\n * @return An array [k, t] as follows:\\n *\\n *     (1) k := How many programs to purchase.  We buy this many programs in\\n *         one go, then sleep.\\n *     (2) t := The interval in milliseconds between successive purchases.\\n *         We buy a bunch of programs, then sleep for this interval.\\n */\\nfunction purchase_schedule(ns) {\\n    // Low on funds.  Use a pre-defined purchasing schedule.\\n    const funds = ns.getServerMoneyAvailable(home);\\n    if (funds < buy_schedule.DYNAMIC_TAU) {\\n        for (let i = 0; i < buy_schedule.money.length; i++) {\\n            if (funds >= buy_schedule.money[i]) {\\n                return [buy_schedule.howmany[i], buy_schedule.time[i]];\\n            }\\n        }\\n        // Should never reach here.\\n        assert(false);\\n    }\\n    // We are filthy rich.  Use a dynamic purchasing schedule.\\n    const howmany = Math.floor(funds / buy_schedule.DIVISOR);\\n    return [howmany, wait_t.MILLISECOND];\\n}\\n\\n/**\\n * Passively farm Intelligence XP.  This script should be run in the background\\n * if our home RAM is high enough.  Every once in a while, it does an action\\n * that adds to our Intelligence XP.  The action should not require us to\\n * focus.  At the moment, the action we want to perform periodically is\\n * purchase one of the cheapest programs via the dark web.\\n *\\n * Usage: run singularity/int-farm.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    if (!has_ai_api(ns)) {\\n        log(ns, \\\"No access to Artificial Intelligence API\\\", colour.RED);\\n        return;\\n    }\\n    // Suppress various log messages.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n\\n    const player = new Player(ns);\\n    while (!player.has_tor()) {\\n        ns.singularity.purchaseTor();\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    await farm_intelligence(ns);\\n}\\n\",\"filename\":\"/singularity/int-farm.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/29b483ef-f7f1-4ca4-ba7f-236185721a2e\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a9cb7923-f6d0-4410-a0d4-9ba0c1bee346\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e3c3a4ab-813e-44af-aeb0-c7ec1b28a817\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/eb9d7348-b26c-44c2-b8b1-5f24e39a5789\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/117fc508-3db2-4ceb-98fe-d8e6f6935092\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a1b3813c-3d40-48ce-9e32-30948bf23e83\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/69784f6f-5968-4271-8ddf-ee078a62b701\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1f0a07ed-17fa-416f-9e18-24caf90a4a38\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c7bd19a7-ebcf-4822-a095-df2b135a6551\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/665ce888-9bb1-4990-93fb-aafc888f460c\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cba3bdd2-6f97-45bf-8c65-199a9b51efab\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0847179b-630b-43ca-8fbe-63563a8a3c93\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7ba46c8c-8607-4040-a75e-1136d67a2ffb\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d89dda13-0ce3-4153-a37e-698e13f4ae8d\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7a67ed07-72c5-4fbc-b664-f485f1ea3322\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d9ef415b-9519-4c80-b3c3-24f8e0a5de4e\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b666f391-1fd8-42e4-8bf6-2c9557fd2062\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d853fd2e-b30e-481f-8df6-10ff1c3e07f8\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b6e0b4af-6aaf-43e1-b1e4-d34e86da6955\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/d45600f9-1888-49a4-a474-f701094b80f5\",\"moduleSequenceNumber\":724812},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/f85bc79c-8cd1-474c-8ae6-21e7e120a635\",\"moduleSequenceNumber\":724851},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1259e9f9-55ba-4628-82a1-bdac19d6c9c6\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1fe1b5c4-691b-4b6f-a809-dbebf7c4775c\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/aad4a511-9caf-42b7-af3a-8adabbb6e1ed\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f92dfba0-2453-450b-a3c7-bc25e4b1aaf6\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/22c0994b-6f15-4da0-977b-4e5e9efaf128\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c25127b8-d8a8-4531-8103-8729dbe2c904\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1fb3514f-6901-43f1-bca4-0e6b6115719e\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/76a56acd-4e4d-4a0f-8691-cb46742d10dd\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ffb31701-5dcf-4374-9a20-1e20f1490523\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8d96effc-6f91-4a0e-b940-966fb635f7e6\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0ea2e502-3970-41cc-a6ff-08585b09fe69\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f32f3f8e-cc4f-453f-bd37-f07a304937ff\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/7f06f1d2-e988-4ecf-8949-0efc87ee297c\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/money.js\",\"url\":\"blob:https://danielyxie.github.io/542b0de3-704b-489e-b3cb-d6c392846185\",\"moduleSequenceNumber\":724835},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b023bd71-a10a-4705-acaf-9f15c293524b\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c990e27d-2b1c-4c42-989c-fe59d8b0d672\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cfc7f38d-eaaa-4681-a287-1221193b2618\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ed89376f-b0d1-44ab-a679-6ef294b18268\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/26cce9c5-7dec-4778-9b69-7c4cef9d48cf\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1b961859-d37e-4d01-9246-49d72e489118\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d36bc3fe-6cf1-4c9a-8612-ce375bc906ba\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/77f599b7-b257-4aeb-8b20-5e7add5f0c7e\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/56492141-ffe2-41b9-9c4f-ed29c178f2d4\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/03c80f86-5791-459d-b2e6-cf56da93cfc1\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/76fbaffd-70d2-4009-aafa-81494dc5b23a\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8ad7a099-d8ee-46d5-a519-919dc1f2d3a7\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/04c4e146-31b3-4e64-aceb-a0a90a4a3f4a\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3eca5bb5-f4b5-4f4b-87cf-952cf48f7723\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6f78550c-35fc-4d5a-8bd3-7fae98ffdcc8\",\"moduleSequenceNumber\":724817},{\"filename\":\"/singularity/int-farm.js\",\"url\":\"blob:https://danielyxie.github.io/8dd4a22f-badb-4a36-95e3-38d22b4d516b\",\"moduleSequenceNumber\":724924}],\"dependents\":[],\"ramUsage\":13.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725406,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"purchaseProgram\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"purchaseTor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getBitNodeMultipliers\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Money } from \\\"/lib/money.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Choose the threshold amount of money to raise.\\n *\\n * @param ns The Netscript API.\\n * @return The amount of money to raise.\\n */\\nfunction choose_threshold(ns) {\\n    // If our server is not high-end, then the threshold is the cost of\\n    // upgrading the RAM.\\n    if (ns.getServer(home).maxRam < home_t.RAM_HIGH) {\\n        return Math.ceil(ns.singularity.getUpgradeHomeRamCost());\\n    }\\n    // The default threshold.\\n    const m = new Money();\\n    return 5 * m.million();\\n}\\n\\n/**\\n * Commit various crimes to raise money.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Continue to commit crimes until our money is at least this\\n *     amount.\\n */\\nasync function commit_crimes(ns, threshold) {\\n    assert(threshold > 0);\\n    log(ns, \\\"Commit crimes to raise money and lower karma\\\");\\n    const script = \\\"/singularity/crime.js\\\";\\n    const nthread = 1;\\n    ns.exec(script, home, nthread, threshold);\\n    // Wait for the crime script to end.\\n    while (ns.scriptRunning(script, home)) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n}\\n\\n/**\\n * Whether to upgrade the RAM of our home server.\\n *\\n * @param ns The Netscript API.\\n * @return True if we need to upgrade the RAM of our home server;\\n *     false otherwise.\\n */\\nfunction is_upgrade_home_ram(ns) {\\n    const home_ram = ns.getServer(home).maxRam;\\n    return home_ram < home_t.RAM_HIGH;\\n}\\n\\n/**\\n * Run the next script in the load chain.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction load_chain(ns) {\\n    exec(ns, \\\"/chain/misc.js\\\");\\n}\\n\\n/**\\n * Commit crimes to raise some money as well earn negative karma.  Assume that\\n * our home server has 32GB RAM.  Try to keep the RAM cost of this script as\\n * low as possible.  Do not add anything to the script unless absolutely\\n * necessary.\\n *\\n * Usage: run singularity/money.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress various log messages.\\n    ns.disableLog(\\\"sleep\\\");\\n    // Commit crime to raise some money.\\n    const player_money = ns.getServerMoneyAvailable(home);\\n    const threshold = choose_threshold(ns);\\n    if (player_money > threshold && !is_upgrade_home_ram(ns)) {\\n        load_chain(ns);\\n        return;\\n    }\\n    await commit_crimes(ns, threshold);\\n    // If our home server is not high-end, upgrade the RAM on the home server.\\n    if (is_upgrade_home_ram(ns)) {\\n        log(ns, \\\"Raise money to upgrade home RAM\\\");\\n        // Upgrade the RAM on the home server.\\n        const cost = ns.singularity.getUpgradeHomeRamCost();\\n        let success = ns.singularity.upgradeHomeRam();\\n        while (!success) {\\n            await commit_crimes(ns, cost);\\n            success = ns.singularity.upgradeHomeRam();\\n        }\\n        // Reboot to take advantage of the newly upgraded home server.\\n        exec(ns, \\\"go.js\\\");\\n        return;\\n    }\\n    load_chain(ns);\\n}\\n\",\"filename\":\"/singularity/money.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e1f7c055-28dd-4b5f-aacb-d2a623952491\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/21cb6027-5ba6-4979-a8b6-66f44e59ec10\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/463f7c69-5fe1-44dc-ab8f-d546f418bb17\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ba070d7f-85a5-4294-a5d1-a6d8236510ee\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d441a36c-dcc5-4b78-b546-46a88bcab081\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/70a61c87-e358-4895-af97-e92d4744844e\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/920b283a-4bbf-43fd-9204-9174908f8c11\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/849d1dfd-0715-49b9-925b-727ea6beec7d\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2fa69c30-2cff-48cb-9f1f-c699f3b6309d\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/money.js\",\"url\":\"blob:https://danielyxie.github.io/77d16152-16a5-4ed2-be9c-e207edcc35cd\",\"moduleSequenceNumber\":724835},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/39da23f0-6572-4e3c-95ed-7466d7092c41\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/19632a6b-5f2a-4cbb-91f5-a51b4d0734db\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d900cfb3-a3b7-46e4-bf05-513d5a651dfe\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/99be4092-83e2-43a5-8644-baf4d4b92f8f\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fdd240a2-1686-44da-9dee-ccc54fd056d0\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0b3db75a-8f23-4e1a-b8b6-63acfb47fa54\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/50bf4502-6299-4f57-b9a1-451c334ccf83\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1508af44-25b7-4b0a-bc29-cc8bec065b85\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/43a5e6ad-7f8d-41b6-8fbc-1e64d41f193e\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ea93f552-54e6-4d61-a9c9-2f4fa5486762\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/852b5961-2115-40b6-b03d-2dfded158017\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/80cca1ff-35c2-44e5-b65b-bd387cce00c2\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/98ccc4c9-ec6f-42df-b899-18f6a6d5aa08\",\"moduleSequenceNumber\":724825},{\"filename\":\"/singularity/money.js\",\"url\":\"blob:https://danielyxie.github.io/ebc95a50-0638-4d45-88ac-4f73602e9d3b\",\"moduleSequenceNumber\":724919}],\"dependents\":[],\"ramUsage\":10.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725407,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getUpgradeHomeRamCost\",\"cost\":1.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"upgradeHomeRam\",\"cost\":3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { buy_all_programs } from \\\"/lib/singularity/program.js\\\";\\nimport { exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Purchase various programs from the dark web.\\n *\\n * Usage: run singularity/program.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress various log messages.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n\\n    await buy_all_programs(ns, bool.VISIT, bool.WORK);\\n    exec(ns, \\\"/chain/faction.js\\\");\\n}\\n\",\"filename\":\"/singularity/program.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/625c78ab-5764-429a-bc5a-e5ac0454d1e9\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e879632e-dbd0-4482-a8ba-73b3499058c1\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/651092a2-8598-4c6b-8b83-812e677be3ba\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/99409555-f36d-43db-a645-60824ac797a4\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9df73243-48f1-43ac-90c4-81139e1aee37\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/103224d6-1dce-4664-a04f-152130fc4b85\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0f65e01f-e842-4740-8b8a-9c504c667d6f\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a22ac7e4-a133-406a-9b12-6284af5d2d8a\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/87479326-2256-4a3b-8b9f-99946fda3777\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6591fd6c-4c0c-4776-8b1b-e824408fc208\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ad8a7510-50e0-4547-beed-f0abbd355429\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6a3173bd-c892-491f-b499-4bc77317628e\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3edf6830-033e-4115-b46e-4c7cf600a980\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/076d490e-71af-4a21-b97e-700dfa71cea8\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0b1b67f7-38c4-489e-87a1-981a01a3594d\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3754986a-0498-4aa3-9145-84ae6a844a97\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6ce7ecc7-707d-4715-bd71-9e69ad1af20b\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/80743072-8581-49ec-a7f0-9108bdeec57a\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b823f807-f1e7-43dd-b563-bdbc36353fce\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1b25764b-db9d-415b-b832-fb47c8048bd1\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/07023c50-0435-4d73-a12f-2b0ca8030647\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0a34f1b2-1bb7-48bf-b2ea-279394154016\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/32eefbf9-b762-4012-87d3-ec95028632c8\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e3da9bce-b9b4-48bf-bfdd-06be406db78c\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/25aa025a-4dbe-4a16-8a0f-c20d09b4d541\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7cda5ebe-294e-43de-b563-0bed7041b44b\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b7c59dc1-f836-45ee-b185-6da81bd03a99\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/04cc024c-f9ca-461e-9b8a-144a1f60f6c4\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ddfb7a36-d896-42de-bc52-ee4915a55b0d\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9c085054-8716-411b-9bac-9bc6613c7164\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dafa12bf-7a4e-4c14-868a-89109e5acd3f\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7f0869b7-2e55-482e-af25-7f8ba7da8a3e\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/25fa7376-cd37-4073-ae00-f1edd92fe0f4\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e37c6d43-5f1a-45d7-a5d7-a204abb9c6b9\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/131089a6-049c-47fb-b678-dfd416d62102\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bc47b1f0-f407-45cc-b70d-311cdf1b570a\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4098dd6b-b686-4638-99ac-4e810724cede\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/fe602733-8988-44b0-8a4f-df11530ccbc1\",\"moduleSequenceNumber\":724827},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5e8d36c5-db95-41c7-bef7-a9a5481e0c60\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8e523daa-5304-406a-9a94-dbc3d20d9916\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/998231fe-ff71-4a53-9138-b1b1742dc8a7\",\"moduleSequenceNumber\":724846},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f95df40d-6ac4-4ae7-955d-abb1f03cd606\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8a0f3005-f14d-43e9-b4bf-4e201ed41e8e\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/563d932f-dc77-4ac0-9a10-e0a276fde8eb\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/29670b59-2cff-4774-97cf-e98ad41f3869\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/293c536a-3221-4fbf-badb-778b1c10777c\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/55ecf343-59a9-4c46-8971-3f948a0b0235\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/29f9b5d2-2c90-42da-8d5e-63eb3b33ef8c\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a466b617-127b-4077-9cb8-c81859b61c0a\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/43839b1c-3387-444a-bf73-aa17c7ed0a76\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/aae33a69-4e27-41c9-9d8a-5a9f5ba6a81b\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/097d742d-b243-46f8-8ea0-78ddc1a3b48c\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6fe7f153-5153-4c63-8d5c-434c61c43477\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/b7677e13-963e-4503-8776-59471216fc3a\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/39357e74-920b-4671-93a5-6a4d48520330\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/92c07079-c462-4b65-91a2-66281ffb252f\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a881c0b3-8ae9-43b8-917e-48534cb1a132\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f5f16426-6974-43de-9b67-b6ea7040f8a6\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/50e3c9fe-92d2-4471-97fc-c0027f8c7eea\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/57c9cf93-e55b-469d-b990-a2f8b247d121\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/aee778b9-8d15-413e-b91b-29b678588d27\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dcc41346-e039-4c7e-91a6-21878f188e46\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b11b9248-7910-4c8e-abe3-732049d651d3\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0274023a-2882-444b-bb7a-4fed2e79461d\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/90673501-fd67-428b-9c57-75436c44c9bf\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/18c9f7a8-93dc-4bd6-b160-2b99422c0978\",\"moduleSequenceNumber\":724829},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d0a208c4-a6ae-4137-a0c7-a3d98723749d\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/076d8689-3985-4b78-8907-0aad63bd3d41\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/28b2f8cb-f3f9-462a-936f-31c126df9d36\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/4f243ed1-fafd-45d4-9998-e046d9706be5\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/088eb41c-53a6-4e2a-ab3e-cca76e3bfc80\",\"moduleSequenceNumber\":724848},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/33c42980-f13c-4706-a917-d6667b686bb2\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b90503f1-307e-4822-bf45-66cee07104b5\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/singularity/util.js\",\"url\":\"blob:https://danielyxie.github.io/68c25fca-0078-4e0f-8b41-1ca1c4bde422\",\"moduleSequenceNumber\":724847},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/21e87ca3-a8b3-41a4-8dcb-804c3fa8c00c\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ebe9ea00-e05f-4f49-954e-e473aee3c34d\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fc4552f2-0630-4164-8714-5bccd93daff6\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f5c03449-9e3a-4f66-9ee9-b1532d088d12\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d33cb685-b41a-4cf4-a642-aab3155e3a3d\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/160b7535-4570-4b6b-9f68-0d5487108f59\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8a579e8b-4a2e-49f2-a167-d7b4c182ab11\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f0d056ed-e974-40ba-955c-ee7edef0ee72\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8c27de79-af87-4e2d-ba1a-81014a0d7b86\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0eb70d5f-63eb-437c-8bb1-8c9c56446916\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/1eacc022-3476-4578-be5b-088930b57171\",\"moduleSequenceNumber\":724827},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5b90c3ca-beea-4bce-88b9-a3d2feea7d67\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/5bb45a2d-9805-41e7-b319-8986ef8cf1f0\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/e0b0db6f-3632-4046-bfcd-6b06349b44d3\",\"moduleSequenceNumber\":724846},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4aef696b-9039-4289-a007-df7e2a4799e8\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fc428c32-5114-4dc9-8a20-de6d07b44cf9\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/371c3868-61e2-4853-bc10-34bc2829a3e5\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d888fe22-4b6d-45df-9c4b-387b441210be\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/39f04060-eab3-4230-b347-598eb0bcb845\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e581657a-5ec4-4f07-b615-680df67b3371\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ba919a36-c26f-4285-be93-be06280d5c8d\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e4341a4f-bc9c-420d-9887-fa210460c188\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4a24b8bb-fb78-4802-9687-19224ff09631\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/add925b8-e94f-48bf-a072-b93fc7458b0f\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5a55eefb-eabf-4837-87b4-bcd8207d45d7\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6cb2e7c8-5fe1-4abd-9e7a-98efe663f694\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/abb09012-d743-4578-9dc8-f180c222e9ef\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b762a0c3-d31a-4339-8a72-07472bca7931\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bd7629c0-ccbb-450f-a25f-019bf4e6dc0a\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d71df7c0-d9cc-4b96-9468-01b8577d7e33\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5481ebca-98ea-4139-94a0-d7a925322f6b\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2ec61d6b-26de-4be5-8a64-8f190e1d4e98\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/60c3dd58-c8f6-4617-a878-f4be2ec91277\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3c40f09a-01d5-4fbd-9881-d56004eb69ef\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9f7bec4a-e7ee-49d6-a923-359827303001\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1d7895a8-df40-45b1-8c8f-facba76d4a0c\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ed410a60-f3dc-4c5d-bc1c-be7d94254c63\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/38e06082-0d93-47ed-8a4d-f113ebe50b60\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/44bbe14f-55d1-4865-b57e-ea88e8da159c\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2d0f4f6c-9f74-4efa-9546-9316703cd99d\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2466e87b-fb2c-4323-b4d1-f9a974f27a68\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/singularity/program.js\",\"url\":\"blob:https://danielyxie.github.io/3f0fdc3c-176a-4145-92a1-3d6eebfb3b78\",\"moduleSequenceNumber\":724845},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/290dc47d-238a-47b1-8071-fcab2449d87b\",\"moduleSequenceNumber\":724813},{\"filename\":\"/singularity/program.js\",\"url\":\"blob:https://danielyxie.github.io/cf3c3650-7280-4511-ad97-8b057d09b145\",\"moduleSequenceNumber\":725072}],\"dependents\":[],\"ramUsage\":30,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725408,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getDarkwebPrograms\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"purchaseTor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"purchaseProgram\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getDarkwebProgramCost\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { all_programs } from \\\"/lib/constant/exe.js\\\";\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { study } from \\\"/lib/singularity/study.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * If our home server is less than a mid-sized server, then run a script to\\n * manage our farm of Hacknet nodes as well as another script to compromise\\n * world servers.  Let each script run for a while, then kill it.  The reason is\\n * that it is likely we do not have enough RAM on our home server to allow\\n * multiple scripts to run in the background.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function bootstrap(ns) {\\n    if (ns.getServer(home).maxRam < home_t.RAM_MID) {\\n        const script = [\\\"hnet-farm.js\\\", \\\"low-end.js\\\"];\\n        for (const s of script) {\\n            assert(!ns.isRunning(s, home));\\n            exec(ns, s);\\n            await ns.sleep(wait_t.DEFAULT);\\n            ns.kill(s, home);\\n        }\\n    }\\n}\\n\\n/**\\n * Create a program.\\n *\\n * @param ns The Netscript API.\\n * @param program A string representing the name of the program we want to\\n *     create.\\n */\\nasync function create_program(ns, program) {\\n    // Sanity checks.\\n    assert(program.length > 0);\\n    assert(is_valid_program(program));\\n    // Do we already have the program?  We can have a program without meeting\\n    // the Hack stat requirement to create the program.  A number of\\n    // Augmentations allow us to start with various programs after a soft reset.\\n    if (has_program(ns, program)) {\\n        return;\\n    }\\n    // Ensure we meet the Hack stat requirement for creating the program.\\n    const threshold = hack_requirement(program);\\n    assert(threshold > 0);\\n    assert(ns.getHackingLevel() >= threshold);\\n    // Work on creating the program.\\n    assert(ns.singularity.createProgram(program, bool.FOCUS));\\n    while (ns.singularity.isBusy()) {\\n        assert(!has_program(ns, program));\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    assert(has_program(ns, program));\\n}\\n\\n/**\\n * The Hack stat requirement for creating a program.\\n *\\n * @param program We want the Hack stat requirement for this program.\\n * @return The Hack stat required to create the given program.\\n */\\nfunction hack_requirement(program) {\\n    const prog = all_programs();\\n    return prog.get(program);\\n}\\n\\n/**\\n * Whether we have the given program on our home server.\\n *\\n * @param ns The Netscript API.\\n * @param program A string representing the name of a program.\\n * @return true if we already have the given program;\\n *     false otherwise.\\n */\\nfunction has_program(ns, program) {\\n    assert(is_valid_program(program));\\n    return ns.fileExists(program, home);\\n}\\n\\n/**\\n * Whether the given name is a valid program.\\n *\\n * @param name A string representing the name of a program.\\n * @return true if the given name is a valid program;\\n *     false otherwise.\\n */\\nfunction is_valid_program(name) {\\n    assert(name.length > 0);\\n    const program = all_programs();\\n    return program.has(name);\\n}\\n\\n/**\\n * Raise our Hack stat enough to allow us to create various programs.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function study_and_create(ns) {\\n    const program = [\\\"BruteSSH.exe\\\", \\\"FTPCrack.exe\\\"];\\n    for (const p of program) {\\n        log(ns, `Raise Hack to create program ${p}`);\\n        await study(ns, hack_requirement(p));\\n        await bootstrap(ns);\\n        log(ns, `Create program ${p}`);\\n        await create_program(ns, p);\\n        await bootstrap(ns);\\n    }\\n}\\n\\n/**\\n * Study to raise our Hack stat so we can create various programs.\\n *\\n * Usage: run singularity/study.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n\\n    await study_and_create(ns);\\n    // The next segment in the load chain.\\n    exec(ns, \\\"/chain/money.js\\\");\\n}\\n\",\"filename\":\"/singularity/study.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/240b52ce-c343-4068-b9c9-202eae5f1757\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ce9b13a4-e56d-45a7-884b-f5ba527805c4\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d24c5c40-02b6-4983-9580-65500a27493a\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d05714ab-92fe-4e93-b549-4f17c384a172\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2b5ff153-e7b1-4a02-bd0f-4379f700b0ea\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/79a33df5-7649-4403-b4df-8de8449d80b1\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bddaa1d7-3523-4e4a-8c94-d0f6b5f1afa1\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e75031c2-82c9-47a7-8725-612b9fc48579\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/33fd6113-2f6a-402c-a458-0228eaa6d90f\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/eae35aa8-8602-4868-805f-157bf595404c\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/11c92602-ef82-4d78-b11f-7c09d946d36d\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5727b5d0-c954-435f-990e-aeecdf87fae4\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9838d946-22d7-41d5-8806-7914f4db5e1f\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7d9f5db7-da68-44c9-aef8-663e86036d23\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4467fcab-cdb9-47bd-8c69-f3f481d2b65c\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/73c7fe0f-2677-4334-a922-2219b239e5ef\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/926a6925-293c-4896-bb4a-8e4e6493fce8\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c1bffaff-6c41-4b78-9d3b-1f6f8edea010\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/68b2dab8-f33b-45fa-ba63-5f118980077c\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/8a82a7e4-30f0-41f4-b9e9-725fa3dde123\",\"moduleSequenceNumber\":724827},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c8f8bb22-ae2f-4c3f-bdff-9e9a46387f64\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/5df440f8-75a7-435b-9b5b-452d247202eb\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/cbe81403-57f6-44e3-8bc0-dcce33d21d2b\",\"moduleSequenceNumber\":724846},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ddf88586-a7fd-4138-8679-57b6079208ad\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0b4f3292-f8e4-4ea6-a058-140faf82cd5c\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9dbb6e2e-a3d6-4bb4-81ce-3faf9d95fa65\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/21ae28e0-e798-45cb-8015-22e655435fd8\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2c3a615a-3032-48e6-be1b-a5d12f22cfc0\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d8cd4936-2079-4c2f-ad60-9c87e5c868cd\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5ccb1ab5-3525-41c3-bd8a-fede85ecf596\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3cc47e7d-f36d-432f-9132-b6ddb05a9d28\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/14248fb1-6675-4508-9382-d55c2f6c822c\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a78203d7-9a2d-4b9d-bfa2-ab380345f532\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/2f253697-dec2-401e-9eee-cb7a7f1d7d66\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f2bbfbea-c162-4c59-96e1-2f6354f882af\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/172083c3-8526-4cff-ab1e-27acb6e8d731\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/708e7b38-8117-47a8-955b-1fd942881575\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/1b18a5a1-25f1-4452-88e3-743fb3ff19d6\",\"moduleSequenceNumber\":724813},{\"filename\":\"/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/bb2030c6-a38c-4db3-82f5-95c4318bcb20\",\"moduleSequenceNumber\":724912}],\"dependents\":[],\"ramUsage\":19.65,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725409,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"createProgram\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { cc_t } from \\\"/lib/constant/sleeve.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { has_sleeve_api } from \\\"/lib/source.js\\\";\\nimport { Sleeve } from \\\"/lib/sleeve/cc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Purchase Augmentations and install them on our sleeves.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction buy_augmentation(ns) {\\n    const player = new Player(ns);\\n    const sleeve = new Sleeve(ns);\\n    sleeve.all().forEach((i) => {\\n        const aug = sleeve.cheapest_augment(i);\\n        if (aug.length === 0) {\\n            return;\\n        }\\n        const [name, cost] = aug;\\n        if (player.money() > cc_t.COST_MULT * cost) {\\n            sleeve.buy_augment(i, name);\\n        }\\n    });\\n}\\n\\n/**\\n * Assign sleeves to commit a specific crime.  There are two reasons why we do\\n * this:\\n *\\n * (1) Raise some money.  This is especially important early in a BitNode when\\n *     our stats and money are low.  It is likely that we need to raise money to\\n *     upgrade the RAM of our home server, thus allowing us to run multiple\\n *     scripts at the same time.\\n * (2) Lower our karma.  In a BitNode other than BitNode-2: Rise of the\\n *     Underworld, our karma must be at -54,000 or lower to meet one of the\\n *     requirements for creating a gang.\\n *\\n * @param ns The Netscript API.\\n * @param crime Assign sleeves to commit this crime.\\n * @param tau Commit the given crime for this amount of time (in milliseconds).\\n *     Must be non-negative integer.\\n */\\nasync function commit_crime(ns, crime, tau) {\\n    assert(tau >= 0);\\n    log(ns, crime);\\n    const sleeve = new Sleeve(ns);\\n    sleeve.all().forEach((i) => ns.sleeve.setToCommitCrime(i, crime));\\n    await ns.sleep(tau);\\n}\\n\\n/**\\n * Retrain the combat stats of our sleeves.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function retrain(ns) {\\n    // Train Dexterity and Agility by shoplift.\\n    const sleeve = new Sleeve(ns);\\n    let trainee = sleeve.all().filter((i) => !sleeve.has_shoplift_threshold(i));\\n    if (trainee.length > 0) {\\n        sleeve.shoplift(trainee);\\n        while (!sleeve.graduate_shoplift(trainee)) {\\n            await ns.sleep(wait_t.SECOND);\\n        }\\n    }\\n    // Train combat stats by mugging people.\\n    trainee = sleeve.all().filter((i) => !sleeve.has_mug_threshold(i));\\n    if (trainee.length > 0) {\\n        sleeve.mug(trainee);\\n        while (!sleeve.graduate_mug(trainee)) {\\n            await ns.sleep(wait_t.SECOND);\\n        }\\n    }\\n    sleeve.homicide(sleeve.all());\\n}\\n\\n/**\\n * Assign sleeves to shock recovery.\\n *\\n * @param ns The Netscript API.\\n * @param tau Be in shock recovery for this amount of time (in milliseconds).\\n *     Must be a positive integer.\\n */\\nasync function shock_therapy(ns, tau) {\\n    assert(tau > 0);\\n    const sleeve = new Sleeve(ns);\\n    const to_therapy = sleeve.all().filter((s) => sleeve.is_in_shock(s));\\n    if (to_therapy.length > 0) {\\n        log(ns, \\\"Shock recovery\\\");\\n        sleeve.shock_recovery();\\n        await ns.sleep(tau);\\n    }\\n}\\n\\n/**\\n * Assign sleeves to synchronize with the consciousness of the player.\\n *\\n * @param ns The Netscript API.\\n * @param tau Synchronize for this amount of time (in milliseconds).  Must be a\\n *     positive integer.\\n */\\nasync function synchronize(ns, tau) {\\n    assert(tau > 0);\\n    const sleeve = new Sleeve(ns);\\n    const to_sync = sleeve.all().filter((s) => !sleeve.is_in_sync(s));\\n    if (to_sync.length > 0) {\\n        log(ns, \\\"Synchronize\\\");\\n        sleeve.synchronize();\\n        await ns.sleep(tau);\\n    }\\n}\\n\\n/**\\n * Manage our sleeves via an update loop.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function update(ns) {\\n    buy_augmentation(ns);\\n    await retrain(ns);\\n    await commit_crime(ns, crimes.KILL, 10 * wait_t.MINUTE);\\n    await synchronize(ns, wait_t.MINUTE);\\n    await shock_therapy(ns, 2 * wait_t.MINUTE);\\n}\\n\\n/**\\n * Mange our sleeves.\\n *\\n * Usage: run sleeve/cc.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Sanity check.\\n    if (!has_sleeve_api(ns)) {\\n        log(ns, \\\"No access to Sleeve API\\\", colour.RED);\\n        return;\\n    }\\n    // The update loop.\\n    for (;;) {\\n        await update(ns);\\n    }\\n}\\n\",\"filename\":\"/sleeve/cc.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7027ce83-cd09-4c27-8c11-d1b4cbfedce8\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a716b6aa-557a-4070-b9f3-36ac7a9a0b6f\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/92e77d39-bcf0-40f1-9cf1-09b6cb9536f0\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/26fad37b-c360-4ebf-8d4d-31742424794b\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d9b7ce53-92d0-41be-a05e-85959cb2931f\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/02789212-3c9b-4758-9a8b-189d5d81f472\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/06ee6457-dd2a-4816-8b78-17962fe5b696\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bbb343eb-15f2-47d2-b7a2-06c87fcb4824\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fa4a8b0e-3b8e-4412-b886-f7d60d444d06\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3c5d0cd5-8fcf-4834-bad9-f85ecc02d113\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fb259959-ffae-4ba2-a39b-02612faf8191\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e5b15c9a-fb91-4c25-acf1-8aef0fc0ec28\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/82a96389-ecfd-4e38-bc4b-5f852c52ce85\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b04ed64a-83c3-4e24-a7ae-9938b6fb68a2\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/dc7433da-3d2a-4910-b034-a58279f10925\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/aff0b521-ea02-4968-8e38-ad5b1ef01f35\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7d1479c5-6189-46ac-9809-b5cb51115e4e\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/adf3a18b-32aa-4744-a51e-5c9c4b41eb1b\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/sleeve.js\",\"url\":\"blob:https://danielyxie.github.io/7fa70eda-36e4-4d3f-bda7-89c17f8b10be\",\"moduleSequenceNumber\":724826},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/93eaedee-a07f-46ea-bfe1-3d8e2853dd43\",\"moduleSequenceNumber\":724816},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/28059c3d-0406-42f8-b88d-457aba5e73f4\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e9cf4b01-a635-424e-822f-f38ccade3e59\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/97bbf1fb-db66-4519-a4ac-9d13ebe08392\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/591c3b78-2d8c-4bf3-8719-a16ee094b1e8\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8189c129-752d-4caa-9d88-08b2c00bc165\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/57789d51-117f-49af-ab42-7e58185c5947\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/37c375e4-6601-4790-bcb5-6f9a718e5574\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bd49efbd-c2c6-439d-a6b6-3169f0f5c3ed\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b0d1341c-afb8-45b2-8175-0c778960caf9\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9bb0782c-fed0-4731-b4fb-40716a13b3c7\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/f60fde70-8057-4164-a5da-9837330cbba9\",\"moduleSequenceNumber\":724810},{\"filename\":\"/lib/sleeve/cc.js\",\"url\":\"blob:https://danielyxie.github.io/69e02de4-36d8-4b83-af93-eef5a818c065\",\"moduleSequenceNumber\":724849},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/557abeea-e280-4589-8c3e-229e8f80a78a\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ea28cf7a-f1b6-4a1b-b85a-4745729feb44\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d74425e3-f66a-4251-86dc-05188d5bc4a0\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c8bfa6ac-1e90-4ced-91ec-c58756cd13b6\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/da5fbd0a-6686-4661-b861-d4a1d20bc251\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b8ea4b00-10cd-4264-bc2d-538b2de845e5\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c88dd5e5-512a-426e-8d01-9aee428e575b\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3de929b6-af6b-4d99-a138-af4aadbd020e\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/21678fdd-7a64-4e33-a415-2c0f861f1de4\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b6d7eefc-bec9-4180-a5dc-9ce268ab6bc8\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/603a3dab-994c-4fbf-a0e4-d75342663bd0\",\"moduleSequenceNumber\":724812},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/66a671e3-855f-4eaa-87ff-3728ee836c48\",\"moduleSequenceNumber\":724851},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9af86943-5375-48d7-b889-59ddc2ab48db\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b549c544-4701-4b00-ba88-1eabdb239307\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4e4005a9-1b68-410a-bd10-77f332b6f5ed\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/efb3496e-735d-4d4b-96d7-047dbf2cad45\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2bbaa239-a9f9-4977-bc3b-10073e747701\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e5a401b0-8218-4f07-90f8-6919e517a8ff\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/805759b0-7706-4bfb-9631-167dfb30dc42\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4e678f5e-987b-495c-802b-4469baf1fc4c\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1d15d25d-8ee7-43d5-9f28-72acd6459f5d\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/db106e8f-e378-4293-911e-3a99423505a3\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/25f81cfb-2e78-47ee-bd4b-cbf4e7e513f6\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1eee7c4f-9376-4f19-a7d1-0e6239d48a0d\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/2a08fa7d-10bd-4e3f-96af-3ec452bc1811\",\"moduleSequenceNumber\":724837},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fe4d935b-f6d4-4536-a4af-019eb3d20c7f\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dcee5a44-6bd1-434a-a61d-de5bcf67ce93\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2dc37d54-3e71-4f9a-84e7-1d81c18f77f7\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e723dbc7-7110-407a-809c-fb9709b022de\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/537f08f1-bb3e-4cc2-be0a-050573182451\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/71fbbe85-23f1-42a3-b167-1efacbb92230\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/67916664-1575-47d5-a65f-c1629adc28d1\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8bab89d8-a85b-4315-a6f6-1de1f0949bf7\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/aac285db-0929-4e21-8af7-6db02f06511d\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d031bce9-b133-4e9b-b363-be808e1f9a7a\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/331320a2-137e-452d-b8bb-5e7c8e8a7fd7\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a0199945-423b-4e80-96e3-2adbb861f2af\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/sleeve.js\",\"url\":\"blob:https://danielyxie.github.io/84edaa80-87e3-40ae-8ca6-3b9667df2b80\",\"moduleSequenceNumber\":724826},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a9e2ff90-38d7-4627-8217-25b36f5482d2\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/03eb5318-c464-4047-b356-9a17ea71afd5\",\"moduleSequenceNumber\":724816},{\"filename\":\"/sleeve/cc.js\",\"url\":\"blob:https://danielyxie.github.io/cd681a1f-71f8-41d7-a572-0ab6bf109259\",\"moduleSequenceNumber\":724925}],\"dependents\":[],\"ramUsage\":37.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725410,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"sleeve.setToCommitCrime\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"sleeve.getSleeveStats\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getNumSleeves\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.purchaseSleeveAug\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getSleevePurchasableAugs\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.setToShockRecovery\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.setToSynchronize\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_sleeve_api } from \\\"/lib/source.js\\\";\\nimport {\\n    all_sleeves,\\n    has_mug_threshold,\\n    has_shoplift_threshold,\\n} from \\\"/lib/sleeve/util.js\\\";\\n\\n/**\\n * Assign sleeves to commit a specific crime.  There are two reasons why we do\\n * this:\\n *\\n * (1) Raise some money.  This is especially important early in a BitNode when\\n *     our stats and money are low.  It is likely that we need to raise money to\\n *     upgrade the RAM of our home server, thus allowing us to run multiple\\n *     scripts at the same time.\\n * (2) Lower our karma.  In a BitNode other than BitNode-2: Rise of the\\n *     Underworld, our karma must be at -54,000 or lower to meet one of the\\n *     requirements for creating a gang.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function commit_crimes(ns) {\\n    // Shoplift.\\n    log(ns, crimes.SHOP);\\n    all_sleeves(ns).forEach((i) => ns.sleeve.setToCommitCrime(i, crimes.SHOP));\\n    while (!has_shoplift_threshold(ns)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    // Mugging people.\\n    log(ns, crimes.MUG);\\n    all_sleeves(ns).forEach((i) => ns.sleeve.setToCommitCrime(i, crimes.MUG));\\n    while (!has_mug_threshold(ns)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    // Homicide.\\n    log(ns, crimes.KILL);\\n    all_sleeves(ns).forEach((i) => ns.sleeve.setToCommitCrime(i, crimes.KILL));\\n}\\n\\n/**\\n * Assign sleeves to commit crimes as a means of earning some money in the early\\n * stages of a BitNode.\\n *\\n * Usage: run sleeve/money.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    ns.disableLog(\\\"sleep\\\");\\n    if (!has_sleeve_api(ns)) {\\n        log(ns, \\\"No access to Sleeve API\\\", colour.RED);\\n        return;\\n    }\\n    log(ns, \\\"Sleeves commit crimes to raise money\\\");\\n    await commit_crimes(ns);\\n}\\n\",\"filename\":\"/sleeve/money.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/86270332-6b39-49a0-a5d7-ca2e84560a8a\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8180dd2a-3d75-4b72-b75e-c409b1fab4de\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9bcb2508-c99d-44e4-935c-1079f108a911\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/997bd1a5-dea2-4643-95af-c29cf1d207ac\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ecef4d08-97a3-4502-92da-945c44ef5ad4\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5e75a92d-c266-4d45-9864-cf62271c46ce\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7bad702b-bc4e-4b8c-b32a-726eab024a62\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/86142f86-4a1e-46c2-99f8-feb44e5bfb8b\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7fd30d11-5d51-4bf7-978d-26716818414e\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/sleeve.js\",\"url\":\"blob:https://danielyxie.github.io/2a916288-412e-4f2a-9f30-3936b3afce96\",\"moduleSequenceNumber\":724826},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7c651aaa-528b-4ae4-ac3b-6518edfb94db\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/36eb0bfa-d896-4d8e-ab84-2a3584c04103\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f33af3e7-cd63-4807-ad1a-cd474877c169\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cb28017f-5dbe-4dac-90c0-0d8a2bcb1637\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c8c995a1-9a80-46d9-989e-701a8aa8b336\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8761b222-fd83-48c3-8565-583f65a88f05\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1dc7b94e-cfff-43ad-9998-99f6fe9223fb\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/94b92612-a8f1-4ee1-923c-72eb1e6f2bec\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d84ea3a2-341c-4abf-ac82-c0667bcca44c\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fd7501e7-58e2-439a-a4d3-4f77f40883e6\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/614eea2d-8b12-4da0-afe3-6f24e0d58379\",\"moduleSequenceNumber\":724810},{\"filename\":\"/lib/sleeve/util.js\",\"url\":\"blob:https://danielyxie.github.io/9dd05e3a-2133-4836-943c-d0b932a63b98\",\"moduleSequenceNumber\":724850},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/08d7a9ba-0f1e-4d98-b7f7-6765c568ca4d\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/40f29711-6dee-4065-916c-352628d05bda\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1629409d-041b-4933-b807-d4fc3f484105\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cee7b5e0-3c01-4212-b9f2-c5b3c297f313\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c515ded7-f7ba-4a3e-9cae-965e1893a8bd\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3f540729-644a-4f75-984e-1a08cc47c838\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/821b65b5-0a18-4b83-b576-cf13efe271cf\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/178c844e-b181-4322-89e3-9896e80e476c\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bdc1e047-cc3c-4eb6-957f-eab9613d2d17\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a0ab0764-8cf8-4ab7-baa3-48ad16cfabde\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/186a921c-17af-430e-8b5c-26528a1a3b2d\",\"moduleSequenceNumber\":724812},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/5bd4e57f-de45-4093-9058-e77a24615fbf\",\"moduleSequenceNumber\":724851},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/33cd5eeb-151f-4e6f-8b36-4fcf98aa88d3\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4605a5e2-0b45-42da-89bd-d48811730ea8\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2d7bdd87-27fc-40d2-8ca0-13d6350ae3f6\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0b05bc19-3166-4213-8f3e-7520107e637f\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/292dad8d-253d-4679-a200-e84067770c15\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cb32f1b6-a452-438e-aa58-336f8a542b03\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/aa2cfef4-cc0f-4707-9b69-5eb73530ac16\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/59b7d737-88f7-47a0-896b-aa701e7b232f\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/27e92a8c-cd09-4342-9604-f05d01e339b9\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0a6d529a-cf1b-4b86-a730-64dde53717ed\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/183799b5-9e1c-46cd-926f-2f1c73ca0a44\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6485845a-d6bf-4590-943d-22dca537217a\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/05a10ccd-1b8c-4617-8671-45be38f8bbdb\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/d502636e-310e-4627-8894-e148f60480e3\",\"moduleSequenceNumber\":724816},{\"filename\":\"/sleeve/money.js\",\"url\":\"blob:https://danielyxie.github.io/f579997e-55ab-4ce0-9229-8d14a53b7271\",\"moduleSequenceNumber\":724918}],\"dependents\":[],\"ramUsage\":19.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725411,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"sleeve.setToCommitCrime\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getNumSleeves\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getSleeveStats\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { course } from \\\"/lib/constant/study.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { all_sleeves } from \\\"/lib/sleeve/util.js\\\";\\nimport { has_sleeve_api } from \\\"/lib/source.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Determine the university at which a sleeve should study.\\n *\\n * @param ns The Netscript API.\\n * @param i The index of a sleeve.  Must be a non-negative integer.\\n * @return A string representing the name of the university where a sleeve\\n *     should study.  An empty string if a sleeve is located in a city that does\\n *     not have a university.\\n */\\nfunction choose_university(ns, i) {\\n    assert(i >= 0);\\n    const { city } = ns.sleeve.getInformation(i);\\n    const { uni } = cities[city];\\n    return uni ?? \\\"\\\";\\n}\\n\\n/**\\n * Assign sleeves to study at a university.\\n *\\n * Usage: run sleeve/study.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Sanity check.\\n    if (!has_sleeve_api(ns)) {\\n        log(ns, \\\"No access to Sleeve API\\\", colour.RED);\\n        return;\\n    }\\n    // Study at a university.\\n    log(ns, course.CS);\\n    all_sleeves(ns).forEach((i) => {\\n        const uni = choose_university(ns, i);\\n        assert(uni !== \\\"\\\");\\n        ns.sleeve.setToUniversityCourse(i, uni, course.CS);\\n    });\\n}\\n\",\"filename\":\"/sleeve/study.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c0791b39-8d46-4551-9f53-d795bafad099\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/74e2b711-c08f-48d6-a82e-d2a6c40789ce\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e8fd8a85-956d-4a02-88c4-3873dd5b77a2\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b40d707c-7934-4130-96a1-462316712af5\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4da7c576-8a58-4ac0-b316-f651237b9423\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/640676e6-05d3-4e34-91ea-65aa52a22f83\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0687794b-6e5c-4434-bddc-cb71a15fe0ae\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9bce988d-9ac8-4fbc-8dc8-90e77ba12404\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/38d94bd3-164f-4d58-8736-6ed39c60df0b\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/584ab925-b4bd-4195-952d-54670e3b48de\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e2d0c0ba-d1ab-4c80-ad12-3e526938f729\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e74e4664-8b39-484f-9c63-e0e140fe28da\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3517288d-43c0-42bf-9f3e-49c4ca759469\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7d585621-8667-422f-baef-e7060c82a7ab\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7e48b6b1-a0be-4a25-a451-b7b48b83c5be\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/71e9cfd4-cd4d-4cd2-b23f-0f91f6307765\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8d5fd6fb-4668-411e-8508-2719f7cdee2d\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/27614f43-2819-4840-9464-1405de799306\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9b5992de-46e8-4798-a118-ef6d948b46e5\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/e2938301-9fc8-4f6d-962a-972f87910aea\",\"moduleSequenceNumber\":724812},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/5feb8b48-905d-4aa8-9e20-9743d5f4e940\",\"moduleSequenceNumber\":724851},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0a59512c-7eb3-4c47-86f2-fa2a84aa162d\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0af16f26-6dbf-4b3c-b619-6efbbb7e6751\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/01d5328b-f6c3-4f9b-b2fb-61a8c79d7221\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/53655023-a4e0-49b1-9a7c-c330deba30a1\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8a7c4be2-8ee9-423c-8dd0-229d78b739e4\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/39be390e-4ed1-4aed-be45-e2a79f690da9\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7e795973-9807-435f-9764-b5dd17abf06a\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f335e5b3-83be-4785-8d3a-d465d2039018\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/db634f69-c4df-437e-ba94-8e5979824e64\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/sleeve.js\",\"url\":\"blob:https://danielyxie.github.io/e2f8f7d4-5192-4f36-ab46-16be8f0acdad\",\"moduleSequenceNumber\":724826},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8d172f64-84f7-4f45-839f-524814500c26\",\"moduleSequenceNumber\":724813},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e14eaee6-9d73-4478-9ebb-47c2e6330859\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f873c53f-b124-402d-b309-14883cb7c5b4\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dcee951e-168a-4eb5-8811-ae1bb6bfb9fa\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a029be40-5620-4757-bc16-d65599f5590f\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/77ddd80d-636a-4660-89d6-74e2487a97c8\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/589cb298-abd0-4ab7-9cb5-1311f540a383\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/756b1d5b-2cc2-4a98-b2af-e24b081c13d4\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5618a5de-7a00-4baf-bc3e-7251fadad70a\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c7dedb2f-887f-45a4-89b6-0d5ed281a9e1\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/18b9a950-8adb-401c-9f17-38a6e109f7f8\",\"moduleSequenceNumber\":724810},{\"filename\":\"/lib/sleeve/util.js\",\"url\":\"blob:https://danielyxie.github.io/feeb9353-2fba-4507-9964-2bfbdd2b1bc7\",\"moduleSequenceNumber\":724850},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0bea834d-e29f-4e9f-9e68-1a90720b463f\",\"moduleSequenceNumber\":724830},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7994a7b2-f408-4fd3-9069-99cf53f71f5a\",\"moduleSequenceNumber\":724828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7d0cb5c6-df43-4cac-b8c9-a6817515d8a3\",\"moduleSequenceNumber\":724825},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a951fd90-0165-4f9a-98e5-46a652beb480\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f0645c07-5282-4691-bced-18d1d2825ae0\",\"moduleSequenceNumber\":724822},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/afd64b93-208c-4ade-a2dd-90989266cd27\",\"moduleSequenceNumber\":724821},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ac5d1334-8aec-4670-9d38-a8c2c5468054\",\"moduleSequenceNumber\":724818},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1b0aec5a-d4ec-4a30-a9d3-0b4c324340c0\",\"moduleSequenceNumber\":724817},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ec82d4a8-20db-44c2-aa4f-65bd08aefc5b\",\"moduleSequenceNumber\":724852},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9915e905-72b8-48cc-9903-970e54577b7b\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/e358b4d9-549e-4f7a-a702-c57d6362db71\",\"moduleSequenceNumber\":724834},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/27af9965-a309-4f67-806c-6068a457e5d9\",\"moduleSequenceNumber\":724827},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3b9f7b35-3be5-494d-9fd8-364d8afafa1a\",\"moduleSequenceNumber\":724823},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a5774f96-f149-4a19-84d8-3dd79156b474\",\"moduleSequenceNumber\":724822},{\"filename\":\"/sleeve/study.js\",\"url\":\"blob:https://danielyxie.github.io/b4b61b23-94bc-41af-8812-a7efb669a07a\",\"moduleSequenceNumber\":724898}],\"dependents\":[],\"ramUsage\":19.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725412,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"sleeve.getInformation\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.setToUniversityCourse\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"sleeve.getNumSleeves\",\"cost\":4},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Commit a crime for a given amount of time.\\n *\\n * @param ns The Netscript API.\\n * @param crime A string representing the name of a crime.  We want to commit\\n *     this crime.\\n * @param howlong The amount of time in milliseconds.  We want to commit the\\n *     given crime for this amount of time.\\n */\\nasync function commit_crime(ns, crime, howlong) {\\n    // Sanity checks.\\n    assert(is_valid_crime(crime));\\n    assert(howlong > 0);\\n    // Commit the given crime.\\n    const end_time = Date.now() + howlong;\\n    ns.singularity.commitCrime(crime, bool.FOCUS);\\n    while (Date.now() < end_time) {\\n        await ns.sleep(wait_t.MILLISECOND);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * The gain in each stat.\\n *\\n * @param start An object following the format of the function player_stat().\\n *     Values of various stats before some action.\\n * @param end An object following the format of the function player_stat().\\n *     Values of various stats after some action.\\n * @param d The denominator.  Each gained stat is divided by this number to\\n *     result in an average.  For example, if d represents the number of\\n *     minutes, then the result means the gain per minute.\\n * @return An object following the format of the function player_stat().\\n *     Gained values of various stats.\\n */\\nfunction gained_stats(start, end, d) {\\n    const denom = Math.floor(d);\\n    assert(denom > 0);\\n    return {\\n        agility: (end.agility - start.agility) / denom,\\n        charisma: (end.charisma - start.charisma) / denom,\\n        defense: (end.defense - start.defense) / denom,\\n        dexterity: (end.dexterity - start.dexterity) / denom,\\n        hack: (end.hack - start.hack) / denom,\\n        karma: (end.karma - start.karma) / denom,\\n        money: (end.money - start.money) / denom,\\n        strength: (end.strength - start.strength) / denom,\\n    };\\n}\\n\\n/**\\n * Whether the given crime is valid.\\n *\\n * @param crime A string representing the name of a crime.\\n * @return true if the given crime is valid; false otherwise.\\n */\\nfunction is_valid_crime(crime) {\\n    return Object.values(crimes).includes(crime);\\n}\\n\\n/**\\n * The player's karma.  This is an Easter egg, buried in the source code of the\\n * game.  Refer to this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/NetscriptFunctions/Extra.ts\\n *\\n * @param ns The Netscript API.\\n */\\nfunction karma(ns) {\\n    return ns.heart.break();\\n}\\n\\n/**\\n * Various stats of the player.\\n *\\n * @param ns The Netscript API.\\n * @return An object as follows:\\n *\\n *     {\\n *         agility: // The player's agility.\\n *         charisma: // The player's charisma.\\n *         defense: // The player's defense.\\n *         dexterity: // The player's dexterity.\\n *         hack: // The player's hacking skill.\\n *         karma: // The player's karma.\\n *         money: // The player's money.\\n *         strength: // The player's strength.\\n *     }\\n */\\nfunction player_stat(ns) {\\n    return {\\n        agility: ns.getPlayer().exp.agility,\\n        charisma: ns.getPlayer().exp.charisma,\\n        defense: ns.getPlayer().exp.defense,\\n        dexterity: ns.getPlayer().exp.dexterity,\\n        hack: ns.getPlayer().exp.hacking,\\n        karma: karma(ns),\\n        money: ns.getPlayer().money,\\n        strength: ns.getPlayer().exp.strength,\\n    };\\n}\\n\\n/**\\n * Information on how to use this script.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction usage(ns) {\\n    const msg = \\\"Usage: run test/crime/crime.js [crime]\\\\n\\\\n\\\"\\n        + \\\"crime -- (string) The name of a crime.\\\";\\n    ns.tprint(msg);\\n}\\n\\n/**\\n * Commit a crime for a period of time, currently default to 24 hours.  Then\\n * calculate the amount of negative karma earned per minute as well as other\\n * stat gains.  This script accepts a command line argument.\\n *\\n * Usage: run test/crime/crime.js [crime]\\n * Example: run test/crime/crime.js \\\"shoplift\\\"\\n */\\nexport async function main(ns) {\\n    // Sanity check.\\n    if (ns.args.length !== 1) {\\n        usage(ns);\\n        return;\\n    }\\n    // Commit the given crime and calculate the stat gain per minute.\\n    const crime = ns.args[0];\\n    const start = player_stat(ns);\\n    const minute = 60;\\n    const n = 24;\\n    const howlong = n * wait_t.HOUR;\\n    await commit_crime(ns, crime, howlong);\\n    const end = player_stat(ns);\\n    const denom = n * minute;\\n    const gain = gained_stats(start, end, denom);\\n    ns.tprint(`Crime: ${crime}`);\\n    ns.tprint(`Duration: ${n} hours`);\\n    ns.tprint(\\\"Stat gain per minute.\\\");\\n    ns.tprint(`Agility: ${gain.agility}`);\\n    ns.tprint(`Charisma: ${gain.charisma}`);\\n    ns.tprint(`Defense: ${gain.defense}`);\\n    ns.tprint(`Dexterity: ${gain.dexterity}`);\\n    ns.tprint(`Hack: ${gain.hack}`);\\n    ns.tprint(`Karma: ${gain.karma}`);\\n    ns.tprint(`Money: ${gain.money}`);\\n    ns.tprint(`Strength: ${gain.strength}`);\\n}\\n\",\"filename\":\"/test/crime/crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":8.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725413,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Commit a crime for a given amount of time.\\n *\\n * @param ns The Netscript API.\\n * @param crime A string representing the name of a crime.  We want to commit\\n *     this crime.\\n * @param howlong The amount of time in milliseconds.  We want to commit the\\n *     given crime for this amount of time.\\n */\\nasync function commit_crime(ns, crime, howlong) {\\n    // Sanity checks.\\n    assert(is_valid_crime(crime));\\n    assert(howlong > 0);\\n    // Commit the given crime.\\n    const end_time = Date.now() + howlong;\\n    ns.singularity.commitCrime(crime, bool.FOCUS);\\n    while (Date.now() < end_time) {\\n        await ns.sleep(wait_t.MILLISECOND);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * The gain in each stat.\\n *\\n * @param start An object following the format of the function player_stat().\\n *     Values of various stats before some action.\\n * @param end An object following the format of the function player_stat().\\n *     Values of various stats after some action.\\n * @param d The denominator.  Each gained stat is divided by this number to\\n *     result in an average.  For example, if d represents the number of\\n *     minutes, then the result means the gain per minute.\\n * @return An object following the format of the function player_stat().\\n *     Gained values of various stats.\\n */\\nfunction gained_stats(start, end, d) {\\n    const denom = Math.floor(d);\\n    assert(denom > 0);\\n    return {\\n        agility: (end.agility - start.agility) / denom,\\n        charisma: (end.charisma - start.charisma) / denom,\\n        defense: (end.defense - start.defense) / denom,\\n        dexterity: (end.dexterity - start.dexterity) / denom,\\n        hack: (end.hack - start.hack) / denom,\\n        int: (end.int - start.int) / denom,\\n        karma: (end.karma - start.karma) / denom,\\n        money: (end.money - start.money) / denom,\\n        strength: (end.strength - start.strength) / denom,\\n    };\\n}\\n\\n/**\\n * Whether the given crime is valid.\\n *\\n * @param crime A string representing the name of a crime.\\n * @return true if the given crime is valid; false otherwise.\\n */\\nfunction is_valid_crime(crime) {\\n    return Object.values(crimes).includes(crime);\\n}\\n\\n/**\\n * The player's karma.  This is an Easter egg, buried in the source code of the\\n * game.  Refer to this file:\\n *\\n * https://github.com/bitburner-official/bitburner-src/blob/dev/src/NetscriptFunctions/Extra.ts\\n *\\n * @param ns The Netscript API.\\n */\\nfunction karma(ns) {\\n    return ns.heart.break();\\n}\\n\\n/**\\n * Various stats of the player.\\n *\\n * @param ns The Netscript API.\\n * @return An object as follows:\\n *\\n *     {\\n *         agility: // The player's agility.\\n *         charisma: // The player's charisma.\\n *         defense: // The player's defense.\\n *         dexterity: // The player's dexterity.\\n *         hack: // The player's hacking skill.\\n *         int: // The player's intelligence.\\n *         karma: // The player's karma.\\n *         money: // The player's money.\\n *         strength: // The player's strength.\\n *     }\\n */\\nfunction player_stat(ns) {\\n    return {\\n        agility: ns.getPlayer().exp.agility,\\n        charisma: ns.getPlayer().exp.charisma,\\n        defense: ns.getPlayer().exp.defense,\\n        dexterity: ns.getPlayer().exp.dexterity,\\n        hack: ns.getPlayer().exp.hacking,\\n        int: ns.getPlayer().exp.intelligence,\\n        karma: karma(ns),\\n        money: ns.getPlayer().money,\\n        strength: ns.getPlayer().exp.strength,\\n    };\\n}\\n\\n/**\\n * Information on how to use this script.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction usage(ns) {\\n    const msg = \\\"Usage: run test/crime/crime-int.js [crime]\\\\n\\\\n\\\"\\n        + \\\"crime -- (string) The name of a crime.\\\";\\n    ns.tprint(msg);\\n}\\n\\n/**\\n * Commit a crime for a period of time, currently default to 24 hours.  Then\\n * calculate the amount of negative karma earned per minute as well as other\\n * stat gains, including Intelligence.  This script accepts a command line\\n * argument.\\n *\\n * Usage: run test/crime/crime-int.js [crime]\\n * Example: run test/crime/crime-int.js \\\"shoplift\\\"\\n */\\nexport async function main(ns) {\\n    // Sanity check.\\n    if (ns.args.length !== 1) {\\n        usage(ns);\\n        return;\\n    }\\n    // Commit the given crime and calculate the stat gain per minute.\\n    const crime = ns.args[0];\\n    const start = player_stat(ns);\\n    const minute = 60;\\n    const n = 24;\\n    const howlong = n * wait_t.HOUR;\\n    await commit_crime(ns, crime, howlong);\\n    const end = player_stat(ns);\\n    const denom = n * minute;\\n    const gain = gained_stats(start, end, denom);\\n    ns.tprint(`Crime: ${crime}`);\\n    ns.tprint(`Duration: ${n} hours`);\\n    ns.tprint(\\\"Stat gain per minute.\\\");\\n    ns.tprint(`Agility: ${gain.agility}`);\\n    ns.tprint(`Charisma: ${gain.charisma}`);\\n    ns.tprint(`Defense: ${gain.defense}`);\\n    ns.tprint(`Dexterity: ${gain.dexterity}`);\\n    ns.tprint(`Hack: ${gain.hack}`);\\n    ns.tprint(`Intelligence: ${gain.int}`);\\n    ns.tprint(`Karma: ${gain.karma}`);\\n    ns.tprint(`Money: ${gain.money}`);\\n    ns.tprint(`Strength: ${gain.strength}`);\\n}\\n\",\"filename\":\"/test/crime/crime-int.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":8.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725414,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence, intelligence_gain } from \\\"/intelligence/util.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { augment } from \\\"/lib/constant/faction.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport {\\n    choose_augment,\\n    has_augment,\\n    prerequisites,\\n} from \\\"/lib/singularity/augment.js\\\";\\nimport { assert, is_valid_faction } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Augmentations we still need to purchase from a faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to purchase all Augmentations from this faction.\\n * @return An array of Augmentation names.  We do not yet have these\\n *     Augmentations.  This array never includes the NeuroFlux Governor\\n *     Augmentation.  Cannot be an empty array.\\n */\\nfunction augmentations_to_buy(ns, fac) {\\n    // All Augmentations we have not yet purchased from the given faction.\\n    // Exclude the NeuroFlux Governor.\\n    const owned_aug = new Set(\\n        ns.singularity.getOwnedAugmentations(bool.PURCHASED)\\n    );\\n    let fac_aug = ns.singularity.getAugmentationsFromFaction(fac);\\n    fac_aug = fac_aug.filter((a) => !owned_aug.has(a));\\n    if (fac_aug.includes(augment.NFG)) {\\n        fac_aug = fac_aug.filter((a) => a !== augment.NFG);\\n    }\\n    assert(fac_aug.length > 0);\\n    return fac_aug;\\n}\\n\\n/**\\n * Purchase all Augmentations from a faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to buy all Augmentations from this faction.\\n */\\nasync function purchase_augmentations(ns, fac) {\\n    let augmentation = augmentations_to_buy(ns, fac);\\n    assert(augmentation.length > 0);\\n    // Below is our purchasing strategy.\\n    //\\n    // (1) Purchase the most expensive Augmentation first.\\n    // (2) If an Augmentation has a pre-requisite that we have not yet bought,\\n    //     purchase the pre-requisite first.\\n    // (3) Leave the NeuroFlux Governor Augmentation to last.\\n    while (augmentation.length > 0) {\\n        // Choose the most expensive Augmentation.\\n        const aug = choose_augment(ns, augmentation);\\n        if (has_augment(ns, aug)) {\\n            augmentation = augmentation.filter((a) => a !== aug);\\n            continue;\\n        }\\n        // If the most expensive Augmentation has no pre-requisites or we have\\n        // already purchased all of its pre-requisites, then purchase the\\n        // Augmentation.\\n        let prereq = prerequisites(ns, aug);\\n        if (prereq.length === 0) {\\n            await purchase_aug(ns, aug, fac);\\n            augmentation = augmentation.filter((a) => a !== aug);\\n            continue;\\n        }\\n        // If the Augmentation has one or more pre-requisites we have not yet\\n        // purchased, then first purchase the pre-requisites.\\n        while (prereq.length > 0) {\\n            const pre = choose_augment(ns, prereq);\\n            await purchase_aug(ns, pre, fac);\\n            prereq = prereq.filter((a) => a !== pre);\\n        }\\n        await purchase_aug(ns, aug, fac);\\n        augmentation = augmentation.filter((a) => a !== aug);\\n    }\\n    // Level up the NeuroFlux Governor Augmentation as high as our funds allows.\\n    let cost = Math.ceil(ns.singularity.getAugmentationPrice(augment.NFG));\\n    let nfg_rep = Math.ceil(ns.singularity.getAugmentationRepReq(augment.NFG));\\n    let fac_rep = Math.floor(ns.singularity.getFactionRep(fac));\\n    let money = ns.getServerMoneyAvailable(home);\\n    while (cost <= money && nfg_rep <= fac_rep) {\\n        const before = intelligence(ns);\\n        assert(ns.singularity.purchaseAugmentation(fac, augment.NFG));\\n        const after = intelligence(ns);\\n        const action = `Purchase Augmentation ${augment.NFG} from ${fac}`;\\n        intelligence_gain(ns, before, after, action);\\n        cost = Math.ceil(ns.singularity.getAugmentationPrice(augment.NFG));\\n        nfg_rep = Math.ceil(ns.singularity.getAugmentationRepReq(augment.NFG));\\n        fac_rep = Math.floor(ns.singularity.getFactionRep(fac));\\n        money = ns.getServerMoneyAvailable(home);\\n    }\\n}\\n\\n/**\\n * Purchase an Augmentation.\\n *\\n * @param ns The Netscript API.\\n * @param aug We want to purchase this Augmentation.\\n * @param fac We want to purchase the given Augmentation from this faction.\\n */\\nasync function purchase_aug(ns, aug, fac) {\\n    // Purchase any pre-requisites first.\\n    let prereq = prerequisites(ns, aug);\\n    while (prereq.length > 0) {\\n        const pre = choose_augment(ns, prereq);\\n        await purchase_aug(ns, pre, fac);\\n        prereq = prereq.filter((a) => a !== pre);\\n    }\\n    // Having purchased all pre-requisites of an Augmentation, now purchase\\n    // the Augmentation.\\n    let success = false;\\n    const cost = Math.ceil(ns.singularity.getAugmentationPrice(aug));\\n    const before = intelligence(ns);\\n    if (has_augment(ns, aug)) {\\n        return;\\n    }\\n    while (!success) {\\n        assert(!has_augment(ns, aug));\\n        if (ns.getServerMoneyAvailable(home) < cost) {\\n            await ns.sleep(wait_t.DEFAULT);\\n        }\\n        success = ns.singularity.purchaseAugmentation(fac, aug);\\n    }\\n    const after = intelligence(ns);\\n    const action = `Purchase Augmentation ${aug} from ${fac}`;\\n    intelligence_gain(ns, before, after, action);\\n    assert(has_augment(ns, aug));\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from purchasing\\n * Augmentations.  This script accepts a command line argument.\\n *\\n * Usage: run intelligence/augmentation-buy.js [factionName]\\n * Example: run intelligence/augmentation-buy.js Sector-12\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const faction = ns.args[0];\\n    assert(is_valid_faction(faction));\\n    await purchase_augmentations(ns, faction);\\n}\\n\",\"filename\":\"/test/intelligence/augment-buy.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725415}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { io } from \\\"/lib/constant/io.js\\\";\\nimport { intelligence } from \\\"/intelligence/util.js\\\";\\n\\n/**\\n * Install a bunch of Augmentations.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function install_augmentations(ns) {\\n    const before = intelligence(ns);\\n    const file = \\\"/intelligence/value.txt\\\";\\n    await ns.write(file, before, io.WRITE);\\n    const script = \\\"/intelligence/augmentation-post-install.js\\\";\\n    ns.singularity.installAugmentations(script);\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from installing\\n * Augmentations.  This script shows the amount of Intelligence XP prior to\\n * the installation.  We must call another script to determine the Intelligence\\n * XP gain after the installation.\\n *\\n * Usage: run intelligence/augmentation-install.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    await install_augmentations(ns);\\n}\\n\",\"filename\":\"/test/intelligence/augment-install.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725416}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence, intelligence_gain } from \\\"/intelligence/util.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\n\\n/**\\n * Determine the amount of Intelligence XP gained from installing\\n * Augmentations.\\n *\\n * Usage: run intelligence/augmentation-post-install.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const file = \\\"/intelligence/value.txt\\\";\\n    const before = parseFloat(ns.read(file));\\n    const after = intelligence(ns);\\n    const action = \\\"Install Augmentations\\\";\\n    intelligence_gain(ns, before, after, action);\\n    ns.rm(file, home);\\n}\\n\",\"filename\":\"/test/intelligence/augment-post-install.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725417}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    intelligence,\\n    intelligence_gain_per_minute,\\n} from \\\"/intelligence/util.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { greatest_chance } from \\\"/lib/singularity/crime.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Commit a crime for one hour.\\n *\\n * @param ns The Netscript API.\\n * @param c We want to commit this crime.\\n */\\nasync function commit_crime(ns, c) {\\n    assert(c.length > 0);\\n    const before = intelligence(ns);\\n    const n = 60;\\n    ns.singularity.commitCrime(c, bool.FOCUS);\\n    await ns.sleep(wait_t.HOUR);\\n    ns.singularity.stopAction();\\n    const after = intelligence(ns);\\n    const action = `Commit crime: ${c}`;\\n    intelligence_gain_per_minute(ns, before, after, action, n);\\n}\\n\\n/**\\n * Commit various crimes.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function commit_all_crimes(ns) {\\n    let crime = Array.from(Object.values(crimes));\\n    while (crime.length > 0) {\\n        const c = greatest_chance(ns, crime)[0];\\n        await commit_crime(ns, c);\\n        crime = crime.filter((a) => a !== c);\\n    }\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from crime.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    await commit_all_crimes(ns);\\n}\\n\",\"filename\":\"/test/intelligence/crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725418}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence } from \\\"/intelligence/util.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { io } from \\\"/lib/constant/io.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { connect_to } from \\\"/lib/singularity/network.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Find and destroy the w0r1d_d43m0n server.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function destroy(ns) {\\n    const server = new Server(ns, \\\"w0r1d_d43m0n\\\");\\n    const player = new Player(ns);\\n    while (player.hacking_skill() < server.hacking_skill()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    while (!server.has_root_access()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        await server.gain_root_access();\\n    }\\n    assert(player.hacking_skill() >= server.hacking_skill());\\n    assert(server.has_root_access());\\n    // Now hack the target server.\\n    connect_to(ns, player.home(), server.hostname());\\n    const before = intelligence(ns);\\n    const file = \\\"/intelligence/value-daemon.txt\\\";\\n    await ns.write(file, before, io.WRITE);\\n    await ns.singularity.installBackdoor();\\n}\\n\\n/**\\n * Destroy the w0r1d_d43m0n server.\\n *\\n * Usage: run singularity/daemon.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const augment = ns.singularity.getOwnedAugmentations(bool.NOT_PURCHASED);\\n    assert(augment.includes(\\\"The Red Pill\\\"));\\n    await destroy(ns);\\n}\\n\",\"filename\":\"/test/intelligence/daemon.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725419}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    has_invitation,\\n    intelligence,\\n    intelligence_gain,\\n} from \\\"/intelligence/util.js\\\";\\nimport { factions } from \\\"/lib/constant/faction.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The amount of Intelligence XP gained from joining a faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac The name of the faction we want to join.\\n */\\nfunction join_factions(ns) {\\n    for (const fac of factions.all) {\\n        if (has_invitation(ns, fac)) {\\n            const before = intelligence(ns);\\n            assert(ns.singularity.joinFaction(fac));\\n            const after = intelligence(ns);\\n            const action = `Join faction: ${fac}`;\\n            intelligence_gain(ns, before, after, action);\\n        }\\n    }\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from joining a faction.  We\\n * join all factions for which we have outstanding invitations.\\n *\\n * Usage: run intelligence/faction-join-all.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    join_factions(ns);\\n}\\n\",\"filename\":\"/test/intelligence/faction-join-all.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725420}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    has_invitation,\\n    intelligence,\\n    intelligence_gain,\\n} from \\\"/intelligence/util.js\\\";\\nimport { factions } from \\\"/lib/constant/faction.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether the given name represents a valid faction.\\n *\\n * @param fac A string representing the name of a faction.\\n * @return true if the given name represents a valid faction;\\n *     false otherwise.\\n */\\nfunction is_valid_faction(fac) {\\n    assert(fac.length > 0);\\n    const faction = new Set(factions.all);\\n    return faction.has(fac);\\n}\\n\\n/**\\n * The amount of Intelligence XP gained from joining a faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac The name of the faction we want to join.\\n */\\nfunction join_faction(ns, fac) {\\n    assert(is_valid_faction(fac));\\n    if (!has_invitation(ns, fac)) {\\n        return;\\n    }\\n    const before = intelligence(ns);\\n    assert(ns.singularity.joinFaction(fac));\\n    const after = intelligence(ns);\\n    const action = `Join faction: ${fac}`;\\n    intelligence_gain(ns, before, after, action);\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from joining a faction.\\n * This script takes a command line argument.\\n *\\n * Usage: run intelligence/faction-join.js [factionName]\\n * Example: run intelligence/faction-join.js Sector-12\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const faction = ns.args[0];\\n    join_faction(ns, faction);\\n}\\n\",\"filename\":\"/test/intelligence/faction-join.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725421}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence, intelligence_gain } from \\\"/intelligence/util.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Upgrade the number of Cores on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction upgrade_core(ns) {\\n    const player = new Player(ns);\\n    if (player.money() < ns.singularity.getUpgradeHomeCoresCost()) {\\n        return;\\n    }\\n    const server = new Server(ns, home);\\n    const cores_before = server.cores();\\n    const before = intelligence(ns);\\n    assert(ns.singularity.upgradeHomeCores());\\n    const cores_after = server.cores();\\n    const after = intelligence(ns);\\n    const action = `Upgrade home Cores: ${cores_before} -> ${cores_after}`;\\n    intelligence_gain(ns, before, after, action);\\n}\\n\\n/**\\n * Upgrade the amount of RAM on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction upgrade_ram(ns) {\\n    const player = new Player(ns);\\n    if (player.money() < ns.singularity.getUpgradeHomeRamCost()) {\\n        return;\\n    }\\n    const server = new Server(ns, home);\\n    const ram_before = server.ram_max();\\n    const before = intelligence(ns);\\n    assert(ns.singularity.upgradeHomeRam());\\n    const ram_after = server.ram_max();\\n    const after = intelligence(ns);\\n    const action = `Upgrade home RAM: ${ram_before} -> ${ram_after}`;\\n    intelligence_gain(ns, before, after, action);\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from upgrading the Cores and\\n * RAM on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    upgrade_ram(ns);\\n    upgrade_core(ns);\\n}\\n\",\"filename\":\"/test/intelligence/home.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725422}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence } from \\\"/intelligence/util.js\\\";\\n\\n/**\\n * The current Intelligence XP of the player.\\n */\\nexport async function main(ns) {\\n    ns.tprint(intelligence(ns));\\n}\\n\",\"filename\":\"/test/intelligence/int.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725423}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    has_program,\\n    intelligence,\\n    intelligence_gain,\\n} from \\\"/intelligence/util.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * All programs that can be created.  These programs can also be purchased via\\n * the dark web.  We exclude Formulas.exe because we permanently unlocked that\\n * program after destroying BitNode 5.\\n */\\nfunction all_programs() {\\n    // A map where the key/value pair is as follows:\\n    //\\n    // key := The name of a program.\\n    // value := The minimum Hack stat at which we are able to create the\\n    //     program.  This value is specific to the current save file.\\n    const program = new Map([\\n        [\\\"BruteSSH.exe\\\", 1],\\n        [\\\"FTPCrack.exe\\\", 24],\\n        [\\\"HTTPWorm.exe\\\", 424],\\n        [\\\"relaySMTP.exe\\\", 174],\\n        [\\\"SQLInject.exe\\\", 674],\\n        [\\\"DeepscanV1.exe\\\", 1],\\n        [\\\"DeepscanV2.exe\\\", 324],\\n        [\\\"ServerProfiler.exe\\\", 1],\\n        [\\\"AutoLink.exe\\\", 1],\\n    ]);\\n    return program;\\n}\\n\\n/**\\n * Whether we can create a given program.\\n *\\n * @param ns The Netscript API.\\n * @param program A string representing the name of the program we want to\\n *     create.\\n * @return true if we meet the requirement to create the given program;\\n *     false otherwise.\\n */\\nfunction can_create(ns, program) {\\n    const prog = all_programs();\\n    const threshold = prog.get(program);\\n    assert(threshold > 0);\\n    return ns.getHackingLevel() >= threshold;\\n}\\n\\n/**\\n * Create a program.\\n *\\n * @param ns The Netscript API.\\n * @param program A string representing the name of the program we want to\\n *     create.\\n */\\nasync function create_program(ns, program) {\\n    // Work on creating the program.\\n    const before = intelligence(ns);\\n    assert(ns.singularity.createProgram(program, bool.FOCUS));\\n    while (ns.singularity.isBusy()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    assert(has_program(ns, program));\\n    const after = intelligence(ns);\\n    const action = `Create program: ${program}`;\\n    intelligence_gain(ns, before, after, action);\\n}\\n\\n/**\\n * Whether a given string represents a valid program.\\n *\\n * @param prog A string representing a program name.\\n * @return true if the given string represents a valid program;\\n *     false otherwise.\\n */\\nfunction is_valid_program(prog) {\\n    assert(prog.length > 0);\\n    const program = all_programs();\\n    return program.has(prog);\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from creating various\\n * programs.  This script accepts a command line argument, i.e. the name\\n * of the program to create.\\n *\\n * Usage: run intelligence/program.js [programName]\\n * Example: run intelligence/program.js BruteSSH.exe\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const prog = ns.args[0];\\n    assert(is_valid_program(prog));\\n    if (has_program(ns, prog)) {\\n        return;\\n    }\\n    assert(can_create(ns, prog));\\n    await create_program(ns, prog);\\n}\\n\",\"filename\":\"/test/intelligence/program.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725424}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    intelligence,\\n    intelligence_gain_per_minute,\\n} from \\\"/intelligence/util.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { random_integer } from \\\"/lib/random.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * An array of all locations in Sector-12.\\n */\\nfunction all_locations() {\\n    const location = [\\n        \\\"Alpha Enterprises\\\",\\n        \\\"Blade Industries\\\",\\n        \\\"Central Intelligence Agency\\\",\\n        \\\"Carmichael Security\\\",\\n        \\\"Sector-12 City Hall\\\",\\n        \\\"DeltaOne\\\",\\n        \\\"FoodNStuff\\\",\\n        \\\"Four Sigma\\\",\\n        \\\"Icarus Microsystems\\\",\\n        \\\"Iron Gym\\\",\\n        \\\"Joe's Guns\\\",\\n        \\\"MegaCorp\\\",\\n        \\\"National Security Agency\\\",\\n        \\\"Powerhouse Gym\\\",\\n        \\\"Rothman University\\\",\\n        \\\"Universal Energy\\\",\\n    ];\\n    return location;\\n}\\n\\n/**\\n * Choose a new location to go to.\\n *\\n * @param loc We are currently at this location.\\n * @return A new location.\\n */\\nfunction choose_location(loc) {\\n    assert(loc.length > 0);\\n    const location = all_locations();\\n    const low = 0;\\n    const high = location.length - 1;\\n    let i = random_integer(low, high);\\n    let new_loc = location[i];\\n    while (loc === new_loc) {\\n        i = random_integer(low, high);\\n        new_loc = location[i];\\n    }\\n    assert(loc !== new_loc);\\n    return new_loc;\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from relocating to a\\n * different place.  We only relocate within Sector-12.\\n *\\n * Usage: intelligence/relocate.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Relocate to a different place.  Constantly do so within one hour.  The\\n    // execution time is one hour, given in terms of milliseconds.\\n    const end = Date.now() + wait_t.HOUR;\\n    const before = intelligence(ns);\\n    let loc = \\\"FoodNStuff\\\";\\n    while (Date.now() < end) {\\n        assert(ns.singularity.goToLocation(loc));\\n        loc = choose_location(loc);\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    const after = intelligence(ns);\\n    const action = \\\"Relocate within Sector-12\\\";\\n    const n = 60; // Minutes in one hour.\\n    intelligence_gain_per_minute(ns, before, after, action, n);\\n}\\n\",\"filename\":\"/test/intelligence/relocate.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725425}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    intelligence,\\n    intelligence_gain_per_minute,\\n} from \\\"/intelligence/util.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { course } from \\\"/lib/constant/study.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Study various university courses for an hour each and calculate the\\n * amount of Intelligence gained per minute.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function study(ns) {\\n    const n = 60;\\n    const { uni } = cities[ns.getPlayer().city];\\n    ns.tprint(`Study at ${uni}`);\\n    for (const c of Object.values(course)) {\\n        const action = `Course: ${c}`;\\n        const before = intelligence(ns);\\n        assert(ns.singularity.universityCourse(uni, c, bool.FOCUS));\\n        await ns.sleep(wait_t.HOUR);\\n        ns.singularity.stopAction();\\n        const after = intelligence(ns);\\n        intelligence_gain_per_minute(ns, before, after, action, n);\\n    }\\n}\\n\\n/**\\n * Obtain Intelligence XP by studying at a university.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    await study(ns);\\n}\\n\",\"filename\":\"/test/intelligence/study.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725426}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    has_program,\\n    intelligence,\\n    intelligence_gain,\\n} from \\\"/intelligence/util.js\\\";\\nimport { all_programs } from \\\"/lib/constant/exe.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Use the dark web to purchase various programs.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction purchase_programs(ns) {\\n    const player = new Player(ns);\\n    for (const p of all_programs().keys()) {\\n        // We already have the program.\\n        if (has_program(ns, p)) {\\n            continue;\\n        }\\n        // We do not have enough money to buy the program.\\n        const cost = ns.singularity.getDarkwebProgramCost(p);\\n        if (player.money() < cost) {\\n            continue;\\n        }\\n        // Purchase the program.\\n        const before = intelligence(ns);\\n        assert(ns.singularity.purchaseProgram(p));\\n        const after = intelligence(ns);\\n        const action = `Purchase ${p} via dark web`;\\n        intelligence_gain(ns, before, after, action);\\n    }\\n}\\n\\n/**\\n * Obtain Intelligence XP by purchasing programs through the dark web.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    purchase_programs(ns);\\n}\\n\",\"filename\":\"/test/intelligence/tor-program.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725427}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence, intelligence_gain } from \\\"/intelligence/util.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Obtain Intelligence XP by purchasing the TOR router.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const before = intelligence(ns);\\n    assert(ns.singularity.purchaseTor());\\n    const after = intelligence(ns);\\n    const action = \\\"Purchase the TOR router\\\";\\n    intelligence_gain(ns, before, after, action);\\n}\\n\",\"filename\":\"/test/intelligence/tor.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725428}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence, intelligence_gain } from \\\"/intelligence/util.js\\\";\\nimport { assert, is_valid_city } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Determine the amount of Intelligence XP gained from travelling to a\\n * different city.  This script accepts a command line argument.\\n *\\n * Usage: intelligence/travel.js [city]\\n * Usage: intelligence/travel.js Chongqing\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const city = ns.args[0];\\n    assert(is_valid_city(city));\\n    const before = intelligence(ns);\\n    assert(ns.singularity.travelToCity(city));\\n    const after = intelligence(ns);\\n    const action = `Travel to ${city}`;\\n    intelligence_gain(ns, before, after, action);\\n}\\n\",\"filename\":\"/test/intelligence/travel.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725429}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { all_programs } from \\\"/lib/constant/exe.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n// Miscellaneous utility functions.\\n\\n/**\\n * Whether we have an invitation to join a given faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac The name of the faction we want to join.\\n * @return true if we have an invitation to join the given faction;\\n *     false otherwise.\\n */\\nexport function has_invitation(ns, fac) {\\n    const invite = ns.singularity.checkFactionInvitations();\\n    return invite.includes(fac);\\n}\\n\\n/**\\n * Whether we have the given program on our home server.\\n *\\n * @param ns The Netscript API.\\n * @param program A string representing the name of a program.\\n * @return true if we already have the given program;\\n *     false otherwise.\\n */\\nexport function has_program(ns, program) {\\n    assert(is_valid_program(program));\\n    return ns.fileExists(program, home);\\n}\\n\\n/**\\n * The amount of Intelligence XP the player has.\\n *\\n * @param ns The Netscript API.\\n */\\nexport function intelligence(ns) {\\n    return ns.getPlayer().exp.intelligence;\\n}\\n\\n/**\\n * Print the gain in Intelligence XP.\\n *\\n * @param ns The Netscript API.\\n * @param before The amount of Intelligence XP before a certain action.\\n * @param after The amount of Intelligence XP after performing a certain\\n *     action.\\n * @param action The action whose performance might possibly result in a gain\\n *     in Intelligence XP.\\n */\\nexport function intelligence_gain(ns, before, after, action) {\\n    assert(before >= 0);\\n    assert(after >= 0);\\n    assert(action.length > 0);\\n    const gain = after - before;\\n    ns.tprint(action);\\n    ns.tprint(`Intelligence before: ${before}`);\\n    ns.tprint(`Intelligence after: ${after}`);\\n    ns.tprint(`Intelligence gain: ${gain}`);\\n    ns.tprint(\\\"\\\");\\n}\\n\\n/**\\n * Print the gain in Intelligence XP per minute.\\n *\\n * @param ns The Netscript API.\\n * @param before The amount of Intelligence XP before a certain action.\\n * @param after The amount of Intelligence XP after performing a certain\\n *     action.\\n * @param action The action whose performance might possibly result in a gain\\n *     in Intelligence XP.\\n * @param minute Divide the Intelligence XP gain by this many minutes.\\n */\\nexport function intelligence_gain_per_minute(\\n    ns,\\n    before,\\n    after,\\n    action,\\n    minute\\n) {\\n    assert(before >= 0);\\n    assert(after >= 0);\\n    assert(action.length > 0);\\n    assert(minute > 0);\\n    const gain = after - before;\\n    const gpm = gain / minute;\\n    ns.tprint(action);\\n    ns.tprint(`Intelligence before: ${before}`);\\n    ns.tprint(`Intelligence after: ${after}`);\\n    ns.tprint(`Intelligence gain: ${gain}`);\\n    ns.tprint(`Intelligence gain per minute: ${gpm}`);\\n    ns.tprint(\\\"\\\");\\n}\\n\\n/**\\n * Whether the given name is a valid program.\\n *\\n * @param name A string representing the name of a program.\\n * @return true if the given name is a valid program;\\n *     false otherwise.\\n */\\nexport function is_valid_program(name) {\\n    assert(name.length > 0);\\n    const program = all_programs();\\n    return program.has(name);\\n}\\n\",\"filename\":\"/test/intelligence/util.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725430,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"98.9.2.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":38432797032,\"moneyMax\":960819925800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1288,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"1.3.1.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":51611100971,\"moneyMax\":1290277524275,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1181,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"94.7.2.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":83,\"minDifficulty\":28,\"moneyAvailable\":18850987612,\"moneyMax\":471274690300,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":965,\"serverGrowth\":72}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"48.7.5.1\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\",\"fulcrumassets\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":19655977216,\"moneyMax\":491399430400,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":975,\"serverGrowth\":74}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"35.9.0.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":30090912097,\"moneyMax\":752272802425,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":980,\"serverGrowth\":66}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"20.5.7.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\",\"ecorp\",\"megacorp\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":46,\"hackDifficulty\":46,\"minDifficulty\":15,\"moneyAvailable\":21714371544,\"moneyMax\":542859288600,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1165,\"serverGrowth\":46}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":false,\"ip\":\"8.6.8.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":13684596734,\"moneyMax\":342114918350,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":992,\"serverGrowth\":95}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"4.4.6.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":69,\"hackDifficulty\":69,\"minDifficulty\":23,\"moneyAvailable\":15537286375,\"moneyMax\":388432159375,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":948,\"serverGrowth\":94}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"51.0.1.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\",\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":96,\"hackDifficulty\":96,\"minDifficulty\":32,\"moneyAvailable\":20768108360,\"moneyMax\":519202709000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1008,\"serverGrowth\":93}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"79.7.5.5\",\"isConnectedTo\":false,\"maxRam\":1024,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":1705696890,\"moneyMax\":42642422250,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1142,\"serverGrowth\":91}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"36.5.1.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1300,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"11.5.7.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"run4theh111z\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":1097507462,\"moneyMax\":27437686550,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":937,\"serverGrowth\":75}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"73.2.3.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\",\"taiyang-digital\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":801320113,\"moneyMax\":20033002825,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":878,\"serverGrowth\":65}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"59.7.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":89,\"hackDifficulty\":89,\"minDifficulty\":30,\"moneyAvailable\":716062828,\"moneyMax\":17901570700,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":912,\"serverGrowth\":75}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":false,\"ip\":\"15.7.3.8\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"titan-labs\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":567724048,\"moneyMax\":14193101200,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":840,\"serverGrowth\":72}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":false,\"ip\":\"60.1.6.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"applied-energetics\",\"omnitek\",\"4sigma\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":735481017,\"moneyMax\":18387025425,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":835,\"serverGrowth\":74}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"55.8.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":85,\"hackDifficulty\":85,\"minDifficulty\":28,\"moneyAvailable\":968192945,\"moneyMax\":24204823625,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":921,\"serverGrowth\":92}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"univ-energy\",\"httpPortOpen\":false,\"ip\":\"36.2.5.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\",\"infocomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":1166487248,\"moneyMax\":29162181200,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":893,\"serverGrowth\":87}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":false,\"ip\":\"41.3.4.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nova-med\",\"helios\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":789288365,\"moneyMax\":19732209125,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":865,\"serverGrowth\":67}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":false,\"ip\":\"23.1.0.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":506514820,\"moneyMax\":12662870500,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":842,\"serverGrowth\":87}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"77.2.8.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"defcomm\",\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":815286701,\"moneyMax\":20382167525,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":879,\"serverGrowth\":78}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"45.8.4.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"lexo-corp\",\"omnia\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":63,\"hackDifficulty\":63,\"minDifficulty\":21,\"moneyAvailable\":791609363,\"moneyMax\":19790234075,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":826,\"serverGrowth\":74}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"95.5.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"millenium-fitness\",\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":87,\"hackDifficulty\":87,\"minDifficulty\":29,\"moneyAvailable\":1043371243,\"moneyMax\":26084281075,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":891,\"serverGrowth\":64}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":false,\"ip\":\"47.7.9.3\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"galactic-cyber\",\"univ-energy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":88,\"hackDifficulty\":88,\"minDifficulty\":29,\"moneyAvailable\":952971678,\"moneyMax\":23824291950,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":927,\"serverGrowth\":61}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-def\",\"httpPortOpen\":false,\"ip\":\"16.2.0.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zeus-med\",\"microdyne\",\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":65,\"minDifficulty\":22,\"moneyAvailable\":905662834,\"moneyMax\":22641570850,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":790,\"serverGrowth\":67}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"applied-energetics\",\"httpPortOpen\":false,\"ip\":\"91.3.4.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"taiyang-digital\",\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":852591339,\"moneyMax\":21314783475,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":812,\"serverGrowth\":73}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":false,\"ip\":\"76.5.4.2\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":709074442,\"moneyMax\":17726861050,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":839,\"serverGrowth\":77}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"97.6.8.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aerocorp\",\"icarus\",\"solaris\",\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":1423905289,\"moneyMax\":35597632225,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":887,\"serverGrowth\":64}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"global-pharm\",\"httpPortOpen\":false,\"ip\":\"80.5.3.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"aevum-police\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":1731962107,\"moneyMax\":43299052675,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":800,\"serverGrowth\":81}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nova-med\",\"httpPortOpen\":false,\"ip\":\"41.0.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"solaris\",\"titan-labs\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":1171538583,\"moneyMax\":29288464575,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":778,\"serverGrowth\":85}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"28.8.1.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\",\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":1463955697,\"moneyMax\":36598892425,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":841,\"serverGrowth\":79}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"unitalife\",\"httpPortOpen\":false,\"ip\":\"25.4.8.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"galactic-cyber\",\"defcomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":1033166520,\"moneyMax\":25829163000,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":782,\"serverGrowth\":76}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"lexo-corp\",\"httpPortOpen\":false,\"ip\":\"74.0.8.3\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-institute\",\"galactic-cyber\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":750088662,\"moneyMax\":18752216550,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":655,\"serverGrowth\":57}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"6.9.0.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":56,\"minDifficulty\":19,\"moneyAvailable\":578848364,\"moneyMax\":14471209100,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":520,\"serverGrowth\":53}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"alpha-ent\",\"httpPortOpen\":false,\"ip\":\"51.3.3.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":683794149,\"moneyMax\":17094853725,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":526,\"serverGrowth\":55}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aevum-police\",\"httpPortOpen\":false,\"ip\":\"77.8.4.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"syscore\",\"global-pharm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":73,\"hackDifficulty\":73,\"minDifficulty\":24,\"moneyAvailable\":387314001,\"moneyMax\":9682850025,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":444,\"serverGrowth\":41}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"2.9.4.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":51,\"minDifficulty\":17,\"moneyAvailable\":231033853,\"moneyMax\":5775846325,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":381,\"serverGrowth\":43}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":false,\"ip\":\"62.6.3.0\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"computek\",\"lexo-corp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":1034044352,\"moneyMax\":25851108800,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":744,\"serverGrowth\":78}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"7.4.7.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"netlink\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":55,\"hackDifficulty\":55,\"minDifficulty\":18,\"moneyAvailable\":280905221,\"moneyMax\":7022630525,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":452,\"serverGrowth\":46}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"syscore\",\"httpPortOpen\":false,\"ip\":\"70.6.6.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"the-hub\",\"aevum-police\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":60,\"hackDifficulty\":60,\"minDifficulty\":20,\"moneyAvailable\":526412832,\"moneyMax\":13160320800,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":620,\"serverGrowth\":69}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"21.7.7.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"crush-fitness\",\"millenium-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":547451403,\"moneyMax\":13686285075,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":408,\"serverGrowth\":52}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"54.6.6.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"silver-helix\",\"syscore\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":35,\"hackDifficulty\":35,\"minDifficulty\":12,\"moneyAvailable\":197831888,\"moneyMax\":4945797200,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":318,\"serverGrowth\":49}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"computek\",\"httpPortOpen\":false,\"ip\":\"67.6.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"neo-net\",\"zb-institute\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":231506746,\"moneyMax\":5787668650,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":360,\"serverGrowth\":54}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"94.8.4.7\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omega-net\",\"summit-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":74,\"hackDifficulty\":74,\"minDifficulty\":25,\"moneyAvailable\":275000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":416,\"serverGrowth\":65}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"14.9.1.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omega-net\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":36,\"hackDifficulty\":36,\"minDifficulty\":12,\"moneyAvailable\":83999693,\"moneyMax\":2099992325,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":282,\"serverGrowth\":55}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"83.2.0.8\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":70000,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"35.8.9.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\",\"max-hardware\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":10,\"minDifficulty\":3,\"moneyAvailable\":2000000,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"85.1.5.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":10,\"minDifficulty\":3,\"moneyAvailable\":2300000,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"57.1.9.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":2500000,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"89.7.8.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"iron-gym\",\"silver-helix\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":7500000,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"78.3.7.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"sigma-cosmetics\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":2750000,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"77.8.9.5\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"CSEC\",\"computek\",\"crush-fitness\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":5000000,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"61.4.4.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zer0\",\"the-hub\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":45000000,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"58.5.2.8\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":3000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"15.5.6.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":4000000,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"98.3.7.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":24000000,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"41.3.7.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"foodnstuff\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":10000000,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"61.6.0.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zer0\",\"netlink\",\"johnson-ortho\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":27,\"hackDifficulty\":27,\"minDifficulty\":9,\"moneyAvailable\":61318559,\"moneyMax\":1532963975,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":207,\"serverGrowth\":35}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"71.4.3.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"neo-net\",\"catalyst\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":36,\"hackDifficulty\":36,\"minDifficulty\":12,\"moneyAvailable\":53969737,\"moneyMax\":1349243425,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":262,\"serverGrowth\":28}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"54.5.9.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":20000000,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"32.0.3.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"catalyst\",\"aerocorp\",\"snap-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":51,\"minDifficulty\":17,\"moneyAvailable\":250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":484,\"serverGrowth\":29}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"62.2.8.2\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1038,\"serverGrowth\":57}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"snap-fitness\",\"httpPortOpen\":false,\"ip\":\"57.0.6.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"millenium-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":51,\"hackDifficulty\":51,\"minDifficulty\":17,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":687,\"serverGrowth\":45}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"run4theh111z\",\"httpPortOpen\":false,\"ip\":\"51.1.4.2\",\"isConnectedTo\":false,\"maxRam\":512,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-def\",\"fulcrumtech\",\"stormtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":524,\"serverGrowth\":1}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"22.3.4.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"johnson-ortho\",\"rho-construction\",\"alpha-ent\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":350,\"serverGrowth\":1}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"31.9.3.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"neo-net\",\"rothman-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":205,\"serverGrowth\":1}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\".\",\"httpPortOpen\":false,\"ip\":\"56.3.3.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"stormtech\",\"b-and-a\",\"blade\",\"clarkinc\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":519,\"serverGrowth\":1}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"28.1.2.2\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"harakiri-sushi\",\"neo-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":53,\"serverGrowth\":1}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"35.9.3.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":925,\"serverGrowth\":1}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"8.5.0.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":6000,\"serverGrowth\":1}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":false,\"ip\":\"6.9.9.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"The Black Hand\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NiteSec\",\"playerReputation\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"CashRoot Starter Kit\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Sector-12\",\"playerReputation\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Netburners\",\"playerReputation\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tian Di Hui\",\"playerReputation\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Neurotrainer I\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"CyberSec\",\"playerReputation\":0}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"SoA - phyzical WKS harmonizer\",\"SoA - Might of Ares\",\"SoA - Wisdom of Athena\",\"SoA - Chaos of Dionysus\",\"SoA - Beauty of Aphrodite\",\"SoA - Trickery of Hermes\",\"SoA - Flood of Poseidon\",\"SoA - Hunt of Artemis\",\"SoA - Knowledge of Apollo\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Shadows of Anarchy\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","StockMarketSave":"{\"lastUpdate\":0,\"Orders\":{},\"storedCycles\":0,\"ticksUntilCycle\":0}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":360,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":0,\"RemoteFileApiPort\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":true,\"SuppressFactionInvites\":true,\"SuppressMessages\":true,\"SuppressTravelConfirmation\":true,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":true,\"SuppressSavedGameToast\":false,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":true,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":20,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":-3,\"y\":4,\"opened\":false},\"EditorTheme\":{\"base\":\"vs-dark\",\"inherit\":true,\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}}}}","VersionSave":"26","AllGangsSave":"","LastExportBonus":"1670804047720","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}"}}