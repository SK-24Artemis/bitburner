{"ctor":"BitburnerSaveObject","data":{"PlayerSave":"{\"ctor\":\"PlayerObject\",\"data\":{\"hp\":{\"current\":10,\"max\":10},\"skills\":{\"hacking\":1,\"strength\":1,\"defense\":1,\"dexterity\":1,\"agility\":1,\"charisma\":1,\"intelligence\":0},\"exp\":{\"hacking\":0,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":0,\"intelligence\":0},\"mults\":{\"hacking_chance\":1.28,\"hacking_speed\":1.28,\"hacking_money\":1.28,\"hacking_grow\":1.28,\"hacking\":1.28,\"hacking_exp\":1.28,\"strength\":1.28,\"strength_exp\":1.28,\"defense\":1.28,\"defense_exp\":1.28,\"dexterity\":1.28,\"dexterity_exp\":1.28,\"agility\":1.28,\"agility_exp\":1.28,\"charisma\":1.28,\"charisma_exp\":1.28,\"hacknet_node_money\":1.28,\"hacknet_node_purchase_cost\":0.72,\"hacknet_node_ram_cost\":0.72,\"hacknet_node_core_cost\":0.72,\"hacknet_node_level_cost\":0.72,\"company_rep\":1.28,\"faction_rep\":1.28,\"work_money\":1.28,\"crime_success\":1.28,\"crime_money\":1.28,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"money\":1030,\"city\":\"Sector-12\",\"location\":\"Travel Agency\",\"jobs\":{},\"currentServer\":\"home\",\"purchasedServers\":[],\"hacknetNodes\":[],\"hashManager\":{\"ctor\":\"HashManager\",\"data\":{\"capacity\":0,\"hashes\":0,\"upgrades\":{\"Sell for Money\":0,\"Sell for Corporation Funds\":0,\"Reduce Minimum Security\":0,\"Increase Maximum Money\":0,\"Improve Studying\":0,\"Improve Gym Training\":0,\"Exchange for Corporation Research\":0,\"Exchange for Bladeburner Rank\":0,\"Exchange for Bladeburner SP\":0,\"Generate Coding Contract\":0}}},\"factions\":[],\"factionInvitations\":[],\"queuedAugmentations\":[],\"augmentations\":[],\"sourceFiles\":[{\"lvl\":3,\"n\":1},{\"lvl\":3,\"n\":4},{\"lvl\":3,\"n\":10}],\"numPeopleKilled\":0,\"karma\":0,\"hasWseAccount\":false,\"hasTixApiAccess\":false,\"has4SData\":false,\"has4SDataTixApi\":false,\"gang\":null,\"corporation\":null,\"bladeburner\":null,\"sleeves\":[{\"ctor\":\"Sleeve\",\"data\":{\"hp\":{\"current\":16,\"max\":16},\"skills\":{\"hacking\":9,\"strength\":60,\"defense\":64,\"dexterity\":19,\"agility\":21,\"charisma\":3,\"intelligence\":0},\"exp\":{\"hacking\":0,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":0,\"intelligence\":0},\"mults\":{\"hacking_chance\":1,\"hacking_speed\":1,\"hacking_money\":1,\"hacking_grow\":1,\"hacking\":1,\"hacking_exp\":1,\"strength\":1,\"strength_exp\":1,\"defense\":1,\"defense_exp\":1,\"dexterity\":1,\"dexterity_exp\":1,\"agility\":1,\"agility_exp\":1,\"charisma\":1,\"charisma_exp\":1,\"hacknet_node_money\":1,\"hacknet_node_purchase_cost\":1,\"hacknet_node_ram_cost\":1,\"hacknet_node_core_cost\":1,\"hacknet_node_level_cost\":1,\"company_rep\":1,\"faction_rep\":1,\"work_money\":1,\"crime_success\":1,\"crime_money\":1,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[],\"city\":\"Sector-12\",\"currentWork\":{\"ctor\":\"SleeveRecoveryWork\",\"data\":{\"type\":\"RECOVERY\"}},\"memory\":100,\"shock\":1.0719999999999925,\"storedCycles\":3,\"sync\":100}},{\"ctor\":\"Sleeve\",\"data\":{\"hp\":{\"current\":16,\"max\":16},\"skills\":{\"hacking\":9,\"strength\":60,\"defense\":64,\"dexterity\":19,\"agility\":21,\"charisma\":3,\"intelligence\":0},\"exp\":{\"hacking\":0,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":0,\"intelligence\":0},\"mults\":{\"hacking_chance\":1,\"hacking_speed\":1,\"hacking_money\":1,\"hacking_grow\":1,\"hacking\":1,\"hacking_exp\":1,\"strength\":1,\"strength_exp\":1,\"defense\":1,\"defense_exp\":1,\"dexterity\":1,\"dexterity_exp\":1,\"agility\":1,\"agility_exp\":1,\"charisma\":1,\"charisma_exp\":1,\"hacknet_node_money\":1,\"hacknet_node_purchase_cost\":1,\"hacknet_node_ram_cost\":1,\"hacknet_node_core_cost\":1,\"hacknet_node_level_cost\":1,\"company_rep\":1,\"faction_rep\":1,\"work_money\":1,\"crime_success\":1,\"crime_money\":1,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[],\"city\":\"Sector-12\",\"currentWork\":{\"ctor\":\"SleeveRecoveryWork\",\"data\":{\"type\":\"RECOVERY\"}},\"memory\":100,\"shock\":1.0719999999999925,\"storedCycles\":3,\"sync\":100}},{\"ctor\":\"Sleeve\",\"data\":{\"hp\":{\"current\":16,\"max\":16},\"skills\":{\"hacking\":9,\"strength\":60,\"defense\":64,\"dexterity\":19,\"agility\":21,\"charisma\":3,\"intelligence\":0},\"exp\":{\"hacking\":0,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":0,\"intelligence\":0},\"mults\":{\"hacking_chance\":1,\"hacking_speed\":1,\"hacking_money\":1,\"hacking_grow\":1,\"hacking\":1,\"hacking_exp\":1,\"strength\":1,\"strength_exp\":1,\"defense\":1,\"defense_exp\":1,\"dexterity\":1,\"dexterity_exp\":1,\"agility\":1,\"agility_exp\":1,\"charisma\":1,\"charisma_exp\":1,\"hacknet_node_money\":1,\"hacknet_node_purchase_cost\":1,\"hacknet_node_ram_cost\":1,\"hacknet_node_core_cost\":1,\"hacknet_node_level_cost\":1,\"company_rep\":1,\"faction_rep\":1,\"work_money\":1,\"crime_success\":1,\"crime_money\":1,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[],\"city\":\"Sector-12\",\"currentWork\":{\"ctor\":\"SleeveRecoveryWork\",\"data\":{\"type\":\"RECOVERY\"}},\"memory\":100,\"shock\":1.0719999999999925,\"storedCycles\":3,\"sync\":100}},{\"ctor\":\"Sleeve\",\"data\":{\"hp\":{\"current\":10,\"max\":10},\"skills\":{\"hacking\":1,\"strength\":1,\"defense\":1,\"dexterity\":1,\"agility\":1,\"charisma\":1,\"intelligence\":0},\"exp\":{\"hacking\":0,\"strength\":0,\"defense\":0,\"dexterity\":0,\"agility\":0,\"charisma\":0,\"intelligence\":0},\"mults\":{\"hacking_chance\":1,\"hacking_speed\":1,\"hacking_money\":1,\"hacking_grow\":1,\"hacking\":1,\"hacking_exp\":1,\"strength\":1,\"strength_exp\":1,\"defense\":1,\"defense_exp\":1,\"dexterity\":1,\"dexterity_exp\":1,\"agility\":1,\"agility_exp\":1,\"charisma\":1,\"charisma_exp\":1,\"hacknet_node_money\":1,\"hacknet_node_purchase_cost\":1,\"hacknet_node_ram_cost\":1,\"hacknet_node_core_cost\":1,\"hacknet_node_level_cost\":1,\"company_rep\":1,\"faction_rep\":1,\"work_money\":1,\"crime_success\":1,\"crime_money\":1,\"bladeburner_max_stamina\":1,\"bladeburner_stamina_gain\":1,\"bladeburner_analysis\":1,\"bladeburner_success_chance\":1},\"augmentations\":[],\"city\":\"Sector-12\",\"currentWork\":{\"ctor\":\"SleeveRecoveryWork\",\"data\":{\"type\":\"RECOVERY\"}},\"memory\":100,\"shock\":1.0719999999999925,\"storedCycles\":3,\"sync\":100}}],\"sleevesFromCovenant\":1,\"bitNodeN\":1,\"entropy\":0,\"lastUpdate\":1672630073190,\"lastSave\":1672629997005,\"totalPlaytime\":10868919800,\"playtimeSinceLastAug\":48600,\"playtimeSinceLastBitnode\":48600,\"moneySourceA\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":0,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":0,\"work\":0,\"servers\":0,\"other\":0,\"augmentations\":0}},\"moneySourceB\":{\"ctor\":\"MoneySourceTracker\",\"data\":{\"bladeburner\":0,\"casino\":0,\"class\":0,\"codingcontract\":0,\"corporation\":0,\"crime\":0,\"gang\":0,\"hacking\":0,\"hacknet\":0,\"hacknet_expenses\":0,\"hospitalization\":0,\"infiltration\":0,\"sleeves\":0,\"stock\":0,\"total\":0,\"work\":0,\"servers\":0,\"other\":0,\"augmentations\":0}},\"scriptProdSinceLastAug\":0,\"exploits\":[],\"achievements\":[{\"ID\":\"NS2\",\"unlockedOn\":1661761388993},{\"ID\":\"SCRIPTS_30\",\"unlockedOn\":1661761881624},{\"ID\":\"FIRST_HACKNET_NODE\",\"unlockedOn\":1661762183236},{\"ID\":\"WORKOUT\",\"unlockedOn\":1661762303207},{\"ID\":\"BRUTESSH.EXE\",\"unlockedOn\":1661765120590},{\"ID\":\"FTPCRACK.EXE\",\"unlockedOn\":1661770690149},{\"ID\":\"TOR\",\"unlockedOn\":1661780463188},{\"ID\":\"HACKNET_NODE_10M\",\"unlockedOn\":1661781121094},{\"ID\":\"RELAYSMTP.EXE\",\"unlockedOn\":1661781180988},{\"ID\":\"MAX_HACKNET_NODE\",\"unlockedOn\":1661785440704},{\"ID\":\"DRAIN_SERVER\",\"unlockedOn\":1661818557143},{\"ID\":\"INSTALL_1\",\"unlockedOn\":1661819946917},{\"ID\":\"CYBERSEC\",\"unlockedOn\":1661848004107},{\"ID\":\"TRAVEL\",\"unlockedOn\":1661863303135},{\"ID\":\"HTTPWORM.EXE\",\"unlockedOn\":1661922964325},{\"ID\":\"SQLINJECT.EXE\",\"unlockedOn\":1661922964349},{\"ID\":\"4S\",\"unlockedOn\":1661922964351},{\"ID\":\"SCRIPT_32GB\",\"unlockedOn\":1661923116721},{\"ID\":\"BITRUNNERS\",\"unlockedOn\":1661923621337},{\"ID\":\"30_HACKNET_NODE\",\"unlockedOn\":1662029814503},{\"ID\":\"DONATION\",\"unlockedOn\":1662080416604},{\"ID\":\"NITESEC\",\"unlockedOn\":1662127206582},{\"ID\":\"THE_BLACK_HAND\",\"unlockedOn\":1662155663262},{\"ID\":\"DAEDALUS\",\"unlockedOn\":1662164489662},{\"ID\":\"FORMULAS.EXE\",\"unlockedOn\":1662208804869},{\"ID\":\"SF1.1\",\"unlockedOn\":1662296637383},{\"ID\":\"COMBAT_3000\",\"unlockedOn\":1663290095193},{\"ID\":\"ILLUMINATI\",\"unlockedOn\":1663894814728},{\"ID\":\"THE_COVENANT\",\"unlockedOn\":1663900010454},{\"ID\":\"SF4.1\",\"unlockedOn\":1663905279519},{\"ID\":\"MAX_CORES\",\"unlockedOn\":1669369605375},{\"ID\":\"SF10.1\",\"unlockedOn\":1669369966258},{\"ID\":\"KARMA_1000000\",\"unlockedOn\":1670493098970},{\"ID\":\"REPUTATION_10M\",\"unlockedOn\":1672086888827}],\"terminalCommandHistory\":[\"clear\",\"free\",\"clear\",\"run share.js -t 5000\",\"run share.js -t 4500\",\"run share.js -t 4400\",\"run share.js -t 4300\",\"run share.js -t 4200\",\"run share.js -t 4100\",\"run share.js -t 4050\",\"kill 155\",\"run share.js -t 4055\",\"kill 156\",\"run share.js -t 4056\",\"kill 157\",\"run share.js -t 4065\",\"run share.js -t 4064\",\"clear\",\"cd chain/\",\"ls\",\"nano faction.js\",\"cd\",\"clear\",\"run go.js\",\"cd chain/\",\"ls\",\"nano install.js\",\"home\",\"clear\",\"run go.js\",\"cd chain/\",\"ls\",\"nano install.js\",\"cd\",\"cd singularity/\",\"ls\",\"cd\",\"nano go-high.js\",\"cd singularity/\",\"ls\",\"nano study.js\",\"nano money.js\",\"cd\",\"cd chain/\",\"ls\",\"nano misc.js\",\"cd\",\"clear\",\"run go.js\",\"run singularity/daemon.js\"],\"focus\":false,\"currentWork\":null,\"identifier\":\"a6ea82f80ca8d\"}}","AllServersSave":"{\"home\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":true,\"hostname\":\"home\",\"httpPortOpen\":false,\"ip\":\"47.5.8.7\",\"isConnectedTo\":true,\"maxRam\":32,\"messages\":[\"hackers-starting-handbook.lit\"],\"organizationName\":\"Home PC\",\"programs\":[\"NUKE.exe\",\"b1t_flum3.exe\"],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// NOTE: Do not import anything into this script.  The script should be\\n// self-contained and independent.\\n\\n/**\\n * A function for assertion.\\n *\\n * @param cond Assert that this condition is true.\\n * @return Throw an assertion error if the given condition is false.\\n */\\nfunction assert(cond) {\\n    if (!cond) {\\n        throw new Error(\\\"Assertion failed.\\\");\\n    }\\n}\\n\\n/**\\n * Scripts for managing a load chain.\\n */\\nfunction dir_chain() {\\n    const chain = [\\n        \\\"chain/faction.js\\\",\\n        \\\"chain/home.js\\\",\\n        \\\"chain/install.js\\\",\\n        \\\"chain/misc.js\\\",\\n        \\\"chain/money.js\\\",\\n        \\\"chain/study.js\\\",\\n    ];\\n    return chain;\\n}\\n\\n/**\\n * Scripts for solving Coding Contracts.\\n */\\nfunction dir_cct() {\\n    const cct = [\\n        \\\"cct/bipartite.js\\\",\\n        \\\"cct/caesar.js\\\",\\n        \\\"cct/grid.js\\\",\\n        \\\"cct/grid2.js\\\",\\n        \\\"cct/grid3.js\\\",\\n        \\\"cct/hamming.js\\\",\\n        \\\"cct/hamming2.js\\\",\\n        \\\"cct/interval.js\\\",\\n        \\\"cct/ip.js\\\",\\n        \\\"cct/jump.js\\\",\\n        \\\"cct/jump2.js\\\",\\n        \\\"cct/lzc.js\\\",\\n        \\\"cct/lzd.js\\\",\\n        \\\"cct/maths.js\\\",\\n        \\\"cct/parenthesis.js\\\",\\n        \\\"cct/prime.js\\\",\\n        \\\"cct/rle.js\\\",\\n        \\\"cct/solver.js\\\",\\n        \\\"cct/spiral.js\\\",\\n        \\\"cct/subarray.js\\\",\\n        \\\"cct/sum.js\\\",\\n        \\\"cct/sum2.js\\\",\\n        \\\"cct/trader.js\\\",\\n        \\\"cct/trader2.js\\\",\\n        \\\"cct/trader3.js\\\",\\n        \\\"cct/trader4.js\\\",\\n        \\\"cct/triangle.js\\\",\\n        \\\"cct/vigenere.js\\\",\\n    ];\\n    return cct;\\n}\\n\\n/**\\n * Scripts for managing a corporation.\\n */\\nfunction dir_corporation() {\\n    const corp = [\\\"corporation/corp.js\\\"];\\n    return corp;\\n}\\n\\n/**\\n * Scripts to automate gangs.\\n */\\nfunction dir_gang() {\\n    const gang = [\\n        \\\"gang/augment.js\\\",\\n        \\\"gang/crime.js\\\",\\n        \\\"gang/dead-speakers.js\\\",\\n        \\\"gang/go.js\\\",\\n        \\\"gang/program.js\\\",\\n        \\\"gang/slum-snakes.js\\\",\\n    ];\\n    return gang;\\n}\\n\\n/**\\n * Library files whose functionalities are used in various scripts.\\n */\\nfunction dir_lib() {\\n    const lib = [\\n        \\\"lib/array.js\\\",\\n        \\\"lib/cct.js\\\",\\n        \\\"lib/constant/bn.js\\\",\\n        \\\"lib/constant/bool.js\\\",\\n        \\\"lib/constant/cct.js\\\",\\n        \\\"lib/constant/corp.js\\\",\\n        \\\"lib/constant/crime.js\\\",\\n        \\\"lib/constant/exe.js\\\",\\n        \\\"lib/constant/faction.js\\\",\\n        \\\"lib/constant/gang.js\\\",\\n        \\\"lib/constant/hacknet.js\\\",\\n        \\\"lib/constant/io.js\\\",\\n        \\\"lib/constant/location.js\\\",\\n        \\\"lib/constant/misc.js\\\",\\n        \\\"lib/constant/pserv.js\\\",\\n        \\\"lib/constant/server.js\\\",\\n        \\\"lib/constant/sleeve.js\\\",\\n        \\\"lib/constant/study.js\\\",\\n        \\\"lib/constant/time.js\\\",\\n        \\\"lib/constant/work.js\\\",\\n        \\\"lib/constant/wse.js\\\",\\n        \\\"lib/corporation/corp.js\\\",\\n        \\\"lib/gang/gangster.js\\\",\\n        \\\"lib/gang/util.js\\\",\\n        \\\"lib/io.js\\\",\\n        \\\"lib/money.js\\\",\\n        \\\"lib/network.js\\\",\\n        \\\"lib/player.js\\\",\\n        \\\"lib/pserv.js\\\",\\n        \\\"lib/random.js\\\",\\n        \\\"lib/server.js\\\",\\n        \\\"lib/singularity/augment.js\\\",\\n        \\\"lib/singularity/crime.js\\\",\\n        \\\"lib/singularity/faction.js\\\",\\n        \\\"lib/singularity/network.js\\\",\\n        \\\"lib/singularity/program.js\\\",\\n        \\\"lib/singularity/study.js\\\",\\n        \\\"lib/singularity/util.js\\\",\\n        \\\"lib/singularity/work.js\\\",\\n        \\\"lib/sleeve/cc.js\\\",\\n        \\\"lib/sleeve/util.js\\\",\\n        \\\"lib/source.js\\\",\\n        \\\"lib/util.js\\\",\\n    ];\\n    return lib;\\n}\\n\\n/**\\n * Scripts at the top-most directory.\\n */\\nfunction dir_root() {\\n    const root = [\\n        \\\"buy-server.js\\\",\\n        \\\"find-cct.js\\\",\\n        \\\"go-high.js\\\",\\n        \\\"go-low.js\\\",\\n        \\\"go-mid.js\\\",\\n        \\\"go.js\\\",\\n        \\\"hack.js\\\",\\n        \\\"hnet-farm.js\\\",\\n        \\\"hram.js\\\",\\n        \\\"karma.js\\\",\\n        \\\"kill-script.js\\\",\\n        \\\"kill-server.js\\\",\\n        \\\"low-end.js\\\",\\n        \\\"nmap.js\\\",\\n        \\\"restart-server.js\\\",\\n        \\\"share.js\\\",\\n        \\\"shortest-path.js\\\",\\n        \\\"trade-bot.js\\\",\\n        \\\"world-server.js\\\",\\n    ];\\n    return root;\\n}\\n\\n/**\\n * Scripts that use the Singularity API.\\n */\\nfunction dir_singularity() {\\n    const dir = [\\n        \\\"singularity/crime.js\\\",\\n        \\\"singularity/daemon.js\\\",\\n        \\\"singularity/faction-city.js\\\",\\n        \\\"singularity/faction-crime.js\\\",\\n        \\\"singularity/faction-early.js\\\",\\n        \\\"singularity/faction-end.js\\\",\\n        \\\"singularity/faction-hack.js\\\",\\n        \\\"singularity/faction-megacorp.js\\\",\\n        \\\"singularity/faction.js\\\",\\n        \\\"singularity/home.js\\\",\\n        \\\"singularity/install.js\\\",\\n        \\\"singularity/int-farm.js\\\",\\n        \\\"singularity/money.js\\\",\\n        \\\"singularity/program.js\\\",\\n        \\\"singularity/study.js\\\",\\n    ];\\n    return dir;\\n}\\n\\n/**\\n * Scripts that use the Sleeve API.\\n */\\nfunction dir_sleeve() {\\n    const dir = [\\\"sleeve/cc.js\\\", \\\"sleeve/money.js\\\", \\\"sleeve/study.js\\\"];\\n    return dir;\\n}\\n\\n/**\\n * Scripts to test various aspects of the game.\\n */\\nfunction dir_test() {\\n    const dir = [\\n        // Scripts used to gather data on karma and stat gains for each crime.\\n        \\\"test/crime/crime.js\\\",\\n        \\\"test/crime/crime-int.js\\\",\\n        // Scripts that are used to determine the gain in Intelligence XP from\\n        // various actions.\\n        \\\"test/intelligence/augment-buy.js\\\",\\n        \\\"test/intelligence/augment-install.js\\\",\\n        \\\"test/intelligence/augment-post-install.js\\\",\\n        \\\"test/intelligence/crime.js\\\",\\n        \\\"test/intelligence/daemon.js\\\",\\n        \\\"test/intelligence/faction-join-all.js\\\",\\n        \\\"test/intelligence/faction-join.js\\\",\\n        \\\"test/intelligence/home.js\\\",\\n        \\\"test/intelligence/int.js\\\",\\n        \\\"test/intelligence/program.js\\\",\\n        \\\"test/intelligence/relocate.js\\\",\\n        \\\"test/intelligence/study.js\\\",\\n        \\\"test/intelligence/tor-program.js\\\",\\n        \\\"test/intelligence/tor.js\\\",\\n        \\\"test/intelligence/travel.js\\\",\\n        \\\"test/intelligence/util.js\\\",\\n    ];\\n    return dir;\\n}\\n\\n/**\\n * The directory structure under \\\"src/\\\" on github.com.\\n *\\n * @return All files under \\\"src/\\\" on github.com.\\n */\\nfunction dir_structure() {\\n    const filesystem = [\\n        dir_root(),\\n        dir_chain(),\\n        dir_cct(),\\n        dir_corporation(),\\n        dir_gang(),\\n        dir_lib(),\\n        dir_singularity(),\\n        dir_sleeve(),\\n        dir_test(),\\n    ].flat();\\n    assert(filesystem.length > 0);\\n    return filesystem;\\n}\\n\\n/**\\n * A formatted name of the file where we want to save the downloaded file.  The\\n * terminal command \\\"wget\\\" behaves differently from the API function\\n * \\\"ns.wget()\\\".  The command \\\"wget\\\" is happy to create the required directory\\n * if we do any of the following:\\n *\\n * wget /URL/to/src/file.js src/file.js\\n * wget /URL/to/src/file.js /src/file.js\\n *\\n * The API function \\\"ns.wget()\\\" is happy with this\\n *\\n * await ns.wget(\\\"/URL/to/src/file.js\\\", \\\"/src/file.js\\\", \\\"home\\\");\\n *\\n * but cannot handle this\\n *\\n * await ns.wget(\\\"/URL/to/src/file.js\\\", \\\"src/file.js\\\", \\\"home\\\");\\n *\\n * That is, we must have the leading forward slash \\\"/\\\" character for the\\n * function to work properly.  Here are the relevant issues on github.com:\\n *\\n * https://github.com/danielyxie/bitburner/issues/1935\\n * https://github.com/danielyxie/bitburner/issues/2115\\n *\\n * @param f A file name.  Cannot be empty string.\\n * @return A possibly new file name with the leading forward slash \\\"/\\\"\\n *     character added.\\n */\\nfunction target_name(f) {\\n    assert(f.length > 0);\\n    // Remove any leading forward slash \\\"/\\\" character.\\n    let fname = f.toString();\\n    const slash = \\\"/\\\";\\n    if (f.startsWith(slash)) {\\n        fname = f.substring(1, f.length);\\n    }\\n    // If the file should be at the root directory of the home server, then it\\n    // is just a file name without any other parent directory.  Something like\\n    // \\\"file.js\\\" would be saved to the root directory.  If the file has a\\n    // parent directory under root, then it would be something like\\n    // \\\"src/file.js\\\".  When we split the string according to \\\"/\\\", we should end\\n    // up with an array of at least 2 elements.\\n    const newf = fname.split(slash);\\n    if (newf.length === 1) {\\n        return fname;\\n    }\\n    assert(newf.length > 1);\\n    return slash + fname;\\n}\\n\\n/**\\n * Print the usage information.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction usage(ns) {\\n    const msg = \\\"Usage: run pull.js\\\";\\n    ns.tprint(msg);\\n}\\n\\n/**\\n * Pull all files (on github.com) under the directory quacksouls/bitburner/src\\n * into the game.\\n *\\n * Usage: run pull.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Sanity check.\\n    // The script does not accept any command line arguments.\\n    if (ns.args.length > 0) {\\n        usage(ns);\\n        return;\\n    }\\n    // Pull files into our home server.\\n    const home = \\\"home\\\";\\n    // The base URL where files are found.\\n    const github = \\\"https://raw.githubusercontent.com/\\\";\\n    const quack = \\\"quacksouls/bitburner/main/src/\\\";\\n    const prefix = github + quack;\\n    // Pull files into home server.\\n    for (const f of dir_structure()) {\\n        const file = prefix + f;\\n        const target = target_name(f);\\n        const success = await ns.wget(file, target, home);\\n        if (success) {\\n            ns.tprint(file);\\n        }\\n    }\\n    ns.tprint(\\\"Download complete.\\\");\\n}\\n\",\"filename\":\"pull.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"pull.js\",\"url\":\"blob:https://danielyxie.github.io/a1394588-372e-44f0-bbd7-2ec4780848c8\",\"moduleSequenceNumber\":121161}],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":676,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { pserv } from \\\"/lib/constant/pserv.js\\\";\\nimport { home_t } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { PurchasedServer } from \\\"/lib/pserv.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport {\\n    assert,\\n    choose_best_server,\\n    choose_targets,\\n    filter_bankrupt_servers,\\n    is_bankrupt,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Buy servers, each having as high an amount of RAM as we can afford.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function buy_servers(ns) {\\n    // The amount of RAM for each purchased server.  If 0, we try to purchase\\n    // servers where the amount of RAM allows us to run our hack script using\\n    // 2 threads.\\n    const psv = new PurchasedServer(ns);\\n    const default_ram = psv.default_ram();\\n    // By default, we want to purchase pserv.MIN servers.  As for the remaining\\n    // servers that make up the number to reach the maximum number of purchased\\n    // servers, we wait until we have enough money to purchase each of them.\\n    // The constant pserv.MIN should be a small number so we can bootstrap a\\n    // source of passive income and Hack XP.\\n    let ram = pserv_ram(ns, pserv.MIN);\\n    if (ram <= default_ram) {\\n        // Try to purchase servers, each with the default amount of ram.\\n        await stage_one(ns);\\n        return;\\n    }\\n    // Here we assume we already have purchased servers, each with the default\\n    // amount of RAM.  Now try to purchase servers, each with a higher amount\\n    // of RAM than the default amount.  We wait to accumulate enough money to\\n    // purchase the maximum number of servers.\\n    ram = pserv_ram(ns, psv.limit());\\n    if (ram <= default_ram) {\\n        return;\\n    }\\n    assert(ram > default_ram);\\n    await next_stage(ns, ram);\\n}\\n\\n/**\\n * Whether we have the maximum number of purchased servers.\\n *\\n * @param ns The Netscript API.\\n * @return true if we already have the maximum number of purchased servers;\\n *     false otherwise.\\n */\\nfunction has_max_pserv(ns) {\\n    const player = new Player(ns);\\n    const psv = new PurchasedServer(ns);\\n    return player.pserv().length === psv.limit();\\n}\\n\\n/**\\n * Purchase servers that have more than the default amount of RAM.  Call this\\n * function multiple times with different arguments to upgrade our purchased\\n * servers to higher RAM.\\n *\\n * @param ns The Netscript API.\\n * @param ram The amount of RAM for each purchased server.\\n */\\nasync function next_stage(ns, ram) {\\n    const psv = new PurchasedServer(ns);\\n    assert(psv.is_valid_ram(ram));\\n    // If we have zero purchased servers, then buy servers with the given\\n    // amount of RAM.\\n    const player = new Player(ns);\\n    const current_pserv = player.pserv();\\n    const msg = `Buy servers with RAM: ${ram}`;\\n    if (current_pserv.length < 1) {\\n        ns.print(msg);\\n        await update(ns, ram);\\n        return;\\n    }\\n    // Assume we have at least 1 purchased server.\\n    assert(current_pserv.length > 0);\\n    const server = new Server(ns, current_pserv[0]);\\n    if (server.ram_max() < ram) {\\n        // If each purchased server has less than the given amount of RAM, then\\n        // delete the servers and purchase servers with the given amount of RAM.\\n        ns.print(msg);\\n        psv.kill_all();\\n        await update(ns, ram);\\n    } else if (server.ram_max() === ram) {\\n        // The current purchased servers have the same amount of RAM as our\\n        // target RAM.  Continue purchasing more servers with the current\\n        // amount of RAM.\\n        ns.print(msg);\\n        await update(ns, ram);\\n    } else {\\n        // Each current purchased server has more RAM than the given amount of\\n        // RAM.\\n        assert(ram < server.ram_max());\\n    }\\n}\\n\\n/**\\n * The possible amount of RAM for each purchased server.\\n *\\n * @param ns The Netscript API.\\n * @param minserv The minimum number of servers to buy.  Must be a positive\\n *     integer.\\n * @return The amount of RAM for each purchased server.  Return 0 if we cannot\\n *     afford the given number of purchased servers.\\n */\\nfunction pserv_ram(ns, minserv) {\\n    assert(minserv > 0);\\n    // The possible amount of RAM for a purchased server.  We want the lowest\\n    // value to be the default amount of RAM.\\n    const psv = new PurchasedServer(ns);\\n    const default_ram = psv.default_ram();\\n    let ram = [default_ram];\\n    for (const r of psv.valid_ram()) {\\n        if (r > default_ram) {\\n            ram.push(r);\\n        }\\n    }\\n    ram = MyArray.sort_descending(ram);\\n    // Let's see whether we can purchase servers, each having the given amount\\n    // of RAM.  Start with the highest amount of RAM.  See if we can buy at\\n    // least minserv servers, each with the given amount of RAM.  If not, then\\n    // decrease the amount of RAM and repeat the above process.\\n    const player = new Player(ns);\\n    let psram = 0;\\n    for (const r of ram) {\\n        const cost = minserv * psv.cost(r);\\n        if (cost > player.money()) {\\n            continue;\\n        }\\n        psram = r;\\n        break;\\n    }\\n    return psram;\\n}\\n\\n/**\\n * Obtain a new batch of target servers to hack.  Exclude bankrupt servers.\\n *\\n * @param ns The Netscript API.\\n * @param target An array of current targets.\\n * @return A possibly new array of more targets to hack.\\n */\\nfunction renew_targets(ns, target) {\\n    let new_target = Array.from(target);\\n    if (new_target.length < 1) {\\n        new_target = filter_bankrupt_servers(\\n            ns,\\n            choose_targets(ns, network(ns))\\n        );\\n        assert(new_target.length > 0);\\n    }\\n    return new_target;\\n}\\n\\n/**\\n * This is the early stage, where it is assumed we are starting the game or\\n * have just installed a bunch of Augmentations.  Each purchased server should\\n * have a small amount of RAM, enough to run our hacking script using at least\\n * 2 threads.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function stage_one(ns) {\\n    // Do we already have the maximum number of purchased servers?\\n    const psv = new PurchasedServer(ns);\\n    const default_ram = psv.default_ram();\\n    if (has_max_pserv(ns)) {\\n        const msg = `RAM: ${default_ram}. Already has max pserv.`;\\n        ns.print(msg);\\n        return;\\n    }\\n    // If we have zero purchased servers, then start with purchased servers\\n    // that have the default amount of RAM.\\n    const player = new Player(ns);\\n    const current_pserv = player.pserv();\\n    const msg = `Buy servers with default RAM: ${default_ram}`;\\n    if (current_pserv.length < 1) {\\n        ns.print(msg);\\n        await update(ns, default_ram);\\n        return;\\n    }\\n    // Assume we have at least 1 purchased server.\\n    assert(current_pserv.length > 0);\\n    assert(current_pserv.length < psv.limit());\\n    const server = new Server(ns, current_pserv[0]);\\n    // Skip the stage if a current purchased server has more than the default\\n    // amount of RAM.\\n    if (default_ram < server.ram_max()) {\\n        return;\\n    }\\n    assert(server.ram_max() === default_ram);\\n    ns.print(msg);\\n    await update(ns, default_ram);\\n}\\n\\n/**\\n * Purchase the maximum number of servers and run our hack script on those\\n * servers.  The function chooses the \\\"best\\\" targets to hack.\\n *\\n * @param ns The Netscript API.\\n * @param ram The amount of RAM for each purchased server.  Must be a positive\\n *     integer and a power of 2.\\n */\\nasync function update(ns, ram) {\\n    // The amount of RAM must be a power of 2.  RAM is assumed to be in GB.\\n    const psv = new PurchasedServer(ns);\\n    const server_ram = Math.floor(ram);\\n    assert(psv.is_valid_ram(server_ram));\\n    // Continuously try to purchase a new server until we have reached the\\n    // maximum number of servers we can buy.\\n    const player = new Player(ns);\\n    let i = player.pserv().length;\\n    let target = [];\\n    // Choose a static target against which all purchased servers would attack.\\n    // Depending on the amount of RAM on our home server, we would direct all\\n    // purchased servers to attack one target.\\n    const static_target = choose_best_server(ns, renew_targets(ns, target));\\n    while (i < psv.limit()) {\\n        // Do we have enough money to buy a new server?\\n        if (player.money() > psv.cost(server_ram)) {\\n            // Purchase a new server.\\n            const hostname = psv.purchase(pserv.PREFIX, server_ram);\\n            const server = new Server(ns, hostname);\\n            // Choose the best target server.\\n            let s = \\\"\\\";\\n            if (ns.getServerMaxRam(player.home()) <= home_t.RAM_HIGH) {\\n                // We want all purchased servers to attack 1 server.\\n                s = static_target;\\n            } else {\\n                // Each purchased server attacks its own target.\\n                target = renew_targets(ns, target);\\n                s = choose_best_server(ns, target);\\n            }\\n            assert(!is_bankrupt(ns, s));\\n            const target_server = new Server(ns, s);\\n            target = target.filter((t) => t !== target_server.hostname());\\n            // Let the purchased server attack the chosen target.\\n            assert(await target_server.gain_root_access());\\n            assert(await server.deploy(target_server.hostname()));\\n            i++;\\n        }\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n}\\n\\n/**\\n * Continuously try to purchase servers and use those to hack world servers.\\n * If our funds are sufficient, try to upgrade to servers with higher amounts\\n * of RAM.\\n *\\n * Usage: run buy-server.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"getServerUsedRam\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Continuously try to purchase servers.\\n    for (;;) {\\n        await buy_servers(ns);\\n        await ns.sleep(wait_t.MINUTE);\\n    }\\n}\\n\",\"filename\":\"buy-server.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ab34825a-8239-4b16-baef-946b6d36e2db\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a61e2a6d-8566-4f7e-ac67-543f8802c5e9\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/56f08d7f-736b-4ba8-b0fb-30ffc17c5aec\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/07d0daf4-846c-4085-8ea8-1fa6398fc2bb\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/abf994a6-6add-4579-86d3-86c501f5cd86\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/676cbb64-ba41-48fa-b572-89aaff85d893\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1e566975-6e14-4fdf-988b-05fa6aa71a02\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ec6b5f73-fd4f-40fc-bce5-2d8a9c6f9d64\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b3a8de37-8005-467d-9ded-24f09cb41414\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7efaa9af-4d5c-41cc-b34a-f50e8747b633\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5976858b-6bee-44ef-ae9c-29ac3a3c4e7a\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7f8d8266-258d-4de9-8bc3-a614402521c6\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/efe027db-ee1f-4d9f-94d7-2ff54ce64f8e\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8544012e-4450-45c1-8472-a89da7b4444e\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0861c145-f57b-474d-88db-74890f3c6815\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6f22d7e8-a624-4fad-8b38-238de42ac33e\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1c7d284f-0f2d-4038-b1f2-676fb9ae446c\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4d79b798-b9c8-4a6d-9ee0-e4d77f373f38\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c2eb843c-e5a1-4367-b197-5aaa198a346e\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6c7c9a97-4e68-434b-a10c-94fbfcd9b210\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b17b42f8-1d25-46a0-b535-1784398d7f44\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/1cac1304-4db5-4d47-b073-0647145a475c\",\"moduleSequenceNumber\":290},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/27094566-cfa2-4e6c-b86a-306d7ec43cb5\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c8baecbc-28b9-4cf3-a8f7-e3d4ebe394d4\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c22a68f2-3798-4972-88d9-5a6120e6c3a1\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e0facc1f-f829-4c6d-99cd-fd5180979b04\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/35fc42b3-10e0-4a74-84b4-1f62b9736edb\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5adcd2ac-b79e-4e65-bdfb-3b82d9491861\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/96a72d0a-03f3-49b3-95df-1669bc5a2c9e\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1e50da20-6aff-4d8e-a6ce-909a3e284358\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/feb7ac9e-4cdf-498a-bf21-4e0574bfa042\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/42de5f29-a4a0-4532-a441-83dcc84fb720\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/pserv.js\",\"url\":\"blob:https://danielyxie.github.io/0ed813dd-295c-468b-9e57-4f2f4055745f\",\"moduleSequenceNumber\":274},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6285f894-aae8-482a-8ae8-52c23288ad64\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/pserv.js\",\"url\":\"blob:https://danielyxie.github.io/fc891adc-d48c-4181-b784-00a98ae50115\",\"moduleSequenceNumber\":288},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9109e83d-17d0-474d-8a00-24e1298e7b74\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0f240c92-3e34-4d4a-864d-ea2b7df14c24\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9a40f93e-c5ee-42d4-b854-6e3d26d27cb4\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/541d0f81-b0ce-41e5-856d-ddc72695055f\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/286c2f50-e9c6-4caa-b81c-f942c3e7bf51\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1d70d681-6b16-4b52-ab1e-e913a1b9e8f8\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dc9732c9-ac21-4958-8752-cd9c8e92fbc6\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/27a82d5a-c5e4-4f38-a1fe-8f7aedb5c71d\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e65f7819-2a4f-4e2f-a7c6-7d2b833656ab\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4cd92d59-16ff-4b40-96b3-4a05151dcc41\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1ed73ad1-3b3f-4002-b3f3-245482fd1b67\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a6a987bb-4774-40cd-b46c-9b5df462d879\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/1f85fec4-9d8f-413a-8909-0e52d40c10fd\",\"moduleSequenceNumber\":287},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/23077091-03ab-42ca-9802-20e889586ab0\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3bf6479e-5629-40df-84ca-31476eee10e1\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ba0e391a-2f6d-40e4-a5f7-ae986a03566a\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fa834d8e-819c-457e-8e7f-e6855111a4e9\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3c267042-9aba-49f9-b6fa-d629e30a35af\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9b8fb212-a541-44c6-b33e-af3ac1c121c9\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bbac2eb8-ee58-41b9-ad4f-f29080960c50\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c9ecbb1c-6e5d-46c8-97b0-f602683014b4\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/88008b54-0785-4e76-8435-ed3ca9f31b12\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f5e01db7-af0d-41a0-bc67-f5f11f18b551\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/1eafa1f9-0845-410a-935d-f2b83dafe1be\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/c789ec6b-59f4-4d2d-988c-9c456a16d362\",\"moduleSequenceNumber\":286},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f5dc486e-1f08-4182-9750-f0a03ea040f4\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7b65c396-8d73-4724-ae16-2c786ef8daad\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/pserv.js\",\"url\":\"blob:https://danielyxie.github.io/2c5083dd-9992-48a7-92eb-8a06358c8ec8\",\"moduleSequenceNumber\":274},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/da5d7cf8-55f6-4f24-88a6-9aaf6fd751f2\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a4088658-a8f0-4444-b56f-a2b1474e630b\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4b36e0db-363d-44bf-af44-265fa93a1669\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/405f1a69-f900-4633-8f36-f1cacb2b6b53\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f32e6e1d-10ea-4d55-bee7-91913ca847d3\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/17267f76-b692-4cd5-826d-d103942eb222\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7251fdc9-a7a5-46ea-82a3-8766e1901676\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c3fcfb39-ddef-4447-b5e5-3b26da033f4c\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e0e6f2d9-4783-4a10-8a08-80b41c08d26f\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/962967a3-5d12-4b07-b4ec-4773f7eb3dfa\",\"moduleSequenceNumber\":260},{\"filename\":\"buy-server.js\",\"url\":\"blob:https://danielyxie.github.io/d6309173-c956-4561-8f71-995cdb855de4\",\"moduleSequenceNumber\":399}],\"dependents\":[],\"ramUsage\":16.05,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":677,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { cct } from \\\"/lib/constant/cct.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\n\\n/**\\n * Find coding contracts on world servers.  This script essentially searches\\n * the network of world servers to find coding contracts.\\n *\\n * Usage: run find-cct.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const server = network(ns);\\n    server.push(home);\\n    for (const host of server) {\\n        const file = ns.ls(host, cct.SUFFIX);\\n        if (file.length < 1) {\\n            continue;\\n        }\\n        // Print the name of the coding contract, together with its type.\\n        for (const f of file) {\\n            const type = ns.codingcontract.getContractType(f, host);\\n            ns.tprint(`${host}: ${f}, ${type}`);\\n        }\\n    }\\n}\\n\",\"filename\":\"find-cct.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":9.25,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":678,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"codingcontract.getContractType\",\"cost\":5},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_singularity_api } from \\\"/lib/source.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * This function should be run immediately after the soft reset of installing a\\n * bunch of Augmentations.  Our purpose is to gain some money and Hack XP\\n * early on when our stats are low.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reboot(ns) {\\n    let extra = \\\"low-end.js\\\";\\n    if (ns.getServerMaxRam(home) > home_t.RAM_HIGH) {\\n        extra = \\\"world-server.js\\\";\\n    }\\n    const script = [\\n        extra,\\n        \\\"hnet-farm.js\\\",\\n        \\\"buy-server.js\\\",\\n        \\\"trade-bot.js\\\",\\n        \\\"/cct/solver.js\\\",\\n        \\\"hram.js\\\",\\n    ];\\n    script.forEach((s) => exec(ns, s));\\n}\\n\\n/**\\n * NOTE: Assume our home server to have at least 512GB RAM.\\n *\\n * Restart our source of income and Hack XP.  This script is useful whenever we\\n * have installed a bunch of Augmentations and we want to automatically restart\\n * scripts to:\\n *\\n * (1) Purchase Hacknet nodes and manage our farm of nodes.\\n * (2) Buy servers and use each purchased server to hack a target server in the\\n *     game world.\\n * (3) Gain root access to servers in the game world (excluding purchased\\n *     servers) and use each server to hack itself or a low-end server.\\n *\\n * Usage: run go-high.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    log(ns, \\\"Home server is high-end. Bootstrap with all scripts.\\\");\\n    reboot(ns);\\n    assert(has_singularity_api(ns));\\n    exec(ns, \\\"/chain/study.js\\\");\\n}\\n\",\"filename\":\"go-high.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/dcd0c95e-5852-4cfb-b0e8-a8f373f14ed1\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b306299f-3a52-4759-8ff3-ff5df0309b44\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1b64d677-24fb-4b85-9670-ad62556628b5\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/020259dc-aa79-4b90-9fb7-40146661bfcb\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8afced60-641e-4e0e-b47c-8ec93315d350\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f81ba16f-646f-47c0-9960-ae1d752c4109\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f91e870d-a0f7-4eef-8734-7c49a9136aec\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6eb7cb68-b420-4dc7-b0a1-f7ce7d263e7d\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/915d7c8c-7734-461e-86a9-2add1ed59ad8\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/19b100cc-7724-4ffc-acbe-3974ed57f292\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9ca6b4ac-2e98-418d-9286-ba38e82daf1b\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2bf9515c-f5e4-4a78-8462-2bef81b01c19\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5bae4073-bf86-42bf-adbb-5a757bf366a3\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c5b27444-0205-4419-ac3d-2f3f6bc6b527\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/af5e615a-1383-40c3-9557-730241779136\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dec7e490-7d2e-48a5-9c7b-21225830d584\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fdd38edc-2cb8-4a5a-9567-b96043f857dc\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b376903e-e362-46c3-ab2e-7f0ac87e68e4\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/54225416-c6a2-461e-9a5e-a02cfb69488e\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/845086e6-f44f-42c8-9c07-da47a0795028\",\"moduleSequenceNumber\":68961},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/b71d0fa6-33c6-4f93-acf7-9b60444c3c74\",\"moduleSequenceNumber\":69000},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f46501c4-5427-49b5-b875-e1bf5a3257fd\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8865970a-e115-4133-a4c9-8f17c68dace3\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/06ef3ce5-ac7e-44c6-aa29-3409e80b3638\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8b5e16a0-c48a-4dd5-8004-cce38dc4d870\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/28bee529-bdff-474a-bec8-91b87f60f1f9\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b80715c2-b1f8-4b95-9b95-8fa46ac1b90b\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/83b4bfbc-2f3e-44ee-932b-6edc1c6abf28\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0d07cd12-1763-416a-a166-d21085d22045\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3d5fcdf6-7286-40e5-a92d-68179838ee62\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/205d5749-f11b-429d-bf51-ab3ce7a57e14\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/21545855-3379-452f-a70f-260ac815df8d\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c54aec84-6757-4c9a-8cac-c7ee28ad081d\",\"moduleSequenceNumber\":68974},{\"filename\":\"go-high.js\",\"url\":\"blob:https://danielyxie.github.io/51abcbc0-200d-4d09-ba55-141c503fb89f\",\"moduleSequenceNumber\":69039}],\"dependents\":[],\"ramUsage\":3.05,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":679,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_singularity_api } from \\\"/lib/source.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * This function should be run immediately after the soft reset of installing a\\n * bunch of Augmentations or after visiting a new BitNode.  Our purpose is to\\n * gain some money and Hack XP early on when our stats are low.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function reboot(ns) {\\n    // Execute a script, let it run for a while, kill the script, and run\\n    // another script.  Assume we do not have enough RAM to let multiple\\n    // scripts running at the same time.\\n    const script = [\\\"hnet-farm.js\\\", \\\"low-end.js\\\"];\\n    for (const s of script) {\\n        exec(ns, s);\\n        await ns.sleep(wait_t.DEFAULT);\\n        assert(ns.kill(s, home));\\n    }\\n}\\n\\n/**\\n * NOTE: This script assumes our home server has a small amount of RAM,\\n * possibly less than 64GB RAM.\\n *\\n * Restart our source of income and Hack XP.  This script is useful whenever we\\n * have installed a bunch of Augmentations and we want to automatically restart\\n * scripts to:\\n *\\n * (1) Purchase Hacknet nodes and manage our farm of nodes.\\n * (2) Buy servers and use each purchased server to hack a target server in the\\n *     game world.\\n * (3) Gain root access to servers in the game world (excluding purchased\\n *     servers) and use each server to hack itself or a low-end server.\\n *\\n * Our goal in this script is to raise the amount of RAM on our home server to\\n * at least 512GB.\\n *\\n * Usage: run go-low.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    log(\\n        ns,\\n        \\\"Home server is low-end. Bootstrap with a small number of scripts.\\\"\\n    );\\n    await reboot(ns);\\n    assert(has_singularity_api(ns));\\n    exec(ns, \\\"/chain/study.js\\\");\\n}\\n\",\"filename\":\"go-low.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1b10790f-dbc7-4e26-8fed-33085d42228f\",\"moduleSequenceNumber\":222},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/98f825f3-012b-4a37-9646-784df26ca8c5\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/86606507-6e0f-4350-bfef-c4edb824a1d7\",\"moduleSequenceNumber\":217},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c1a66c5b-bd49-4fe2-9414-dd6a17e1a8e5\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/09f4525a-66d1-4645-b7e3-d75fb45b229a\",\"moduleSequenceNumber\":214},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a13376f6-4eb9-4d48-bc11-906168f9ad7a\",\"moduleSequenceNumber\":213},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/cc7dee17-72c0-4d43-8984-2fad5e925e30\",\"moduleSequenceNumber\":210},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a9bdb128-e4dd-4a57-9cc2-28e93d6f6474\",\"moduleSequenceNumber\":209},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/972b3fac-ba0d-4c41-82ca-c6d487f4db2c\",\"moduleSequenceNumber\":244},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/39557327-451b-464a-b6cd-9b4f5853f1b1\",\"moduleSequenceNumber\":222},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8f26a765-ff88-4ad5-a051-7b7c51a4e616\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b604b992-b146-45f5-98ac-637c812dfd88\",\"moduleSequenceNumber\":217},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/863244b8-c7a7-4054-916b-97e39133e272\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/78309bcd-acfc-4917-9e4c-361eaea75248\",\"moduleSequenceNumber\":214},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/03ddcebb-1715-4fe7-897e-00abbce2cb82\",\"moduleSequenceNumber\":213},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bc7e8724-74ee-40ab-ba8a-1d69a03ae6f7\",\"moduleSequenceNumber\":210},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/01b3d338-5ef2-4f4a-8cd1-b0a4f1cfc703\",\"moduleSequenceNumber\":209},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6fc34c44-4148-4fc6-a354-31cd0e074732\",\"moduleSequenceNumber\":244},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a392a7ff-3c8a-42ec-8dd9-bab7fc702616\",\"moduleSequenceNumber\":205},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/6620a95b-06e8-405d-a24c-bfd2405586ac\",\"moduleSequenceNumber\":204},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/2f9ddeb9-7c96-440e-8d84-364fec38e5f5\",\"moduleSequenceNumber\":243},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/24716f81-2b13-49a0-8482-6ed547b1d161\",\"moduleSequenceNumber\":222},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a4a1fded-5092-4e0e-af3b-4af355c5804c\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9568f4df-8b73-4867-a3b5-f4ca6a97ae6a\",\"moduleSequenceNumber\":217},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7b6e7b46-1909-406c-a593-5695aabd244a\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d24f27ab-aa22-41ad-a02e-3376f33a7967\",\"moduleSequenceNumber\":214},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/59d2304f-6c70-4ca3-b613-be611326f773\",\"moduleSequenceNumber\":213},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c92c1a16-1a49-48d2-93db-dc7bd676f80f\",\"moduleSequenceNumber\":210},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e2be8877-e8a2-43f2-bc92-be4e19957d4d\",\"moduleSequenceNumber\":209},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b233994c-0754-4647-8fa5-25f0fc3c2917\",\"moduleSequenceNumber\":244},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/563ea112-8257-4325-adfa-852cbb049631\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/18370ad9-beb2-4782-8bb0-ae44f0dece35\",\"moduleSequenceNumber\":226},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d0d02c77-b0a4-4c49-9893-29673b13ce0d\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cd7cda48-194c-438f-b627-ebef25b32508\",\"moduleSequenceNumber\":217},{\"filename\":\"go-low.js\",\"url\":\"blob:https://danielyxie.github.io/7aa197ad-b776-452a-8d0d-660c7b1d6ec0\",\"moduleSequenceNumber\":282}],\"dependents\":[],\"ramUsage\":3.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":680,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_singularity_api } from \\\"/lib/source.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * This function should be run immediately after the soft reset of installing a\\n * bunch of Augmentations.  Our purpose is to gain some money and Hack XP\\n * early on when our stats are low.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function reboot(ns) {\\n    const target = \\\"low-end.js\\\";\\n    const script = [\\\"hnet-farm.js\\\", target, \\\"buy-server.js\\\", \\\"/cct/solver.js\\\"];\\n    script.forEach((s) => exec(ns, s));\\n    // Wait a while and then kill a script to free up some RAM on the home\\n    // server.\\n    await ns.sleep(wait_t.MINUTE);\\n    script.filter((s) => s !== target).forEach((t) => assert(ns.kill(t, home)));\\n}\\n\\n/**\\n * NOTE: Assume our home server has at least 128GB RAM.\\n *\\n * Restart our source of income and Hack XP.  This script is useful whenever we\\n * have installed a bunch of Augmentations and we want to automatically restart\\n * scripts to:\\n *\\n * (1) Purchase Hacknet nodes and manage our farm of nodes.\\n * (2) Buy servers and use each purchased server to hack a target server in the\\n *     game world.\\n * (3) Gain root access to servers in the game world (excluding purchased\\n *     servers) and use each server to hack itself or a low-end server.\\n *\\n * Usage: run go-mid.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    log(ns, \\\"Home server is mid-end. Bootstrap with some scripts.\\\");\\n    await reboot(ns);\\n    assert(has_singularity_api(ns));\\n    exec(ns, \\\"/chain/study.js\\\");\\n}\\n\",\"filename\":\"go-mid.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b1b7a277-f228-4eb3-8ee0-d322320ee7df\",\"moduleSequenceNumber\":222},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/549d0eb2-11bc-44cc-943e-8a3270bb082c\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8b9fab3f-ef80-4fe5-b75b-b90e17d93d43\",\"moduleSequenceNumber\":217},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cb0c47a7-51e8-4a6f-b40a-e99509684e12\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1f1730c8-bcea-49e2-b83e-63a0bd9cc8ec\",\"moduleSequenceNumber\":214},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5bb2984a-cd3d-4ea3-9aa0-190bd49ab9c1\",\"moduleSequenceNumber\":213},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4733b188-2c66-4a57-8c3e-08bc50fd2754\",\"moduleSequenceNumber\":210},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/df222653-8ca3-4cc5-afac-86cff5904362\",\"moduleSequenceNumber\":209},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/13a6421e-880a-4e66-85de-c6fe1d17f495\",\"moduleSequenceNumber\":244},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3b2f6b69-7efa-4359-bb3d-279ea14ea2b3\",\"moduleSequenceNumber\":222},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cd7bc475-830e-4ebc-96c9-35ace2310a92\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1825077c-55bd-4907-afde-61121059300e\",\"moduleSequenceNumber\":217},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/27b80b7d-74d4-4f49-8e6e-fd20a21f04de\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3533a843-5ea7-4e50-bbf2-e8e15342ecaf\",\"moduleSequenceNumber\":214},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/012eb570-4d8a-4245-a980-4693187b9296\",\"moduleSequenceNumber\":213},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/44eb1f2a-b87a-4d42-ad43-9e0ea8e62a1d\",\"moduleSequenceNumber\":210},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/de34e0c2-d92a-4ec4-a7b7-09aed5d856a8\",\"moduleSequenceNumber\":209},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/60acffed-d5b8-4798-95b5-063dbed77f82\",\"moduleSequenceNumber\":244},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/0fef8ce1-5537-42eb-bb6b-a53ae1f87249\",\"moduleSequenceNumber\":205},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/b4039ff2-6a64-4df3-a3df-a1eefe4fd5f1\",\"moduleSequenceNumber\":204},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/b1023df2-fca3-44b6-8cde-bf97281121f9\",\"moduleSequenceNumber\":243},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0be40e2d-bc7c-422b-9043-bd8c93bb0f0f\",\"moduleSequenceNumber\":222},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/52c48cc9-ce61-41d0-8bb8-7ced38b94ea0\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/96bbfa7c-c649-43e6-9ded-09b46fa50440\",\"moduleSequenceNumber\":217},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/45153436-ff88-496c-bda9-6521b33b4fd4\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7bac5630-ffaa-45bb-9d11-c5e99bce3af3\",\"moduleSequenceNumber\":214},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/82f6178c-f57b-45fe-bcb2-08f87880e28e\",\"moduleSequenceNumber\":213},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/762e18e3-a760-485c-b62a-d602aa87fd75\",\"moduleSequenceNumber\":210},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ee69a38e-7fb4-4042-ba45-afaae441354c\",\"moduleSequenceNumber\":209},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e20ea535-6aca-4dfb-828a-dc58af6fabef\",\"moduleSequenceNumber\":244},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d990f3da-79ee-446e-ad17-d0fb82f3ce07\",\"moduleSequenceNumber\":215},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/93e88229-f0c9-4fe0-97ed-cb4c64b43e40\",\"moduleSequenceNumber\":226},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/45709e65-4f0c-4804-bd52-6ad3ac84dbc4\",\"moduleSequenceNumber\":220},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/60fd968d-e6cb-4d29-b159-82f2adbf4d46\",\"moduleSequenceNumber\":217},{\"filename\":\"go-mid.js\",\"url\":\"blob:https://danielyxie.github.io/72c06a0d-b95f-4df6-89a0-c5b77f847067\",\"moduleSequenceNumber\":25861}],\"dependents\":[],\"ramUsage\":3.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":681,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_singularity_api } from \\\"/lib/source.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Restart our source of income and Hack XP.  This script is useful whenever we\\n * have installed a bunch of Augmentations and we want to automatically restart\\n * scripts to:\\n *\\n * (1) Purchase Hacknet nodes and manage our farm of nodes.\\n * (2) Buy servers and use each purchased server to hack a target server in the\\n *     game world.\\n * (3) Gain root access to servers in the game world (excluding purchased\\n *     servers) and use each server to hack itself or a low-end server.\\n *\\n * Usage: run go.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Check whether we have access to the Singularity API.  If the check fails,\\n    // then we cannot automate the game play so we exit the script.\\n    if (!has_singularity_api(ns)) {\\n        log(\\n            ns,\\n            \\\"No access to Singularity API. Cannot automate game play.\\\",\\n            colour.RED\\n        );\\n        return;\\n    }\\n    // Run some or all utility scripts, depending on the amount of RAM on our\\n    // home server.\\n    const server = ns.getServer(home);\\n    let script = \\\"\\\";\\n    if (server.maxRam >= home_t.RAM_HIGH) {\\n        script = \\\"go-high.js\\\";\\n    } else if (server.maxRam >= home_t.RAM_MID) {\\n        script = \\\"go-mid.js\\\";\\n    } else {\\n        assert(server.maxRam < home_t.RAM_MID);\\n        script = \\\"go-low.js\\\";\\n    }\\n    assert(script !== \\\"\\\");\\n    exec(ns, script);\\n}\\n\",\"filename\":\"go.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/324b923b-d40f-4db8-af8e-0c1f80bc39d8\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bbda3aa6-76dc-47e2-95c6-2a713113f8f5\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8e295980-8a86-449a-91a4-ab4d8d26962d\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c4ba2b9a-80fc-4119-8b89-12b0a3fad14f\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6be876e2-c173-406b-82e3-eb2b7b50e533\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9b49c5e7-ddaa-43d7-be87-18c29c798129\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8aa3cceb-2fc2-45a7-ba4b-ae2aad8202b9\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/91b70bd4-d0ac-4b3c-bab8-7732c089fe44\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6917aa6c-0ffa-4cf6-a0a5-31189add2052\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8521f394-a514-46ca-8bea-80506bfb855b\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/df6160e1-f306-4a54-b930-cc6d01197d27\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2982137e-8621-4376-bc6b-1cbca96eabfd\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ffa73d58-81c3-49b4-ad20-b8bdab04ed28\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/dfa3bcaa-26c1-4bac-a6e0-449806acbd6c\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e7d93d48-8d95-4abf-9df0-0b8637ac4eaf\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b4badcfb-cbc7-40ed-8a16-28932bd1ca2a\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8a382049-4cf3-425f-af65-4c5873a3aab8\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/eef5ea5f-3142-4ba9-b936-6e35c10fe393\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a5c06edb-68b3-400f-8026-af43e847cee6\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/54878c43-2cd2-4874-b882-fd2ed9e674e6\",\"moduleSequenceNumber\":68961},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/0e3ea45f-0e22-4a61-8325-8fd4a404c8df\",\"moduleSequenceNumber\":69000},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7494d349-f43d-4250-a5ba-4dffcbed1958\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c3cae14e-c231-4d6e-b586-1b14c045cc67\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e4876acd-dbae-42fc-bf58-5b75b2d3cf63\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3334ca1e-916e-4f48-ba8f-0506e816ad15\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b3b3a1dd-f4b3-4b00-b027-96ab66834cbc\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/515311de-d7ea-426b-a6a9-5f67f898121a\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/86567523-9783-4d55-827c-df1cadb58241\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/40640bdc-e5c3-4171-9c80-8dd8bb2b4fd6\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0781ad35-82e9-4316-90ed-9c425d827df4\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9407c53e-9c5f-4385-b730-1060998fafa9\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/45ceda88-2f88-4b38-861c-69522b1fb6f3\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7e070964-be30-4bef-820a-a11e46627342\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ded38772-0ab1-4c17-ace8-2d284ccd5c75\",\"moduleSequenceNumber\":68972},{\"filename\":\"go.js\",\"url\":\"blob:https://danielyxie.github.io/1f04c791-834f-4a6d-bcb9-5777365c11dd\",\"moduleSequenceNumber\":69038}],\"dependents\":[],\"ramUsage\":5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":682,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// NOTE: Keep this script as independent and small as possible so that its RAM\\n// requirement is as low as possible.  Avoid importing anything into this\\n// script.\\n\\n/**\\n * NOTE: Assume that we have root access on the target server.\\n *\\n * Hack a server and steal its money.  We weaken the server's security as\\n * necessary, grow the server in case the amount of money on the server is\\n * below our threshold, and hack the server when all conditions are met.  We\\n * want one command line argument, i.e. the name of the server to hack.\\n *\\n * Usage: run hack.js [targetServer]\\n * Example: run hack.js n00dles\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The target server, i.e. the server to hack.\\n    const target = ns.args[0];\\n    // How much money a server should have before we hack it.  Even if the\\n    // server is bankrupt, successfully hacking it would increase our Hack XP,\\n    // although we would not receive any money.  Set the money threshold at 75%\\n    // of the server's maximum money.\\n    const money_threshold = Math.floor(ns.getServerMaxMoney(target) * 0.75);\\n    // The threshold for the server's security level.  If the target's\\n    // security level is higher than the threshold, weaken the target\\n    // before doing anything else.\\n    const security_threshold = ns.getServerMinSecurityLevel(target) + 5;\\n    // Continuously hack/grow/weaken the target server.\\n    const time = 1; // One millisecond.\\n    for (;;) {\\n        const money = ns.getServerMoneyAvailable(target);\\n        if (ns.getServerSecurityLevel(target) > security_threshold) {\\n            await ns.weaken(target);\\n        } else if (money < money_threshold) {\\n            await ns.grow(target);\\n        } else {\\n            await ns.hack(target);\\n        }\\n        await ns.sleep(time);\\n    }\\n}\\n\",\"filename\":\"hack.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"hack.js\",\"url\":\"blob:https://danielyxie.github.io/8b6e0be2-2340-47b8-b7d9-31f1b7d5a2cf\",\"moduleSequenceNumber\":404}],\"dependents\":[],\"ramUsage\":2.4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":683,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMinSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { hnet_t } from \\\"/lib/constant/hacknet.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Assume we have millions or even billions of dollars.  Add more nodes to our\\n * Hacknet farm.\\n *\\n * @param ns The Netscript API.\\n * @param n Increase the number of nodes to this amount.  Must be a positive\\n *     integer.\\n */\\nasync function expand_farm(ns, n) {\\n    const nNode = Math.floor(n);\\n    assert(nNode > 0);\\n    await setup_farm(ns, nNode);\\n}\\n\\n/**\\n * All nodes in our Hacknet farm.\\n *\\n * @param ns The Netscript API.\\n * @return An array of node IDs.  An empty array if we have zero nodes.\\n */\\nfunction hacknet_nodes(ns) {\\n    const nNode = ns.hacknet.numNodes();\\n    if (nNode < 1) {\\n        return [];\\n    }\\n    return MyArray.sequence(nNode);\\n}\\n\\n/**\\n * Whether it is time to upgrade the Cores and RAM of a Hacknet node.\\n * Upgrading either the Cores or RAM is many times more expensive than\\n * upgrading the Level of a Hacknet node.  Make sure we upgrade the Cores or\\n * RAM sparingly.  That is, the interval between successive upgrades of the\\n * Cores or RAM should usually be longer than the corresponding interval for\\n * Level.\\n *\\n * @param ns The Netscript API.\\n * @param idx Whether to upgrade the Cores and RAM of the Hacknet node having\\n *     this ID.\\n * @return true if it is time to upgrade the Cores and RAM; false otherwise.\\n */\\nfunction is_upgrade_core_ram(ns, idx) {\\n    // Each time we upgrade the RAM by one unit, we effectively double the\\n    // current amount of RAM.  Starting from 1GB, upgrading the RAM once would\\n    // result in 2GB.  Upgrading the RAM another time would result in 4GB.  And\\n    // so on until we have reached 64GB.  Therefore we can upgrade the RAM 6\\n    // times.  Divide these 6 upgrades into the 200 Levels, we get the upgrade\\n    // schedule:\\n    //\\n    // (1) 1st upgrade at 30 Level\\n    // (2) 2nd upgrade at 60 Level\\n    // (3) 3rd upgrade at 90 Level\\n    // (4) 4th upgrade at 120 Level\\n    // (5) 5th upgrade at 150 Level\\n    // (6) 6th upgrade at 180 Level\\n    //\\n    // On the other hand, upgrading the Cores once would add one point to the\\n    // current number of Cores.  As we have a maximum of 16 Cores and we start\\n    // with 1 Core, we can upgrade the Cores a total of 15 times.  We follow\\n    // the same upgrade schedule as per the schedule for upgrading RAM.\\n    //\\n    // Whenever it is time to upgrade the Cores and RAM, it might happen that\\n    // we do not have sufficient funds to finance the upgrades.  In that case,\\n    // we must skip the upgrade.  It is very likely that the Level of a Hacknet\\n    // node is at maximum whereas its Cores and RAM are yet to be maxed out.\\n    // Thus 200 Level is also part of the upgrade schedule for Cores and RAM.\\n    if (node_level(ns, idx) === hnet_t.MAX_LEVEL) {\\n        return bool.IS_TIME;\\n    }\\n    const interval = 30;\\n    const remainder = node_level(ns, idx) % interval;\\n    return remainder === 0;\\n}\\n\\n/**\\n * The Level of a Hacknet node.\\n *\\n * @param ns The Netscript API.\\n * @param i The ID of a Hacknet node.  Must be non-negative.\\n * @return The Level of the Hacknet node whose ID is i.\\n */\\nfunction node_level(ns, i) {\\n    assert(i >= 0);\\n    return ns.hacknet.getNodeStats(i).level;\\n}\\n\\n/**\\n * Setup our farm of Hacknet nodes.  We leave each node at Level 1, 1GB RAM,\\n * and 1 Core.  Our objective is to setup a farm of n Hacknet nodes, each node\\n * at base stat.\\n *\\n * @param ns The Netscript API.\\n * @param n How many Hacknet nodes in our farm.  Must be a positive integer.\\n */\\nasync function setup_farm(ns, n) {\\n    const nNode = Math.floor(n);\\n    assert(nNode > 0);\\n    assert(nNode < ns.hacknet.maxNumNodes());\\n    const player = new Player(ns);\\n    const time = update_interval();\\n    // We already have a farm of n or more Hacknet nodes.\\n    if (ns.hacknet.numNodes() >= nNode) {\\n        return;\\n    }\\n    // Purchase Hacknet nodes for our farm.\\n    for (let i = ns.hacknet.numNodes(); i < nNode; i++) {\\n        if (player.money() < ns.hacknet.getPurchaseNodeCost()) {\\n            await ns.sleep(time);\\n            continue;\\n        }\\n        const id = ns.hacknet.purchaseNode();\\n        assert(id !== -1);\\n        log(ns, `Purchased Hacknet node: ${id}`);\\n    }\\n}\\n\\n/**\\n * The interval between successive updates.\\n */\\nfunction update_interval() {\\n    return wait_t.MINUTE;\\n}\\n\\n/**\\n * Upgrade the stats of each Hacknet node by one point.  Assume we have at\\n * least one node.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction upgrade(ns) {\\n    upgrade_level(ns);\\n    // Should we also upgrade the Cores and RAM?\\n    const farm = hacknet_nodes(ns);\\n    assert(farm.length > 0);\\n    for (const node of farm) {\\n        if (is_upgrade_core_ram(ns, node)) {\\n            upgrade_core(ns, node);\\n            upgrade_ram(ns, node);\\n        }\\n    }\\n}\\n\\n/**\\n * Upgrade the Cores of a Hacknet node in our farm.  Our objective is to\\n * upgrade the Cores of the node by one point.  Call this function multiple\\n * times to max out the number of Cores.\\n *\\n * @param ns The Netscript API.\\n * @param idx We want to upgrade the Cores of the Hacknet node having this ID.\\n */\\nfunction upgrade_core(ns, idx) {\\n    const farm = new Set(hacknet_nodes(ns));\\n    assert(farm.has(idx));\\n    // Add another Core to the Hacknet node.  The number of Cores of a node is\\n    // at maximum if the cost of upgrading to another Core is Infinity.\\n    const player = new Player(ns);\\n    const howmany = 1; // Upgrade this many Cores at a time.\\n    const cost = ns.hacknet.getCoreUpgradeCost(idx, howmany);\\n    if (Number.isFinite(cost)) {\\n        if (player.money() < cost) {\\n            return;\\n        }\\n        assert(ns.hacknet.upgradeCore(idx, howmany));\\n    }\\n}\\n\\n/**\\n * Upgrade the Level of each Hacknet node in our farm.  Our objective is to\\n * upgrade the Level of each node by one point.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction upgrade_level(ns) {\\n    const farm = hacknet_nodes(ns);\\n    assert(farm.length > 0);\\n    const player = new Player(ns);\\n    const level = 1; // Upgrade this many Levels at a time.\\n    // Add another Level to each Hacknet node.\\n    for (const node of farm) {\\n        // The Level of a node is at maximum if the cost of upgrading to\\n        // another Level is Infinity.\\n        const cost = ns.hacknet.getLevelUpgradeCost(node, level);\\n        if (Number.isFinite(cost)) {\\n            if (player.money() < cost) {\\n                continue;\\n            }\\n            assert(ns.hacknet.upgradeLevel(node, level));\\n        }\\n    }\\n}\\n\\n/**\\n * Upgrade the RAM of a Hacknet node in our farm.\\n *\\n * @param ns The Netscript API.\\n * @param idx We want to upgrade the RAM of the Hacknet node having this ID.\\n */\\nfunction upgrade_ram(ns, idx) {\\n    const farm = new Set(hacknet_nodes(ns));\\n    assert(farm.has(idx));\\n    // Double the current RAM of the given Hacknet node.  The amount of RAM of\\n    // a node is at maximum if the cost of upgrading the RAM is Infinity.\\n    const player = new Player(ns);\\n    const howmany = 1; // Upgrade the RAM this many times.\\n    const cost = ns.hacknet.getRamUpgradeCost(idx, howmany);\\n    if (Number.isFinite(cost)) {\\n        if (player.money() < cost) {\\n            return;\\n        }\\n        assert(ns.hacknet.upgradeRam(idx, howmany));\\n    }\\n}\\n\\n/**\\n * Purchase and manage a farm of Hacknet nodes.\\n *\\n * Usage: run hnet-farm.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Various money thresholds.\\n    const threshold = Array.from(hnet_t.MONEY);\\n    const node = Array.from(hnet_t.NODE);\\n    // Bootstrap our Hacknet farm with a small number of nodes.\\n    await setup_farm(ns, hnet_t.SEED_NODE);\\n    // Add increasingly more nodes to the farm.  Also upgrade the nodes.\\n    const time = update_interval();\\n    const player = new Player(ns);\\n    for (;;) {\\n        if (threshold.length > 0) {\\n            if (player.money() > threshold[0]) {\\n                await expand_farm(ns, node[0]);\\n                // Ensure our Hacknet farm has at least the given number of\\n                // nodes before moving on to the next money/node thresholds.\\n                if (ns.hacknet.numNodes() >= node[0]) {\\n                    threshold.shift();\\n                    node.shift();\\n                }\\n            }\\n        }\\n        upgrade(ns);\\n        await ns.sleep(time);\\n    }\\n}\\n\",\"filename\":\"hnet-farm.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/89cb1aab-4e36-4ab7-90fc-46b9586d43c8\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/75370ada-8709-44f2-833b-9d45205bbe9c\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dee87714-77cd-4f06-8ce8-21b9cfedad11\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4a1f4225-27f6-4c60-a885-4682db1f374a\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3d667695-78f3-4a86-ac41-42a6150bf323\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/445c5737-d309-428f-8f16-0f4606236c66\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/73188e02-8a73-44e3-8073-3fab03e24e21\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bff83cb9-3a9a-440f-8ccc-cd333e396208\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8dac4587-0dde-4eb5-b52a-e0a78db227e1\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e8b00808-e5d5-4407-bbb8-a173f26ca59d\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/06087150-b4e5-43fc-b0a9-5f1b7f0ff691\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4b57c0b2-6364-49e6-8468-1ebbe032ee1e\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ccd771ae-a97e-494a-b3b7-a5d480de57bf\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/dc892bf9-eea7-4b84-8eb3-cd0c877e480e\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a1ff7d68-1053-4a8c-99d9-746e33e421ec\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/92545fb4-f50b-46da-9ca3-47e2c7ef0912\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7ec6eb7f-2196-453e-87fe-11325f027ad4\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0f2b4c2b-ad09-46cb-84c0-3595c7b94d59\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/58e5cbea-8102-4125-90e7-48253f0e8e94\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1f00d068-1543-4cc9-9da2-c027555413cc\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/76b995e5-4f2a-4c0b-b01d-511b283b288f\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/57ebc2ef-2ba0-4c1f-8d3a-b5b20056d6b5\",\"moduleSequenceNumber\":287},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ed732d31-9fa7-4888-9513-98ff025f473d\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8d492fc1-7c8d-44b5-86d3-f78c41f504c0\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cd926421-1e07-4ad2-ba9b-82d44838679b\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2c27828b-abf9-4c5c-8393-7977e4e054c0\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fb2b631e-cb01-4e70-be40-4c8458c2bcc5\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f88fd0e7-f50c-460f-8bb9-35a771dde1d3\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bdff17ab-df2f-4d2e-a616-3d7d0a55912d\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ecdb145f-e0e2-4fcf-972b-09971228a992\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/594f8538-7998-464c-a2bb-6691f4c3d1b4\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/56198ce3-0dcd-4958-84d1-095f02146488\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/2a4ed866-e6a6-4627-8de5-6ada97b40194\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f4d6080c-387c-4287-bf99-6456bbb73f54\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/hacknet.js\",\"url\":\"blob:https://danielyxie.github.io/ce02f439-5cae-4775-ad7e-2ce75b50732d\",\"moduleSequenceNumber\":270},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/88e8846b-06d0-4952-83e5-2d8d4b63242e\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a4a17fad-b544-4e87-a64d-1229d986f80b\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f709f30b-7ae3-4a97-84ac-634008843bdd\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a097992c-c795-499d-ae85-118893f40143\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1e74b5bb-4dce-4793-a314-292f334729c0\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7c1bf243-abfb-4e08-a933-76e2a4efc033\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/48c7ce04-e414-4eff-967a-568a498ead1a\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/159fd902-c55d-4b32-b6e5-b3708d4e16a1\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b3be9775-e35b-41c7-aa65-c5958f7a2cd9\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6a4863ea-89b9-441d-af04-f766c580a043\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/1ef06581-f58e-4766-a286-0c2adf282ebb\",\"moduleSequenceNumber\":260},{\"filename\":\"hnet-farm.js\",\"url\":\"blob:https://danielyxie.github.io/68fea37d-b258-45a9-be98-ee713563b7f1\",\"moduleSequenceNumber\":398}],\"dependents\":[],\"ramUsage\":8.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":684,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"ns\",\"name\":\"hacknet\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { io } from \\\"/lib/constant/io.js\\\";\\nimport { script } from \\\"/lib/constant/misc.js\\\";\\nimport { home, server } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { assert, choose_targets, filter_bankrupt_servers } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Choose the \\\"best\\\" world server to hack.  The definition of \\\"best\\\" is\\n * subjective.  However, for our purposes the best target is the server that\\n * meet these criteria:\\n *\\n * (1) The server having the highest Hack stat requirement not exceeding our\\n *     Hack stat.\\n * (2) We can open all ports on the given server.\\n * (3) The server is not bankrupt.\\n * (4) Is not a purchased server.\\n *\\n * If multiple servers meet the above criteria, then we choose the server that\\n * has the highest maximum money.\\n *\\n * @param ns The Netscript API.\\n * @return The best server to target.\\n */\\nfunction best_target(ns) {\\n    const target = choose_targets(ns, filter_bankrupt_servers(ns, network(ns)));\\n    if (target.length === 1) {\\n        return target[0];\\n    }\\n    // If we have multiple best targets, choose the target having the highest\\n    // maximum money.\\n    let host = \\\"\\\";\\n    let max_money = -Infinity;\\n    target.forEach((s) => {\\n        if (ns.getServerMaxMoney(s) > max_money) {\\n            max_money = ns.getServerMaxMoney(s);\\n            host = s;\\n        }\\n    });\\n    return host;\\n}\\n\\n/**\\n * The number of threads we can use to run a script on our home server.\\n *\\n * @param ns The Netscript API.\\n * @return The number of threads to use.  Always at least 1.\\n */\\nfunction home_num_threads(ns) {\\n    const home_serv = new Server(ns, home);\\n    const nthread = home_serv.num_threads(script);\\n    return nthread < 1 ? 1 : nthread;\\n}\\n\\n/**\\n * Constantly update the target to hack.\\n *\\n * @param ns The Netscript API.\\n * @param t A string representing the name of the current target.\\n * @return The hostname of the (possibly new) server currently being targeted.\\n */\\nasync function update(ns, t) {\\n    // Ensure we have root access on the chosen target.\\n    const target = best_target(ns);\\n    assert(target !== \\\"\\\");\\n    const serv = new Server(ns, target);\\n    if (!serv.has_root_access()) {\\n        await serv.gain_root_access();\\n    }\\n    // No new target.  Hack the current target if it is not already being\\n    // targeted.\\n    if (t === target) {\\n        if (!ns.isRunning(script, home, target)) {\\n            const nthread = home_num_threads(ns);\\n            ns.exec(script, home, nthread, target);\\n            ns.write(server.HRAM, target, io.WRITE);\\n        }\\n        return target;\\n    }\\n    // We have found a better target.  Hack this better server.\\n    assert(t !== target);\\n    if (ns.isRunning(script, home, t)) {\\n        assert(ns.kill(script, home, t));\\n    }\\n    const nthread = home_num_threads(ns);\\n    ns.exec(script, home, nthread, target);\\n    ns.write(server.HRAM, target, io.WRITE);\\n    return target;\\n}\\n\\n/**\\n * Use the RAM of our home server for miscellaneous tasks.  For now, use the\\n * home RAM to hack a world server.  If at some later time we need to devote the\\n * home RAM to another task, then this script should be suspended to free up\\n * some RAM.\\n *\\n * Usage: run hram.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMaxMoney\\\");\\n    ns.disableLog(\\\"getServerUsedRam\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Periodically search for a better target.  Suspend this script, and kill\\n    // the spawned script, if we need to share our home server with a faction.\\n    let target = await update(ns, \\\"\\\");\\n    for (;;) {\\n        // Do we need to suspend the script?\\n        if (ns.fileExists(server.SHARE, home)) {\\n            if (target !== \\\"\\\" && ns.isRunning(script, home, target)) {\\n                assert(ns.kill(script, home, target));\\n            }\\n            await ns.sleep(wait_t.DEFAULT);\\n            continue;\\n        }\\n        // Find a better target.\\n        target = await update(ns, target);\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n}\\n\",\"filename\":\"hram.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/418c2614-a857-48e9-b927-6b87a8fee7b1\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1b7296b8-89ca-4815-930f-cf31b1464c32\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a84721b5-7e6b-4ec6-b1f4-5e21034b1815\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8eb5723d-ada9-4ca4-b884-883803eb6c12\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2570a80a-9f4f-4837-96bc-eb0482c159b8\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c37595a3-d923-43d9-99c6-cb806fca7f07\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c41c0ca7-77dd-43a3-9dd2-72f9b52678d6\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/494012d6-252c-4e03-ae86-344a3eaa75cd\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e2c6fd37-6e0f-45e6-a93d-cd7b1a50ef20\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2ab08604-f819-467e-905b-8155753a95d5\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/62b97b1d-1587-4552-9e77-b72f4541222f\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3e8c4534-1a4b-4d0c-8b90-b750b02ed6a0\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fe758032-960b-4dec-a47e-fb1b9ce5be8a\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f77183af-1955-414a-9b8d-5adea53cf896\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a4cd5f42-96ca-4c8c-acc2-bba8c6c73acf\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/aae30856-1ca9-4193-881d-027ea2366dbd\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1cabcf00-d693-4a2b-bd3b-d6ba00007bca\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ceb9864e-6b48-44cd-8458-a684bd0da879\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8931042a-ea4a-4967-885f-bfccfbc574c9\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/70b2ae71-ae89-478b-a138-fbe8a592cadd\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/348db37f-534b-4a10-b5cc-215c51d24c24\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/3e6ff7bd-585c-4969-921d-5f44d2c7ff0e\",\"moduleSequenceNumber\":290},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/df5199ba-bf79-4719-910b-5cf4a1e49fd2\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/04994aa9-3d76-442a-abb0-2e0b2ef7f2f5\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/21e3fecf-f05e-4add-870d-d4f771b22ba2\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f3dfc662-4ce3-4b42-8319-a03f41305a51\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3eaaa040-5a49-4340-a1f1-bdfab5946826\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b0e7b2c5-ea1e-4b8c-8445-983d745629c6\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/10a36152-0c8e-40d5-8694-052ce22a484f\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d6098e8e-728f-442a-a870-3acc9ab12e57\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/268923cf-5ceb-4846-a3f1-01a0286397bc\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/088b9298-8474-4719-b78b-05fdf0e46568\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a3d5dd9e-c1cc-4570-84e9-a5f7f8d40499\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/64175415-b374-4d23-896f-4035f263ca3b\",\"moduleSequenceNumber\":286},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fc3bad24-c14b-4ac8-a602-6eb365f4990b\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/812db3d9-cb1f-470a-b29f-27d85d9eb80d\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6fa9d7f8-0040-491e-9734-59b8cd3f722b\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ee7240fa-781f-4353-859b-001f9cb0d75e\",\"moduleSequenceNumber\":271},{\"filename\":\"hram.js\",\"url\":\"blob:https://danielyxie.github.io/df8b1aaf-7f4e-44ec-b297-b0916a878cbe\",\"moduleSequenceNumber\":402}],\"dependents\":[],\"ramUsage\":10.9,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":685,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServerMaxMoney\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { Player } from \\\"/lib/player.js\\\";\\n\\n/**\\n * The player's karma.\\n *\\n * Usage: run karma.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const player = new Player(ns);\\n    ns.tprint(`Karma: ${player.karma()}`);\\n}\\n\",\"filename\":\"karma.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cccef734-ff9c-4eea-8f27-f4d43a38a09b\",\"moduleSequenceNumber\":12345},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/39a5333f-927c-4629-a3a4-ea4a64b4cb0c\",\"moduleSequenceNumber\":12343},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/95c314b0-43ff-4739-aeb0-daf82084173d\",\"moduleSequenceNumber\":12340},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7e62621f-6eb1-48d3-a915-2a0d884cf047\",\"moduleSequenceNumber\":12338},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/52bf952d-6efb-401b-aa72-3c33b63c44f6\",\"moduleSequenceNumber\":12337},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c8b9f21c-0446-4775-be05-dede743ecd95\",\"moduleSequenceNumber\":12336},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9ac2df8e-1ab5-4995-8a1b-6f908cc6e327\",\"moduleSequenceNumber\":12333},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ba99f4e9-0efe-4221-8e66-2e10b3059335\",\"moduleSequenceNumber\":12332},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b073157b-c5bb-421d-9829-a1a63fb8b8cd\",\"moduleSequenceNumber\":12367},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b0e2b95f-e1d6-4464-8c27-22cebc92c352\",\"moduleSequenceNumber\":12340},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5338731d-7fd6-4cc5-90da-e019fa08c7bb\",\"moduleSequenceNumber\":12338},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a1158d30-e284-4abc-b4a8-0efd8b0c6572\",\"moduleSequenceNumber\":12332},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/2f105f7d-1b8e-4a03-98de-be6c8c564d05\",\"moduleSequenceNumber\":12352},{\"filename\":\"karma.js\",\"url\":\"blob:https://danielyxie.github.io/c749f91a-d389-4fb2-8e72-53ebc6d8cf46\",\"moduleSequenceNumber\":13668}],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":686,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\n\\n/**\\n * Kill all scripts on world or purchased servers.  Must provide one of the\\n * following at the command line:\\n *\\n * (1) pserv := Kill all scripts on all purchased servers.\\n * (2) world := Kill all scripts on all world servers where we have root access.\\n *\\n * Usage: run kill-script.js [pserv | world]\\n * Example: run kill-script.js pserv\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const error_msg = \\\"Must provide one command line argument: pserv | world\\\";\\n    // Must provide a command line argument to this script.\\n    if (ns.args.length < 1) {\\n        ns.tprint(error_msg);\\n        return;\\n    }\\n    const stype = ns.args[0];\\n    const player = new Player(ns);\\n    if (stype === \\\"pserv\\\") {\\n        // Kill all scripts on purchased servers.\\n        player.pserv().forEach((s) => ns.killall(s));\\n    } else if (stype === \\\"world\\\") {\\n        // Kill all scripts on world servers where we have root access.\\n        const server = network(ns).filter((s) => ns.hasRootAccess(s));\\n        server.forEach((s) => ns.killall(s));\\n    } else {\\n        ns.tprint(error_msg);\\n    }\\n}\\n\",\"filename\":\"kill-script.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.35,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":687,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { Player } from \\\"/lib/player.js\\\";\\n\\n/**\\n * Delete all purchased servers.  This would also kill all scripts running\\n * on each purchased server.\\n *\\n * Usage: run kill-server.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const player = new Player(ns);\\n    player.pserv().forEach((s) => {\\n        ns.killall(s);\\n        ns.deleteServer(s);\\n    });\\n}\\n\",\"filename\":\"kill-server.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":7.35,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":688,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport {\\n    home, home_t, server, server_t,\\n} from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { assert, filter_bankrupt_servers, filter_pserv } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Determine which servers in the game world have been compromised.  We\\n * exclude all purchased servers.  A server in the game world is said to be\\n * compromised provided that:\\n *\\n * (1) We have root access to the server.\\n * (2) Our hack script is currently running on the server.\\n *\\n * @param ns The Netscript API.\\n * @param script A hack script.  We want to check whether a server is running\\n *     this script.\\n * @return An array of servers that have been compromised.\\n */\\nfunction compromised_servers(ns, script) {\\n    const compromised = [];\\n    for (const s of filter_pserv(ns, network(ns))) {\\n        const serv = new Server(ns, s);\\n        if (serv.has_root_access() && serv.is_running_script(script)) {\\n            compromised.push(s);\\n        }\\n    }\\n    return compromised;\\n}\\n\\n/**\\n * The low-end servers to target.  We exclude bankrupt servers and purchased\\n * servers.  A server is said to be bankrupt if the maximum amount of money it\\n * can hold is zero.\\n *\\n * @param ns The Netscript API.\\n * @return An array of hostnames of low-end servers.  This array is never empty.\\n */\\nfunction low_end(ns) {\\n    // Sort the servers in ascending order of hack difficulty,\\n    // i.e. security level.\\n    let lowend = [];\\n    const candidate = filter_bankrupt_servers(\\n        ns,\\n        filter_pserv(ns, network(ns))\\n    ).filter((s) => s !== server.ONION);\\n    candidate.forEach((s) => {\\n        const security_lvl = ns.getServer(s).hackDifficulty;\\n        lowend.push([security_lvl, s]);\\n    });\\n    lowend = MyArray.sort_ascending_tuple(lowend);\\n    // Choose how many low-end servers to target.\\n    const home_ram = ns.getServer(home).maxRam;\\n    let ntarget = 0;\\n    if (home_ram >= 3 * home_t.RAM_HIGH) {\\n        ntarget = server_t.lowend.HIGH;\\n    } else if (home_ram > home_t.RAM_HIGH) {\\n        ntarget = server_t.lowend.MID;\\n    } else {\\n        assert(home_ram <= home_t.RAM_HIGH);\\n        ntarget = server_t.lowend.LOW;\\n    }\\n    // Get the hostnames of low-end servers to target.\\n    lowend = lowend.slice(0, ntarget).map((a) => a[1]);\\n    assert(lowend.length > 0);\\n    return lowend;\\n}\\n\\n/**\\n * Try to gain root access to a bunch of servers in the game world.  We exclude\\n * purchased servers.\\n *\\n * @param ns The Netscript API.\\n * @return An array of newly nuked servers.  We gained root access to these\\n *     servers during this update.\\n */\\nasync function nuke_servers(ns) {\\n    // A list of servers that were successfully nuked during this update.\\n    const nuked = [];\\n    // Gain root access to as many new servers as possible on the network.\\n    const player = new Player(ns);\\n    for (const s of filter_pserv(ns, network(ns))) {\\n        // Should we skip this server?\\n        if (skip_server(ns, s, player.script())) {\\n            continue;\\n        }\\n        // Gain root access to the server.\\n        const serv = new Server(ns, s);\\n        assert(player.hacking_skill() >= serv.hacking_skill());\\n        await serv.gain_root_access();\\n        nuked.push(s);\\n        log(ns, `Compromised server: ${s}`);\\n    }\\n    return nuked;\\n}\\n\\n/**\\n * Whether we should skip the server.  A server might be skipped over for\\n * various reasons.\\n *\\n * @param ns The Netscript API.\\n * @param s Should we skip this server?\\n * @param script The name of our hacking script.\\n * @return true if we are to skip over the given server; false otherwise.\\n */\\nfunction skip_server(ns, s, script) {\\n    const serv = new Server(ns, s);\\n    const player = new Player(ns);\\n    // Determine the maximum number of ports we can open on a server.\\n    const nport = player.num_ports();\\n    assert(nport >= 0);\\n    // Skip over a server that requires more ports than we can open.\\n    if (serv.num_ports_required() > nport) {\\n        return bool.SKIP;\\n    }\\n    // If our hack script is already running on the server, then skip the\\n    // server.\\n    if (serv.is_running_script(script)) {\\n        return bool.SKIP;\\n    }\\n    // Determine how many threads we can run our script on a server.  If we\\n    // can't run our script on the server, then we skip the server.\\n    const nthread = serv.num_threads(script);\\n    if (nthread < 1) {\\n        return bool.SKIP;\\n    }\\n    // Skip over a server if its hacking skill requirement is too high.\\n    if (player.hacking_skill() < serv.hacking_skill()) {\\n        return bool.SKIP;\\n    }\\n    return bool.NO_SKIP;\\n}\\n\\n/**\\n * Search for world servers and direct them to hack low-end servers.  We exclude\\n * purchased servers.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function update(ns) {\\n    // A list of servers that have been successfully nuked.\\n    const player = new Player(ns);\\n    const compromised = compromised_servers(ns, player.script());\\n    // Gain root access to new servers in the game world.  Exclude all purchased\\n    // servers.\\n    const new_nuked = await nuke_servers(ns);\\n    if (new_nuked.length < 1) {\\n        return;\\n    }\\n    // Direct all nuked servers to target a small number of low-end servers.\\n    // First, kill all scripts on the compromised servers.  Then redirect the\\n    // compromised and newly nuked servers to target some low-end servers.\\n    compromised.forEach((s) => ns.killall(s));\\n    const lowend = low_end(ns);\\n    let n = 0;\\n    for (const s of compromised.concat(new_nuked)) {\\n        const serv = new Server(ns, s);\\n        const i = n % lowend.length;\\n        await serv.deploy(lowend[i]);\\n        log(ns, `Redirect ${s} to hack low-end server: ${lowend[i]}`);\\n        n++;\\n    }\\n}\\n\\n/**\\n * Use each server in the game world to hack low-end servers.  We exclude\\n * purchased servers.  A server is low-end if its Hack stat requirement is low,\\n * possibly less than 10 Hack requirement.  Early in a BitNode when our stats\\n * and money are low, we need a good source of passive income.  Hacking low-end\\n * servers provides a good source of income.  We do not target all low-end\\n * servers, only a small number of these.\\n *\\n * Usage: run low-end.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerUsedRam\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Continuously look for world servers to hack low-end servers.\\n    log(ns, \\\"Hacking low-end servers\\\");\\n    for (;;) {\\n        await update(ns);\\n        await ns.sleep(wait_t.MINUTE);\\n    }\\n}\\n\",\"filename\":\"low-end.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/508d0497-cc6a-4454-b89d-29155f251a21\",\"moduleSequenceNumber\":84806},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bedd797d-8870-4cbe-b56a-156a53ef0778\",\"moduleSequenceNumber\":84804},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9137c948-8f41-4672-9289-158fd3b24eb0\",\"moduleSequenceNumber\":84801},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d4fac44f-4547-4dda-8f00-c7ca29af7713\",\"moduleSequenceNumber\":84799},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a9551d6f-c7d8-46cf-b9d3-4fdeee6323d4\",\"moduleSequenceNumber\":84798},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1e2ef11e-0679-498d-adbf-789b4c427298\",\"moduleSequenceNumber\":84797},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7a1f62b6-60ba-4755-a333-209ae1e5ae2e\",\"moduleSequenceNumber\":84794},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e2a6a530-84d2-423d-82ca-746493b648be\",\"moduleSequenceNumber\":84793},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/66c4a10b-61ef-4faf-a33d-ca6b80ed7528\",\"moduleSequenceNumber\":84828},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/09fcc533-3d5e-4f6a-b92b-2ad097f92fd5\",\"moduleSequenceNumber\":84806},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/58ec40d0-174c-4050-bbc0-3335594f7638\",\"moduleSequenceNumber\":84804},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a67aa521-2ce7-4bba-9581-b7e7fcc34922\",\"moduleSequenceNumber\":84801},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/afa5e8e1-9b9b-4e25-b361-ea530fbf65ee\",\"moduleSequenceNumber\":84799},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/84bbd74c-87c5-4033-be47-9e992003dff6\",\"moduleSequenceNumber\":84798},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b5c8e7c2-a92d-4cf3-826b-4e1133ded880\",\"moduleSequenceNumber\":84797},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4b11ea48-65fd-4164-8068-1e7d210743d0\",\"moduleSequenceNumber\":84794},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cbbf86c3-beab-46c4-ae59-a8a9fe6057a7\",\"moduleSequenceNumber\":84793},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a3d694e4-d03f-4abf-9ae1-0f1a3d0660a6\",\"moduleSequenceNumber\":84828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d48c931e-5571-4c62-994a-c38479bbb8e5\",\"moduleSequenceNumber\":84801},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fe353c9e-f2ad-42a1-af13-a7d3f58c644a\",\"moduleSequenceNumber\":84799},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/68981795-ccf4-47fa-a9f5-cbcdb9e6278d\",\"moduleSequenceNumber\":84789},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/6b978efc-c58f-47ad-bbad-c1b0a48efc79\",\"moduleSequenceNumber\":84816},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c69af6a7-57ba-4d14-ab00-4e4c0ccf77dd\",\"moduleSequenceNumber\":84806},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c33d141c-0fa5-478e-b389-b1b326283a02\",\"moduleSequenceNumber\":84804},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5a94ed6b-86c5-49ce-8433-0d1306699555\",\"moduleSequenceNumber\":84801},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a24a8cc3-cd94-40b1-aaef-a05a327206f0\",\"moduleSequenceNumber\":84799},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1c9c0515-f739-41e2-87d8-77bf40c94263\",\"moduleSequenceNumber\":84798},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0d70a812-edae-4444-8611-0a84c363a2cd\",\"moduleSequenceNumber\":84797},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/999aca4f-ac9f-4c63-8dc2-a5f7b2b33e32\",\"moduleSequenceNumber\":84794},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ec28f7a7-281f-41af-9105-fc32f0522111\",\"moduleSequenceNumber\":84793},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/59cec8fb-3890-427b-bf56-14fef069fb28\",\"moduleSequenceNumber\":84828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/93d67c74-8708-4d94-bd03-d83dc69eda89\",\"moduleSequenceNumber\":84801},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2838c586-3120-4f52-b0a2-6b170db85ac0\",\"moduleSequenceNumber\":84799},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a0dc168f-bc95-4c70-b4e2-354cfc26b5b9\",\"moduleSequenceNumber\":84793},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/d63088b9-593a-4fc6-8b4f-06d409050c44\",\"moduleSequenceNumber\":84813},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/87426a5c-bfef-4211-a572-b44adeb617c1\",\"moduleSequenceNumber\":84806},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/71a4a7fc-2f8f-44d0-bd7a-272b8a95311b\",\"moduleSequenceNumber\":84804},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bd13bfe3-e6b5-46b4-ba08-4d1d75624159\",\"moduleSequenceNumber\":84801},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d1b77228-ea0c-4fc3-8b15-8fa6239762b8\",\"moduleSequenceNumber\":84799},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d87bd7e1-09be-4107-8788-13374d6bde6e\",\"moduleSequenceNumber\":84798},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1edb4ba3-3d02-470f-8409-ddcec12025db\",\"moduleSequenceNumber\":84797},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/edd20010-5377-4771-80fa-1826866b61d1\",\"moduleSequenceNumber\":84794},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/14600d9e-de4b-4b2d-8872-99ad44cc09ab\",\"moduleSequenceNumber\":84793},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/973c3967-fdda-43ac-ba1a-7ebcc922adbb\",\"moduleSequenceNumber\":84828},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/440790ac-6862-462f-831d-737ec918b93d\",\"moduleSequenceNumber\":84801},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b2eeaa7c-74cf-4587-a568-a0590c0d2780\",\"moduleSequenceNumber\":84789},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/c1146628-782a-4d86-bcc3-43cce23e7e68\",\"moduleSequenceNumber\":84812},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/26f3a0d7-7087-4e7b-b327-e414ae8ad7c8\",\"moduleSequenceNumber\":84806},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c04dbc02-728c-4030-983b-35dc805c1ddd\",\"moduleSequenceNumber\":84804},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/88e1edb6-a10e-437b-b1b3-e0fc2ac42825\",\"moduleSequenceNumber\":84801},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/128a6f48-947d-4034-81bf-e365f802ebf4\",\"moduleSequenceNumber\":84799},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6084bd53-3a9e-4e16-b93d-d5d0f7e88387\",\"moduleSequenceNumber\":84798},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/341cdf4d-3212-4d32-8e95-0d82aa00cf3c\",\"moduleSequenceNumber\":84797},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e546767f-8939-4df3-9a9e-9990f6482245\",\"moduleSequenceNumber\":84794},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/20f2d5b3-26d6-494e-a598-bbd58b4fcd1b\",\"moduleSequenceNumber\":84793},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/13c1a83c-aa7a-4770-9dc1-2f72ad295d8c\",\"moduleSequenceNumber\":84828},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c284bb02-11b3-46c2-b96f-f9bf0ff0cda1\",\"moduleSequenceNumber\":84799},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/4e82963f-f065-495e-89ce-06548061cc1b\",\"moduleSequenceNumber\":84810},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2bc947db-3b41-4404-aa80-b50620007a3b\",\"moduleSequenceNumber\":84804},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/67430b78-9963-40b2-877e-7d0264ed6021\",\"moduleSequenceNumber\":84801},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7f5f6046-e0d9-4ce4-9e2e-550c9779ac57\",\"moduleSequenceNumber\":84789},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ba39eaff-4971-4c85-89e0-7f875b98a6f3\",\"moduleSequenceNumber\":84806},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/271328f6-7b07-4ccb-9f98-7478dd6f6e46\",\"moduleSequenceNumber\":84804},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e42336f0-0a62-41e6-9df3-6462182d1acb\",\"moduleSequenceNumber\":84801},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/446c8cea-3498-4359-8514-8919a150ecb2\",\"moduleSequenceNumber\":84799},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cb3a47d9-9438-4d03-bad0-a95f93644fa3\",\"moduleSequenceNumber\":84798},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f018bcb3-4dca-44f3-8a26-fea94dc1995e\",\"moduleSequenceNumber\":84797},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d49a23c1-cbac-472b-afeb-92e45057989b\",\"moduleSequenceNumber\":84794},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d6babb09-0d1e-4794-a58c-6b2302077729\",\"moduleSequenceNumber\":84793},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5c300929-92d9-46a2-97a3-b97d6fde873a\",\"moduleSequenceNumber\":84828},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/cb23c69c-368f-4dc5-9ede-908dd6586e25\",\"moduleSequenceNumber\":84786},{\"filename\":\"low-end.js\",\"url\":\"blob:https://danielyxie.github.io/5dcb6986-c1cc-41ff-b947-aad6f80468e0\",\"moduleSequenceNumber\":84867}],\"dependents\":[],\"ramUsage\":11.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":689,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { program as popen } from \\\"/lib/constant/exe.js\\\";\\nimport { io } from \\\"/lib/constant/io.js\\\";\\nimport { base, colour } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { network, shortest_path } from \\\"/lib/network.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Insert forks.  Each fork indicates a child node.\\n *\\n * @param matrix The ASCII art of the network of world servers.\\n * @return The same matrix, but forks are inserted where necessary.\\n */\\nfunction add_fork(matrix) {\\n    assert(matrix.length > 0);\\n    assert(matrix[0].length > 0);\\n    // A shallow copy so we don't modify the parameter directly.  We still\\n    // modify it indirectly.\\n    const mat = Array.from(matrix);\\n    // Start from the second row onward because the first row is for the home\\n    // server.\\n    for (let i = 1; i < mat.length; i++) {\\n        const j = mat[i].length - 1;\\n        assert(leaf() === mat[i][j]);\\n        assert(branch() === mat[i][j - 1]);\\n        mat[i][j - 1] = fork();\\n    }\\n    return mat;\\n}\\n\\n/**\\n * Replace each leaf with the corresponding server name.\\n *\\n * @param matrix The ASCII art of the network of world servers.  The function\\n *     modifies this argument.\\n * @param map A translation from coordinates in the grid to server name.\\n * @return The same matrix, but with server names added.\\n */\\nfunction add_server_name(ns, matrix, map) {\\n    assert(matrix.length > 0);\\n    assert(matrix[0].length > 0);\\n    assert(map.size > 0);\\n    // A shallow copy so we don't modify the parameter directly.  We still\\n    // modify it indirectly.\\n    const mat = Array.from(matrix);\\n    // Add the server names.\\n    for (const [coord, server] of map) {\\n        const [i, j] = coord\\n            .split(delimiter())\\n            .map((k) => parseInt(k, base.DECIMAL));\\n        mat[i][j] = decorate(ns, server);\\n    }\\n    return mat;\\n}\\n\\n/**\\n * Insert T junctions into the ASCII art.\\n *\\n * @param matrix The ASCII art of the network of world servers.  The function\\n *     modifies this argument.\\n * @return The same matrix, but with T junctions inserted.\\n */\\nfunction add_tee_junction(matrix) {\\n    assert(matrix.length > 0);\\n    assert(matrix[0].length > 0);\\n    // A shallow copy so we don't modify the parameter directly.  We still\\n    // modify it indirectly.\\n    const mat = Array.from(matrix);\\n    // Start from the second row and work our way downward.\\n    for (let i = 1; i < mat.length; i++) {\\n        const j = mat[i].length - 1;\\n        assert(leaf() === mat[i][j]);\\n        assert(fork() === mat[i][j - 1]);\\n        if (fork() === mat[i - 1][j - 1]) {\\n            mat[i - 1][j - 1] = tee();\\n        }\\n        if (i < mat.length - 2) {\\n            if (branch() === mat[i + 1][j - 1]) {\\n                mat[i][j - 1] = tee();\\n            }\\n        }\\n    }\\n    return mat;\\n}\\n\\n/**\\n * All shortest paths from our home server to each server in the game world.\\n *\\n * @param ns The Netscript API.\\n * @return An array of shortest paths from the home server to each server in\\n *     the game world.  Each element is a string formatted as\\n *\\n *     home,serv1,serv2,serv3,...,servk\\n *\\n *     which shows a shortest path from \\\"home\\\" to the server \\\"servk\\\".  The\\n *     elements are sorted in lexicographic order.\\n */\\nfunction all_shortest_paths(ns) {\\n    const delim = delimiter();\\n    // prettier-ignore\\n    const path = network(ns).map(\\n        (destination) => shortest_path(ns, home, destination).join(delim)\\n    );\\n    return path.sort();\\n}\\n\\n/**\\n * Tidy up the ASCII art representation of the network of world servers.  We\\n * do various clean-ups such as removing dead branches and redundant (or\\n * unnecessary) branches.\\n *\\n * @param grid An ASCII art representation of the network of world servers.\\n *     This should be the output of the function to_ascii_art().\\n * @param map A translation from coordinates in the grid to server name.\\n * @return A string representation of the ASCII art.\\n */\\nfunction beautify(ns, grid, map) {\\n    assert(grid.length > 0);\\n    assert(grid[0].length > 0);\\n    assert(map.size > 0);\\n    let matrix = Array.from(grid);\\n    // Remove dead branches in the visualization.  A branch is said to be dead\\n    // if it does not lead to a server.\\n    for (let i = 0; i < matrix.length - 1; i++) {\\n        const diff = matrix[i].length - matrix[i + 1].length;\\n        if (diff < 3) {\\n            continue;\\n        }\\n        matrix = prune_branch(matrix, i);\\n    }\\n    // Remove dead branches from the last row.\\n    matrix = prune_branch(matrix, matrix.length - 1);\\n    // Some final touches.\\n    matrix = add_fork(matrix);\\n    matrix = prune_sibling_branch(matrix);\\n    matrix = add_tee_junction(matrix);\\n    matrix = add_server_name(ns, matrix, map);\\n    return to_string(matrix);\\n}\\n\\n/**\\n * Internal representation for a branch.  Each branch represents an alternate\\n * path that may lead to other servers.\\n */\\nfunction branch() {\\n    return \\\"│  \\\";\\n}\\n\\n/**\\n * Add various decorations to a server name.\\n *\\n * @param ns The Netscript API.\\n * @param server We want to add various decorations to this server name.\\n * @return The same server name, but with added decoration.\\n */\\nfunction decorate(ns, server) {\\n    // We do not need any other decoration for the home server, apart from\\n    // adding a colour.\\n    if (home === server) {\\n        return colour.GREEN + server + colour.RESET;\\n    }\\n    // Add some more decorations to other servers.\\n    const serv = ns.getServer(server);\\n    const player = ns.getPlayer();\\n    const hack_lvl = player.skills.hacking;\\n    const required_hack_lvl = serv.requiredHackingSkill;\\n    const nhack = `(${required_hack_lvl})`;\\n    const nport = `[${serv.numOpenPortsRequired}]`;\\n    // Do we have root access on the server?\\n    if (serv.hasAdminRights) {\\n        const s = `${server} ${nhack}${nport}`;\\n        return colour.GREEN + s + colour.RESET;\\n    }\\n    // Do we have the minimum required Hack stat?\\n    let s = `${server} ${nhack}`;\\n    if (hack_lvl < required_hack_lvl) {\\n        s = colour.RED + s + colour.RESET;\\n    } else {\\n        s = colour.DARK_GREEN + s + colour.RESET;\\n    }\\n    // Can we open all ports on the server?\\n    if (num_ports(ns) < serv.numOpenPortsRequired) {\\n        s += colour.RED + nport + colour.RESET;\\n    } else {\\n        s += colour.DARK_GREEN + nport + colour.RESET;\\n    }\\n    return s;\\n}\\n\\n/**\\n * The character used to delimit two servers in a path.\\n */\\nfunction delimiter() {\\n    return \\\",\\\";\\n}\\n\\n/**\\n * Print the tree structure of the network of world servers.\\n *\\n * @param ns The Netscript API.\\n * @param path An array of shortest paths from the home server to each server\\n *     in the game world.  This array should be the output of the function\\n *     all_shortest_paths().\\n */\\nfunction display_tree(ns, path) {\\n    assert(path.length > 0);\\n    // Internal representation of the tree structure.  Visualize this\\n    // representation as a matrix or grid.  Each row represents a shortest path.\\n    const delim = delimiter();\\n    const root = [[home]];\\n    const tree = root.concat(path.map((p) => p.split(delim)));\\n    // Convert internal representation to ASCII art.\\n    const [grid, map] = to_ascii_art(tree);\\n    const art = beautify(ns, grid, map);\\n    ns.tprint(art);\\n}\\n\\n/**\\n * Internal representation of a fork.  A fork is immediately followed by a leaf.\\n */\\nfunction fork() {\\n    return \\\"└╴\\\";\\n}\\n\\n/**\\n * Internal representation for a leaf, i.e. a destination server.\\n */\\nfunction leaf() {\\n    return \\\"+\\\";\\n}\\n\\n/**\\n * Determine the number of ports a player can currently open on servers in\\n * the game world.  This depends on whether the player has the necessary\\n * hacking programs on the home server.\\n *\\n * @param ns The Netscript API.\\n * @return How many ports we can open on a world server.\\n */\\nfunction num_ports(ns) {\\n    let program = Array.from(popen);\\n    program = program.filter((p) => ns.fileExists(p, home));\\n    return program.length;\\n}\\n\\n/**\\n * Internal representation for a whitespace.\\n */\\nfunction placeholder() {\\n    return \\\".\\\";\\n}\\n\\n/**\\n * Remove a dead branch.\\n *\\n * @param matrix The ASCII art of the network of world servers.  The function\\n *     modifies this argument.\\n * @param r Start the pruning from this row upward.\\n * @return The same matrix, but with dead branches removed.\\n */\\nfunction prune_branch(matrix, r) {\\n    assert(matrix.length > 0);\\n    assert(matrix[0].length > 0);\\n    assert(r >= 0);\\n    // A shallow copy so we don't modify the parameter directly.  Still modify\\n    // it indirectly.\\n    const mat = Array.from(matrix);\\n    let col = mat[r].length - 3;\\n    const maxidx = mat.length - 1;\\n    while (col >= 0) {\\n        if (maxidx !== r && leaf() === mat[r + 1][col]) {\\n            return mat;\\n        }\\n        let row = Math.floor(r);\\n        while (row > 0) {\\n            if (leaf() === mat[row][col + 1]) {\\n                break;\\n            }\\n            mat[row][col] = placeholder();\\n            row--;\\n        }\\n        col--;\\n    }\\n    return mat;\\n}\\n\\n/**\\n * Prune branches that connect two siblings.  We do not need such branches.\\n * We can work out which servers are siblings by following the branch lines\\n * that connect two forks.\\n *\\n * @param matrix The ASCII art of the network of world servers.  The function\\n *     modifies this argument.\\n * @return The same matrix, but with sibling branches removed.\\n */\\nfunction prune_sibling_branch(matrix) {\\n    assert(matrix.length > 0);\\n    assert(matrix[0].length > 0);\\n    // A shallow copy so we don't modify the parameter directly.  We still\\n    // modify it indirectly.\\n    const mat = Array.from(matrix);\\n    // Start from the second row onward.\\n    for (let i = 1; i < mat.length; i++) {\\n        // Top row is shorter than bottom row.\\n        if (mat[i - 1].length < mat[i].length) {\\n            continue;\\n        }\\n        // There is a leaf immediately above the current leaf.\\n        const j = mat[i].length - 1;\\n        if (leaf() === mat[i - 1][j]) {\\n            continue;\\n        }\\n        // Start pruning from this row and work upward.\\n        let row = i - 1;\\n        while (row > 0) {\\n            if (fork() === mat[row][j]) {\\n                break;\\n            }\\n            assert(branch() === mat[row][j]);\\n            mat[row][j] = placeholder();\\n            row--;\\n        }\\n    }\\n    return mat;\\n}\\n\\n/**\\n * A T junction.\\n */\\nfunction tee() {\\n    return \\\"├╴\\\";\\n}\\n\\n/**\\n * Translate the internal representation of the network of servers into ASCII\\n * art.\\n *\\n * @param tree A matrix containing the internal representation of the network\\n *     of servers.\\n * @return An array [grid, map] as follows.\\n *\\n *     grid := The internal representation as ASCII art.\\n *     map := Converts a pair of coordinates in grid to a server name.\\n */\\nfunction to_ascii_art(tree) {\\n    assert(tree.length > 0);\\n    assert(tree[0].length > 0);\\n    // Start from the second row.  The first row has only the home server.\\n    const grid = []; // ASCII art.\\n    const map = new Map(); // Coordinates to server name.\\n    assert(tree[0].length === 1);\\n    assert(home === tree[0][0]);\\n    grid.push([leaf()]);\\n    const delim = delimiter();\\n    map.set(`0${delim}0`, home);\\n    for (let i = 1; i < tree.length; i++) {\\n        const previous = tree[i - 1];\\n        const current = tree[i];\\n        const row = [];\\n        // The first element is always the home server.\\n        assert(home === current[0]);\\n        for (let j = 0; j < current.length; j++) {\\n            // A leaf, i.e. the destination server in a shortest path.\\n            if (j >= previous.length || previous[j] !== current[j]) {\\n                row.push(leaf());\\n                const coord = i + delim + j;\\n                map.set(coord, current[j]);\\n                continue;\\n            }\\n            // A branch.\\n            assert(previous[j] === current[j]);\\n            row.push(branch());\\n        }\\n        grid.push(row);\\n    }\\n    return [grid, map];\\n}\\n\\n/**\\n * Convert the matrix representation of the ASCII art into a string.\\n *\\n * @param matrix The ASCII art of the network of world servers.  The function\\n *     modifies this argument.\\n * @return A string representation of the ASCII art.\\n */\\nfunction to_string(matrix) {\\n    assert(matrix.length > 0);\\n    assert(matrix[0].length > 0);\\n    // A shallow copy so we don't modify the parameter directly.  We still\\n    // modify it indirectly.\\n    const mat = Array.from(matrix);\\n    // Substitute a place holder with a whitespace.\\n    const whitespace = \\\"   \\\";\\n    for (let i = 0; i < mat.length; i++) {\\n        for (let j = 0; j < mat[i].length; j++) {\\n            if (placeholder() === mat[i][j]) {\\n                mat[i][j] = whitespace;\\n            }\\n        }\\n    }\\n    // Entries in the matrix as a string.\\n    let art = io.NEWLINE;\\n    for (const row of mat) {\\n        art += row.join(\\\"\\\") + io.NEWLINE;\\n    }\\n    return art;\\n}\\n\\n/**\\n * A tree structure of the servers in the game world.  If our home server is\\n * called \\\"home\\\", we might have the network map:\\n *\\n * home\\n * ├╴servA (1)[0]\\n * │  ├╴servD (15)[2]\\n * │  ├╴servE (100)[2]\\n * │  │  └╴servG (302)[3]\\n * │  └╴servG (256)[2]\\n * ├╴servB (101)[1]\\n * └╴servC (150)[2]\\n *\\n * The above network map tells us various information about the servers in the\\n * game world, apart from how these servers are structured relative to each\\n * other.  For example, the line \\\"serverName (n)[k]\\\" tells us the name of a\\n * server (i.e. serverName), the minimum Hack stat we must have in order to\\n * hack this server (i.e. n), and the number of ports that must be opened on\\n * the server (i.e. k) so we can nuke the server.  The server servA requires us\\n * to have a minimum of 1 Hack and we do not need to open any ports on the\\n * server.  As we always start with 1 Hack, we can immediately nuke servA and\\n * gain root access on that server.  On the other hand, servG requires a\\n * minimum of 302 Hack and we must open 3 ports on the server.\\n *\\n * How do we reach a particular server?  To reach servG, we start from our\\n * home server and connect to servA.  From there, we connect to servE and\\n * finally connect to servG.  The network map printed by the script shows a\\n * shortest path from the home server to each server in the game world.  There\\n * might be more than one shortest path from home to a particular server.  The\\n * script chooses to print only one of these shortest paths.\\n *\\n * When printed to the terminal, various colours are used to signify the status\\n * of each server, as explained below.\\n *\\n * 1. The whole line \\\"serverName (n)[k]\\\" is coloured green.  We have nuked\\n *    serverName and now have root access on the server.\\n * 2. The whole line \\\"serverName (n)[k]\\\" is coloured dark green.  We have\\n *    enough Hack stat to meet the minimum hacking skill requirement and we can\\n *    open all ports on the server.  However, we do not have root access on the\\n *    server because the server is yet to be nuked.\\n * 3. The whole line \\\"serverName (n)[k]\\\" is coloured red.  Our Hack stat is\\n *    less than the required minimum hacking skill and we cannot open all ports\\n *    on the server.\\n * 4. The part \\\"serverName (n)\\\" is coloured dark green whereas \\\"[k]\\\" is\\n *    coloured red.  We meet the minimum Hack stat required by the server, but\\n *    we cannot open all ports on the server.\\n * 5. The part \\\"serverName (n)\\\" is coloured red whereas \\\"[k]\\\" is coloured dark\\n *    green.  Our Hack stat is less than the minimum hacking skill required by\\n *    the server, but we can open all ports on the server.\\n *\\n * This script does not implement the functionalities of https://nmap.org.\\n * However, it serves the same purpose as the script\\n *\\n * https://github.com/alainbryden/bitburner-scripts/blob/main/scan.js\\n *\\n * We do not include purchased servers.  The script accepts a command line\\n * argument, i.e. the hostname of the server for which we want a status report.\\n * Without a command line argument, the script prints a map of the whole\\n * network of world servers.\\n *\\n * Usage: run nmap.js [hostname]\\n * Example: run nmap.js\\n * Example: run nmap.js n00dles\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Sanity check.\\n    if (ns.args.length > 1) {\\n        let msg = \\\"Usage: run nmap.js [hostname]\\\\n\\\\n\\\";\\n        msg += \\\"hostname -- (optional) Hostname of target server.\\\";\\n        ns.tprint(msg);\\n        return;\\n    }\\n    // Print the status of a server.\\n    if (ns.args.length === 1) {\\n        const host = ns.args[0];\\n        const server = new Set(network(ns));\\n        if (!server.has(host)) {\\n            ns.tprint(`Server not found: ${host}`);\\n            return;\\n        }\\n        ns.tprint(decorate(ns, host));\\n        return;\\n    }\\n    // A network map with status of each server.\\n    const path = all_shortest_paths(ns);\\n    display_tree(ns, path);\\n}\\n\",\"filename\":\"nmap.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/bf5dc9d9-d5ab-476e-91bd-81c6f89aeb4e\",\"moduleSequenceNumber\":213207},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0700aa86-dd30-426e-a1fe-104a8abe1713\",\"moduleSequenceNumber\":213205},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/48f160d4-627c-4186-929a-660d05c541f0\",\"moduleSequenceNumber\":213202},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fb1eb141-5701-4e17-b431-52ebf7bb2ecf\",\"moduleSequenceNumber\":213200},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/226c2b8b-814f-4687-a567-89c64473fc27\",\"moduleSequenceNumber\":213199},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/66d156e4-0a63-4c98-8d58-53ed1f39d25d\",\"moduleSequenceNumber\":213198},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/42e1898d-3096-45e4-9a79-d0325340f5b6\",\"moduleSequenceNumber\":213195},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f3e86ecd-1027-44df-928c-35842de1063f\",\"moduleSequenceNumber\":213194},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4a635017-0911-4127-9f31-0c9347e8d4a4\",\"moduleSequenceNumber\":213229},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ada8ce11-f5a7-47ee-8456-901df27738a8\",\"moduleSequenceNumber\":213207},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7886c539-6c42-4834-b44f-181d0e627d88\",\"moduleSequenceNumber\":213205},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/40cd39bd-83ef-4a92-88ff-944c8e3d1348\",\"moduleSequenceNumber\":213202},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c51238d9-18f1-4077-b429-e882fd734f52\",\"moduleSequenceNumber\":213200},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d2bb3739-6df3-4170-9fd4-bdcdcd4d2c66\",\"moduleSequenceNumber\":213199},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d6230092-5d7e-4bed-9bba-23cc9fd04576\",\"moduleSequenceNumber\":213198},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5f5bf1dd-e11d-4321-a016-446188559898\",\"moduleSequenceNumber\":213195},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/235f0018-b0e0-400c-8bd6-b2b9550b10f1\",\"moduleSequenceNumber\":213194},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f3119894-3d5d-41bf-a95c-708ec08a2a2f\",\"moduleSequenceNumber\":213229},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/26130559-b7ef-45f2-ad96-095a8eade9d2\",\"moduleSequenceNumber\":213202},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/5ae76b41-fbda-48d3-b145-abab3b48cae0\",\"moduleSequenceNumber\":213190},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/66253d0c-7909-44f1-8468-16fdbd488387\",\"moduleSequenceNumber\":213213},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1e2ac75c-be25-4477-9718-84e01e3d5b78\",\"moduleSequenceNumber\":213202},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/442adb81-9406-4f4b-83d8-46fd1f8d0637\",\"moduleSequenceNumber\":213200},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/aff7cace-e956-483a-bb10-91996378ef70\",\"moduleSequenceNumber\":213198},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c72e6a58-17c7-4ac5-9ae7-1dc30e51f605\",\"moduleSequenceNumber\":213194},{\"filename\":\"nmap.js\",\"url\":\"blob:https://danielyxie.github.io/9a07f879-fcf6-4c9e-a00f-734006c73f94\",\"moduleSequenceNumber\":215746}],\"dependents\":[],\"ramUsage\":6.65,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":690,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { network } from \\\"/lib/network.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport {\\n    assert,\\n    choose_best_server,\\n    choose_targets,\\n    filter_bankrupt_servers,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Restart all scripts on a purchased server.  This is useful in the case where\\n * all scripts running on a purchased server have been killed.  We start running\\n * those scripts again.  This script chooses the \\\"best\\\" servers to hack.\\n *\\n * Usage: run restart-server.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Cycle through our purchased servers to see whether to restart our\\n    // hack script.\\n    const player = new Player(ns);\\n    let target = [];\\n    for (const s of player.pserv()) {\\n        // Determine the target servers to hack.  There are always at least 2\\n        // targets because at least 2 servers in the game world require only\\n        // 1 Hack stat and zero opened ports.\\n        // Assume that each target is not bankrupt.\\n        if (target.length < 1) {\\n            target = filter_bankrupt_servers(\\n                ns,\\n                choose_targets(ns, network(ns))\\n            );\\n            assert(target.length > 0);\\n        }\\n        const server = new Server(ns, s);\\n        if (!server.is_running_script(player.script())) {\\n            // Choose the best target server that is not bankrupt.  Run our\\n            // hack script against this target server.\\n            const t = choose_best_server(ns, target);\\n            target = target.filter((r) => r !== t);\\n            const target_server = new Server(ns, t);\\n            assert(await target_server.gain_root_access());\\n            assert(await server.deploy(target_server.hostname()));\\n        }\\n    }\\n}\\n\",\"filename\":\"restart-server.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":10.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":691,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n/**\\n * Share our home server with a faction.  Doing so would increase our\\n * reputation gains within that faction.  Run this script using as high a number\\n * of threads as possible to increase our reputation gains even further.\\n *\\n * Usage: run share.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    for (;;) {\\n        await ns.share();\\n    }\\n}\\n\",\"filename\":\"share.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"share.js\",\"url\":\"blob:https://danielyxie.github.io/fa881530-7cef-46da-93e5-0ab89358693b\",\"moduleSequenceNumber\":64047}],\"dependents\":[],\"ramUsage\":4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":692,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"share\",\"cost\":2.4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { network, shortest_path } from \\\"/lib/network.js\\\";\\n\\n/**\\n * Determine a shortest path from our home server to a target server.  Must\\n * provide the target server from the command line.  The script will print a\\n * chain of commands that allows us to connect to the target server.\\n *\\n * Usage: run shortest-path.js [targetServer]\\n * Example: run shortest-path.js run4theh111z\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Must provide a command line argument.\\n    const error_msg = \\\"Must provide the name of the target server.\\\";\\n    if (ns.args.length < 1) {\\n        ns.tprint(error_msg);\\n        return;\\n    }\\n    // Not a server in the game world.  Exclude purchased servers.\\n    const target = ns.args[0];\\n    const server = new Set(network(ns));\\n    if (!server.has(target)) {\\n        ns.tprint(`Server not found: ${target}`);\\n        return;\\n    }\\n    // Find shortest path.\\n    let path = shortest_path(ns, home, target);\\n    if (path.length < 1) {\\n        ns.tprint(`Target server must be reachable from ${home}.`);\\n        return;\\n    }\\n    // Print commands to connect to target server.\\n    path = path.filter((s) => s !== home);\\n    ns.tprint(`connect ${path.join(\\\"; connect \\\")}`);\\n}\\n\",\"filename\":\"shortest-path.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/41da7c6f-bae5-48f6-843f-241267c286c2\",\"moduleSequenceNumber\":372400},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f74d54c0-d4b7-4dd3-b9fe-dbb90f581d09\",\"moduleSequenceNumber\":372398},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/83d3cc02-7ae7-44f7-be31-4ba56a72b847\",\"moduleSequenceNumber\":372395},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0d2e3eb3-4e48-450c-8877-3534ab8cd653\",\"moduleSequenceNumber\":372393},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7e7d643f-2a76-4183-be00-959b27732479\",\"moduleSequenceNumber\":372392},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c8c716cd-419d-4289-9491-7ee4b817b10e\",\"moduleSequenceNumber\":372391},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a32c57fe-68eb-4296-ac12-c43f2b1291fd\",\"moduleSequenceNumber\":372388},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/69b43813-38df-4257-a8be-052c4b766566\",\"moduleSequenceNumber\":372387},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/59b96362-d9cc-48ee-8e0e-cc9481f3c4b5\",\"moduleSequenceNumber\":372422},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c9272fe6-511f-4bd1-8816-4ac70d1146f1\",\"moduleSequenceNumber\":372395},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/e7f2451d-7482-437b-b047-c3bd6a345cc4\",\"moduleSequenceNumber\":372383},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/876a393d-4edf-4137-8c78-a0e64903f609\",\"moduleSequenceNumber\":372406},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c90b3dde-f1ec-4b41-993c-bf3aa8583778\",\"moduleSequenceNumber\":372395},{\"filename\":\"shortest-path.js\",\"url\":\"blob:https://danielyxie.github.io/93683e8b-a49d-4324-ac81-02ecde29e9a4\",\"moduleSequenceNumber\":376521}],\"dependents\":[],\"ramUsage\":4.05,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":693,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { money_reserve } from \\\"/lib/constant/misc.js\\\";\\nimport { pserv } from \\\"/lib/constant/pserv.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { forecast, wse } from \\\"/lib/constant/wse.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Wait until we have all prerequisites before we do anything related to the\\n * dark web.  For now, we wait until the following conditions are met:\\n *\\n * (1) We have all port opener programs.\\n * (2) Have at least a certain amount of money.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function await_prerequisites(ns) {\\n    // Must acquire all port opener programs.\\n    const player = new Player(ns);\\n    while (!player.has_all_port_openers()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    // Our farm of purchased servers must meet certain minimum requirements.\\n    while (!has_minimum_pserv(ns)) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    // Wait until we have a large amount of money before trading on the Stock\\n    // Market.  Gambling on the Stock Market requires huge wealth.\\n    while (!meet_money_threshold(ns)) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n}\\n\\n/**\\n * Purchase shares of a stock.\\n *\\n * @param ns The Netscript API.\\n * @param stk We want to purchase shares of this stock.\\n */\\nfunction buy_stock(ns, stk) {\\n    // Do we skip buying shares of this stock?\\n    if (skip_stock(ns, stk)) {\\n        return;\\n    }\\n    // Purchase shares of a stock.\\n    const nshare = num_shares(ns, stk);\\n    assert(nshare > 0);\\n    ns.stock.buyStock(stk, nshare);\\n}\\n\\n/**\\n * Whether we have access to Stock Market data and APIs.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have access to all Stock Market data and APIs;\\n *     false otherwise.\\n */\\nfunction has_api_access(ns) {\\n    if (!ns.stock.purchaseWseAccount()) {\\n        return bool.NOT;\\n    }\\n    if (!ns.stock.purchaseTixApi()) {\\n        return bool.NOT;\\n    }\\n    if (!ns.stock.purchase4SMarketData()) {\\n        return bool.NOT;\\n    }\\n    if (!ns.stock.purchase4SMarketDataTixApi()) {\\n        return bool.NOT;\\n    }\\n    return bool.HAS;\\n}\\n\\n/**\\n * Whether we have sufficient funds for purchasing stocks.  This function\\n * takes into account the minimum amount of money that should be held in\\n * reserve whenever we trade on the Stock Market.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have enough money to buy stocks; false otherwise.\\n */\\nfunction has_funds(ns) {\\n    const player = new Player(ns);\\n    return player.money() > wse.RESERVE_MULT * money_reserve;\\n}\\n\\n/**\\n * Whether we have a minimum running farm of purchased servers.  To meet this\\n * condition, our farm must satisfy the following:\\n *\\n * (1) Each purchased server in the farm must have at least 16,384GB RAM.\\n * (2) Our farm must have the maximum number of purchased server.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have a minimum running purchased server farm;\\n *     false otherwise.\\n */\\nfunction has_minimum_pserv(ns) {\\n    // Do we have the maximum number of purchased servers?\\n    const player = new Player(ns);\\n    if (player.pserv().length < ns.getPurchasedServerLimit()) {\\n        return bool.NOT;\\n    }\\n    // Does each purchased server have at least the given amount of RAM?\\n    const server = ns.getServer(pserv.PREFIX);\\n    assert(server.purchasedByPlayer);\\n    if (server.maxRam < pserv.HIGH_RAM) {\\n        return bool.NOT;\\n    }\\n    return bool.HAS;\\n}\\n\\n/**\\n * Whether it is profitable to sell all shares of a given stock.\\n *\\n * @param ns The Netscript API.\\n * @param stk Is there any profit in selling all shares of this stock?\\n * @return true if we can make a profit by selling all our shares of this\\n *     stock; false otherwise.\\n */\\nfunction is_profitable(ns, stk) {\\n    const position = ns.stock.getPosition(stk);\\n    const nlong = position[0];\\n    // Assume we have at least 1 share of the stock.\\n    assert(nlong > 0);\\n    return ns.stock.getSaleGain(stk, nlong, \\\"Long\\\") > 0;\\n}\\n\\n/**\\n * Whether we meet the money threshold.  Must have at least a certain amount\\n * of money before we start dabbling on the Stock Market.\\n *\\n * @param ns The Netscript API.\\n * @return true if our funds is at least the money threshold; false otherwise.\\n */\\nfunction meet_money_threshold(ns) {\\n    const player = new Player(ns);\\n    return player.money() >= money_reserve;\\n}\\n\\n/**\\n * How many shares of a stock we can purchase.\\n *\\n * @param ns The Netscript API.\\n * @param stk We want to buy shares of this stock.\\n * @return The number of shares of this stock that we can buy.  Must be at\\n *     least zero.  If 0, then we can't buy any shares of the given stock.\\n */\\nfunction num_shares(ns, stk) {\\n    // We don't have enough money to buy stocks.\\n    if (!has_funds(ns)) {\\n        return 0;\\n    }\\n    // Our funds is less than the spending threshold.\\n    const player = new Player(ns);\\n    const funds = player.money() - money_reserve;\\n    if (funds < wse.SPEND_T) {\\n        return 0;\\n    }\\n    // The maximum number of shares of the stock we can buy.  This takes into\\n    // account the number of shares we already own.\\n    const position = ns.stock.getPosition(stk);\\n    const nlong = position[0];\\n    const max_share = ns.stock.getMaxShares(stk) - nlong;\\n    if (max_share < 1) {\\n        return 0;\\n    }\\n    // Calculate how many shares of the stock we can buy.\\n    const price = ns.stock.getAskPrice(stk);\\n    const nshare = Math.floor(funds / price);\\n    return Math.min(nshare, max_share);\\n}\\n\\n/**\\n * Purchase access to Stock Market data and APIs.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function purchase_api_access(ns) {\\n    while (!has_api_access(ns)) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    log(ns, \\\"Purchased access to Stock Market data and APIs\\\");\\n}\\n\\n/**\\n * Sell shares of a stock.\\n *\\n * @param ns The Netscript API.\\n * @param stk We want to sell shares of this stock.\\n */\\nfunction sell_stock(ns, stk) {\\n    const position = ns.stock.getPosition(stk);\\n    const nlong = position[0];\\n    // Skip the stock if we don't have any shares of the stock.\\n    if (nlong < 1) {\\n        return;\\n    }\\n    // Sell all shares of the stock if the forecast is below the threshold.\\n    if (ns.stock.getForecast(stk) < forecast.SELL) {\\n        if (is_profitable(ns, stk)) {\\n            ns.stock.sellStock(stk, nlong);\\n        }\\n    }\\n}\\n\\n/**\\n * Whether to skip the purchase of shares.  There are various reasons why we\\n * might want to skip the buying of shares, even though we have sufficient\\n * funds.  One reason is that we want to sell our shares to raise a huge amount\\n * of money for various purposes.\\n *\\n * @param ns The Netscript API.\\n * @return true if the trade bot should skip buying shares during this tick;\\n *     false otherwise.\\n */\\nfunction skip_buy(ns) {\\n    return ns.fileExists(wse.STOP_BUY, home);\\n}\\n\\n/**\\n * Whether to skip buying shares of a stock.\\n *\\n * @param ns The Netscript API.\\n * @param stk Do we want to skip over this stock?\\n * @return true if we are to skip this stock; false otherwise.\\n */\\nfunction skip_stock(ns, stk) {\\n    // Skip if there is a low chance of increase in the next tick.\\n    if (ns.stock.getForecast(stk) < forecast.BUY) {\\n        return bool.SKIP;\\n    }\\n    // Skip if the stock is too volatile.\\n    if (ns.stock.getVolatility(stk) > forecast.VOLATILITY) {\\n        return bool.SKIP;\\n    }\\n    // Skip if we cannot afford to purchase any shares of the stock.\\n    const nshare = num_shares(ns, stk);\\n    if (nshare < 1) {\\n        return bool.SKIP;\\n    }\\n    return bool.NO_SKIP;\\n}\\n\\n/**\\n * Automate our trading on the World Stock Exchange.  This is our trade bot.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"sleep\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    // Prepare to trade.\\n    await await_prerequisites(ns);\\n    await purchase_api_access(ns);\\n    // Continuously trade on the Stock Market.\\n    log(ns, \\\"Trading on the Stock Market\\\");\\n    for (;;) {\\n        // Iterate over each stock.  Decide whether to buy or sell.\\n        for (const stk of ns.stock.getSymbols()) {\\n            sell_stock(ns, stk);\\n            if (!has_minimum_pserv(ns)) {\\n                continue;\\n            }\\n            if (skip_buy(ns)) {\\n                continue;\\n            }\\n            buy_stock(ns, stk);\\n        }\\n        await ns.sleep(wse.TICK);\\n    }\\n}\\n\",\"filename\":\"trade-bot.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d2a4a676-5e67-4db9-8df6-752e715f6358\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a9e49bbc-3f24-40fe-97a5-b1d4af45b158\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fc2d35db-ce36-417c-9546-60b54e0aeb7d\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b93aced6-1961-4573-a287-abec5e3ce63b\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bea1af45-5abc-46ca-a9f9-bfc9ff8a74f0\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8f4ec925-1bc3-48f9-a369-019ffe52ca32\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/563da9af-ce16-413f-8be2-910df695fece\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/18fe18fd-8842-4a68-a5a7-71448956cc45\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/90f54bc1-bbf6-4581-b447-665572d08267\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/98e51c74-d186-41da-b176-1aa815564e44\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/31592459-6151-4f40-ae0d-a8bf0c426d8a\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d0274a31-46f5-43c4-9385-36f342c5851c\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/596f0baf-c269-43ee-a33a-ec43dae1c566\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3d6bfe59-ebac-43c2-99d5-11b7040b1007\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/50dddac9-501b-4666-9199-2d7582bd9eb3\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a59c7931-f36a-411d-ba9f-d4f8c9cd1e2b\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ef56b4df-5ee5-4550-a798-4599dda4080f\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4f179fa8-d2c8-4782-81c8-6048fc6850af\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2f4d763b-b6f2-4430-8e40-c995cca495cf\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d7bfe882-95c1-4560-b84f-f85520e8f528\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ca0aead1-cdfe-4342-b679-517c2c15524e\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/4feb4500-a742-480a-a1b0-a74de65225a4\",\"moduleSequenceNumber\":287},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c225e84b-3411-4038-900d-9bae127a4d37\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9fab2fd6-de2d-477c-8fbb-14d2925331fb\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/687a02e5-209a-44c4-b7da-665c492e5d44\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b26e07ca-d276-466f-9fcd-524da9a0e521\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c4cbaa21-1c8f-49c5-8afe-f8402cb4a0f3\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b10c633b-5308-4957-aa8f-b5259639c622\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5b7fd1e0-5503-448f-8e18-ea63e4b64544\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0de58e2c-e25b-4cad-ae60-b0ac419ac2ad\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/861d2d9a-d74f-49e4-9d06-b7e1711a9711\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0645969b-ef69-4fc1-93e9-6dc18c9c8971\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/f1d7d052-3290-4b5a-8f45-39b1031543fe\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3414f8a2-92e1-44bf-9401-de35ce34ece8\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c30a5e25-470d-4a0e-b63e-c672a3598617\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/77ec7121-1c8d-4154-910f-697e48bb4566\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/pserv.js\",\"url\":\"blob:https://danielyxie.github.io/5d9b0fd0-9e4d-424d-957d-d72cc1b07987\",\"moduleSequenceNumber\":274},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9ca7ea6b-d121-437a-935d-514c5dc2f150\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9d7a73c4-91b3-4d60-bf1d-06f27b45c27d\",\"moduleSequenceNumber\":263},{\"filename\":\"trade-bot.js\",\"url\":\"blob:https://danielyxie.github.io/8cdd0de2-0009-422c-a485-5b5b1bd87c1c\",\"moduleSequenceNumber\":400}],\"dependents\":[],\"ramUsage\":36.65,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":694,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"stock.buyStock\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.purchaseWseAccount\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.purchaseTixApi\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.purchase4SMarketData\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.purchase4SMarketDataTixApi\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getPosition\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getSaleGain\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getMaxShares\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getAskPrice\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stock.getForecast\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.sellStock\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stock.getVolatility\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"stock.getSymbols\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport {\\n    assert,\\n    choose_best_server,\\n    filter_bankrupt_servers,\\n    filter_pserv,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Determine which servers in the game world have been compromised.  We\\n * exclude all purchased servers.  A server in the game world is said to be\\n * compromised provided that:\\n *\\n * (1) We have root access to the server.\\n * (2) Our hack scripts are currently running on the server.\\n *\\n * @param ns The Netscript API.\\n * @param script A hack script.  We want to check whether a server is running\\n *     this script.\\n * @param server An array of server names.\\n * @return An array of servers that have been compromised.\\n */\\nfunction compromised_servers(ns, script, server) {\\n    assert(server.length > 0);\\n    const compromised = [];\\n    for (const s of filter_pserv(ns, server)) {\\n        const serv = new Server(ns, s);\\n        if (serv.has_root_access() && serv.is_running_script(script)) {\\n            compromised.push(s);\\n        }\\n    }\\n    return compromised;\\n}\\n\\n/**\\n * Gain root access to a server, copy our hack scripts over to the server, and\\n * use the server to hack a target.\\n *\\n * @param ns The Netscript API.\\n * @param server Use this server to hack a target.\\n * @param target Hack this server.\\n */\\nasync function hack_a_server(ns, server, target) {\\n    const serv = new Server(ns, server);\\n    const targ = new Server(ns, target);\\n    // Ensure we have root access on both servers.\\n    if (!serv.has_root_access()) {\\n        await serv.gain_root_access();\\n    }\\n    if (!targ.has_root_access()) {\\n        await targ.gain_root_access();\\n    }\\n    // Copy our hack script over to a server.  Use the server to hack a target.\\n    assert(await serv.deploy(targ.hostname()));\\n}\\n\\n/**\\n * Try to hack a bunch of servers in the game world.\\n *\\n * @param ns The Netscript API.\\n * @param target Try to hack one or more servers on this list.  Can't be\\n *     an empty array.\\n * @return An array [reject, hacked] as follows.\\n *     (1) reject := An array of servers we can't hack at the moment.\\n *     (2) hacked := An array of servers that have been hacked.\\n */\\nasync function hack_servers(ns, target) {\\n    // Sanity check.\\n    assert(target.length > 0);\\n    // Determine the maximum number of ports we can open on a server.\\n    const player = new Player(ns);\\n    const nport = player.num_ports();\\n    assert(nport >= 0);\\n    // A list of servers that were successfully hacked.\\n    const hacked_server = [];\\n    // Gain root access to as many servers as possible on the network.  Copy\\n    // our hack script to each server and use the server to hack itself.\\n    const reject = []; // Servers we can't hack at the moment.\\n    // A Hack stat margin: 1% of our Hack stat, plus another 5 points.\\n    const margin = Math.floor(0.01 * player.hacking_skill() + 5);\\n    for (const s of target) {\\n        // Should we skip this server?\\n        if (skip_server(ns, s, player.script(), margin)) {\\n            continue;\\n        }\\n        const server = new Server(ns, s);\\n        const hack_lvl = player.hacking_skill();\\n        const required_lvl = server.hacking_skill();\\n        // If the hacking skill requirement of the server is within the margin\\n        // of our Hack stat, skip the server for now but make a note to attempt\\n        // at a later time.\\n        if (hack_lvl < required_lvl) {\\n            if (tolerate_margin(ns, margin, s)) {\\n                reject.push(s);\\n                continue;\\n            }\\n        }\\n        assert(hack_lvl >= required_lvl);\\n        // If the server is bankrupt, skip the server for now and add it to\\n        // the list of rejects.\\n        if (server.is_bankrupt()) {\\n            reject.push(s);\\n            continue;\\n        }\\n        // Use the server to hack itself.\\n        await hack_a_server(ns, s, s);\\n        hacked_server.push(s);\\n        log(ns, `Compromised server: ${s}`);\\n    }\\n    return [reject, hacked_server];\\n}\\n\\n/**\\n * Use a bankrupt server to hack a server that can hold money.\\n *\\n * @param ns The Netscript API.\\n * @param candidate Scan this array of servers to see whether any is bankrupt.\\n * @param hacked_server Each server in this array has been successfully hacked.\\n *     The implication is that each server is not bankrupt, i.e. can hold money.\\n * @return An array of servers we cannot redirect at the moment.\\n */\\nasync function redirect_bankrupt_server(ns, candidate, hacked_server) {\\n    // Sanity checks.\\n    assert(candidate.length > 0);\\n    assert(hacked_server.length > 0);\\n    // An array of hacked servers.  We remove bankrupt servers from this list.\\n    let hserver = filter_bankrupt_servers(ns, Array.from(hacked_server));\\n    const reject = [];\\n    const player = new Player(ns);\\n    for (const s of candidate) {\\n        const server = new Server(ns, s);\\n        if (player.hacking_skill() >= server.hacking_skill()) {\\n            // Redirect a bankrupt server to hack a target.\\n            if (server.is_bankrupt()) {\\n                // Choose a target server from a list of servers that have\\n                // been hacked.\\n                const target = new Server(ns, choose_best_server(ns, hserver));\\n                assert(!target.is_bankrupt());\\n                hserver = hserver.filter((hs) => hs !== target.hostname());\\n                // Redirect the bankrupt server to hack the target server.\\n                await hack_a_server(ns, s, target.hostname());\\n                log(ns, `Compromised server: ${s}`);\\n                continue;\\n            }\\n        }\\n        reject.push(s);\\n    }\\n    return reject;\\n}\\n\\n/**\\n * Whether we should skip the server.  A server might be skipped over for\\n * various reasons.\\n *\\n * @param ns The Netscript API.\\n * @param server Should we skip this server?\\n * @param script The name of our hacking script.\\n * @param margin The Hack stat margin.  For servers whose hacking skill\\n *     requirement is higher than our current Hack stat, the margin is the\\n *     extra Hack stat we are willing to wait to acquire.  Let h be our Hack\\n *     stat, let m be the margin, and r the required hacking skill requirement\\n *     of the server.  If h + m < r, then the hacking skill requirement of the\\n *     server is too high and we should skip over this server.  In case\\n *     h < r and h + m >= r, we are willing to wait for our Hack stat to\\n *     increase by an extra m points.\\n * @return true if we are to skip over the given server; false otherwise.\\n */\\nfunction skip_server(ns, server, script, margin) {\\n    const serv = new Server(ns, server);\\n    const player = new Player(ns);\\n    const m = Math.floor(margin);\\n    assert(m > 0);\\n    // Determine the maximum number of ports we can open on a server.\\n    const nport = player.num_ports();\\n    assert(nport >= 0);\\n    // Skip over a server that requires more ports than we can open.\\n    if (serv.num_ports_required() > nport) {\\n        return bool.SKIP;\\n    }\\n    // If our hack script is already running on the server, then skip the\\n    // server.\\n    if (serv.is_running_script(script)) {\\n        return bool.SKIP;\\n    }\\n    // Determine how many threads we can run our script on a server.  If we\\n    // can't run our script on the server, then we skip the server.\\n    const nthread = serv.num_threads(script);\\n    if (nthread < 1) {\\n        return bool.SKIP;\\n    }\\n    // Skip over a server if its hacking skill requirement is too high.\\n    if (player.hacking_skill() + m < serv.hacking_skill()) {\\n        return bool.SKIP;\\n    }\\n    return bool.NO_SKIP;\\n}\\n\\n/**\\n * Whether to tolerate the given margin with respect to the hacking skill\\n * requirement of a server.  Let h be our Hack stat, m the margin, and r the\\n * hacking skill requirement of a server.  Suppose that h < r.  We are willing\\n * to tolerate the margin, i.e. wait for our Hack stat to increase by an extra\\n * m points, provided that h + m >= r.\\n *\\n * @param ns The Netscript API.\\n * @param margin The Hack stat margin.\\n * @param server The target server.\\n * @return true if we are willing to tolerate the margin; false otherwise.\\n */\\nfunction tolerate_margin(ns, margin, server) {\\n    const serv = new Server(ns, server);\\n    const player = new Player(ns);\\n    const h = player.hacking_skill();\\n    const m = Math.floor(margin);\\n    assert(m > 0);\\n    const requirement = serv.hacking_skill();\\n    assert(h < requirement);\\n    return h + m >= requirement;\\n}\\n\\n/**\\n * Search for world servers to hack.  We exclude purchased servers.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function update(ns) {\\n    let server = network(ns);\\n    // A list of servers that have been successfully hacked.\\n    const player = new Player(ns);\\n    let hacked_server = compromised_servers(ns, player.script(), server);\\n    // Continuously try to gain root access to servers in the game world and\\n    // let each server hack itself.  Exclude all purchased servers.\\n    while (server.length > 0) {\\n        const [reject, hacked] = await hack_servers(ns, server);\\n        hacked_server = [...new Set(hacked_server.concat(hacked))];\\n        assert(hacked_server.length > 0);\\n        // Redirect a bankrupt server to hack another target.\\n        server = reject;\\n        if (reject.length > 0) {\\n            server = await redirect_bankrupt_server(ns, server, hacked_server);\\n        }\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n}\\n\\n/**\\n * Use each server in the game world to hack itself.  We exclude purchased\\n * servers.  A bankrupt server is used to hack another world server that\\n * isn't bankrupt.\\n *\\n * Usage: run world-server.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerUsedRam\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Continuously look for world servers to hack.\\n    log(ns, \\\"Searching for world servers to nuke and hack\\\");\\n    for (;;) {\\n        await update(ns);\\n        await ns.sleep(wait_t.MINUTE);\\n    }\\n}\\n\",\"filename\":\"world-server.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5b5a9ddf-78d9-4a62-a2e8-90aaf16a638b\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f8afdbf9-adb2-48cd-af09-e1a5d754636f\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9699a4fd-dd6c-4f05-a845-b916c40c7076\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1e577303-9391-4aea-a96e-3d6ba05da8f8\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/74f54a5c-6c25-43aa-bcb3-85052458be3d\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/edc26ce1-d721-4deb-98dd-18e73f0bb5c1\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6da4c0bb-78d8-4be6-a7dc-d5a57be482d8\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6f854a9c-144f-4209-98be-670ccc1f411c\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/98ff7b67-e3bb-4817-ae58-444169424ddf\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8fca4dda-12c5-4247-a4f0-46a282f81dda\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/054a6f0b-cd1f-4936-8d41-37772947682b\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e7c7da64-6856-4a53-8fbd-8b833597c7f6\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8f6b6f8a-d48d-40d8-be41-4b08560973d2\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/82fd44f3-358a-4cc4-b4e4-e23e3e897fe6\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/869ce2a2-2e4a-487b-bc2a-31f18680db33\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4f1364bc-a08c-46b5-9e5d-a949a15c9ec3\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a85ce00f-9b85-4ae8-978f-41ecc1913f42\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/45eaa539-d792-4ff6-a55a-6fb275e4a861\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/73a0a7dd-31ab-4cb2-acd9-cf02eeebb54b\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/64bf1fa8-22e3-4907-8daf-539199a33617\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/3680d043-82d7-45c4-84d9-4ebdff39aa4b\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/48ce5bce-9ee6-424c-aff2-dc7595bda1ed\",\"moduleSequenceNumber\":290},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4ae4e32c-3f5e-403d-a621-adb9775ff582\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2a4c7020-017b-4224-9027-bd67793784bc\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6e1228a4-0a8d-4065-8005-b2e9d2bec3c0\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f96a0d7f-a847-4429-9a77-26a0b5aa28b7\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e99ab614-84a3-43b6-956f-488b8aa20dce\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6d9b29e4-0eca-4954-96e1-38b3f3f44a23\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b72deff2-ed5e-46d0-a000-819c42af8a3f\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c5ecef0b-7ce3-4ac0-90ce-386e04d7fff1\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d8b11588-9c08-4417-be24-c84abbe4d603\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e6cce8d2-7100-424b-92c8-b4c469c45916\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a139c184-db51-43e2-b82c-8e982151ec66\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d72e133d-5bb0-43be-96ba-110e7e33e573\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/d55739a6-f77b-4c9b-8a34-ad1bdb19ca79\",\"moduleSequenceNumber\":287},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/90c6c067-08cb-493a-a5c8-109efbde98be\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/79d801b1-4c1e-4ee4-be1e-f267d8079a53\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9fea3463-9c9b-4552-8cd9-03bcb92b43cb\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a39fc668-a2f6-4ef9-a3aa-ed6fdb363e4a\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/31253c6f-7188-45ba-8028-232a693b52ae\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cf7b171a-c541-47f7-8179-b17da07ac263\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/297250b0-ae71-47dd-9627-76d7d6de4420\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5a30ce21-9296-45fb-95d7-973545ec05e6\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cfe2a8f8-46b9-4a7b-8c42-fc1c3640a598\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/86cdf80d-1098-4b40-b26c-7d32d7357bd6\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/d75a3ad2-0469-44aa-95e2-932a48be251f\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/4f3a9227-ef71-450a-9971-69c02c82e08b\",\"moduleSequenceNumber\":286},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e9319a7f-4f54-42d0-8570-4233a3009430\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/58e05050-5cf7-49f4-a50e-a7859c8d2854\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f9016c73-a266-4d09-959b-82a19af704c9\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c313cf23-a44b-4999-8aa7-a02b31c2e5a9\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/470a470b-483f-4552-ae25-f27d2370d363\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2a4d7141-0b6e-4eaf-9c15-ba674405747a\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/12b3679b-04c2-4fd9-af67-071efc10f2d6\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1e3b9145-d6a9-4dc9-8102-2f5162c735b2\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/485cb960-41c4-4c70-945f-4f6eaf12c23d\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/57cf3043-9e72-4dcf-aa28-a74e3bff80e8\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/f5682330-d117-4f66-83db-9cd7042ec92a\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a30a6101-bc5b-409a-99af-4397b9f4ace4\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/2b45c7b9-c556-409d-be4e-9585b52b3c05\",\"moduleSequenceNumber\":263},{\"filename\":\"world-server.js\",\"url\":\"blob:https://danielyxie.github.io/0d503e0e-1a5e-43d7-9356-60753dfcd23d\",\"moduleSequenceNumber\":397}],\"dependents\":[],\"ramUsage\":10.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":695,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { exec, hram_resume, hram_suspend } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Start a load chain to run scripts related to factions.\\n *\\n * Usage: run chain/faction.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress some log messages.\\n    ns.disableLog(\\\"sleep\\\");\\n    // Try to free up some RAM on home server so we can run the script below.\\n    await hram_suspend(ns);\\n    while (ns.isRunning(\\\"/singularity/program.js\\\", home)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    exec(ns, \\\"/singularity/faction.js\\\");\\n    hram_resume(ns);\\n}\",\"filename\":\"/chain/faction.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c2e83ce1-93a3-4ac0-b3c1-0cce89f5916d\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/77f9a178-0300-4922-a74d-20d64ed0590c\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e8ba99b0-4efc-41d1-b332-c26d557b8ebf\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ba294fc2-128f-4c25-bf39-c1824d67fd78\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/41ab67d0-b7c0-49e9-980c-3ec06579ffaf\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8603d7f3-2569-4e9f-b6ee-ea4b42c242aa\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8cd89e7c-3718-4c5e-a3bc-05f183189b9e\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/483f3a88-7789-43d3-8e75-ab4b2dafaf5a\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/921006a1-988e-484a-b098-fd321cb08cf6\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c1b848ef-7903-4faa-a151-afdd0c79ad06\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/738b5b98-4267-4de0-b90d-f27f183c9213\",\"moduleSequenceNumber\":68974},{\"filename\":\"/chain/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f57c2874-18df-49ac-a932-7fd255356330\",\"moduleSequenceNumber\":69190}],\"dependents\":[],\"ramUsage\":4.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":696,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { exec, hram_resume, hram_suspend } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Start a load chain to run scripts to upgrade our home server.\\n *\\n * Usage: run chain/home.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress some log messages.\\n    ns.disableLog(\\\"sleep\\\");\\n    // Try to free up some RAM on home server so we can run the script below.\\n    await hram_suspend(ns);\\n    exec(ns, \\\"/singularity/home.js\\\");\\n    hram_resume(ns);\\n}\\n\",\"filename\":\"/chain/home.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1d28cd67-df8a-4e70-8062-bf7244c52687\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fe9c3fa2-0b8d-49a5-abd8-343458d1475d\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7eb4ac13-4557-41de-9a24-35a1e565f571\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5eeb2157-f5a7-48da-990d-e29a9287157b\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8f78f88f-76e5-4a13-8a49-35dc92c72050\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a55143e3-ed82-498a-94ef-ef5a4709fece\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/365819f2-ec0f-46f3-86e2-a67239dcc562\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/09b9a617-3953-44fe-8a97-106f8b060525\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0c74d828-2e81-416f-8fb8-21a901caa0d5\",\"moduleSequenceNumber\":63567},{\"filename\":\"/chain/home.js\",\"url\":\"blob:https://danielyxie.github.io/8b7f7852-c945-4adf-a2cc-80ba3102be5c\",\"moduleSequenceNumber\":68696}],\"dependents\":[],\"ramUsage\":4.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":697,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { exec, hram_resume, hram_suspend } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Start a load chain to run scripts to install Augmentations and soft reset.\\n *\\n * Usage: run chain/install.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress some log messages.\\n    ns.disableLog(\\\"sleep\\\");\\n    // Try to free up some RAM on home server so we can run the script below.\\n    await hram_suspend(ns);\\n    exec(ns, \\\"/singularity/install.js\\\");\\n    hram_resume(ns);\\n}\",\"filename\":\"/chain/install.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c00ea7e6-fd14-4567-bcf4-d9da9a577340\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/90a5b510-fb11-4b5e-bd34-7372a11ffaab\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/270b5e90-31ab-4735-b12f-edf33365e1bf\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/702df427-a9ef-4fbd-aa02-ba09d3bbeb03\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5cfc4e27-f5b1-4253-8809-ebe9e8740c10\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/144a740a-d00b-4f3c-ba6e-71c0558ce890\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/422a2a92-6e3b-46ec-8bd2-26b0831c2292\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/20d21a89-be78-4131-907e-b57af3668e71\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5af6e860-0499-48bf-b70f-e91dc7806bd0\",\"moduleSequenceNumber\":63567},{\"filename\":\"/chain/install.js\",\"url\":\"blob:https://danielyxie.github.io/48d9418f-bcd4-4231-af69-02312e7a9e34\",\"moduleSequenceNumber\":68698}],\"dependents\":[],\"ramUsage\":4.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":698,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { exec, hram_resume, hram_suspend } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Start a load chain to run various scripts.\\n *\\n * Usage: run chain/misc.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress some log messages.\\n    ns.disableLog(\\\"sleep\\\");\\n    // Try to free up some RAM on home server so we can run the scripts below.\\n    await hram_suspend(ns);\\n    while (ns.isRunning(\\\"/singularity/money.js\\\", home)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    // Assume our home server is high-end and has enough RAM to run multiple\\n    // scripts at the same time.  Here is a brief description of the purpose of\\n    // each script.\\n    //\\n    // (1) /corporation/corp.js := This script creates and manage our\\n    //     corporation.  Along with our gang, a corporation can be a source of\\n    //     significant income.\\n    // (2) /gang/go.js := This utility script helps us to decide which faction\\n    //     to join so we can create a gang within that faction.\\n    // (3) /singularity/daemon.js := This script determines whether we should be\\n    //     hacking the w0r1d_d43m0n server.  It terminates if the conditions are\\n    //     not met for the server to appear in the game world.\\n    // (4) /singularity/int-farm.js := This script passively farms Intelligence\\n    //     XP.\\n    // (5) /singularity/program.js := This script attempts to purchase port\\n    //     opener programs.  We need all five port opener programs so we can\\n    //     open all ports of each server.\\n    // (6) /sleeve/cc.js := Our sleeve manager.\\n    const gang_script = [\\n        \\\"/gang/go.js\\\",\\n        \\\"/gang/slum-snakes.js\\\",\\n        \\\"/gang/dead-speakers.js\\\",\\n    ];\\n    const script = [\\n        \\\"/corporation/corp.js\\\",\\n        // \\\"/singularity/daemon.js\\\",\\n        \\\"/singularity/int-farm.js\\\",\\n        \\\"/sleeve/cc.js\\\",\\n        gang_script[0],\\n    ];\\n    script.forEach((s) => exec(ns, s));\\n    // Wait until we have joined a criminal faction.  Then launch another\\n    // script.  We must wait because the script launched by \\\"/gang/go.sh\\\" needs\\n    // to perform tasks that require focus.  The script\\n    // \\\"/singularity/program.js\\\" also requires focus.  We can only focus on one\\n    // task at a time.\\n    let is_running = true;\\n    while (is_running) {\\n        is_running = false;\\n        for (const s of gang_script) {\\n            if (ns.scriptRunning(s, home)) {\\n                is_running = true;\\n                break;\\n            }\\n        }\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    exec(ns, \\\"/singularity/program.js\\\");\\n    hram_resume(ns);\\n}\",\"filename\":\"/chain/misc.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d11917c8-b775-4148-b858-a8716a003259\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/73b85980-4061-47a3-abc9-34faee98f751\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f52db6c7-f5a4-4008-8c37-1fd27b8c34a3\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b33495e3-cb23-4353-8048-b0de97cfbed1\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a852d470-3678-41f5-84ed-376f870a54cf\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1d21003d-d701-403e-8455-008c75efc8e1\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/cafa060e-c23e-45e0-a64c-ac2249c158df\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4dffecd6-56e8-4d9f-a9e4-f244adf0db46\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7095cc95-6ec7-43ea-beff-7d3fc4ed8b68\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/32d4723a-7b40-420c-84af-6e6fb86566fc\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/855dbb50-e047-4ad2-8884-1227cf792794\",\"moduleSequenceNumber\":68974},{\"filename\":\"/chain/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c74f09f3-ec6d-43df-bd6f-aa9a19336f38\",\"moduleSequenceNumber\":69070}],\"dependents\":[],\"ramUsage\":5.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":699,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { exec, hram_resume, hram_suspend } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Start a load chain for raising money.\\n *\\n * Usage: run chain/money.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Try to free up some RAM on home server so we can run the scripts below.\\n    await hram_suspend(ns);\\n    while (ns.isRunning(\\\"/singularity/study.js\\\", home)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    // Assume our home server has limited RAM.  The server cannot run multiple\\n    // scripts at the same time.  Load a sleeve script and let it run until\\n    // completion.  Then start another script.\\n    let pid = exec(ns, \\\"/sleeve/money.js\\\");\\n    while (ns.isRunning(pid)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    // See whether any Coding Contracts have appeared and solve them.\\n    const script = \\\"/cct/solver.js\\\";\\n    if (!ns.isRunning(script, home)) {\\n        log(ns, \\\"Solve Coding Contracts to raise some money\\\");\\n        const ntry = 3;\\n        for (let i = 0; i < ntry; i++) {\\n            pid = exec(ns, script);\\n            await ns.sleep(wait_t.DEFAULT);\\n            ns.kill(pid);\\n        }\\n    }\\n    // Now launch the main script for raising money.\\n    exec(ns, \\\"/singularity/money.js\\\");\\n    hram_resume(ns);\\n}\\n\",\"filename\":\"/chain/money.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1dd73e84-e950-4433-b1e3-af8dddf8243b\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3c2387ec-d089-4ffc-99b7-e09b079de241\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4d2e4fa1-ed41-42b6-b6c4-d4c9ab7d982f\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8b59833d-67bd-46f5-bdc8-e85964cc95f9\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/89b785ff-f556-41fd-85be-bc7817a8cfbc\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6949c2e9-c119-40dd-b644-b86bd8eff5c8\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/64beee31-205d-4a12-832e-dbb6e796bcfe\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b919a12a-3796-43cb-a223-aeda279bfc2e\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d1d9d328-3402-4a8d-b032-520408243315\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e34b92f2-1807-495a-9ec9-80eb52ef0e11\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/44636dd7-a37c-4653-9601-eb0b5eda32be\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/32766794-220d-4e3f-a22c-a03e76010e1d\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a2c04ff6-2774-4e27-a392-cc739942958d\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a6551577-6dae-435d-98b9-66485b2b845a\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ca8e0070-b811-403d-9231-e84218b8626f\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1726832f-eeb2-40b7-8c8a-68bcfacbc434\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/03bc78de-c8fa-43f4-83de-8bb82ccce91d\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1cdb0ab7-ad86-493b-8347-942199b311a9\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f9abfe37-ecb0-4f20-a2cf-b79cf16e839c\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/75fc62b7-b2bc-4d55-a776-cc85c56544b4\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/eed1e113-2927-40a0-a6b3-a2f29c86c23c\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e5d674e5-c707-43c5-92a1-a700402a6e2c\",\"moduleSequenceNumber\":68974},{\"filename\":\"/chain/money.js\",\"url\":\"blob:https://danielyxie.github.io/a9056e15-4fbf-4070-89f9-fe2b183d52a3\",\"moduleSequenceNumber\":69063}],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":700,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { exec, hram_resume, hram_suspend } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Start a load chain for studying at a university.  A script in the chain would\\n * likely use functions from the Singularity API.  Each function from this API\\n * tends to use a huge amount of RAM.\\n *\\n * Usage: run chain/study.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Try to free up some RAM on home server so we can run the scripts below.\\n    await hram_suspend(ns);\\n    // Assume our home server has limited RAM.  The server cannot run multiple\\n    // scripts at the same time.  Load a sleeve script and let it run until\\n    // completion.  Then start another script.\\n    const pid = exec(ns, \\\"/sleeve/study.js\\\");\\n    while (ns.isRunning(pid)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    exec(ns, \\\"/singularity/study.js\\\");\\n    if (ns.getServer(home).maxRam >= home_t.RAM_HIGH) {\\n        exec(ns, \\\"/gang/program.js\\\");\\n    }\\n    hram_resume(ns);\\n}\\n\",\"filename\":\"/chain/study.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/987381e3-b710-476b-a6a6-c75c7f4d2a20\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/25ff65fe-cfb4-4595-80c2-e3829340ab7a\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/49659c54-71f3-4a6e-87d2-52e86fcd92c9\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3647e3ab-54a9-4436-85fe-19352fba9073\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2ae13446-6ff1-4cca-893d-b01046343674\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3f44fa1d-7e5f-4c25-a8fa-901e09054a6d\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/581e31f6-624b-464e-b2a2-f7ad124db666\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dd99fa44-c59d-45ba-95fb-71badb53fa8f\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4be77f48-91cf-420d-aed3-47a2238772b5\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/59eab926-eded-44f8-a338-6a5be5dc1cfc\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/85578fd9-b745-4f18-936a-b340dc4ed15c\",\"moduleSequenceNumber\":68974},{\"filename\":\"/chain/study.js\",\"url\":\"blob:https://danielyxie.github.io/2c14f2c9-6ddd-4221-b148-42fe25aae964\",\"moduleSequenceNumber\":69046}],\"dependents\":[],\"ramUsage\":6.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":701,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport {\\n    log_cct_failure,\\n    matrix_to_string,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { colour } from \\\"/lib/constant/cct.js\\\";\\nimport { Graph } from \\\"/lib/network.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether an undirected graph is bipartite.  Do not assume the graph is\\n * connected, i.e. each node is reachable from any other node.\\n *\\n * @param n The number of nodes in the graph.  Must be positive.\\n * @param edge An array of edges of the graph.  Each array element is an\\n *     edge of the form [u, v], where u and v are nodes of the graph.\\n * @return An array having n elements.  If i is an index of the array a,\\n *     then a[i] represents the colour of node i in the graph, assuming\\n *     the graph to have a 2-colouring.  In case the graph is not\\n *     bipartite, then return an empty array.\\n */\\nfunction bipartite(n, edge) {\\n    assert(n > 0);\\n    // In Bitburner v1.7.0, the game does not accept an empty array as [].\\n    // The empty array must be formatted as a string representation.\\n    const empty_array = \\\"[]\\\";\\n    // The graph must have at least one edge.  A graph with nodes only and\\n    // no edges is not bipartite.\\n    if (edge.length === 0) {\\n        return empty_array;\\n    }\\n    // Use breath-first search to colour each node of the graph.\\n    const graph = to_graph(n, edge);\\n    let colr = new Array(n).fill(colour.WHITE);\\n    let v = choose_white_node(colr);\\n    // All root nodes of trees.  If the graph is disconnected, then it has\\n    // a number of subgraphs each of which can be considered a tree by\\n    // means of breath-first search.\\n    const root = [];\\n    // Colour all nodes of the graph.\\n    while (v >= 0) {\\n        root.push(v);\\n        const col = colouring(graph, v);\\n        if (col.length === 0) {\\n            return empty_array;\\n        }\\n        colr = update_colouring(colr, col);\\n        v = choose_white_node(colr);\\n    }\\n    // Determine whether the graph has a 2-colouring.\\n    for (const r of root) {\\n        if (!is_bipartite(graph, r, colr)) {\\n            return empty_array;\\n        }\\n    }\\n    return colr;\\n}\\n\\n/**\\n * Choose a white node from a graph.\\n *\\n * @param colr A colouring of the nodes of a graph, where colour[i]\\n *     represents the colour of node i.\\n * @return A node that is white.  Return -1 if each node has been coloured.\\n */\\nfunction choose_white_node(colr) {\\n    assert(colr.length > 0);\\n    for (let i = 0; i < colr.length; i++) {\\n        if (colour.WHITE === colr[i]) {\\n            return i;\\n        }\\n    }\\n    return -1;\\n}\\n\\n/**\\n * Attempt to colour a graph by using 2 colours.  Each node is coloured such\\n * that the endpoints of an edge have different colours.\\n *\\n * @param graph We want to colour this graph.\\n * @param root Start the colouring from this node.\\n * @return An array a where the element a[i] represents the colour of node i\\n *     in the graph.  An empty array if the graph cannot be coloured with the\\n *     given colours such that the endpoints of each edge have different\\n *     colours.  Even if the returned array is not empty, we must still test\\n *     to see whether the graph has a 2-colouring.\\n */\\nfunction colouring(graph, root) {\\n    // colour[i] := the colour of node i in the graph.\\n    const n = graph.nodes().length;\\n    const colr = new Array(n).fill(colour.WHITE);\\n    // Colour the root node.\\n    assert(graph.has_node(root));\\n    const stack = [];\\n    stack.push(root);\\n    const visit = new Set();\\n    visit.add(root);\\n    colr[root] = colour.BLUE;\\n    // Use breath-first search to colour each node.  We do not assume the graph\\n    // to be connected.\\n    while (stack.length > 0) {\\n        const u = stack.pop();\\n        for (const v of graph.neighbour(u)) {\\n            if (visit.has(v)) {\\n                continue;\\n            }\\n            // Colour the neighbours of u.\\n            visit.add(v);\\n            stack.push(v);\\n            if (colour.BLUE === colr[u]) {\\n                colr[v] = colour.RED;\\n                continue;\\n            }\\n            assert(colour.RED === colr[u]);\\n            colr[v] = colour.BLUE;\\n            // Determine whether v is connected to any node of the same colour.\\n            for (const w of graph.neighbour(v)) {\\n                // The graph is not bipartite because v is neighbour with a\\n                // node that has the same colour.\\n                if (colr[v] === colr[w]) {\\n                    return [];\\n                }\\n            }\\n        }\\n    }\\n    return colr;\\n}\\n\\n/**\\n * Whether a graph is bipartite.\\n *\\n * @param graph Check this graph to see whether it is bipartite.\\n * @param root Start our breath-first search from this node.\\n * @param colr A colouring of the nodes of the graph.\\n * @return true if the graph is bipartite; false otherwise.\\n */\\nfunction is_bipartite(graph, root, colr) {\\n    // Mark the root node as visited.\\n    const stack = [];\\n    const visit = new Set();\\n    stack.push(root);\\n    visit.add(root);\\n    // Use breath-first search to help us determine whether the\\n    // graph has a 2-colouring.\\n    while (stack.length > 0) {\\n        const u = stack.pop();\\n        assert(colr[u] === colour.BLUE || colr[u] === colour.RED);\\n        for (const v of graph.neighbour(u)) {\\n            if (colr[u] === colr[v]) {\\n                return bool.NOT_BIPARTITE;\\n            }\\n            if (visit.has(v)) {\\n                continue;\\n            }\\n            stack.push(v);\\n            visit.add(v);\\n        }\\n    }\\n    return bool.BIPARTITE;\\n}\\n\\n/**\\n * Construct an undirected graph given the number of nodes and an edge set.\\n *\\n * @param n The number of nodes in the graph.\\n * @param edge An array of edges of the graph.  Each array element is an\\n *     edge of the form [u, v], where u and v are nodes of the graph.\\n * @return An undirected graph having n nodes and the given edge set.\\n */\\nfunction to_graph(n, edge) {\\n    assert(n > 0);\\n    assert(edge.length > 0);\\n    const node = new Set(MyArray.sequence(n));\\n    const graph = new Graph(bool.UNDIRECTED);\\n    // First, add the edges.\\n    for (let i = 0; i < edge.length; i++) {\\n        const [u, v] = edge[i];\\n        graph.add_edge(u, v);\\n        node.delete(u);\\n        node.delete(v);\\n    }\\n    // Add any nodes not listed in the edge set.\\n    node.forEach((v) => assert(graph.add_node(v)));\\n    assert(n === graph.nodes().length);\\n    return graph;\\n}\\n\\n/**\\n * Update the colouring array.\\n *\\n * @param prev_colour The current colouring of the nodes of a graph.\\n * @param new_colour The new colouring of the nodes.\\n * @return An array representing the updated colouring.\\n */\\nfunction update_colouring(prev_colour, new_colour) {\\n    assert(prev_colour.length > 0);\\n    assert(prev_colour.length === new_colour.length);\\n    const colr = Array.from(prev_colour);\\n    for (let i = 0; i < prev_colour.length; i++) {\\n        // Find a white node.\\n        if (colour.WHITE !== prev_colour[i]) {\\n            continue;\\n        }\\n        if (colour.WHITE === new_colour[i]) {\\n            continue;\\n        }\\n        // Previously node i was white, but now has been coloured.\\n        assert(colour.WHITE === prev_colour[i]);\\n        assert(colour.WHITE !== new_colour[i]);\\n        colr[i] = new_colour[i];\\n    }\\n    return colr;\\n}\\n\\n/**\\n * Proper 2-Coloring of a Graph: You are given data, representing a graph.\\n * Note that \\\"graph\\\", as used here, refers to the field of graph theory and\\n * has no relation to statistics or plotting.  The first element of the data\\n * represents the number of vertices in the graph.  Each vertex is a unique\\n * number between 0 and data[0] - 1.  The next element of the data represents\\n * the edges of the graph.  Two vertices u, v in a graph are said to be\\n * adjacent if there exists an edge [u, v].  Note that an edge [u, v] is the\\n * same as an edge [v, u], as order does not matter.  You must construct a\\n * 2-coloring of the graph, meaning that you have to assign each vertex in the\\n * graph a \\\"color\\\", either 0 or 1, such that no two adjacent vertices have the\\n * same color.  Submit your answer in the form of an array, where element i\\n * represents the color of vertex i.  If it is impossible to construct a\\n * 2-coloring of the given graph, submit an empty array.\\n *\\n * This problem is equivalent to determining whether a graph is bipartite.\\n * From the problem description, we only need to deal with undirected graphs.\\n *\\n * Usage: run cct/bipartite.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [n, edge] = ns.codingcontract.getData(cct, host);\\n    const colr = bipartite(n, edge);\\n    const result = ns.codingcontract.attempt(colr, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/bipartite.txt\\\";\\n        const data = `[${n}, ${matrix_to_string(edge)}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/bipartite.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5c2167ae-d0cf-41d6-afba-0ae0357628e6\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/33c68e40-2964-405d-a8be-f8acf5561edc\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d8bd4a25-bf98-4965-8dbc-71f36b24ca8a\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8ebbe1ea-e0fc-4d97-82d6-920658855a0c\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ba0a4678-5753-465d-b686-3c274d1eabbe\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2e22c9fa-2e49-4b31-9a92-a95881d1d239\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e9e70af6-29ee-4fcf-bfda-a27563225e65\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f2d532d0-2f42-4581-ae61-b64175b8b02c\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/621b2078-d370-4553-ab8a-0b54d173c244\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/bf56d987-f13e-4bb6-bc25-0c96cf2d1455\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a1f942e6-ab5f-4ff8-a854-a695b65e3d40\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/df201d25-4262-4d49-955b-136a9be64fc5\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/18901401-5016-480f-a082-70204dd3b7e3\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5f37e13f-1433-44d0-9013-e9a35c59807d\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/388bfafc-5220-4170-bc25-ac45ee55a26f\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bdd0213c-f141-41ea-9ff3-ec61b4f993e5\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a1a463db-d720-42e9-b532-de880ea9c44d\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/389fdef2-59f3-4428-bef7-01dd8cb109c1\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/683405fa-3da3-4bd0-8297-0d566c0e3de3\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/269f4441-59d3-43a4-9e03-254c1c87c503\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/13f6c186-cb9d-40fb-b925-63bf38d14259\",\"moduleSequenceNumber\":68985},{\"filename\":\"/lib/constant/cct.js\",\"url\":\"blob:https://danielyxie.github.io/90bd298c-63d1-4c0c-8453-f9bdf9283d14\",\"moduleSequenceNumber\":68963},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9dd666e7-4377-4f29-ae1e-5412e76b4f32\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/171f8ba0-0985-4789-b675-dc1a31e73be2\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/611094bc-3cec-47b7-8fec-075b8e4eaa1c\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0945b241-c370-4657-b5ac-5441f9795993\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ba52b63c-5d5c-42d6-8a94-446c5d0589ce\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6051b8d8-9dd7-499e-9ea7-611599fabf2a\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1cdcd7c5-67b5-4f76-ade4-b47f49444baa\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/117d054b-5f33-48b6-8494-c18b6055e3a6\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/df80b8b0-1d1c-477e-acd7-b5c20771236d\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c8409a34-d566-45cb-8606-fe345a424079\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/18cc767e-2d98-498e-ba7c-f8747ff9cbd0\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f0530469-1e60-4b4f-8a99-35d29fac076b\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/51893502-f9a3-4606-954f-9e917227717a\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d0ccd42e-5582-4dc6-84e1-85464c1747aa\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/978738a7-a77d-4fc7-98fc-7e60545fb5b8\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8c8c81b2-ad54-40db-9b0c-06f8ab66d60c\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5b8b2a0d-8cf3-436a-8f6b-12aa20b68f2a\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/25a0423b-6a5a-4cc2-88d8-4e0c1b1b1dc9\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e57ea175-42bf-4890-8d3c-8f9388d129c5\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/be741494-5b43-4a41-aba4-5d071a3a0086\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/36a2b545-c3cd-4458-a3b9-0f3b742d3f53\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b1e846e4-7bde-49a4-842f-1d979ebd4cbc\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1be72de2-bf11-475f-9f28-869e0872754d\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/c15bbb16-5307-47f7-9f49-c04977115739\",\"moduleSequenceNumber\":68960},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e1c73e53-2bc1-49f0-8433-811c535f1ec1\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/24b661b6-5283-4e84-9e38-1ccefc4776f4\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4b5c08b5-c4c8-4d55-8591-6a2d7fa4a078\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b517ee89-b9d0-40de-9b29-c49b4af41722\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3f996979-2ef5-48e4-8e36-66bb4f0a2220\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/65c11a62-9735-482b-b0e5-e67cd237377d\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1fc9e782-9ed5-41f3-93ca-86fe3046699a\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d1962d5f-f043-48c7-9ead-c0d236d8bc32\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0632e9f2-55c2-4856-97c0-b2f768a10f7a\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/fa5af471-99a1-4e3e-803e-363526a23b31\",\"moduleSequenceNumber\":68959},{\"filename\":\"/cct/bipartite.js\",\"url\":\"blob:https://danielyxie.github.io/ce8ed1d6-2624-4a7e-8065-6b1f530b826f\",\"moduleSequenceNumber\":113136}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":702,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    english_alphabet,\\n    char_index,\\n    is_alphabetic,\\n    log_cct_failure,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The Caesar cipher on the given plaintext and left shift length k.  Suppose\\n * letters of the plaintext are uppercase characters in the English alphabet.\\n * Given a left shift of k, each alphabetic character in the plaintext is\\n * substituted with an alphabetic character found by left shifting by k\\n * positions along the alphabet.  For example, using k := 3 we have the\\n * encryption:\\n *\\n * DEF -> ABC\\n * ABC -> XYZ\\n * CAT DOG. -> ZXQ ALD.\\n *\\n * As shown in the above examples, we wrap around the alphabet whenever\\n * necessary.  Furthermore, the substitution only applies to characters of the\\n * plaintext alphabet.  Punctuation, whitespace, and special characters are\\n * ignored.\\n *\\n * @param plaintext Encrypt this string using the Caesar cipher.  Cannot be\\n *     empty string.\\n * @param k The left shift length.  We shift to the left by this many\\n *     characters, taking into account rotation (wrap around).  Must be a\\n *     non-negative integer.\\n * @return The ciphertext corresponding to the plaintext, encrypted using the\\n *     Caesar cipher having a left shift of k positions.\\n */\\nfunction caesar(plaintext, k) {\\n    // Sanity checks.\\n    const ell = Math.floor(k);\\n    assert(plaintext.length > 0);\\n    assert(ell >= 0);\\n    // Encryption.\\n    const alphabet = english_alphabet();\\n    const n = alphabet.length;\\n    const ptxt = plaintext.toUpperCase();\\n    let ciphertext = \\\"\\\";\\n    for (let i = 0; i < ptxt.length; i++) {\\n        if (!is_alphabetic(ptxt[i])) {\\n            ciphertext += ptxt[i];\\n            continue;\\n        }\\n        // Index of the ciphertext character.\\n        let j = char_index(ptxt[i]) - ell;\\n        if (j < 0) {\\n            j += n;\\n        }\\n        ciphertext += alphabet[j];\\n    }\\n    return ciphertext;\\n}\\n\\n/**\\n * Encryption I: Caesar Cipher: Caesar cipher is one of the simplest encryption\\n * techniques.  It is a type of substitution cipher in which each letter in the\\n * plaintext is replaced by a letter some fixed number of positions down the\\n * alphabet.  For example, with a left shift of 3, D would be replaced by A, E\\n * would become B, and A would become X (because of rotation).  You are given\\n * an array with two elements.  The first element is the plaintext, the second\\n * element is the left shift value.  Return the ciphertext as uppercase string.\\n * Spaces remain the same.\\n *\\n * This is Caesar cipher encryption, where the plaintext alphabet is the\\n * uppercase characters of the English alphabet.\\n *\\n * Usage: run cct/caesar.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [plaintext, k] = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(caesar(plaintext, k), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/caesar.txt\\\";\\n        const data = `[${plaintext}, ${k}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/caesar.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/58208160-f736-4ed1-8edf-bf44d8816f40\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/37b32be7-a9de-415e-b422-60896584bd9b\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c969a8b8-bca3-4f9b-aabf-935f01fd750a\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e43f0b09-8dcb-4a49-8059-7f7dcdb9c30c\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d7808356-c5df-4f74-8d33-065394e4a59e\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d3cde77a-79f5-4dd5-ba68-026d008d149c\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d7a52b51-1d97-4e5d-9834-36bf02c28261\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7ec649e4-42ee-448b-ad79-a6957ab51623\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8eaad83b-7752-4ab4-b1c1-dc38ee9f98a6\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7fd831da-11f8-4a4a-8835-614420edd3e9\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0525c979-dbfd-42b2-8677-a1e45c68d219\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8bf8eb64-b5a7-4a6f-9aa5-f9d4491bf392\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fbbf2687-79ed-4aaf-a36a-f3e6e28cf3b4\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b0a13fc2-d9a3-4a20-8361-32d06d6504d7\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/eb65ef3b-7131-4801-ab21-f43569f1d34e\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7774e542-a993-4e37-b4e4-ad85b214aba4\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2cd970e9-8cdc-44d9-9099-d12fd6623a76\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a4de573b-be04-47ee-a1d9-8d648519fe49\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a0168576-d713-43c1-967f-18dc458f20a9\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b731635c-2dce-465e-a889-a1723678b182\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f6c92ce7-48db-4822-929f-9e9b4c281aaf\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c61f56cd-d353-46f3-a970-c622720c5b95\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/94b8beee-6d57-4f11-98df-3f713894bd49\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8f511255-e371-4771-b5be-84831c7350be\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/13ccdeb7-8ed0-4537-ac1d-20c098701dfb\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/131e928a-986f-479f-b1c0-b0ade894ae9a\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/545911ff-d1c9-4f30-98f8-e85d01dc407e\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/52dd3ea6-5de3-404c-be53-e904df4846e7\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/6dc0f78f-60f3-46d3-b1e6-a4554c1301b6\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/803f057e-0ebe-480a-8ab9-d15382946935\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/aaaaa56a-4d3a-4122-b636-5725ec57c278\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/4b2b8f62-5dda-4a44-8247-bc81ca2242f6\",\"moduleSequenceNumber\":261},{\"filename\":\"/cct/caesar.js\",\"url\":\"blob:https://danielyxie.github.io/ddfeee40-ddfd-4376-90f7-4df8ffdb1801\",\"moduleSequenceNumber\":474}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":703,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The number of unique paths from top-left to bottom-right in an m x n\\n * grid.  Consider the grid below.  The problem statement is ambiguous\\n * regarding what is considered the top-left corner and the bottom-right\\n * corner.  If we are moving from vertex to vertex, then position A in the\\n * grid is the top-left corner, B in the grid is the bottom-right corner,\\n * and our grid is 5 x 7.  This is a vertex-based grid.  If we are moving\\n * from square to square, then X in the grid is the top-left corner, Y is\\n * the bottom-right corner, and our grid is 4 x 6.  This square-based grid\\n * can be transformed into a vertex-based grid by treating each square as\\n * a vertex and the connection between two adjacent squares as an edge.\\n *\\n * A-o-o-o-o-o-o\\n * |X| | | | | |\\n * o-o-o-o-o-o-o\\n * | | | | | | |\\n * o-o-o-o-o-o-o\\n * | | | | | | |\\n * o-o-o-o-o-o-o\\n * | | | | | |Y|\\n * o-o-o-o-o-o-B\\n *\\n * Consider an r x c vertex-based grid, where r is the number of rows and\\n * c is the number of columns.  We want to calculate the number of unique\\n * paths from the top-left corner to the bottom-right corner.  At each\\n * vertex we are allowed to move either down or right.  Each path must have\\n * n = (r - 1) + (c - 1) = r + c - 2 segments, i.e. r - 1 downward segments\\n * and c - 1 rightward segments.  Choose k := r - 1 of the n segments to be\\n * downward segments.  The remaining n - k = c - 1 segments must be\\n * rightward segments.  The total number of unique paths is the combination\\n * number C(n, k), which is read as \\\"n choose k\\\" or as a k-combination of a\\n * set of n segments.  The combination number is also known as the\\n * binomial coefficient.\\n *\\n * @param n The total number of segments.\\n * @param k How many segments are downward segments.\\n * @return The combination number C(n, k).\\n */\\nfunction unique_paths(n, k) {\\n    // Sanity checks.\\n    assert(n >= 0);\\n    assert(k >= 0);\\n    // Edge cases.\\n    if (k === 0 || n === k) {\\n        return 1;\\n    }\\n    if (k > n) {\\n        return 0;\\n    }\\n    // Use the recurrence relation\\n    //\\n    // C(n, k) := C(n - 1, k - 1) + C(n - 1, k)\\n    //\\n    // which can be read off Pascal's triangle.  Or use the more\\n    // efficient multiplicative rule\\n    //\\n    // C(n, k) := (n / k) * C(n - 1, k - 1)\\n    //\\n    // which can be directly translated to an iterative program.\\n    assert(k > 0);\\n    assert(k < n);\\n    // By symmetry, we have C(n, k) = C(n, n - k).\\n    const mink = Math.min(k, n - k);\\n    let result = 1;\\n    for (let i = 0; i < mink; i++) {\\n        // This line of code can result in a floating point number:\\n        //\\n        // result *= (n - 1) / (i + 1);\\n        //\\n        // because (n - 1) / (i + 1) is not necessarily an integer.\\n        // Safer to first calculate the product\\n        //\\n        // result * (n - i)\\n        result = (result * (n - i)) / (i + 1);\\n    }\\n    return result;\\n}\\n\\n/**\\n * Unique Paths in a Grid I: You are given an array with two numbers: [m, n].\\n * These numbers represent an m x n grid.  Assume you are initially positioned\\n * in the top-left corner of that grid and that you are trying to reach the\\n * bottom-right corner.  On each step, you may only move down or to the right.\\n * Determine how many unique paths there are from start to finish.\\n *\\n * See the function unique_paths() for more details.\\n *\\n * Usage: run cct/grid.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [row, column] = ns.codingcontract.getData(cct, host);\\n    const k = column - 1;\\n    const n = row - 1 + k;\\n    const result = ns.codingcontract.attempt(unique_paths(n, k), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/grid.txt\\\";\\n        const data = `[${row}, ${column}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/grid.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a5d716a5-5015-4dee-97d9-3cb177de5488\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f9435038-c39b-4937-8167-34d0d5f46270\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f5ac3cbf-49c8-4f97-accb-207c3eb0df93\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fde19936-8b10-47c7-ab48-d5473cd3bf05\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/46f620be-7143-4ef2-9e83-d0822ccb552a\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f0c64e95-c373-401f-89d7-f1030a0cda27\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9bed30b5-97dc-4fad-8a73-2bd3ff93b8c8\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e0e7513c-dc18-4e64-9684-49dc083ca900\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9cef7ced-13d8-4ab5-931f-c0187bb47253\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3a04641d-b61a-4546-9216-c22434803158\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2f4abb97-ee33-4460-9fdb-83a4001a6dca\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e48615b3-3c3b-41ea-a00e-695fc3b23ff4\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/af1ee08d-e7b3-484a-8fc9-53e0fcc373c1\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/18221e39-93a7-4d9c-b7c3-67aefa069ad1\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/43e1afa5-0e7e-4bf2-beda-3a01bc02b620\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/93771dc1-cdd4-45bd-ba0f-cef7ac878234\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6b352c4e-b6a1-46a7-baab-bd11c733a26a\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/061c7985-f1e6-4242-910f-ff2c19d4d744\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6c2f4f5c-0d6f-44aa-ae0c-1f0a29f588f5\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fef65dc5-f381-459d-b02b-a4e3dc9b966f\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dcf6b6ba-f2cc-47d1-adf1-23c049367f78\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bbbd555e-5828-4b29-bafe-16f2ce648a53\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fb1aa053-3aa6-497e-8b8e-c2890d884905\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1f4b6355-a0d2-4200-9508-2c7b8d85c4c1\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2aab5629-d5cf-4cd9-9222-3b90e8c83de2\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0e3808ff-3017-4be2-b08a-eec2b3a3a6d7\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/de1d445b-9baa-4dcd-a5f8-6854aaa57076\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3ece7426-ce93-4de9-b222-6559ed06338e\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/58af2cd3-c0e6-48fd-aea1-45bf7cd25205\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/816de991-8812-428d-ac65-89200de32311\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1883cc13-7e2d-4ccc-b56d-81b5b637dc62\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/cab78896-880a-421a-8307-6394b3a11bf2\",\"moduleSequenceNumber\":68960},{\"filename\":\"/cct/grid.js\",\"url\":\"blob:https://danielyxie.github.io/218ca755-6248-4659-a583-f2ee91e2e784\",\"moduleSequenceNumber\":145811}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":704,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    matrix_to_string,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether an obstacle is found at the coordinates (r, c).\\n *\\n * @param grid A grid of m x n squares.\\n * @param r, c A pair of coordinates in the grid.\\n * @return true if an obstacle is located at (r, c); false otherwise.\\n */\\nfunction is_obstacle(grid, r, c) {\\n    return grid[r][c] === 1;\\n}\\n\\n/**\\n * The number of unique paths from the top-left square to the bottom-right\\n * square in an m x n grid, while avoiding obstacles.  Consider the grid below.\\n *\\n * 00000\\n * 01000\\n * 00010\\n * 10000\\n *\\n * Interpret each number as a square.  The entire grid is made up of m x n\\n * squares.  We can occupy a square that has the symbol '0', whereas a square\\n * having the symbol '1' is interpreted as an obstacle that cannot be occupied.\\n * Starting from the top-left square, we can move either to the square\\n * immediately to the right or the square immediately below, but never to a\\n * square that has an obstacle.\\n *\\n * Use the following row-column coordinate system for the above grid.\\n *\\n *   0 1 2 3 4\\n * 0 0-0-0-0-0\\n *   | | | | |\\n * 1 0-1-0-0-0\\n *   | | | | |\\n * 2 0-0-0-1-0\\n *   | | | | |\\n * 3 1-0-0-0-0\\n *\\n * The obstacles are located at the coordinates a := (1, 1), b := (2, 3), and\\n * c := (3, 0).  Let A be the set of paths passing through obstacle a, let B be\\n * the set of paths passing through obstacle b, and let C be the set of paths\\n * passing through obstacle c.  Let P be the set of paths from (0, 0) to\\n * (3, 4).  The number of paths that avoid the obstacles is written as\\n *\\n * |P| = |X| - |A union B union C|\\n *\\n * where \\\"union\\\" refers to set union.  The number |A union B union C| can\\n * be calculated by using the principle of inclusion-exclusion.\\n *\\n * The problem can also be solved in a recursive manner.  Define p[i][j] as the\\n * number of paths starting from (0, 0), end at (i, j), and do not include any\\n * obstacles.  Since our movement is restricted to only right or down, we can\\n * reach (i, j) in either of two ways:\\n *\\n * (1) From (i-1, j) to (i, j).\\n * (2) From (i, j-1) to (i, j).\\n *\\n * Thus we have the recurrence relation\\n *\\n * p[i][j] := p[i-1][j] + p[i][j-1]\\n *\\n * where i >= 1 and j >= 1.  There are 3 other possibilities for the values of\\n * i and j.\\n *\\n * (1) If i = 0 and j >=1, then (0, j) can be reached from (0, j-1) so we have\\n *     p[0][j] = p[0][j-1].  There is only 1 path along the top-most row, but\\n *     this does not necessarily mean that p[0][j] = 1.  The reason is that any\\n *     square with coordinates (0, j) can be an obstacle.\\n * (2) If i >= 1 and j = 0, then (i, 0) is reached from (i-1, 0), hence\\n *     p[i][0] = p[i-1][0].  There is only 1 path along the left-most column,\\n *     but this does not mean we must have p[i][0] = 1.  The reason is that one\\n *     of the coordinates (i, 0) might be an obstacle.\\n * (3) If i = 0 and j = 0, then p[0][0] = 1 because the number of paths from\\n *     (0, 0) to itself is 1.\\n *\\n * The edge case is when (i, j) is an obstacle so we set p[i][j] = 0.\\n *\\n * @param grid A grid of m x n squares.\\n * @return The number of different paths from (0, 0) to (m-1, n-1) without\\n *     passing through any obstacles.\\n */\\nfunction unique_paths(grid) {\\n    // Sanity checks.\\n    const nrow = grid.length;\\n    const ncol = grid[0].length;\\n    assert(nrow > 0);\\n    assert(ncol > 0);\\n    // The table of path counts.\\n    const path = [];\\n    for (let i = 0; i < nrow; i++) {\\n        assert(ncol === grid[i].length);\\n        path.push(new Array(ncol));\\n    }\\n    // Start from (0, 0) and work our way to (m-1, n-1).\\n    for (let r = 0; r < nrow; r++) {\\n        for (let c = 0; c < ncol; c++) {\\n            // Is (r, c) an obstacle?\\n            if (is_obstacle(grid, r, c)) {\\n                path[r][c] = 0;\\n                continue;\\n            }\\n            // r = 0, c = 0\\n            if (r === 0 && c === 0) {\\n                path[r][c] = 1;\\n                continue;\\n            }\\n            // r = 0, c >= 1\\n            if (r === 0 && c >= 1) {\\n                path[r][c] = path[r][c - 1];\\n                continue;\\n            }\\n            // r >= 1, c = 0\\n            if (r >= 1 && c === 0) {\\n                path[r][c] = path[r - 1][c];\\n                continue;\\n            }\\n            // A pair of coordinates not located along the top-most row or the\\n            // left-most column.\\n            // r >= 1, c >= 1\\n            assert(r > 0);\\n            assert(c > 0);\\n            path[r][c] = path[r - 1][c] + path[r][c - 1];\\n        }\\n    }\\n    return path[nrow - 1][ncol - 1];\\n}\\n\\n/**\\n * Unique Paths in a Grid II: You are given a 2-D array of numbers (array of\\n * arrays of numbers) representing a grid, i.e. a 2-D matrix.  The 2-D array\\n * contains 1s and 0s, where 1 represents an obstacle and 0 represents a free\\n * space.  Assume you are initially positioned in the top-left square of that\\n * grid and that you are trying to reach the bottom-right square.  In each step,\\n * you may only move down or to the right.  Furthermore, you cannot move onto a\\n * square that has an obstacle.  Determine how many unique paths there are from\\n * start to finish.\\n *\\n * See the function unique_paths() for more details.\\n *\\n * Usage: run cct/grid2.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const grid = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(unique_paths(grid), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/grid2.txt\\\";\\n        const data = matrix_to_string(grid);\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/grid2.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6d0aa307-ec7b-4146-83f2-3c9a7ae919d8\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e723c86a-9ef2-4fc7-acc6-f0198e7c8709\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/17252fe1-a9a8-4b67-83fe-3f603346ac86\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f562012b-eb83-4e5d-ba77-97c7177f96bb\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/206a5b44-1041-433e-b169-4f2d240f40d1\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/612c6bba-65d5-40bd-b3ed-da9a686972de\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/58d51d2d-7da5-4541-927b-d04fb66e2b22\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3e64ca57-05a1-460c-9836-76a873042c12\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/96d18872-3c63-434d-b78f-e2827c01df71\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0bd94bf9-6e21-4557-b991-5a6d044244d4\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c55af5a8-2f9b-48e8-84da-bfdc2f32e203\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e112f937-c63d-47e0-867b-8e85d6c72470\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8bfd97c6-dfea-492d-b5c5-b0882f2e2638\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/62460c6d-21f9-472a-a0b9-c4a28397cf44\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4c65477f-8e27-4d87-a0f1-e8611492a9e5\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2d621cda-b672-40c5-9d52-2180961f48d4\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/12598640-15c5-4791-9667-71de99faa3f4\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c32567cb-389b-4283-89a3-a1a74133d564\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f8e1d3d7-bbed-438e-a4ac-621b7e3668d4\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fe90ad31-5d3a-4ce8-8527-670459804a76\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d4a422f5-d5b0-45b6-8663-4b5ebb59fa5f\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8aa04595-71f2-48a8-bd27-87c4e65fd0a9\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7d297f39-b5b8-44c3-aaca-8e730d0aec23\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/053538da-3ed8-415c-aed9-88cce4273474\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dd6e787a-54bd-45f9-bce5-8d6e3c228b98\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f3d3eb7a-6da0-4db8-b108-b656dc8c4c32\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8561bd75-cc78-4af7-a4de-a91ba8d2722b\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9ece0a2f-169d-41a2-b8d7-422593e415b5\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/ed4ee107-6d96-4ce5-9a07-058b215b23c5\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c052c954-9313-4bd5-bb60-46d56673eb12\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0ea7001c-601e-4b6b-a5d6-d6f9c2a0e2df\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/c4c36f82-4c27-4bb1-af3e-a620b09bfd3f\",\"moduleSequenceNumber\":261},{\"filename\":\"/cct/grid2.js\",\"url\":\"blob:https://danielyxie.github.io/9d4175bc-8ba9-4af9-8405-8391f89358c7\",\"moduleSequenceNumber\":465}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":705,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    matrix_to_string,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { Graph } from \\\"/lib/network.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether we can move one step down from our current position on a grid.\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @param r, c Our current location (r, c) on the grid.\\n * @return true if we can move from (r, c) one step down; false otherwise.\\n */\\nfunction can_move_down(grid, r, c) {\\n    // Are we at the bottom-most edge of the grid?\\n    const lastidx = grid.length - 1;\\n    if (lastidx === r) {\\n        return bool.NOT_MOVE;\\n    }\\n    // Below us is an obstacle.\\n    assert(r >= 0);\\n    assert(r < lastidx);\\n    if (is_obstacle(grid, r + 1, c)) {\\n        return bool.NOT_MOVE;\\n    }\\n    // We can move one step down.\\n    return bool.MOVE;\\n}\\n\\n/**\\n * Whether we can move one step to the left from our current position on\\n * a grid.\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @param r, c Our current location (r, c) on the grid.\\n * @return true if we can move from (r, c) one step to the left;\\n *     false otherwise.\\n */\\nfunction can_move_left(grid, r, c) {\\n    // Are we at the left-most edge of the grid?\\n    if (c === 0) {\\n        return bool.NOT_MOVE;\\n    }\\n    // To our left is an obstacle.\\n    assert(c > 0);\\n    assert(c < grid[r].length);\\n    if (is_obstacle(grid, r, c - 1)) {\\n        return bool.NOT_MOVE;\\n    }\\n    // We can move to the left.\\n    return bool.MOVE;\\n}\\n\\n/**\\n * Whether we can move one step to the right from our current position on\\n * a grid.\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @param r, c Our current location (r, c) on the grid.\\n * @return true if we can move from (r, c) one step to the right;\\n *     false otherwise.\\n */\\nfunction can_move_right(grid, r, c) {\\n    const lastidx = grid[r].length - 1;\\n    // Are we at the right-most edge of the grid?\\n    if (lastidx === c) {\\n        return bool.NOT_MOVE;\\n    }\\n    // To our right is an obstacle.\\n    assert(c >= 0);\\n    assert(c < lastidx);\\n    if (is_obstacle(grid, r, c + 1)) {\\n        return bool.NOT_MOVE;\\n    }\\n    // We can move to the right.\\n    return bool.MOVE;\\n}\\n\\n/**\\n * Whether we can move one step up from our current position on a grid.\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @param r, c Our current location (r, c) on the grid.\\n * @return true if we can move from (r, c) one step up; false otherwise.\\n */\\nfunction can_move_up(grid, r, c) {\\n    // Are we at the top-most edge of the grid?\\n    if (r === 0) {\\n        return bool.NOT_MOVE;\\n    }\\n    // Above us is an obstacle.\\n    assert(r > 0);\\n    assert(r < grid.length);\\n    if (is_obstacle(grid, r - 1, c)) {\\n        return bool.NOT_MOVE;\\n    }\\n    // We can move one step up.\\n    return bool.MOVE;\\n}\\n\\n/**\\n * Is the given location an obstacle?\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @param r, c A location on the grid.\\n * @return true if the given location is an obstacle on the grid;\\n *     false otherwise.\\n */\\nfunction is_obstacle(grid, r, c) {\\n    return grid[r][c] === 1;\\n}\\n\\n/**\\n * Use the Cantor pairing function to assign a unique non-negative integer\\n * to a pair of coordinates.\\n *\\n * @param x, y A pair of coordinates (x, y), each number being a\\n *     non-negative integer.\\n * @return A unique non-negative integer associated with the coordinates\\n *     (x, y).\\n */\\nfunction pairing(x, y) {\\n    assert(x >= 0);\\n    assert(y >= 0);\\n    // One of a and b is even, while the other is odd.  The product ab is even,\\n    // therefore (1/2) * ab is an integer.\\n    const a = x + y;\\n    const b = a + 1;\\n    return (1 / 2) * (a * b) + y;\\n}\\n\\n/**\\n * A shortest path in a 2-D grid.  Consider the following grid\\n *\\n * 0010\\n * 0100\\n * 0000\\n *\\n * which can be represented as the following map.\\n *\\n *   0 1 2 3\\n * 0 0-0-1-0\\n *   | | | |\\n * 1 0-1-0-0\\n *   | | | |\\n * 2 0-0-0-0\\n *\\n * The top-left corner has the coordinates (0, 0) and the bottom-right\\n * corner has the coordinates (2, 3).  We have 2 obstacles at the\\n * coordinates (0, 2) and (1, 1).  Our task is to determine a shortest\\n * path from the top-left corner to the bottom-right corner, using as\\n * few moves as possible.  At any point on the map, we can move one step\\n * either up, down, left, or right but only to a pair of coordinates that\\n * represents 0.  We cannot move to a pair of coordinates that represents\\n * an obstacle.\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @return A string representing a shortest path in the grid, from the\\n *     top-left corner to the bottom-right corner.  Each character of the\\n *     string is either U, D, L, R.  An empty string if there are no paths\\n *     from the top-left to the bottom-right.\\n */\\nfunction shortest_path(grid) {\\n    // Represent the grid as an undirected graph.  Find a shortest path from\\n    // the top-left corner to the bottom-right corner.\\n    const graph = to_graph(grid);\\n    const a = pairing(0, 0);\\n    const b = pairing(grid.length - 1, grid[0].length - 1);\\n    if (!graph.has_node(a) || !graph.has_node(b)) {\\n        return \\\"\\\";\\n    }\\n    const path = graph.shortest_path(a, b);\\n    return path_to_string(path);\\n}\\n\\n/**\\n * A representation of a grid as an unweighted, undirected graph.\\n *\\n * @param grid A map as an array of arrays.  This is essentially a binary\\n *     matrix, where each entry is either 0 or 1.\\n * @return An undirected graph representation of the grid.  Each vertex is\\n *     a non-negative integer n that is uniquely associated with a location\\n *     (r, c) on the grid.  We use the Cantor pairing function (and its\\n *     inverse) to map between n and (r, c).\\n */\\nfunction to_graph(grid) {\\n    assert(grid.length > 0);\\n    const ncol = grid[0].length;\\n    const graph = new Graph(bool.UNDIRECTED);\\n    for (let r = 0; r < grid.length; r++) {\\n        assert(ncol === grid[r].length);\\n        for (let c = 0; c < ncol; c++) {\\n            // Our current location is u := (r, c).\\n            const u = pairing(r, c);\\n            // Is this an obstacle?\\n            if (is_obstacle(grid, r, c)) {\\n                continue;\\n            }\\n            // Can we move one step left?\\n            assert(grid[r][c] === 0);\\n            if (can_move_left(grid, r, c)) {\\n                const v = pairing(r, c - 1);\\n                graph.add_edge(u, v);\\n            }\\n            // Can we move one step right?\\n            if (can_move_right(grid, r, c)) {\\n                const v = pairing(r, c + 1);\\n                graph.add_edge(u, v);\\n            }\\n            // Can we move one step up?\\n            if (can_move_up(grid, r, c)) {\\n                const v = pairing(r - 1, c);\\n                graph.add_edge(u, v);\\n            }\\n            // Can we move one step down?\\n            if (can_move_down(grid, r, c)) {\\n                const v = pairing(r + 1, c);\\n                graph.add_edge(u, v);\\n            }\\n        }\\n    }\\n    return graph;\\n}\\n\\n/**\\n * Convert from a graph-theoretic path to a path given in terms of the\\n * following directions.\\n *\\n * * U := move up by one step.\\n * * D := move down by one step.\\n * * L := move left by one step.\\n * * R := move right by one step.\\n *\\n * @param gpath An array of nodes representing a path in a graph.\\n * @return A string comprised of the characters U, D, L, R to indicate\\n *     a path.  An empty string if gpath is an empty array.\\n */\\nfunction path_to_string(gpath) {\\n    // No shortest paths in the grid.\\n    if (gpath.length === 0) {\\n        return \\\"\\\";\\n    }\\n    // We have a shortest path in the grid.\\n    const path = [];\\n    let [rold, cold] = unpairing(gpath[0]);\\n    for (const v of gpath.slice(1, gpath.length)) {\\n        const [r, c] = unpairing(v);\\n        // Are we moving up?\\n        if (rold - 1 === r) {\\n            path.push(\\\"U\\\");\\n        }\\n        // Are we moving down?\\n        if (rold + 1 === r) {\\n            path.push(\\\"D\\\");\\n        }\\n        // Are we moving left?\\n        if (cold - 1 === c) {\\n            path.push(\\\"L\\\");\\n        }\\n        // Are we moving right?\\n        if (cold + 1 === c) {\\n            path.push(\\\"R\\\");\\n        }\\n        [rold, cold] = [r, c];\\n    }\\n    return path.join(\\\"\\\");\\n}\\n\\n/**\\n * Use the inverse of the Cantor pairing function to break a non-negative\\n * integer into a pair of coordinates (x, y).\\n *\\n * @param z A non-negative integer.\\n * @return A pair of coordinates (x, y) that is uniquely associated with z.\\n */\\nfunction unpairing(z) {\\n    assert(z >= 0);\\n    const numer = Math.sqrt(8 * z + 1) - 1;\\n    const w = Math.floor(numer / 2);\\n    const t = (w ** 2 + w) / 2;\\n    const y = z - t;\\n    const x = w - y;\\n    return [x, y];\\n}\\n\\n/**\\n * Shortest Path in a Grid: You are given a 2-D array of numbers (array of\\n * arrays) representing a grid, i.e. a 2-D matrix.  The 2-D array contains 1s\\n * and 0s, where 1 represents an obstacle and 0 represents a free space.\\n * Assume you are initially positioned at the top-left square of the grid and\\n * you are trying to reach the bottom-right square.  In each step, you may move\\n * up, down, left, or right.  Furthermore, you cannot move onto spaces that\\n * have obstacles.  Determine a shortest path from start to finish, if one\\n * exists.  The answer should be given as a string of UDLR characters,\\n * indicating the moves along the path.\\n *\\n * NOTE: If there are multiple equally short paths, any of them is accepted as\\n * answer.  If there are no paths, the answer should be an empty string.\\n *\\n * Usage: run cct/grid3.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const grid = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(shortest_path(grid), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/grid3.txt\\\";\\n        const data = matrix_to_string(grid);\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/grid3.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/75530dbf-6c85-48c5-a631-a3a0ebc9ab29\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0edad43d-dc76-4de1-a0ba-5660cb77caeb\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4e6ecce6-3cf0-4b23-aeee-fc49f3bbe665\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0a596597-6ec3-43b2-aa2c-0e2b48855d5d\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bf1f9015-00f4-43fa-a58e-1990f65a55f1\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b144ad9e-7c94-44d6-a530-1fb43b354f1f\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9f55cc5b-8006-443b-a2d2-437db63a10e5\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a457642d-31db-4ab7-af22-3297381cc8b3\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/88223db9-ffd9-4858-aa72-8036510f6875\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/41fea625-0fbd-4d15-8e65-544cba23be86\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8bcb891c-b5e4-4b96-90ca-1bf19203b4ce\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d03d11fa-df54-4874-acfa-329372e65c95\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/666d9e71-2ad6-4c4e-9055-f49d6529c62d\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a43fcaf4-b4a3-4447-ad1d-269bcbad1b33\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/74ade9de-8409-40b9-8fbb-d4796d3d478f\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8e0f0467-5147-400d-8c85-303747a46bcc\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e0a85ed0-2020-4d71-bab6-feb5acadb0bf\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/03337109-817f-4fb1-be6f-47178b874c90\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c5af861c-1d11-4737-875d-2d95ff274f9a\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/4717f60b-0154-4389-a260-b4b247389e1a\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/cda70369-daca-4ed4-bd54-225f27b0aef1\",\"moduleSequenceNumber\":286},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/167431b5-0517-42fd-888d-d8beeab8178b\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6389f22a-c291-4b4f-aa17-fede5e95a7c1\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0465051a-2a7c-4632-9f46-7194f8663f66\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6fa546ad-7087-4e8f-af59-6284b249f99e\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d7cdaa70-0f4e-4067-886a-cd9def17591f\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2a588e30-7818-4222-8c53-79641fdb3b8b\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/18b7f78b-9ddd-4849-8b43-5858dad5af1d\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/86a1394e-11cc-407b-950b-14062d70e223\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/81b4c0d8-af83-445a-bbac-86f3402fcbdf\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f3b31740-bafb-4e88-9de6-d67dfd8bb81f\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7ef2e569-86b3-441f-9359-a7e3b2a52977\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/abcb2b3b-57e0-42cd-96f5-198a194d6865\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7e6961cd-c6c9-4e62-8bcb-f9594d6d4df9\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dcea6290-a598-41f3-8f6c-9c874c9f81f3\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/470a1dd7-f9c5-4c78-81ba-dc71e917c9ea\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/48fbf140-eb35-4dc8-bef5-3c573ef79383\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bd506bb7-96d6-44be-8293-101efa4aa657\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/69754fe1-4177-4934-af23-607b58ca7732\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6c85279b-1836-4104-b206-6b3e8b35465a\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/675cda9c-f162-4b44-822a-99a84cf81286\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/425fa2ac-406e-4898-a417-a19949c0588c\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/eb887f55-ea11-4fe3-a1f1-b0ca1281a312\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/63052030-b325-4d7b-99fb-63e5ebeec7c3\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/28457faa-204d-4244-b6a3-4520f5848d45\",\"moduleSequenceNumber\":261},{\"filename\":\"/cct/grid3.js\",\"url\":\"blob:https://danielyxie.github.io/84fbd750-2bc5-4aca-9479-04d826f3c2b7\",\"moduleSequenceNumber\":476}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":706,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport {\\n    count_one,\\n    log_cct_failure,\\n    parity_position,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { base } from \\\"/lib/constant/misc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Use Hamming code to encode a string of bits.\\n *\\n * @param n A positive integer.  This is our data.\\n * @return A bit string representing the Hamming encoding of the given data.\\n */\\nfunction encode(n) {\\n    assert(n > 0);\\n    // Convert from decimal to binary.  A decimal number is expressed in\\n    // base 10, whereas a binary number is expressed in base 2.\\n    const data = n\\n        .toString(base.BINARY)\\n        .split(\\\"\\\")\\n        .map((s) => parseInt(s, base.DECIMAL));\\n    // Determine the number of parity bits.\\n    const nparity = num_parity(data);\\n    assert(nparity > 0);\\n    // Lay out the data bits in the incomplete encoded message.  Set each\\n    // redundant bit as well as the overall parity bit.\\n    const TRASH = -1;\\n    let msg = lay_data_bits(data, nparity, TRASH);\\n    msg = set_parity(msg, nparity);\\n    return msg.join(\\\"\\\");\\n}\\n\\n/**\\n * Lay out the data bits in the encoded message.  Position 0 in the message\\n * is reserved for the overall parity bit.  Position 2^i in the message is\\n * reserved for a parity (or redundant) bit, where i = 0, 1, 2, ...\\n *\\n * @param data An array of bits, representing the bit string of the data.\\n * @param p The number of parity bits in the encoded message.  This number\\n *     does not include the overall parity bit.\\n * @param trash Rubbish placed at positions not occupied by a data bit.\\n * @return An incomplete bit string, where only the data bits are placed.\\n *     A position not occupied by a data bit is filled with rubbish whose\\n *     value is determined by trash.\\n */\\nfunction lay_data_bits(data, p, trash) {\\n    // The number of bits in our encoded message.  The extra one bit\\n    // is the overall parity bit, which is used to check the parity\\n    // of the whole message.\\n    const m = data.length + p + 1;\\n    // Determine the positions where the parity (i.e. redundant) bits are\\n    // to be placed.\\n    const pos = new Set(parity_position(p));\\n    // Lay out the data bits.\\n    const msg = Array(m).fill(trash);\\n    const _data = Array.from(data);\\n    // Index 0 is reserved for the overall parity bit.  Indices 1 and 2 are\\n    // for parity (i.e. redundant) bits.  So we start at index 3.\\n    for (let k = 3; k < m; k++) {\\n        if (pos.has(k)) {\\n            continue;\\n        }\\n        msg[k] = _data.shift();\\n    }\\n    return msg;\\n}\\n\\n/**\\n * Determine the number of parity bits.  Let p be the number of parity bits\\n * and k the number of bits in the data.  The number of parity bits must\\n * satisfy the inequality\\n *\\n * 2^p >= k + p + 1\\n *\\n * @param data The bit string to be encoded using Hamming code.\\n * @return The number of parity bits.  This number does not include the overall\\n *     parity bit.\\n */\\nfunction num_parity(data) {\\n    assert(data.length > 0);\\n    let p = 0;\\n    let max;\\n    const k = data.length;\\n    do {\\n        p++;\\n        max = 2 ** p;\\n    } while (max < k + p + 1);\\n    // The encoded message has m := k + p + 1 bits, as explained below.\\n    //\\n    // k := The number of bits in the data, represented as a bit string.\\n    // p := The number of parity (i.e. redundant) bits.\\n    // 1 := The extra bit reserved for the overall parity bit.\\n    //\\n    // The number p of parity (i.e. redundant) bits is\\n    //\\n    // p = [log(m)]\\n    //\\n    // where the operator [] means the ceiling function and log() is the\\n    // logarithm using base 2.\\n    const m = k + p + 1;\\n    assert(p === Math.ceil(Math.log2(m)));\\n    return p;\\n}\\n\\n/**\\n * Set each parity bit.  The encoded message has a number of locations\\n * that are reserved for parity bits.  We set each of these locations to\\n * 1 or 0.\\n *\\n * @param msg An incomplete encoded message.  Assume only the data bits\\n *     to have been laid out.\\n * @param nparity The number of parity bits in the encoded message.  This\\n *     number does not include the overall parity bit.\\n * @return The same as the input msg array, but the location of parity\\n *     bits have been set.  We do not modify msg.  We also set the\\n *     overall parity bit.\\n */\\nfunction set_parity(msg, nparity) {\\n    assert(msg.length > 0);\\n    assert(nparity > 0);\\n    // The positions where the parity bits are placed.  Do not include the\\n    // position of the overall parity bit.\\n    const pos = parity_position(nparity);\\n    // Set each parity bit.\\n    const _msg = Array.from(msg);\\n    for (const p of pos) {\\n        assert(p > 0);\\n        const n1 = count_one(_msg, p);\\n        // Is the number of 1s even or odd?  If the total number of 1s is\\n        // even, then the parity is 0.  Otherwise the parity is 1.\\n        _msg[p] = n1 % 2;\\n    }\\n    // Count the number of 1s in the encoded message, excluding the\\n    // very first position.\\n    const _msga = _msg.slice(1, _msg.length);\\n    const n1 = MyArray.sum(_msga);\\n    // Set the overall parity bit.\\n    _msg[0] = n1 % 2;\\n    return _msg;\\n}\\n\\n/**\\n * HammingCodes: Integer to Encoded Binary: You are given a decimal value.\\n * Convert it into a binary string and encode it as a Hamming code.  For\\n * example, the decimal value 8 will result in the binary string 1000, which\\n * will be encoded with the pattern 'pppdpddd', where p is a parity bit and d\\n * a data bit.  As another example, the binary representation of the decimal\\n * value 21 is '10101'.  The binary string is encoded as the pattern\\n * 'pppdpdddpd' to result in '1001101011'.\\n * NOTE: You need a parity bit at index 0 as an overall parity bit.  Important\\n * rule for encoding: Not allowed to add additional leading 0s to the binary\\n * value, i.e. the binary value has to be encoded as is.\\n *\\n * This is the problem of using Hamming code to encode a binary string, i.e.\\n * a string of bits.  The Hamming code is extended with an additional overall\\n * parity bit, which is located at index 0 in the encoded bit string.  The\\n * original paper where Hamming code is described:\\n *\\n * R. W. Hamming.  Error detecting and error correcting codes.  The Bell System\\n * Technical Journal, volume 29, issue 2, 1950, pp.147--160.\\n * DOI: 10.1002/j.1538-7305.1950.tb00463.x\\n *\\n * Expository notes here:\\n *\\n * https://en.wikipedia.org/wiki/Hamming_code\\n * https://medium.com/swlh/hamming-code-generation-correction-with-explanations-using-c-codes-38e700493280\\n * https://users.cs.fiu.edu/~downeyt/cop3402/hamming.html\\n * https://www.youtube.com/watch?v=X8jsijhllIA\\n * https://harryli0088.github.io/hamming-code/\\n *\\n * Usage: run cct/hamming.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const n = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(encode(n), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/hamming.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, n);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/hamming.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0303b30d-4fc8-49ac-a90d-ec695f781fde\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a4d455ba-553a-464d-b977-f4254b6e9f13\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6654f182-48a3-48a8-a967-88327ae6fdc0\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dbaf04a6-f3a5-4b9d-8013-870f4292d391\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7084eba6-1386-4d50-b093-f847d6276ea8\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4c68db4e-9994-4354-bfbd-a5da2f6943a0\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/12019526-e9d5-405c-884c-050c65da2e64\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/902769e4-b673-443d-beeb-9f42a0d53d1c\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a41a792b-e044-40be-a296-d28d7d50435d\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/02a226a8-8e2d-4a9d-b5ee-7a03eef7bbc1\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/20d51697-aafb-419d-a0fd-2db8a4211ce9\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9d0ea8df-5dc2-4be4-825a-a31f2ff4df3f\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b17ab602-3bac-418d-bb8a-dc71e0fbb175\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/82c803e4-04be-4c09-9b26-59832a22c5db\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9b7654a4-92a9-42b5-a45f-b42c354bcff9\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ff83f69c-2d22-4acb-a732-01e9b26399ab\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a9f78b98-1ee5-4c34-9bea-93b97c069cc6\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/837437fa-e46f-477b-8f99-5394acebeb25\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8d284fba-d87a-4727-9793-d879dbbfbd14\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ee567775-797b-4c0b-b106-d9c2ae4dca5c\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3535168b-44c7-4b63-98fe-397615e7700a\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3d004ff8-8d0c-4b2a-8aad-3403967dcc5f\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f6d9bfd1-144d-4599-acac-3342884eae7e\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1f089797-b7dc-42ae-b704-302e20c12cf8\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e413e903-3558-4fe2-9fdd-7d953269794d\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dce56172-1d8a-4115-8026-ab98c5d7b2ff\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/92a28a99-ae26-411a-9aef-b3bf2842a044\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a7360898-4797-4e04-b875-020fd2bb0865\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ebb44995-2488-4744-9864-d2bb30337788\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/6235828c-5e4b-48b3-929f-31ebf54d4304\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cfe042bf-1f58-4572-ac4c-c91036aa70c7\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c73e1272-825f-4409-9fa9-37f6d87400f2\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/04fbf693-ffe2-4860-8aed-a59574f79377\",\"moduleSequenceNumber\":68960},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/37a3c0ab-f8b6-4fed-9a46-f98860d034d4\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d353cb42-ff4b-4e45-96f4-e3b8d3917aab\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/259b9f30-6045-4139-aeb9-b1bf25a3b770\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/839360af-92f0-4d51-b0f2-b0de24618bc2\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1a96b3ce-2c42-422b-bc9a-69b18bb46a4d\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8173a077-d93e-4828-9cf1-6eaaa7efee64\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/798e9bc3-75c5-433b-9ba1-cf142a6300a3\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ea516e61-d9cf-4022-821b-773b66440c28\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e3aa272d-73a8-4d76-b319-3b4274effda2\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/9196d433-bdb5-4374-ac34-4544c30ef159\",\"moduleSequenceNumber\":68959},{\"filename\":\"/cct/hamming.js\",\"url\":\"blob:https://danielyxie.github.io/1e4be0ef-784d-4108-bb92-2b6064b42aa8\",\"moduleSequenceNumber\":89567}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":707,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport {\\n    count_one,\\n    log_cct_failure,\\n    parity_position,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { base } from \\\"/lib/constant/misc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Check the parity bits.\\n *\\n * @param msg An encoded message as a bit string.\\n * @param nparity The number of parity bits in the encoded message.\\n * @return An array of indices where the parity bit has detected an error.\\n *     Each index is the location of a parity (i.e. redundant) bit.  The\\n *     value of this parity bit is different from the parity of the\\n *     positions that the bit is meant to check.  An empty array if there\\n *     are no errors in the parity check.\\n */\\nfunction check_parity(msg, nparity) {\\n    // The positions where the parity bits are placed.\\n    const pos = parity_position(nparity);\\n    // Locations of error.  Each location is an index of the bit string.\\n    // Each index is the position of a parity (i.e. redundant) bit.\\n    const error = [];\\n    // Check each parity (i.e. redundant) bit.\\n    for (const p of pos) {\\n        assert(p > 0);\\n        // The function count_one() also counts the value of the parity\\n        // bit located at index p in the bit string.  If the value of\\n        // msg[p] is 1, we must subtract 1 from the result of the\\n        // count_one() function.\\n        let n1 = count_one(msg, p);\\n        if (msg[p] === 1) {\\n            n1--;\\n        }\\n        // Is there an error?\\n        const parity = n1 % 2;\\n        if (parity !== msg[p]) {\\n            error.push(p);\\n        }\\n    }\\n    return error;\\n}\\n\\n/**\\n * Decode a binary string to an integer.\\n *\\n * @param msg A bit string that has been encoded using Hamming code.\\n *     Going from left to right, the very first bit is the overall\\n *     parity bit.  This is the extended Hamming code with an additional\\n *     parity bit, also known as \\\"single error correction, double error\\n *     detection\\\" (SECDED).\\n * @return The integer corresponding to the encoded bit string.\\n */\\nfunction decode(msg) {\\n    assert(msg.length > 0);\\n    const _msg = Array.from(msg).map((s) => parseInt(s, base.DECIMAL));\\n    const nparity = num_parity(_msg);\\n    const _msgc = secded(_msg, nparity);\\n    return to_integer(_msgc, nparity);\\n}\\n\\n/**\\n * The number of parity (or redundant) bits.  Let p be the number of parity\\n * bits, excluding the overall parity bit.  Let m be the number of message\\n * bits.  These numbers satisfy the inequality\\n *\\n * 2^p >= m + p + 1\\n *\\n * @param msg A bit string that has been encoded using Hamming code.\\n *     The 0-th position is reserved for the overall parity bit.  The first\\n *     parity (or redundant) bit is at index 1.  The second parity bit is at\\n *     index 2.  Index 3 is the first index where a data bit is located.\\n *     Assuming the message string has at least 1 bit, the encoded bit string\\n *     has at least 4 bits.\\n * @return The number of redundant bits, excluding the overall parity bit.\\n */\\nfunction num_parity(msg) {\\n    const lower_bound = 4;\\n    assert(msg.length >= lower_bound);\\n    let i = 0; // How many parity bits.\\n    let pos = 2 ** i; // Position of a parity bit.\\n    while (pos < msg.length) {\\n        i++;\\n        pos = 2 ** i;\\n    }\\n    assert(i === Math.ceil(Math.log2(msg.length)));\\n    return i;\\n}\\n\\n/**\\n * Correct a single error and detect two errors.  Also known as \\\"single error\\n * correction, double error detection\\\" (SECDED).\\n *\\n * @param msg A bit string that has been encoded using the extended Hamming\\n *     code.\\n * @param nparity The number of parity (i.e. redundant) bits in the bit string.\\n * @return The same bit string as msg, but with a single error corrected if\\n *     there is an error in the bit string.\\n */\\nfunction secded(msg, nparity) {\\n    // Check for errors in the parity (i.e. redundant) bits.\\n    const error = check_parity(msg, nparity);\\n    // No errors in the bit string.\\n    if (error.length === 0) {\\n        return msg;\\n    }\\n    // We have an error in the bit string.  Calculate the sum of the indices of\\n    // the erroneous parity bits.  This sum gives the index of where an error\\n    // occurs.  Correct one error.\\n    const i = MyArray.sum(error);\\n    const _msg = Array.from(msg);\\n    _msg[i] = (_msg[i] + 1) % 2;\\n    // Check the overall parity bit.  This allows us to check for the presence\\n    // of a second error, but we would not be able to correct the second error.\\n    const n1 = MyArray.sum(_msg.slice(1, _msg.length));\\n    assert(_msg[0] === n1 % 2);\\n    return _msg;\\n}\\n\\n/**\\n * Convert a Hamming code to an integer.\\n *\\n * @param msg A bit string encoded using Hamming code.\\n * @param nparity The number of parity (i.e. redundant) bits in the\\n *     bit string.  This does not include the overall parity bit, which is\\n *     assumed to be at index 0 of msg.\\n * @return An integer representation of the Hamming encoded bit string.\\n */\\nfunction to_integer(msg, nparity) {\\n    assert(msg.length > 3);\\n    assert(nparity > 0);\\n    // Extract data bits, i.e. those bits that are not redundant bits and not\\n    // the overall parity bit.  Index 0 is reserved for the overall parity bit.\\n    // Index 1 is reserved for a redundant bit, so is index 2.  Therefore, we\\n    // start at index 3.\\n    const pos = new Set(parity_position(nparity));\\n    const data = [];\\n    for (let i = 3; i < msg.length; i++) {\\n        if (pos.has(i)) {\\n            continue;\\n        }\\n        data.push(msg[i]);\\n    }\\n    // The number is a binary representation of an integer.  Convert the binary\\n    // representation to a decimal representation.\\n    return parseInt(data.join(\\\"\\\"), base.BINARY);\\n}\\n\\n/**\\n * HammingCodes: Encoded Binary to Integer: You are given an encoded binary\\n * string.  Treat it as a Hamming code with 1 possible error at a random index.\\n * Find the possible wrong bit, fix it, and extract the decimal value from\\n * the string.  Return the decimal value as a string.\\n *\\n * Note 1: The length of the binary string is dynamic, but its encoding/decoding\\n *     follows Hamming's rule.\\n * Note 2: Index 0 has an overall parity bit.\\n * Note 3: There's a ~55% chance of having an altered bit.\\n *\\n * Usage: run cct/hamming2.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const msg = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(decode(msg), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/hamming2.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, msg);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/hamming2.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1b7056b3-8cae-4110-90c0-ff37de1d2ffe\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/020c3d0b-3606-495e-9eb5-0452566493fa\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7ba60118-e483-4aee-ac42-761b7f8f5dae\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e69f9064-0a29-404a-aef1-27164b3c8d61\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7942f42f-f699-4046-8e94-7179ad3fbd06\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e9b3fb7f-8e99-425c-a886-10f64d02206c\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7eb2a555-a385-4ef2-8b8e-45aa0538f28f\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/158dead1-1a91-4e86-8e9f-c6c8870a00c0\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3e7388bf-6b56-4cde-a67b-b279e3258a56\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6e1ec1f4-bc5f-4972-bed1-2edb0e85e250\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/52292337-7359-4dad-994a-c601ed5488d5\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d1f1b7eb-9690-4688-8628-fa05e25dfd41\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a45e74f7-5ae9-4a19-a6d5-f8b8ccbab179\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/df1de136-8814-43b1-9b67-b7fa313609d8\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0f16c93c-f04e-446e-95cb-1572319b872f\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f1c294b6-b617-41a7-9b76-17e5299cf3dd\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/48a53287-595c-4f90-8d7d-5810fdc38705\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4237ffbc-984b-4e48-adba-293c516b829f\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b40c4074-2cda-4ada-a1ae-7b7250141859\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cf19f8fa-9d35-439d-917b-5b124727f296\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c293004e-388c-43f7-9c0d-2f5dccb02f79\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ca15f896-0407-4a73-bb0b-b248588d7df9\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/64d40a23-4ac1-4fd5-8550-909654367646\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9df20eb1-bea8-4b96-bd42-bb06bf6de6d9\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/254060d9-7906-4fe3-aec4-c39996782a17\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3f7afe85-3aed-4977-8943-f4ff9b5d3a13\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4178b79a-5125-4925-9cab-1360ecc6c7cf\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f2ff0ae8-7dd7-4d09-badf-a230c02d9ed0\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4db48935-9efa-44c8-b0d3-42f5c732e548\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/c5a6cf36-3ef5-4d83-8e3e-a41b449c6ac2\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ecb6eb95-8026-45d4-8d92-728aabeb6e83\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cbc46ec1-24ae-47a4-b0aa-4fc6c8eb1cdd\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/7c4a69f9-cf91-4cf6-a59a-5b057f28e5a0\",\"moduleSequenceNumber\":261},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/675772ab-7aa3-4c22-b60c-5b8e5755049b\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/734d7d15-6d1a-43ca-adfb-72c2ae28f78e\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/61b12f05-56a8-4900-a920-4ebb79c13bb0\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b91255e5-06d8-4139-aafc-004ec491015a\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ba440060-b16e-45d7-aa9b-ffc39d4dc269\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7f37da49-0620-4b81-ae94-06093a4eeeca\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5725738a-deb8-41c2-a8cc-1bae4a3b828d\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ad96ffc0-24cf-4321-b181-8385dd8ab126\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/47a05799-4b52-484f-8be9-06b4070bb4e8\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/4e1ea6a4-d375-4349-ba2a-55d940c9dc07\",\"moduleSequenceNumber\":260},{\"filename\":\"/cct/hamming2.js\",\"url\":\"blob:https://danielyxie.github.io/e0d63433-2b12-4e3f-b05e-877a2dd6c8b9\",\"moduleSequenceNumber\":475}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":708,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Merge overlapping intervals.\\n *\\n * @param interval An array of intervals.  Each interval is represented as an\\n *     array [a, b] of two elements, where a < b.  So this is an array of\\n *     arrays.\\n * @return An array of intervals, where all overlapping intervals have\\n *     been merged.  Intervals in the array are sorted in ascending order.\\n */\\nfunction merge(interval) {\\n    // Sanity checks.\\n    assert(interval.length > 0);\\n    assert(valid_interval(interval));\\n    // Sort the array in ascending order using the first element of\\n    // each subarray.\\n    const array = MyArray.sort_ascending_tuple(interval);\\n    // Compare two intervals and merge them as necessary.\\n    let i = 0;\\n    let j = i + 1;\\n    const start = 0;\\n    const end = 1;\\n    const howmany = 1; // How many elements to delete.\\n    while (j < array.length) {\\n        if (merge_interval(array[i], array[j])) {\\n            // Merge intervals i and j.\\n            const a = array[i][start];\\n            const b = Math.max(array[i][end], array[j][end]);\\n            array[i] = [a, b];\\n            // Delete interval j.\\n            array.splice(j, howmany);\\n            continue;\\n        }\\n        i++;\\n        j = i + 1;\\n    }\\n    return array;\\n}\\n\\n/**\\n * Whether to merge two intervals.\\n *\\n * @param intA An interval, represented as an array [x, y] of two elements.\\n * @param intB Another interval.\\n * @return true if the given intervals should be merged; false otherwise.\\n */\\nfunction merge_interval(intA, intB) {\\n    const start = 0;\\n    const end = 1;\\n    const a = intA[end];\\n    const b = intB[start];\\n    // The end of the previous interval is smaller than the start\\n    // of the current interval.\\n    if (a < b) {\\n        return bool.NO_MERGE;\\n    }\\n    // The end of the previous interval is greater than or equal\\n    // to the start of the current interval.\\n    assert(a >= b);\\n    return bool.MERGE;\\n}\\n\\n/**\\n * Whether each interval is valid.\\n *\\n * @param array An array of intervals.  Cannot be an empty array.\\n * @return true if each interval is valid; false otherwise.\\n */\\nfunction valid_interval(array) {\\n    assert(array.length > 0);\\n    for (let i = 0; i < array.length; i++) {\\n        const arr = array[i];\\n        if (arr.length !== 2) {\\n            return bool.INVALID;\\n        }\\n        const [a, b] = arr;\\n        if (a >= b) {\\n            return bool.INVALID;\\n        }\\n    }\\n    return bool.VALID;\\n}\\n\\n/**\\n * Merge Overlapping Intervals: Given an array of intervals, merge all\\n * overlapping intervals.  An interval is an array with two numbers, where\\n * the first number is always less than the second (e.g. [1, 5]).  The\\n * intervals must be returned in ASCENDING order.\\n *\\n * Usage: run cct/interval.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(merge(array), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/interval.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/interval.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/077fd770-3659-4ab7-9374-3f6319989e88\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/59168613-a5e7-4596-a909-397b6f1fa464\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ad088ebe-49ab-4c8d-aafb-26699dc6c7fc\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2544b8f1-e1fc-491e-8c18-271e0d00d8da\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7ce929e2-afab-48d1-a7e9-715c1a726b86\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/08438bbd-a731-4e66-8b41-43cf8ecfad86\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8bead6da-bba5-4a25-a240-40d99fc43ace\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9fa679c7-a9c5-4004-b40d-af87f336c082\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e7f4cdf2-ecbf-4b76-873c-d40d30dee47c\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/4591e53e-c094-491a-8462-9f270f840d3d\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d6900157-842f-49a0-8750-2290c56a90e7\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9953c95f-926d-4204-8047-f3076b097518\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cf4e0d42-5ec1-40b2-9fb7-5295d848c1f1\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/46a3c558-2d24-4fb4-919c-c903caa46558\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4164e281-ac4f-44ce-a92b-94633c8db6f2\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7efa6519-62fc-4570-9f4c-b4d3e5f20580\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e924155e-b93f-4c88-b642-54a3d0bd6fc2\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/323b81da-0220-49b9-b353-c9b4e5b2ce9e\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/72936d59-5f4c-42ee-95d8-bd1bf05fc465\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cda1652a-d606-4c3b-bb92-36a54ff966bb\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2dfafaa9-8736-4a9c-86ab-e5b2719b2dd3\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e999941e-4201-487f-b12f-c99caf92ef75\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f4f3ab63-9c60-4cb9-93be-e6c47c20fe2e\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4cd4902f-15ea-455c-a362-d7e21c982ae9\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1d9bd1fd-dfd4-4005-af29-5bbb6bffccb6\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d62607a2-dcab-4310-b2db-e5603db27983\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/edfb2221-ede5-4c33-84ea-796858a72b5f\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cb8ef22b-ec89-4cce-a7a2-745d730de54f\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7e0e3e1a-3acc-4f49-8ffc-5552b68973d0\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/bb243c10-f4f5-4ec5-9767-1c74d789e38a\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/77e87f74-58fb-44a5-b13b-381e45d3aa80\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/566df249-347a-46ce-8200-8853d1c545e3\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/331ebee2-34d7-4e52-9c69-9df7fc555079\",\"moduleSequenceNumber\":261},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c7d2f662-3df3-4b37-adec-645d532b8812\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b6a7a4d1-6218-413f-915d-0cd9f55cdc84\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/077dc5cf-bf01-44a0-9271-ba1f1929a996\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d3dc6943-9c39-4296-b644-7a5fd61855a2\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a5af7119-70fc-40f9-b825-37f98f5a4da3\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0be4520c-a5ef-4ee5-860d-ecfa8e0bef51\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f0f26152-5d7a-4d33-961e-455005ca3bff\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a16f89ff-ebf4-4c56-9eb1-87c744971958\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dcaf3f99-472a-4830-84b8-8f79c4514202\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/76056176-e201-40ad-93cf-52c94b20dd24\",\"moduleSequenceNumber\":260},{\"filename\":\"/cct/interval.js\",\"url\":\"blob:https://danielyxie.github.io/b4cd0755-7070-4a94-8f48-4d5afb453179\",\"moduleSequenceNumber\":470}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":709,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { base } from \\\"/lib/constant/misc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * All valid IPv4 addresses from a string of digits.\\n *\\n * @param string A string of decimal digits.  Cannot be an empty string.\\n * @return An array where each element is a string representing a valid\\n *     IPv4 address.  An empty array if no valid IPv4 addresses can be\\n *     generated from the given string.\\n */\\nfunction all_ip(string) {\\n    assert(string.length > 0);\\n    // An IPv4 address has 4 octets, each of which is a segment of the digit\\n    // string.  No two segments overlap.  Each segment contains at most 3\\n    // digits.  The total length of all segments must be the same as the number\\n    // of digits in the digit string.\\n    const max_octet_length = 3;\\n    const ip_length = string.length;\\n    const ip = [];\\n    for (let i = 1; i <= max_octet_length; i++) {\\n        for (let j = 1; j <= max_octet_length; j++) {\\n            for (let k = 1; k <= max_octet_length; k++) {\\n                for (let ell = 1; ell <= max_octet_length; ell++) {\\n                    // Ensure the length of each octet sums to the length of a\\n                    // valid IPv4 address.\\n                    if (ip_length !== i + j + k + ell) {\\n                        continue;\\n                    }\\n                    // Extract each segment.\\n                    const octet = extract_octets(string, i, j, k);\\n                    // Is each segment a valid octet in an IPv4 address?\\n                    if (!is_valid_ip(octet)) {\\n                        continue;\\n                    }\\n                    // We have found a valid IPv4 address.  Octets in an IPv4\\n                    // address are delimited by a period.\\n                    ip.push(octet.join(\\\".\\\"));\\n                }\\n            }\\n        }\\n    }\\n    // Since v2.1.0, the game wants the array as a string.\\n    return ip.toString();\\n}\\n\\n/**\\n * Extract 4 octets from a digit string.\\n *\\n * @param string A string of decimal digits.\\n * @param i, j, k The boundary of each octet, where the boundary is with\\n *     respect to the digit string.  Going from left to right in the digit\\n *     string, the first octet starts from index 0 and ends at index i - 1,\\n *     inclusive.  The range of indices of the first octet can be written as\\n *     the closed interval [0, i - 1], meaning that digits in the first octet\\n *     are digits found at the given range of indices in the digit string.\\n *     The second octet has the range of indices [i, i + j - 1].  The third\\n *     octet has the range of indices [i + j, i + j + k - 1].  Finally, the\\n *     fourth octet has the range of indices [i + j + k, n - 1], where n is\\n *     the length of the digit string.\\n * @return An array where each element is a string of digits representing an\\n *     octet of the digit string.\\n */\\nfunction extract_octets(string, i, j, k) {\\n    assert(string.length > 0);\\n    assert(i > 0);\\n    assert(j > 0);\\n    assert(k > 0);\\n    const a = string.substring(0, i);\\n    const b = string.substring(i, i + j);\\n    const c = string.substring(i + j, i + j + k);\\n    const d = string.substring(i + j + k, string.length);\\n    return [a, b, c, d];\\n}\\n\\n/**\\n * Whether a given sequence of octets forms a valid IPv4 address.\\n * A valid IPv4 address has 4 valid octets.\\n *\\n * @param octet An array of candidate octets to test.\\n * @return true if each octet is valid; false otherwise.\\n */\\nfunction is_valid_ip(octet) {\\n    assert(octet.length === 4);\\n    for (const seg of octet) {\\n        if (!is_valid_octet(seg)) {\\n            return bool.INVALID;\\n        }\\n    }\\n    return bool.VALID;\\n}\\n\\n/**\\n * Whether a given segment is a valid octet in an IPv4 address.\\n *\\n * @param octet A digit string.  Cannot be an empty string.\\n * @return true if the given segment is a valid IPv4 octet; false otherwise.\\n */\\nfunction is_valid_octet(octet) {\\n    assert(octet.length > 0);\\n    // An octet cannot begin with '0'.  The exception to this rule\\n    // is when the octet itself represents the number 0.\\n    if (octet[0] === \\\"0\\\") {\\n        if (octet !== \\\"0\\\") {\\n            return bool.INVALID;\\n        }\\n    }\\n    // An octet represents an integer between 0 and 255, inclusive.\\n    const n = parseInt(octet, base.DECIMAL);\\n    const min = 0;\\n    const max = 255;\\n    if (min <= n && n <= max) {\\n        return bool.VALID;\\n    }\\n    return bool.INVALID;\\n}\\n\\n/**\\n * Generate IP Addresses: Given a string containing only digits, return an\\n * array with all possible valid IP address combinations that can be created\\n * from the string.  An octet in the IP address cannot begin with '0' unless\\n * the number itself is actually 0.  For example, '192.168.010.1' is NOT\\n * a valid IP.\\n *\\n * From the problem description, we only need to consider IPv4 addresses.\\n * Don't need to handle IPv6 addresses.\\n *\\n * Usage: run cct/ip.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const string = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(all_ip(string), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/ip.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, string);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/ip.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b57dba87-8986-4ac1-b81f-bad81a95cb9c\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c43bf8c7-d6b9-494c-b7a9-b62bce850c4e\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dc95f561-8248-43a9-8dba-e2a91a6c823d\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5522666d-a623-4d2d-a489-ffd0771e5828\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d646c2df-16fb-4ecc-aafe-7446d32b35f4\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/29feb8d1-7785-46eb-94b3-60e5fb494711\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a685da31-9a22-48ee-a591-6f4c8d52d141\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f73eae52-07bf-487f-b24b-9517932590d4\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6c2da4ed-6d32-49c0-9a90-b29acb53dd31\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ae7c838e-90ce-4320-943f-28da93fcf966\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/57cb19ee-9bd3-4ae4-8390-1c135b84ecf8\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/bd241580-c9c0-4a9b-8459-a64d8862915f\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/da4fc660-2e16-45b9-9237-f15df13f1806\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1ab2ddd3-de7d-4689-b1b4-824215989c42\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/70dc823d-48d6-412e-931a-b9166db17d53\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/20fb64cf-aeec-4d4e-b04f-bbec78d816e9\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0c540aac-bb98-4cd9-9bb3-c7c37c40cb92\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6422aa2b-a849-4bec-b34b-1b2e74976a6c\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/749b0b6d-0e76-42c8-8e07-c37f199ec214\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b11afcaf-9ced-4620-b18d-d5c38184329d\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6467fef9-c722-426e-92f9-58a5bb3a2a23\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/628413a2-0848-4d71-ba42-d30763bded5b\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cf65cc89-9fef-49a6-964b-f34c738f96d5\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e3c9a5fd-02d4-487b-b200-a3ea58789fd1\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ae5337c0-aa1e-4780-ad53-f58a46d292a7\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/250168c3-9647-4ff0-902c-11280a84e3d7\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2b6cc3a1-3154-4411-8d5d-50165b5702a6\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c89ea1a8-08ff-44a7-908f-686dccbcd05e\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a2c81c85-627b-4ac7-97ad-22a8c0b36e95\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/74dcf1d0-d7c4-4f9d-aec7-6a8be53a434c\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/a665ab1c-c6a9-4e6f-bf86-588707adb3b2\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f033be9d-d310-4b07-aeb8-40994ca392a5\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3ef80656-0385-499c-b594-ce51f4d32d39\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/472c4a8e-eccf-4636-a64b-3c3db348de3b\",\"moduleSequenceNumber\":68960},{\"filename\":\"/cct/ip.js\",\"url\":\"blob:https://danielyxie.github.io/d0937338-4065-4861-a9f6-7009ed537d79\",\"moduleSequenceNumber\":126008}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":710,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether we can reach the last cell of an array.  We use a greedy approach.\\n * Try to jump the maximum distance, otherwise backtrack and/or reduce the\\n * jump distance.\\n *\\n * @param array An array of integers.  Cannot be an empty array.\\n * @return 1 if starting from the first array cell we can reach the last array\\n *     cell; 0 otherwise.\\n */\\nfunction end_reachable(array) {\\n    // Sanity check.\\n    assert(MyArray.all_nonnegative(array));\\n    // Use a greedy method to try to reach the last array cell.\\n    let i = 0; // Current array index.\\n    const index = []; // Index of intermediary cells.\\n    const jump = []; // Jump length of array cell index[i].\\n    let reduce_distance = false;\\n    let d; // The jump distance.\\n    while (i < array.length) {\\n        // Do we need to reduce the jump distance?\\n        if (reduce_distance) {\\n            // Decrease by 1 the jump distance.\\n            d = jump.pop();\\n            jump.push(d - 1);\\n            reduce_distance = false;\\n        } else {\\n            // Current maximum jump distance.\\n            d = array[i];\\n            index.push(i);\\n            jump.push(d);\\n        }\\n        assert(index.length === jump.length);\\n        // Are we at the last array cell?\\n        if (is_last_cell(i, array)) {\\n            return bool.REACHABLE;\\n        }\\n        // Zero jump distance.\\n        d = jump[jump.length - 1];\\n        i = index[index.length - 1];\\n        if (d === 0) {\\n            // Does the first array cell have zero as the jump distance?\\n            if (i === 0) {\\n                return bool.NOT_REACHABLE;\\n            }\\n            // Backtrack and reduce jump distance.\\n            index.pop();\\n            jump.pop();\\n            reduce_distance = true;\\n            continue;\\n        }\\n        // Can we jump the given distance?\\n        if (i + d < array.length) {\\n            i += d;\\n            continue;\\n        }\\n        // We cannot jump the given distance.\\n        if (i + d >= array.length) {\\n            reduce_distance = true;\\n            continue;\\n        }\\n    }\\n}\\n\\n/**\\n * Whether we are at the last array cell.\\n *\\n * @param i Index of the current array cell.\\n * @param array An array of integers.  Cannot be an empty array.\\n * @return true if i is the last index of the array;\\n *     false otherwise.\\n */\\nfunction is_last_cell(i, array) {\\n    assert(array.length > 0);\\n    assert(i >= 0);\\n    assert(i < array.length);\\n    return i === array.length - 1;\\n}\\n\\n/**\\n * Array Jumping Game: You are given an array of integers where each element\\n * represents the maximum possible jump distance from that position.  For\\n * example, if you are at position i and your maximum jump length is n, then\\n * you can jump to any position from i to i+n.  Assuming you are initially\\n * positioned at the start of the array, determine whether you are able to\\n * reach the last index of the array.\\n *\\n * The problem statement doesn't say anything about whether the integers are\\n * negative, positive, or zero.  If an array element is a negative integer,\\n * does that mean we jump backward?  Let's make various assumptions to\\n * simplify the problem:\\n *\\n * (1) Each integer in the array is non-negative.\\n * (2) We start from the zeroth index of the array.\\n * (3) Each jump must be to the right, increasing the array index.\\n * (4) If the array element is zero, we cannot jump.\\n *\\n * Submit your answer as 1 (meaning true) or 0 (meaning false).\\n *\\n * Usage: run cct/jump.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(end_reachable(array), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/jump.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/jump.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2182c88c-c776-480b-b84b-a8a23a5b9d53\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/96329f09-33d9-464e-b7f0-3d9e0e138af2\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/277bbe84-dff6-40fa-b5b5-31ac2bc3bc28\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e239543e-8177-4f98-9997-7af5ebed1fe2\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a1cd0a45-cb75-4edb-b9fd-34acf500d51c\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/01402269-34d1-4cd6-b803-74b22617bfac\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ac1afb58-b14a-4a43-a9e5-f293bc9c5708\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/805b137c-fb8e-4bfb-bde6-b100479ccede\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/195fb2b6-0ce0-4f93-99b1-98c11c7d361a\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/eba6272d-5640-45b3-8eb0-82137d5916fc\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3bdba4de-9434-496e-ba21-e4ba8da75866\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c575b181-4947-493b-9c31-4a7766d836de\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f04dcbec-b8cd-4c49-83b7-74184761221a\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7f8f741b-1fc7-4094-b8c3-bd44ac7340bf\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2460da23-a30f-4b16-b10c-686c71218fd9\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0847dd36-d2d5-4974-b7be-94258a36aeea\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bba71366-51a9-46ff-93c3-3796ee2736dd\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e74ae933-3f18-4938-8b62-87ac04407d22\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bcd29878-0372-4e93-af7c-249b410492da\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/dc7bfbf0-f835-477f-8e90-4961ab685b82\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/46997767-9a9f-49f2-9c23-c3ada4c81595\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f3fb6a6d-ae11-4fe8-8a5a-2f65024888f8\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7d479ad3-db03-4440-a5b9-ff7516cd3c72\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6acabaae-a5f7-460a-ad56-aae14b015d72\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e5902dee-eea1-4062-8a0f-74e9c64837c9\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e4cb0d71-1ed3-419e-84f9-bbd712028170\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/86e2f67b-2d7f-48fc-a16e-24c8f974632d\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ffc3a51e-edcd-4024-853d-4391a24b157c\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f44fff65-ac09-492c-9a73-2bf8d1521c44\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/240b5b7f-bf25-46d8-89f5-7abab56f237e\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/63e2f804-6538-42bd-b3e5-1a870319f9b0\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3c208e85-f296-459f-bd5d-1a5ee4c275cc\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/38108e56-26a3-4e4c-88d6-dd9691626c10\",\"moduleSequenceNumber\":68960},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/50040bc2-7fee-4908-9f40-2e4bbea3a791\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0f7da7c2-c4a9-4a71-83c1-eb4d85820ab5\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a8cb79f0-033e-43fb-8618-c9ab8b2cf4af\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fe0fe12b-8426-4981-a930-5a02d1fb88f3\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f2610f93-d1ff-4175-936e-7fc188390004\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8de4be32-e182-49bf-a358-e7c3388d485e\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1ab517fb-b9ea-416a-945a-339d51f2a000\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2d77550d-719d-46e2-be74-07c9c6a0f62e\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3a7d9324-ccc6-4ee3-a71b-24ee4d767204\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/2eb889df-e437-4d0d-ad23-fd176e499654\",\"moduleSequenceNumber\":68959},{\"filename\":\"/cct/jump.js\",\"url\":\"blob:https://danielyxie.github.io/16ae1dad-0942-43db-beef-c4e0d59875b5\",\"moduleSequenceNumber\":108185}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":711,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { Graph } from \\\"/lib/network.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether we can jump from the current array cell.\\n *\\n * @param i Index of current array cell.\\n * @param array The array.\\n * @return true if we can jump from the current cell;\\n *     false otherwise;\\n */\\nfunction can_jump(i, array) {\\n    // Sanity checks.\\n    assert(i >= 0);\\n    assert(i < array.length);\\n    // Cannot jump if the maximum number of jumps is zero.\\n    if (array[i] === 0) {\\n        return bool.NO_JUMP;\\n    }\\n    // Cannot jump if we are at the last array cell.\\n    const last_index = array.length - 1;\\n    if (last_index === i) {\\n        return bool.NO_JUMP;\\n    }\\n    return bool.JUMP;\\n}\\n\\n/**\\n * The minimum number of jumps to reach the end of an array.\\n *\\n * @param array An array of non-negative integers.  Cannot be an empty array.\\n * @return The minimum number of jumps from the first to the last cell.  If we\\n *     cannot reach the last cell, then the minimum number is 0.\\n */\\nfunction minimum_jump(array) {\\n    assert(MyArray.all_nonnegative(array));\\n    // We interpret the array and its elements as a directed graph.  The\\n    // minimum jump length is found by computing the shortest path from the\\n    // first cell to the last cell.\\n    const start = 0;\\n    const end = array.length - 1;\\n    const graph = to_graph(array);\\n    const path = graph.shortest_path(start, end);\\n    // Cannot reach the last cell of the given array.\\n    if (path.length === 0) {\\n        return 0;\\n    }\\n    // We can reach the last cell of the array.\\n    assert(path.length > 0);\\n    const min_jump = path.length - 1;\\n    assert(min_jump > 0);\\n    return min_jump;\\n}\\n\\n/**\\n * Construct a directed, unweighted graph from the given array.\\n *\\n * @param array An array of non-negative integers.  Cannot be an empty array.\\n * @return A directed, unweighted graph representation of the given array.\\n */\\nfunction to_graph(array) {\\n    assert(array.length > 0);\\n    // First, add the nodes of the directed graph because the graph might be\\n    // disconnected.  Each node ID is an index of the given array.\\n    const node = MyArray.sequence(array.length);\\n    const graph = new Graph(bool.DIRECTED);\\n    node.forEach((v) => graph.add_node(v));\\n    // Add the directed edges of the graph.\\n    const last_index = array.length - 1;\\n    for (const u of node) {\\n        // Cannot jump from current array cell.\\n        if (!can_jump(u, array)) {\\n            continue;\\n        }\\n        // All possible jumps, where each jump distance is between 1 and\\n        // array[u], inclusive.\\n        const max_distance = array[u];\\n        assert(u < last_index);\\n        assert(max_distance > 0);\\n        for (let i = 1; i <= max_distance; i++) {\\n            const v = u + i;\\n            // Is v a valid index in array?\\n            if (v > last_index) {\\n                continue;\\n            }\\n            graph.add_edge(u, v);\\n        }\\n    }\\n    return graph;\\n}\\n\\n/**\\n * Array Jumping Game II: You are given an array of integers where each\\n * element represents the maximum possible jump distance from that position.\\n * For example, if you are at position i and your maximum jump length is n,\\n * then you can jump to any position from i to i+n.  Assuming you are\\n * initially positioned at the start of the array, determine the minimum\\n * number of jumps to reach the end of the array.  If it's impossible to\\n * reach the end, then the answer should be 0.\\n *\\n * This is similar to Array Jumping Game.  The only difference is that you\\n * must determine the smallest number of jumps to reach the end of the array.\\n * As with Array Jumping Game, we make various assumptions to simplify the\\n * problem:\\n *\\n * (1) Each integer in the array is non-negative.\\n * (2) We start from the zeroth index of the array, i.e. the first element.\\n * (3) Each jump must be to the right, increasing the array index.\\n * (4) If the array element is zero, we cannot jump.\\n *\\n * Usage: run cct/jump2.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const min_jump = minimum_jump(array);\\n    const result = ns.codingcontract.attempt(min_jump, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/jump2.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/jump2.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3edde113-e6e9-4a7f-a238-2d5a74e30766\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bd3467d8-7632-423a-812e-ebb3ad2dc40e\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/af333ef1-f5e6-44bf-ac98-b8278aa2163b\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bac6c4e9-b483-4140-a637-346f836e833f\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f42a9dba-2e01-4a2b-be2b-517449197724\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a3059bf4-6339-4ae0-a1ec-56110b2c7433\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8b9bb3e4-d65b-431e-956d-b1bc3dd5f233\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e7cf8e59-d091-4131-9501-00b681c5f56b\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/433b1ec9-536d-4f7d-b34a-a2f216fe103c\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/892e51e9-51d5-4c68-a174-a772fd278076\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7655d4be-60b5-49cf-9880-a45a72c57184\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/79751ff6-4190-4037-92cc-0b8d150a6cb8\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/12d638e2-2271-4995-80db-5c362c018f9c\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e6c2eaac-ca8d-4a67-a0f9-d4fce411fea1\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6d834a54-9999-4e7e-b907-40cd1c5f63c4\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e3e605c9-be1f-459d-b82d-c3d5a005a18c\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bf2540c5-bb2b-4898-afbd-973559411222\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e86ad220-08a4-459c-b8af-e6333ef29e6d\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c8f88020-0b23-45fa-ab69-61c2607d4f8b\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/23ab5740-7ebe-457e-a8f4-c8311746974f\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/7ed66937-f4b7-4f01-bcbf-56b4aaba42b3\",\"moduleSequenceNumber\":286},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/09f74b2c-85c2-4435-82c6-f4e2bde978e3\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/286df001-76f4-4545-acd6-20ffcf0f07d1\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/18daf2d7-060a-4be1-a0bd-3920c2530274\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/afe40093-7a7b-452c-87f6-46dde9416195\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5eb03ff8-b9c0-4dd3-8a44-add3a1b33060\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ac90d2b1-e971-4e45-ad07-c0c6eb3d98f4\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/28599c93-4526-4fe5-8b42-b3717822d4f0\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/add96c80-d82e-45f2-a936-99f1927d682a\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a4a728b1-36e6-412d-a84a-7d2f6621167a\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/255bf1ed-ed54-485a-925b-0f1cda9ce8a0\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/78a23992-ef81-48c8-879a-9f83a09b4dda\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/edc87a18-93e5-4c31-9022-e496f81b4e62\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/594400a3-16b1-4fbf-8538-25400a2209f8\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/09aec1be-51fc-475a-9435-719c454edd5a\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7624dc1f-38a2-483f-8250-331f14735157\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c96dd466-3a2e-4c5f-bcfd-6cb162e9e0bb\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f34a3fb3-2b74-4a35-905b-5be00c13de65\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4437cbb0-0cb0-487d-b440-4d4c42a421d2\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4f40b9e2-ee88-4f3d-97d8-791eb278acb0\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/daa94eb8-446f-414b-a7ba-90ebd6a0d2a5\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/06f02163-a4b7-4ab4-b0b7-10da94397941\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c71427c9-d383-438e-bf4f-0c3febadb9cc\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e04a1fa3-0d00-4003-b990-9f9ef3eba769\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/9b407e59-ab07-4db2-b8e2-0b9bc551f6b0\",\"moduleSequenceNumber\":261},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b3dcb241-1c34-4c9a-9921-b02d89beaa0e\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bb842ea5-ad44-495e-a6d9-bf7c4109501f\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2327b0d7-f2cf-47f1-b812-3ba225a5e498\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f909ca93-a9f3-4f4e-b61d-9ea99575b1ea\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7e6cdc28-0050-42e8-a805-ebeb120ee4a8\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/63878c89-d978-44c0-afc6-663076d43c3c\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9244aa4e-79ca-4f6c-87ce-a90ce015ec00\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c450b5c1-7239-410e-8ff2-a73180e8f816\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7342043b-f782-4457-854a-dd7f2e9b0ac1\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/9bfb6c56-807f-4faa-9b5e-4aab93c8fc31\",\"moduleSequenceNumber\":260},{\"filename\":\"/cct/jump2.js\",\"url\":\"blob:https://danielyxie.github.io/0eb959d5-06a3-4820-9864-ed4820a10dbb\",\"moduleSequenceNumber\":468}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":712,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"import { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\n\\n/**\\n * Compress a string using LZ encoding.  This function is due to\\n *\\n * stalefishies\\n * https://github.com/stalefishies\\n * https://github.com/danielyxie/bitburner/commit/174d17a5e20926745993969ede7ad1db9308036c\\n *\\n * Explanation by stalefish#8304 on Discord server of Bitburner:\\n *\\n * The basic idea is to add one character at a time, keeping all possible\\n * routes to optimal compression open. If we have N characters currently\\n * compressed, we can split that into two parts: all the chunks except the\\n * last, and then that last chunk. To add an (N+1)th character to the\\n * compressed string, we are going to either modify that last chunk to include\\n * the new character, or start a new chunk with the new character - we never\\n * modify any chunk except the last. Thus, to keep all possible routes open, we\\n * need to consider every possible final chunk, keeping track of the shortest\\n * 'all chunks except the last' string for each possible final chunk. That's\\n * what the state table keeps track of: the string stored in the table is the\\n * shortest 'all chunks except the last', and each table location corresponds\\n * to each possible last chunk.\\n *\\n * The code of this function is covered by this license:\\n * Apache 2.0 with Commons Clause\\n * https://github.com/danielyxie/bitburner/blob/dev/license.txt\\n *\\n * @param plain We want to compress this string.\\n * @return A compressed version of the input string.\\n */\\nfunction compress(plain) {\\n    // for state[i][j]:\\n    //      if i is 0, we're adding a literal of length j\\n    //      else, we're adding a backreference of offset i and length j\\n    let cur_state = Array.from(Array(10), () => Array(10).fill(null));\\n    let new_state = Array.from(Array(10), () => Array(10));\\n\\n    function set(state, i, j, str) {\\n        const current = state[i][j];\\n        if (current === null || str.length < current.length) {\\n            // eslint-disable-next-line no-param-reassign\\n            state[i][j] = str;\\n        } else if (str.length === current.length && Math.random() < 0.5) {\\n            // if two strings are the same length, pick randomly so that\\n            // we generate more possible inputs to Compression II\\n            // eslint-disable-next-line no-param-reassign\\n            state[i][j] = str;\\n        }\\n    }\\n\\n    // initial state is a literal of length 1\\n    cur_state[0][1] = \\\"\\\";\\n\\n    for (let i = 1; i < plain.length; ++i) {\\n        for (const row of new_state) {\\n            row.fill(null);\\n        }\\n        const c = plain[i];\\n        // handle literals\\n        for (let length = 1; length <= 9; ++length) {\\n            const string = cur_state[0][length];\\n            if (string === null) {\\n                continue;\\n            }\\n            if (length < 9) {\\n                // extend current literal\\n                set(new_state, 0, length + 1, string);\\n            } else {\\n                // start new literal\\n                // prettier-ignore\\n                set(\\n                    new_state,\\n                    0,\\n                    1,\\n                    `${string}9${plain.substring(i - 9, i)}0`\\n                );\\n            }\\n            for (let offset = 1; offset <= Math.min(9, i); ++offset) {\\n                if (plain[i - offset] === c) {\\n                    // start new backreference\\n                    // prettier-ignore\\n                    set(\\n                        new_state,\\n                        offset,\\n                        1,\\n                        string\\n                            + String(length)\\n                            + plain.substring(i - length, i)\\n                    );\\n                }\\n            }\\n        }\\n\\n        // handle backreferences\\n        for (let offset = 1; offset <= 9; ++offset) {\\n            for (let length = 1; length <= 9; ++length) {\\n                const string = cur_state[offset][length];\\n                if (string === null) {\\n                    continue;\\n                }\\n                if (plain[i - offset] === c) {\\n                    if (length < 9) {\\n                        // extend current backreference\\n                        set(new_state, offset, length + 1, string);\\n                    } else {\\n                        // start new backreference\\n                        set(\\n                            new_state,\\n                            offset,\\n                            1,\\n                            `${string}9${String(offset)}0`\\n                        );\\n                    }\\n                }\\n                // start new literal\\n                set(new_state, 0, 1, string + String(length) + String(offset));\\n                // end current backreference and start new backreference\\n                for (\\n                    let new_offset = 1;\\n                    new_offset <= Math.min(9, i);\\n                    ++new_offset\\n                ) {\\n                    if (plain[i - new_offset] === c) {\\n                        set(\\n                            new_state,\\n                            new_offset,\\n                            1,\\n                            `${string + String(length) + String(offset)}0`\\n                        );\\n                    }\\n                }\\n            }\\n        }\\n\\n        const tmp_state = new_state;\\n        new_state = cur_state;\\n        cur_state = tmp_state;\\n    }\\n\\n    let result = null;\\n\\n    for (let len = 1; len <= 9; ++len) {\\n        let string = cur_state[0][len];\\n        if (string === null) {\\n            continue;\\n        }\\n        string\\n            += String(len) + plain.substring(plain.length - len, plain.length);\\n        if (result === null || string.length < result.length) {\\n            result = string;\\n        } else if (string.length === result.length && Math.random() < 0.5) {\\n            result = string;\\n        }\\n    }\\n\\n    for (let offset = 1; offset <= 9; ++offset) {\\n        for (let len = 1; len <= 9; ++len) {\\n            let string = cur_state[offset][len];\\n            if (string === null) {\\n                continue;\\n            }\\n            string += `${String(len)}${String(offset)}`;\\n            if (result === null || string.length < result.length) {\\n                result = string;\\n            } else if (string.length === result.length && Math.random() < 0.5) {\\n                result = string;\\n            }\\n        }\\n    }\\n\\n    return result ?? \\\"\\\";\\n}\\n\\n/**\\n * Compression III: LZ Decompression: Lempel-Ziv (LZ) compression is a data\\n * compression technique that encodes data using references to earlier parts of\\n * the data.  In this variant of LZ, data is encoded as two types of chunk.\\n * Each chunk begins with a length L, encoded as a single ASCII digit from 1 to\\n * 9, followed by the chunk data, which is either:\\n *\\n * 1. Exactly L characters, which are to be copied directly into the\\n *    uncompressed data.\\n * 2. A reference to an earlier part of the uncompressed data.  To do this, the\\n *    length is followed by a second ASCII digit X.  Each of the L output\\n *    characters is a copy of the character X places before it in the\\n *    uncompressed data.\\n *\\n * For both chunk types, a length of 0 instead means the chunk ends\\n * immediately, and the next character is the start of a new chunk.  The two\\n * chunk types alternate, starting with type 1, and the final chunk may be of\\n * either type.  You are given a string as input.  Encode it using Lempel-Ziv\\n * encoding with the minimum possible output length.\\n *\\n * Usage: run cct/lzc.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const data = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(compress(data), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/lzc.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/lzc.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3b7d7389-e825-4013-95d0-4026ee134255\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/929669a4-22df-42a7-a611-d5765c49a034\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d97919b9-5b11-472c-8669-bd8a43500512\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d30c48b2-b288-4218-b2ec-1c516920bd74\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7a1eb759-8bfa-4e77-b35a-faf03df26955\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/152b9d5c-3049-48a4-8ffb-3a4ef8e3d323\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a9096232-66bb-47f8-b9c0-fdc2cc47c558\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/488728e3-121e-4c00-bc0f-de9013607d83\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1516820b-b990-4676-84f8-0466920426f4\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ff4b5cca-e7a1-4dfc-ba0e-7126cc3b9853\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bbf1c661-f6f5-4ac8-ac2e-e2ea63effa3d\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0d343f03-8f0b-4a72-8f5e-b4aef39853e6\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fa88f8c0-9573-4141-a21f-7fc71e49ceb4\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3993bbde-0897-433e-9de0-8b1167ddbebc\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d237a71a-6a7c-4a60-a84b-9975d51fd118\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/08f7b21d-2683-4d86-a118-51d82721cb71\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b835706e-09e4-45aa-860c-bd89319b476c\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/354eb8ff-1a9a-4f0c-95a4-e6add71ea2a8\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cda180f6-d3ad-41a1-8e92-d5e255e8e221\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/77c4131a-435a-4f53-bca5-ad3c297c4940\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e70286d4-d3d1-497e-bb13-66573c7fd8e1\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/982a4ffa-c30d-4bf3-b6e4-b567972e3562\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/52a48362-dcf5-4c55-83ca-2bf5f7bdedb1\",\"moduleSequenceNumber\":261},{\"filename\":\"/cct/lzc.js\",\"url\":\"blob:https://danielyxie.github.io/4164a2e7-0e02-4b7a-9a75-c2b572f5f518\",\"moduleSequenceNumber\":463}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":713,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { lzchunk } from \\\"/lib/constant/cct.js\\\";\\nimport { base } from \\\"/lib/constant/misc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Use a variant of the Lempel-Ziv (LZ) algorithm to decompress a string.  The\\n * string is assumed to follow the format\\n *\\n * C_1 C_2 C_3 ... C_n\\n *\\n * where C_i is the i-th chunk of the string.  Each chunk has two parts:\\n *\\n * (1) L := The length of an uncompressed portion of data.  The length L is an\\n *     integer between 1 and 9, inclusive.  The length number is the first part\\n *     of any chunk.\\n * (2) data := The chunk data, which is the second part of any chunk.  The\\n *     chunk data can be further decomposed into two types:\\n *     (a) Literal characters.  A chunk with this second part is denoted as\\n *         \\\"L<string>\\\", where <string> is a string of L characters.  We append\\n *         these L characters directly into the uncompressed string.  For\\n *         example, given the chunk \\\"3abc\\\", the digit \\\"3\\\" is the first part of\\n *         the chunk and the string \\\"abc\\\" is the second part.  The length 3,\\n *         together with the string, tells us to copy the first 3 characters of\\n *         the string and append the characters to the uncompressed data.  That\\n *         is, we append the string \\\"abc\\\" to our uncompressed data.\\n *     (b) An ASCII digit X.  A chunk having this second part is denoted as\\n *         \\\"LX\\\", where X is a decimal digit between 1 and 9, inclusive.  The\\n *         value of X tells us how many characters in the uncompressed string\\n *         to backtrack.  Going from right to left in the uncompressed string,\\n *         we traverse X locations, copy the character at the X-th location,\\n *         and append the character to our uncompressed string.  Repeat the\\n *         process as many times as necessary until we have appended L\\n *         characters.  For example, suppose we have the chunk \\\"53\\\" and our\\n *         (still incomplete) uncompressed string is \\\"abcd\\\".  The first part\\n *         \\\"5\\\" tells us how many characters to append to the uncompressed\\n *         string.  The second part \\\"3\\\" tells us to backtrack 3 positions in\\n *         the uncompressed string to locate the character to copy and append.\\n *         Here's how to obtain the first character to append.  Going from\\n *         right to left in the uncompressed string \\\"abcd\\\", we backtrack to the\\n *         3rd character, namely \\\"b\\\".  We copy this character and append it to\\n *         our uncompressed string, resulting in the new uncompressed string\\n *         \\\"abcdb\\\".  One down, four to go.  For our second character, we\\n *         backtrack 3 locations in the uncompressed string \\\"abcdb\\\" to arrive\\n *         at \\\"c\\\".  Copy and append this character to produce the new\\n *         uncompressed string \\\"abcdbc\\\".  Two down, three to go.  The third\\n *         character to copy and append is \\\"d\\\", resulting in the uncompressed\\n *         string \\\"abcdbcd\\\".  The fourth character we want is \\\"b\\\" and we now\\n *         have the uncompressed string \\\"abcdbcdb\\\".  Our fifth character is\\n *         \\\"c\\\" and our uncompressed string is \\\"abcdbcdbc\\\".\\n *\\n * The chunk type alternates and we always start with a chunk of the type\\n * L<string>.  The compressed data follows the format\\n *\\n * L<string> LX L<string> LX ...\\n *\\n * If L := 0, the chunk ends immediately and we start a new chunk of the type\\n * different from the previous type.  A portion of the compressed data might be\\n *\\n * ... L<string> 0 L<string> ...\\n *\\n * or, as another example,\\n *\\n * ... LX 0 LX ...\\n *\\n * The above rules help us to make sense of the compressed data \\\"312312021\\\".\\n * We have these chunks: \\\"3123\\\", \\\"12\\\", \\\"0\\\", \\\"21\\\".  The uncompressed string is\\n * \\\"123222\\\".  Refer to the following for more details on the LZ algorithm.\\n *\\n * [1] J. Ziv and A. Lempel.  A universal algorithm for sequential data\\n *     compression.  IEEE Transactions on Information Theory, volume 23,\\n *     issue 3, pp.337--343, 1977.\\n *     DOI: 10.1109/TIT.1977.1055714\\n * [2] Colt McAnlis and Aleks Haecky.  Understanding Compression: Data\\n *     Compression for Modern Developers.  O'Reilly, 2016.\\n * [3] The Hitchhiker's Guide to Compression\\n *     https://go-compression.github.io/\\n *\\n * @param data We want to decompress this string.  The string is assumed to be\\n *     the output of a variant of the LZ compression algorithm.  Cannot be an\\n *     empty string.\\n * @return The decompressed string corresponding to the input data.\\n */\\nfunction decompress(data) {\\n    assert(data.length > 0);\\n    // Always start with the chunk format L<string>.\\n    let chunk_type = lzchunk.LS;\\n    // Where are we in the compressed string?\\n    let i = 0;\\n    // The uncompressed string.\\n    let result = \\\"\\\";\\n    while (i < data.length) {\\n        const ell = parseInt(data[i], base.DECIMAL);\\n        // Is this chunk of type L<string>?\\n        if (lzchunk.LS === chunk_type) {\\n            // Do we end the chunk now?\\n            if (end_now(ell)) {\\n                i++;\\n                chunk_type = lzchunk.LX;\\n                continue;\\n            }\\n            // Copy the following L characters and append them to the\\n            // uncompressed string.\\n            const start = i + 1;\\n            const end = start + ell;\\n            result = result.concat(data.slice(start, end));\\n            chunk_type = lzchunk.LX;\\n            i = end;\\n            continue;\\n        }\\n        // This chunk is of type LX, which has 2 characters.\\n        assert(lzchunk.LX === chunk_type);\\n        // Do we end the chunk now?\\n        if (end_now(ell)) {\\n            i++;\\n            chunk_type = lzchunk.LS;\\n            continue;\\n        }\\n        // Backtrack X characters in the uncompressed string.  Copy and append\\n        // the X-th character to the uncompressed string.  Repeat L times.\\n        const x = parseInt(data[i + 1], base.DECIMAL);\\n        for (let j = 0; j < ell; j++) {\\n            const k = result.length - x;\\n            result = result.concat(result[k]);\\n        }\\n        chunk_type = lzchunk.LS;\\n        i += 2;\\n    }\\n    return result;\\n}\\n\\n/**\\n * Whether to end a chunk now.  Each chunk is either of the formats L<string>\\n * or LX.  Here, L is a decimal digit between 0 and 9, inclusive.\\n *\\n * @param ell The first part of any chunk, denoted as L.  Assumed to be a\\n *     decimal digit between 0 and 9, inclusive.\\n * @return true if a chunk ends now; false otherwise.\\n */\\nfunction end_now(ell) {\\n    return ell === 0;\\n}\\n\\n/**\\n * Compression II: LZ Decompression: Lempel-Ziv (LZ) compression is a data\\n * compression technique that encodes data using references to earlier parts of\\n * the data.  In this variant of LZ, data is encoded as two types of chunk.\\n * Each chunk begins with a length L, encoded as a single ASCII digit from 1 to\\n * 9, followed by the chunk data, which is either:\\n *\\n * 1. Exactly L characters, which are to be copied directly into the\\n *    uncompressed data.\\n * 2. A reference to an earlier part of the uncompressed data.  To do this, the\\n *    length is followed by a second ASCII digit X.  Each of the L output\\n *    characters is a copy of the character X places before it in the\\n *    uncompressed data.\\n *\\n * For both chunk types, a length of 0 instead means the chunk ends\\n * immediately, and the next character is the start of a new chunk.  The two\\n * chunk types alternate, starting with type 1, and the final chunk may be of\\n * either type.  You are given an LZ-encoded string.  Decode it and output the\\n * original string.\\n *\\n * Usage: run cct/lzd.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const data = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(decompress(data), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/lzd.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/lzd.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ee2eb900-49e6-4ee8-b4d0-d1093d66de17\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/94207736-2426-4316-9033-d0f0314376a2\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7a60acf6-4cca-4c24-8b20-a6d969d1f35f\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/14358395-7ceb-4cbf-bca5-f0415676a3ec\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d08a21f2-743d-4b11-856f-49697039fcda\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1e1a0f9a-4976-4db1-80e7-7600c8caf0af\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/466f84ec-7207-427f-a444-46d5241e339e\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cdc81f00-6041-4dee-8e61-1e915b39f663\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/24c83465-93f3-474d-b957-476048a609a2\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7ae9a914-c0f6-448c-b467-57b6f41f6a3b\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/cct.js\",\"url\":\"blob:https://danielyxie.github.io/baa3661b-63d4-4630-aa90-87f59138b905\",\"moduleSequenceNumber\":68963},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0926bed1-85c8-49db-8422-81ea7c5db371\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/85ecf9d6-b70c-441b-bb7e-d151ed4bf7ea\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/314060e1-1199-4d36-b535-9bbc274053cf\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7b34c400-272e-4536-8124-4c7f3ee7deeb\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0596ee36-4b8e-4eff-b78e-eea1d24e075c\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0e166233-78bb-46a3-bcd5-96d9469aaab1\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/42f71b7b-5afb-4dc2-8a03-21867d80e264\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9da108c1-632f-4033-8020-819d28432f0c\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cf162d2c-44d3-4534-9236-17e14fe975a4\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cc09c756-4b94-4b8a-b245-e9d9d92c7f17\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c6594c80-6db8-4442-8440-3c3674ca636a\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b31abd4c-c59d-493d-a41b-ccfc60b0784d\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7e9e1269-5755-4ec6-9fa4-effcdc60e5da\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2623dd32-d43a-4c28-b5ea-fc56ff907d23\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cb6b4605-7e13-46df-9a70-f6d11f5d5f53\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5bd27138-a5e1-47dd-b62b-df02fc6893e9\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a8eed302-f7ea-4328-835f-64d6611a9b85\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9a2acefa-f986-4583-ae4a-20d25315723c\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b4a9ee25-e9e8-41ff-936d-e226e7d5f2ad\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/0b1e5645-2c6e-4e5c-9056-814cd285748a\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6efcbcb1-e8de-46d3-96dd-25a51a443523\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a6bc1677-62bc-4822-8334-8933777b69d7\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/6c7b0d74-0de1-4619-8582-8411866af684\",\"moduleSequenceNumber\":68960},{\"filename\":\"/cct/lzd.js\",\"url\":\"blob:https://danielyxie.github.io/0062303a-46f4-40c6-bd42-cf3f3e398450\",\"moduleSequenceNumber\":73718}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":714,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { base } from \\\"/lib/constant/misc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * All valid mathematical expressions, each of which evaluates to a target\\n * number.  Each expression results from inserting zero, one, or more of the\\n * following operators between decimal digits: addition (+), subtraction (-),\\n * multiplication (*).\\n *\\n * @param digit A string of decimal digits.  Cannot be empty.\\n * @param target An expression must evaluate to this number.\\n * @returns An array of strings, each of which is an expression that evaluates\\n *     to the target number.\\n */\\nfunction all_expressions(digit, target) {\\n    assert(digit.length > 0);\\n    return Array.from(expressions(digit, target));\\n}\\n\\n/**\\n * Generate all mathematical expressions that evaluate to a target value.  An\\n * expression can use each of these symbols zero, one, or more times:\\n *\\n * (1) addition (+)\\n * (2) subtraction (-)\\n * (3) multiplication (*)\\n *\\n * The algorithm is due to Janne Karila, who provided a Python implementation at\\n *\\n * https://codereview.stackexchange.com/a/163303\\n *\\n * This generator function is a JavaScript translation of Karila's Python code.\\n *\\n * @param digit A string containing a bunch of decimal digits.\\n * @param target Any mathematical expression created from the given digits must\\n *     evaluate to this number.\\n * @param k The multiplication factor.\\n */\\nfunction* expressions(digit, target, k = 1) {\\n    for (let i = 1; i < digit.length; i++) {\\n        // For any given index i in the digit string, we split the string into\\n        // 2 parts:\\n        //\\n        // (1) left := The left part of the digit string consists of all digits\\n        //     from index 0 up to and including index i - 1.  We can think of\\n        //     the left part as already been evaluated, searched, or\\n        //     considered.  The left part is therefore the prefix upon which\\n        //     new expressions can be built.\\n        // (2) right := The right part of the digit string consists of all\\n        //     digits from index i onward.  Think of the right part as digits\\n        //     we have yet to consider.  We use digits in the right part to\\n        //     construct longer expressions based upon the left part.\\n        const left = digit.slice(0, i);\\n        const right = digit.slice(i);\\n        const n = k * parseInt(left, base.DECIMAL);\\n        for (const e of expressions(right, target, n)) {\\n            yield `${left}*${e}`;\\n        }\\n        for (const e of expressions(right, target - n)) {\\n            yield `${left}+${e}`;\\n        }\\n        for (const e of expressions(right, target - n, -1)) {\\n            yield `${left}-${e}`;\\n        }\\n        // Do we have a leading zero?\\n        if (left === \\\"0\\\") {\\n            return;\\n        }\\n    }\\n    if (k * parseInt(digit, base.DECIMAL) === target) {\\n        yield digit;\\n    }\\n}\\n\\n/**\\n * Find All Valid Math Expressions: You are given an array containing two\\n * elements.  The first element is a string that contains only digits between\\n * 0 and 9.  The second element is a target number.  Return all possible ways\\n * you can add the +, -, and * operators to the string of digits such that it\\n * evaluates to the target number.  The answer should be provided as an array\\n * of strings containing the valid expressions.\\n * NOTE: Numbers in an expression cannot have leading 0s.\\n * NOTE: The order of evaluation expects script operator precedence.\\n *\\n * Example 1:\\n * Input: digits = \\\"123\\\", target = 6\\n * Output: [1+2+3, 1*2*3]\\n *\\n * Example 2:\\n * Input: digits = \\\"105\\\", target = 5\\n * Output: [1*0+5, 10-5]\\n *\\n * In Example 1, we have two possible valid solutions.  Note that the\\n * expression \\\"1*-2*-3\\\" also evaluates to 6.  From the problem description, we\\n * infer the following restrictions on any solution we output.\\n *\\n * (1) Each decimal digit is non-negative.\\n * (2) We are not allowed to flip the sign of a digit.  For example, in the\\n *     expression \\\"1*-2*-3\\\" we flipped the sign of the digit \\\"2\\\" from positive\\n *     to negative.  Thus the expression \\\"1*-2*-3\\\" is an invalid solution,\\n *     although it evaluates to the target number.\\n * (3) We are not allowed to insert the operator \\\"-\\\" at index 0 of the digit\\n *     string.\\n * (4) The digit string does not have \\\"0\\\" at index 0.\\n * (5) An operand can be zero, but it cannot have a leading zero.  For example,\\n *     an expression such as \\\"1+0+3\\\" is accepted, but the expression \\\"1+03\\\" is\\n *     invalid because the operand \\\"03\\\" has a leading zero.\\n *\\n * Usage: run cct/maths.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [string, target] = ns.codingcontract.getData(cct, host);\\n    const solution = all_expressions(string, target);\\n    const result = ns.codingcontract.attempt(solution, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/maths.txt\\\";\\n        const data = `${string}, ${target}`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/maths.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c4d3232d-d07f-4106-b8f0-6a5f0fa8d556\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d782f0cc-9362-4a82-9eae-a923e092695a\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/38829686-90fe-42e3-ae96-3f794704a047\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fe5a4b93-927f-443e-b20a-e7096ce09854\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e13abbd0-e560-4ff4-9946-bc710b136af2\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8ab3d135-cdae-4faf-9226-d6c0dbdf3843\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4e2db2da-0f4a-47b1-9994-eff082c6710d\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7ecf6148-5c3d-4cf3-ad88-b35e2f07861d\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2d12d1e9-2627-4031-b7c3-e774a9ff1733\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/27985577-bf5f-424d-bed9-a2a0701c1bfb\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8f576b5b-0899-421d-97f4-45cff960f4d4\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7d310239-57cc-40a9-b09a-e3c2ee3d1297\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/067385b4-1894-434c-a53d-c41e06210c1c\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/439111ae-00bf-4c5d-ba0c-a36a95f8b56d\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/88caee9d-9769-425b-8fec-93f7e8349b92\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9ee9351d-e41c-47e4-9235-8617125e8a2c\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2248d5e1-bca3-4d51-b6ac-6fc50b56826d\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/85c26474-2e28-43e1-be6b-5983a702239e\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fc375257-fe0c-457f-85ec-126b704b3e9d\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b5e99de5-8d79-429a-888c-7e0ac714c5a1\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fbe11eab-fcfa-4ab0-9912-37548eea2de7\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7197bf67-319d-43f5-a0cf-d993b78be571\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e641b310-8d63-4e83-9820-d2e9198a9d18\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/33d693ae-d803-4855-a09c-cebe78669db9\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c40a02de-5937-4bff-8cc7-2dbbcce3c986\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e1195722-d3de-4933-94bd-f09903937998\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5e521288-8053-495f-be15-20b56cf97692\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/568e73c6-c378-4d2c-a103-f77b6f2ccf08\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5e9011e8-e06d-417b-8d98-61ff34e03e91\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/af7187f9-98b2-4de5-b15c-57c9d4b71983\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d78a4ac1-1bcc-45f8-b6fa-cf45b51b8f95\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8ae0c46d-e5f0-4439-b4da-1e769ad49c7d\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/15b78a47-f428-41e9-bd13-6836be84ab51\",\"moduleSequenceNumber\":68960},{\"filename\":\"/cct/maths.js\",\"url\":\"blob:https://danielyxie.github.io/6581f7e9-f227-4fef-9c74-1975039d8476\",\"moduleSequenceNumber\":101847}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":715,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { parenthesis } from \\\"/lib/constant/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether the parentheses in the given expression are balanced.  An empty\\n * string does not have parentheses, hence its parentheses are unbalanced.\\n *\\n * @param expression A string consisting of parentheses and other characters.\\n *     The parentheses in this string are possibly unbalanced.  Cannot be an\\n *     empty string.\\n * @return true if the parentheses in the given expression are balanced;\\n *     false otherwise.\\n */\\nfunction is_balanced(expression) {\\n    if (expression.length === 0) {\\n        return bool.INVALID;\\n    }\\n    // The stack data structure is perfect for this problem.\\n    const stack = [];\\n    for (const c of expression) {\\n        // Is this character the starting parenthesis?\\n        if (parenthesis.OPEN === c) {\\n            stack.push(c);\\n            continue;\\n        }\\n        // Is this character the ending parenthesis?\\n        if (parenthesis.CLOSE === c) {\\n            // We have an ending parenthesis, but the stack is empty.\\n            if (stack.length === 0) {\\n                return bool.INVALID;\\n            }\\n            // This ending parenthesis must be matched with an opening\\n            // parenthesis at the top of the stack.\\n            if (parenthesis.OPEN === stack[stack.length - 1]) {\\n                stack.pop();\\n                continue;\\n            }\\n            // We encounter a closing parenthesis, but the top of the stack\\n            // does not contain an opening parenthesis.\\n            return bool.INVALID;\\n        }\\n    }\\n    // Every opening parenthesis should be matched with a closing parenthesis.\\n    // If the stack has zero elements, then the expression is balanced.\\n    return stack.length === 0;\\n}\\n\\n/**\\n * Whether a character represents an opening or closing parenthesis.\\n *\\n * @param c A character.\\n * @return true if the given character is a parenthesis; false otherwise.\\n */\\nfunction is_parenthesis(c) {\\n    assert(c.length === 1);\\n    if (parenthesis.OPEN === c || parenthesis.CLOSE === c) {\\n        return true;\\n    }\\n    return false;\\n}\\n\\n/**\\n * Slice an expression by removing a character at the given index.\\n *\\n * @param expr We want to prune one character from this expression.  The\\n *     expression is represented as a string.\\n * @param i Remove the character expr[i] at index i.\\n * @return A sub-expression obtained by removing from expr the character\\n *     at index i.  We do not modify the given expression.\\n */\\nfunction slice(expr, i) {\\n    // Sanity checks.\\n    assert(expr.length > 0);\\n    assert(i >= 0);\\n    assert(i < expr.length);\\n    // Remove the character at index i.\\n    return expr.slice(0, i) + expr.slice(i + 1, expr.length);\\n}\\n\\n/**\\n * Sanitize parentheses in an expression by removing the minimum number of\\n * parentheses such that the resulting expression has balanced parentheses.\\n * The problem can be considered from a combinatorial perspective.  We\\n * determine the minimum number k of parentheses to remove.  Let n be the\\n * number of parentheses in the expression, including both opening and closing\\n * parentheses.  We find all possible k-combinations of the n parentheses.  For\\n * each k-combination, we remove the corresponding parentheses from the\\n * expression and let the resulting expression be expr.  If expr has balanced\\n * parentheses, then add expr to our set of solutions.  The difficult part of\\n * this method is choosing an algorithm for generating all k-combinations from\\n * a set of n objects.  Some algorithms run in exponential time while others\\n * run in factorial time, which is worse than exponential time.  Refer to these\\n * pages for more details:\\n *\\n * https://medium.com/enjoy-algorithm/find-all-possible-combinations-of-k-numbers-from-1-to-n-88f8e3fad33c\\n * https://stackoverflow.com/questions/127704/algorithm-to-return-all-combinations-of-k-elements-from-n\\n *\\n * A simpler method consists of scanning the expression one character at a\\n * time.  For each index i, if the character at index i is a parenthesis, we\\n * form a new expression by removing the character at index i in the current\\n * expression.  Thus we have an array of new expressions, each constructed by\\n * removing one parenthesis from the current expression.  Test each of these\\n * new expressions to see whether any of them have balanced parentheses.  We\\n * have two cases:\\n *\\n * (1) At least one of the new expressions has balanced parentheses.  Our\\n *     solution set consists of all new expressions that have balanced\\n *     parentheses.\\n * (2) None of the new expressions have balanced parentheses.  Apply the above\\n *     scanning algorithm to these new expressions and repeat the above\\n *     process.\\n *\\n * The above method follows a pattern similar to breath-first search.  As soon\\n * as we encounter a sub-expression that has balanced parentheses, we no longer\\n * need to remove one character to form new sub-expressions.\\n *\\n * @param string An expression containing parentheses and other characters.\\n *     The parentheses in the expression are possibly unbalanced.\\n * @return An array of strings.  Each string has balanced parentheses.  We\\n *     removed the same number of parentheses to result in each balanced\\n *     expression.\\n */\\nfunction sanitize(string) {\\n    assert(string.length > 0);\\n    // Test the expression at the start of this array.\\n    const queue = [];\\n    queue.push(string);\\n    // All expressions and sub-expressions we have considered.\\n    const seen = new Set();\\n    seen.add(string);\\n    // All expressions that have balanced parentheses.\\n    const result = [];\\n    // Whether we need to prune one parenthesis from an expression to\\n    // create a new sub-expression.\\n    let prune = true;\\n    // Use a pattern similar to breath-first search to test expressions and\\n    // their sub-expressions.  Let exprA and exprB be expressions.  We consider\\n    // them as nodes in a directed graph.  If exprB can be obtained by removing\\n    // one parenthesis from exprA, then there is a directed edge from exprA\\n    // to exprB.\\n    while (queue.length > 0) {\\n        // Get the first element of the queue.\\n        const expr = queue.shift();\\n        // Does this expression have balanced parentheses?\\n        if (is_balanced(expr)) {\\n            result.push(expr);\\n            // We have removed enough number of parentheses to result in at\\n            // least one sub-expression having balanced parentheses.  No more\\n            // pruning needed.\\n            prune = false;\\n        }\\n        // Do we need to prune a parenthesis from the current sub-expression?\\n        if (!prune) {\\n            continue;\\n        }\\n        // Prune a parenthesis from the current expression.  Each sub-expression\\n        // is obtained by removing a character at index i, provided that the\\n        // character is a parenthesis.\\n        for (let i = 0; i < expr.length; i++) {\\n            if (!is_parenthesis(expr[i])) {\\n                continue;\\n            }\\n            const sub_expr = slice(expr, i);\\n            if (seen.has(sub_expr)) {\\n                continue;\\n            }\\n            queue.push(sub_expr);\\n            seen.add(sub_expr);\\n        }\\n    }\\n    return result;\\n}\\n\\n/**\\n * Sanitize Parentheses in Expression: Given a string with parentheses and\\n * letters, remove the minimum number of invalid parentheses in order to\\n * validate the string.  If there are multiple minimal ways to validate the\\n * string, provide all of the possible results.  The answer should be provided\\n * as an array of strings.  If it is impossible to validate the string, the\\n * result should be an array with only an empty string.\\n *\\n * This is essentially the balanced brackets problem.  The twist is that we\\n * must remove the minimum number of parentheses to balance the parentheses.\\n *\\n * Usage: run cct/parenthesis.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const expression = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(sanitize(expression), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/parenthesis.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, expression);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/parenthesis.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9e2cb2bd-2998-4030-801e-23d25630e0d4\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d8f8e09f-8aa4-4b55-94ad-2ddf63a8abdb\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8368508f-9de6-4626-bc43-2ad7f3b57c73\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/64473e25-3d87-43b9-9a22-a38459c8af8f\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/aebf0cef-d706-46e8-be0e-6a53176868ce\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/54c2f0d6-1505-4b0d-b088-3d3329914ac8\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/80fdacbc-0ac1-47ad-a0ae-91dca30e88de\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3faafc05-f343-4525-b3de-a003ea1db860\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4c59f208-f656-4e34-a955-fef422d8b199\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/cct.js\",\"url\":\"blob:https://danielyxie.github.io/511f5e74-70c5-4e10-9ddc-c5254c998631\",\"moduleSequenceNumber\":68963},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/03dc6d41-caf8-4d97-9b6a-37217cd08283\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/de18a44b-26ac-422f-bfd0-fdc8215aaa9d\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/65f1e05e-524e-4751-a53a-4691ce2f0624\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0aeccdbf-7cbb-4c43-8d6f-772c48acddc0\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b618b2af-a738-4296-ad8c-580ab8fe9a07\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1857b293-6273-479b-85af-98d0feae3e0c\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/71628d0d-3d80-4fea-8c25-2bd05f8aaef0\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bcc6542e-2612-41d3-a73f-e5735bec97e9\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f4835d82-92be-4c6b-9c5c-024aceb87e62\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/540b4445-c597-4087-90ff-74071590c498\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ef6fcd8d-0a85-4b31-a633-4b0b2bb5ca90\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/088e1bad-48ef-41ae-b60b-16f3062542b0\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0c3da29f-578d-4b2e-a7f3-91833094483e\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4ed45b60-aef5-453f-b341-362678594b18\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/97136387-f1ec-40bb-9eea-1adfd30011e9\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7454b037-ee38-45d4-9f28-7ea2b6533221\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/35444b1a-d56c-4344-971f-db5e24a8cd4a\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9f4aac44-407f-44e6-8b3f-ea5307ad56f6\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/74fac32d-3604-487f-bab7-8b9f9c08d39a\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4688b717-9782-4956-9914-e2c825eb6891\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/5210b3f7-a657-447b-83db-aea97e97f38f\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/829c84f5-21a4-4217-9c9a-ede7715adef1\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fbb2353a-59e0-4000-bc07-4e74f4b00c08\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/c278ef4e-dfc2-42f8-8959-ad261592320a\",\"moduleSequenceNumber\":68960},{\"filename\":\"/cct/parenthesis.js\",\"url\":\"blob:https://danielyxie.github.io/49993b11-5aa7-4dd8-965e-274957aff8ef\",\"moduleSequenceNumber\":137889}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":716,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The largest prime factor of a positive integer.\\n *\\n * @param n A positive integer greater than 1.\\n * @return The largest prime factor of the given integer.\\n */\\nfunction max_prime_factor(n) {\\n    // Sanity checks.\\n    assert(n > 1);\\n    assert(Number.isSafeInteger(n));\\n    // Determine the largest prime factor.\\n    let k = Number(n);\\n    let p = k;\\n    // Divide n by the prime 2.\\n    while (k % 2 === 0) {\\n        k /= 2;\\n        p = 2;\\n    }\\n    // Use trial division to divide n by increasingly larger primes.  Start with\\n    // the next higher prime, i.e. 3.\\n    let i = 3;\\n    const max = Math.ceil(Math.sqrt(n));\\n    while (i <= max) {\\n        if (i > Math.sqrt(k)) {\\n            return k;\\n        }\\n        // The number i is an odd integer.  If i is a factor of k, then i is the\\n        // highest prime factor of n so far.\\n        while (k % i === 0 && k > 1) {\\n            k /= i;\\n            p = i;\\n        }\\n        i += 2;\\n    }\\n    return p;\\n}\\n\\n/**\\n * Find Largest Prime Factor: Given a number, find its largest prime\\n * factor.  A prime factor is a factor that is a prime number.\\n *\\n * Determine the largest prime factor of an integer.  See Wikipedia for\\n * more details:\\n *\\n * https://en.wikipedia.org/wiki/Integer_factorization\\n *\\n * Usage: run cct/prime.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const n = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(max_prime_factor(n), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/prime.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, n);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/prime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0f7e2e6e-d23e-4f04-a801-0d0bb7af38c7\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f39069d4-df3c-4de2-92bc-81ebc3168bfc\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c476be33-8987-4535-8167-823c0e29f045\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e2fc7d0d-895c-4437-806e-df81cb52e6d5\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/546a20b3-5aa7-48aa-8281-3c369e5b69cc\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d846ba86-d236-48ab-b5c2-185eb82ee82b\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fcfee1fd-2a7f-4c67-bb03-f3064124f119\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/02651c36-7412-4a58-b5b1-65156f09e2c2\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6772ec24-1db4-4ede-b5f2-3042554b455a\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/92f95e3c-f4c9-444b-89d2-8ace514c8a95\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e9189f82-722f-426d-9af1-2e0afc860e70\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fd564bc1-4c0d-4754-9591-d40d65ec9fa3\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5f42ba74-f15e-4497-bd7f-82a800457fa4\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f4564bf1-ab8a-4ed0-884c-8582e5d6ea39\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f1add663-2db1-441a-acc9-aeb1ecc6811d\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b13e228a-f291-41cb-bd80-90e9c46edabe\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3a04375d-0cd2-4be2-8974-b1122f678fd0\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2e5bb5c0-4546-4a30-9144-7528a1091d18\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d5aed8c3-f0fd-494a-9346-3949b8b0e5ed\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/250bf553-e563-42f1-afa2-a0fde21145c3\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6820f044-0b7f-4125-8928-a4ef2cf7560d\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/224f5d3c-237e-45db-a394-3fb2e2c2ceb2\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/535b6475-649e-4ffb-a83e-53d2cb424636\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9221cda0-d8c8-45da-bc23-60149cda5663\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0be0c840-75a4-4a1e-b6de-783a61cb64cd\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8a87b1d0-83e0-44b5-94a2-e82be7f43121\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e5526a64-d492-41a0-b617-9319b944b41e\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bda9affa-e221-4317-b990-3168a8a40ef7\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/cf0737f0-d42a-41c1-9537-caf1c9889cf8\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/993f54e6-a03f-4c07-a4f3-9cde2b6258e0\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4da9ad9c-7edd-4a2d-ba3b-9978da447721\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/d0057a43-4b83-412d-a18f-d21d978d6da1\",\"moduleSequenceNumber\":261},{\"filename\":\"/cct/prime.js\",\"url\":\"blob:https://danielyxie.github.io/9707e303-5e53-464c-afd3-6a5050be9b3d\",\"moduleSequenceNumber\":471}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":717,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Encode a string that consists of the same character.\\n *\\n * @param c A character.\\n * @param n The run-length of the given character.\\n * @return A run-length encoding of the given character.\\n */\\nfunction encode(c, n) {\\n    assert(c.length === 1);\\n    assert(n > 0);\\n    let k = n;\\n    const max = 9;\\n    if (k <= max) {\\n        return `${k}${c}`;\\n    }\\n    // A run-length of more than 9 is split into multiple runs.\\n    const s = [];\\n    do {\\n        s.push(`${max}${c}`);\\n        k -= max;\\n    } while (k > max);\\n    s.push(`${k}${c}`);\\n    return s.join(\\\"\\\");\\n}\\n\\n/**\\n * The run-length encoding (RLE) of a string.\\n *\\n * @param string We want to compress this string by means of run-length\\n *     encoding.\\n * @return The RLE of the given string.\\n */\\nfunction rle(string) {\\n    const str = string;\\n    let n = 1;\\n    let c = str[0];\\n    const e = [];\\n    const lastidx = string.length - 1;\\n    for (let i = 1; i < str.length; i++) {\\n        // Is this character the same as the previous character?\\n        if (c === str[i]) {\\n            n++;\\n            // Are we at the end of the string?\\n            if (i === lastidx) {\\n                e.push(encode(c, n));\\n                break;\\n            }\\n            continue;\\n        }\\n        // The current character is different from the previous character.\\n        e.push(encode(c, n));\\n        n = 1;\\n        c = str[i];\\n        // Are we at the end of the string?\\n        if (i === lastidx) {\\n            e.push(encode(c, n));\\n        }\\n    }\\n    return e.join(\\\"\\\");\\n}\\n\\n/**\\n * Compression I: RLE Compression: Run-length encoding (RLE) is a data\\n * compression technique which encodes data as a series of runs of a repeated\\n * single character.  Runs are encoded as a length, followed by the character\\n * itself.  Lengths are encoded as a single ASCII digit.  Runs of 10 characters\\n * or more are encoded by splitting them into multiple runs.  You are given a\\n * string as input.  Encode it using run-length encoding with the minimum\\n * possible output length.\\n *\\n * Usage: run cct/rle.js [cct] [hostname]\\n *\\n * @param ns\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const string = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(rle(string), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/rle.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, string);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/rle.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fcf823b8-6cd6-41e0-bfe7-7cdac05c5e29\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4bd0a394-ee46-4b13-8d0c-514b4161be44\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/18fbdbd8-4063-40df-87d2-b448ba2abd2c\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5317b312-5118-4d6a-9912-070e9ec0e28f\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f876003d-e7d3-4c0f-b143-783c3277a112\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ed6095b6-b220-44af-b5f0-d721b09eac78\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/76ccc4d1-7d4f-449d-9bc0-1d27811e4eb8\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/21e79369-3725-48c8-87ea-7310bf5d061d\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8d9cd027-e0f1-4179-8986-41496be72931\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/931954b2-f629-4e93-bda0-0d3137109bf9\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e002bf9f-781f-4eba-b107-190af8b2cb70\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1fb787f5-2ad0-49e1-b17a-eaa8611a92ae\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f11c54a4-c8e5-4786-b6c4-ab159b4d2a48\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/44c46cd3-762d-4934-9753-e9bdd996b8c0\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/21a8f841-fa5e-446f-996a-08e3e2a90651\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/15ddf1f9-1281-4442-a8a0-fb833f2cdcc5\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/093797e1-b5bc-412d-8790-c1ef58117034\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c1dac521-38af-4a94-a91e-d74e17fecb4c\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f87e45e2-040e-4c6f-82ea-6e63c8b9d21e\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2c37deb7-059a-44ff-b426-c75a559da9d0\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/362cb7fa-b891-4e08-b635-9372dd862716\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e9efa5f3-f396-43d7-872f-34dc18041499\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/96c604c4-1d0a-41cd-80cd-cdb7de805ee0\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fb954a87-8be1-43fe-b678-ab106ee4c864\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b6b86fcb-6beb-4fec-9d4b-6c3f6b086bd6\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8cd99b3f-c031-42b1-8ab6-b7f0bd60c8cc\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2a1e3e02-9607-4895-ab23-e136cdf63b70\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0f8ecc68-63a1-4dee-83b4-9d4d7af13ce5\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/248d4c3d-c6c0-4ac0-b8e1-0c029617a924\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c7799804-3d36-4e02-93b6-16ee91b95c09\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7139ab86-c85b-4104-9842-73a330d15264\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/a0ca9bb9-0f11-4984-8808-2d8fe2c3a963\",\"moduleSequenceNumber\":68960},{\"filename\":\"/cct/rle.js\",\"url\":\"blob:https://danielyxie.github.io/b61979e8-d0e0-4a6c-9c86-22a67c7e503c\",\"moduleSequenceNumber\":123631}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":718,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { cct } from \\\"/lib/constant/cct.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { network } from \\\"/lib/network.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\n\\n/**\\n * Do we have enough free RAM on the home server to run the given script?\\n *\\n * @param ns The Netscript API.\\n * @param script We want to run this script on our home server.\\n * @return true if enough free RAM is available to execute the script;\\n *     false otherwise.\\n */\\nfunction can_run_script(ns, script) {\\n    const server = new Server(ns, home);\\n    return server.can_run_script(script);\\n}\\n\\n/**\\n * Solve a coding contract.\\n *\\n * @param ns The Netscript API.\\n * @param fname The file name of the coding contract.\\n * @param host The hostname of the server on which the coding contract is\\n *     located.\\n */\\nfunction solve(ns, fname, host) {\\n    const nthread = 1;\\n    const type = ns.codingcontract.getContractType(fname, host);\\n    // Determine the type of the coding contract and set the appropriate\\n    // solution script.\\n    let script = \\\"\\\";\\n    const prefix = \\\"/cct/\\\";\\n    switch (type) {\\n        case \\\"Algorithmic Stock Trader I\\\":\\n            script = `${prefix}trader.js`;\\n            break;\\n        case \\\"Algorithmic Stock Trader II\\\":\\n            script = `${prefix}trader2.js`;\\n            break;\\n        case \\\"Algorithmic Stock Trader III\\\":\\n            script = `${prefix}trader3.js`;\\n            break;\\n        case \\\"Algorithmic Stock Trader IV\\\":\\n            script = `${prefix}trader4.js`;\\n            break;\\n        case \\\"Array Jumping Game\\\":\\n            script = `${prefix}jump.js`;\\n            break;\\n        case \\\"Array Jumping Game II\\\":\\n            script = `${prefix}jump2.js`;\\n            break;\\n        case \\\"Compression I: RLE Compression\\\":\\n            script = `${prefix}rle.js`;\\n            break;\\n        case \\\"Compression II: LZ Decompression\\\":\\n            script = `${prefix}lzd.js`;\\n            break;\\n        case \\\"Compression III: LZ Compression\\\":\\n            script = `${prefix}lzc.js`;\\n            break;\\n        case \\\"Encryption I: Caesar Cipher\\\":\\n            script = `${prefix}caesar.js`;\\n            break;\\n        case \\\"Encryption II: Vigenère Cipher\\\":\\n            script = `${prefix}vigenere.js`;\\n            break;\\n        case \\\"Find All Valid Math Expressions\\\":\\n            script = `${prefix}maths.js`;\\n            break;\\n        case \\\"Find Largest Prime Factor\\\":\\n            script = `${prefix}prime.js`;\\n            break;\\n        case \\\"Generate IP Addresses\\\":\\n            script = `${prefix}ip.js`;\\n            break;\\n        case \\\"HammingCodes: Encoded Binary to Integer\\\":\\n            script = `${prefix}hamming2.js`;\\n            break;\\n        case \\\"HammingCodes: Integer to Encoded Binary\\\":\\n            script = `${prefix}hamming.js`;\\n            break;\\n        case \\\"Merge Overlapping Intervals\\\":\\n            script = `${prefix}interval.js`;\\n            break;\\n        case \\\"Minimum Path Sum in a Triangle\\\":\\n            script = `${prefix}triangle.js`;\\n            break;\\n        case \\\"Proper 2-Coloring of a Graph\\\":\\n            script = `${prefix}bipartite.js`;\\n            break;\\n        case \\\"Sanitize Parentheses in Expression\\\":\\n            script = `${prefix}parenthesis.js`;\\n            break;\\n        case \\\"Shortest Path in a Grid\\\":\\n            script = `${prefix}grid3.js`;\\n            break;\\n        case \\\"Spiralize Matrix\\\":\\n            script = `${prefix}spiral.js`;\\n            break;\\n        case \\\"Subarray with Maximum Sum\\\":\\n            script = `${prefix}subarray.js`;\\n            break;\\n        case \\\"Total Ways to Sum\\\":\\n            script = `${prefix}sum.js`;\\n            break;\\n        case \\\"Total Ways to Sum II\\\":\\n            script = `${prefix}sum2.js`;\\n            break;\\n        case \\\"Unique Paths in a Grid I\\\":\\n            script = `${prefix}grid.js`;\\n            break;\\n        case \\\"Unique Paths in a Grid II\\\":\\n            script = `${prefix}grid2.js`;\\n            break;\\n        default:\\n            script = \\\"\\\";\\n            break;\\n    }\\n    // No script to run, possibly because there are no coding contracts on any\\n    // of the world servers.\\n    if (script.length < 1) {\\n        return;\\n    }\\n    // Run the appropriate script to solve the coding contract.\\n    if (can_run_script(ns, script)) {\\n        ns.exec(script, home, nthread, fname, host);\\n        return;\\n    }\\n    // prettier-ignore\\n    const err_msg = `${host\\n    }: ${\\n        fname\\n    }: No free RAM to run ${\\n        script\\n    } on server ${\\n        home}`;\\n    ns.print(err_msg);\\n}\\n\\n/**\\n * Find coding contracts on world servers.  This script essentially searches\\n * the network of world servers to find coding contracts.\\n *\\n * Usage: run cct/solver.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getServerUsedRam\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n\\n    const server = network(ns);\\n    server.push(home);\\n    // Continuously search for coding contracts.  Solve a coding contract,\\n    // provided we have a solution script.\\n    for (;;) {\\n        for (const s of server) {\\n            const file = ns.ls(s, cct.SUFFIX);\\n            // No coding contracts on this server.\\n            if (file.length < 1) {\\n                continue;\\n            }\\n            // Solve all coding contracts on this server.\\n            file.forEach((f) => solve(ns, f, s));\\n        }\\n        await ns.sleep(cct.UPDATE_TIME);\\n    }\\n}\\n\",\"filename\":\"/cct/solver.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3a3861bd-bc3d-4c3b-a026-05b91620521e\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e2cc49a8-78a2-4ada-b86e-d21626e383fa\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/136623ea-4ead-415a-8d05-0994222885ad\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2fbc1af3-cf0d-47e6-9909-c6d2183a7b7e\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/18a6b1b8-8311-420c-9efd-ca0713e688c7\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f889a546-c613-4aea-8ab7-c942ea20b8e4\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/91ebd942-f785-4428-a836-78a9eadc2781\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/41ef0f45-4c81-4eb6-9c90-fea07aecf054\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6346de3d-a0f2-4429-b577-a42f67e04ee9\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/13dc182e-cf45-4545-8a28-096cf45eeabf\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0e1a202a-692b-4ed1-b1bf-25ac2ee2d46e\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6abfdf05-25ad-47e6-97d3-1fd46965e35a\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/4a3afca3-5f34-453d-adc6-8b9269e881a7\",\"moduleSequenceNumber\":290},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ce8eb1ec-b1e4-43e5-b0e1-07c60e3cd94b\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5e7a1756-cd92-4abc-8753-939a2b23586e\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/623671ec-bffc-441d-a4af-ed42e7b9736e\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0a3ce67a-bec7-4267-a1ba-fb3710cac255\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/032bbee4-4b7b-40f0-8014-c480fccfab10\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bb2516a2-a8c6-4956-a1ba-d60e46085792\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0c3a8e84-9833-4ad6-97db-33c10fbe8f09\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/456a8790-16ad-4b7c-a5dd-a5e01db1ce8f\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7f47128c-2795-47c3-af7d-ba2f4c5eda6e\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/457402fb-5187-40d5-8281-557f9f855904\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7cc368ec-8345-4e76-a77c-e475f4c0febb\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/ff6f3145-223c-4fdd-b3f5-a4a0fe4aa2f8\",\"moduleSequenceNumber\":286},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b5323358-ce20-46dc-9999-50cdcea1fc4f\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/cct.js\",\"url\":\"blob:https://danielyxie.github.io/50688ce8-7f04-4056-b7e2-e8eea76afd4d\",\"moduleSequenceNumber\":264},{\"filename\":\"/cct/solver.js\",\"url\":\"blob:https://danielyxie.github.io/748fbc26-5967-447c-83af-d526699b3bf6\",\"moduleSequenceNumber\":401}],\"dependents\":[],\"ramUsage\":15.35,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":719,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getContractType\",\"cost\":5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"ls\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    matrix_to_string,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Trace out a ring inside a 2-D matrix.\\n *\\n * @param m A 2-D matrix, represented as an array of arrays.\\n * @param [tlr, tlc] The coordinates of the top-left element of the ring.\\n *     \\\"r\\\" and \\\"c\\\" mean row and column, respectively.\\n * @param [brr, brc] The coordinates of the bottom-right element of the ring.\\n *     \\\"r\\\" and \\\"c\\\" mean row and column, respectively.\\n */\\nfunction ring(m, tlr, tlc, brr, brc) {\\n    // Top-left to top-right.\\n    let array = [];\\n    let elem = [];\\n    assert(tlc <= brc);\\n    array = m[tlr];\\n    elem = Array.from(array.slice(tlc, brc + 1));\\n    // Is this a matrix of one row?\\n    if (tlr === brr) {\\n        return elem;\\n    }\\n    // Top-right to bottom-right.\\n    assert(tlr < brr);\\n    for (let r = tlr + 1; r <= brr; r++) {\\n        elem.push(m[r][brc]);\\n    }\\n    // Do we have a matrix of one column?\\n    if (tlc === brc) {\\n        return elem;\\n    }\\n    // Bottom-right to bottom-left.\\n    assert(tlc < brc);\\n    array = m[brr];\\n    array = Array.from(array.slice(tlc, brc));\\n    elem = elem.concat(array.reverse());\\n    // Bottom-left to top-left.\\n    array = [];\\n    for (let r = tlr + 1; r < brr; r++) {\\n        array.push(m[r][tlc]);\\n    }\\n    elem = elem.concat(array.reverse());\\n    return elem;\\n}\\n\\n/**\\n * The elements of a 2-D matrix in spiral order, going in clockwise direction.\\n *\\n * @param m A 2-D matrix, represented as an array of arrays.\\n * @return An array representing the elements of the matrix in spiral order.\\n */\\nfunction spiral(m) {\\n    // Sanity checks.\\n    assert(m.length > 0);\\n    const array = m[0];\\n    const nrow = m.length;\\n    const ncol = array.length;\\n    for (const a of m) {\\n        // Ensure each row has the same number of elements.\\n        assert(a.length > 0);\\n        assert(ncol === a.length);\\n    }\\n    // The spiral order of a matrix.\\n    let tlr = 0; // top-left row\\n    let tlc = tlr; // top-left column\\n    let brr = nrow - 1; // bottom-right row\\n    let brc = ncol - 1; // bottom-right column\\n    let elem = [];\\n    while (tlr <= brr && tlc <= brc) {\\n        elem = elem.concat(ring(m, tlr, tlc, brr, brc));\\n        tlr++;\\n        tlc++;\\n        brr--;\\n        brc--;\\n    }\\n    return elem;\\n}\\n\\n/**\\n * Spiralize Matrix: Given an array of array of numbers representing a 2-D\\n * matrix, return the elements of that matrix in clockwise spiral order.\\n *\\n * Output the elements of a 2-D matrix in spiral order, going in clockwise\\n * direction.\\n *\\n * Usage: run cct/spiral.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const matrix = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(spiral(matrix), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/spiral.txt\\\";\\n        const data = matrix_to_string(matrix);\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/spiral.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/adf92243-8065-4c02-9360-1f712f472f88\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0567a3fd-b4b5-48e8-8719-741a972a1808\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4f1b2931-8631-4363-a88b-90a31e0b90e9\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6866a82f-d17f-423d-ad84-c48e091ffd9d\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e86abb4f-c176-42c1-b34d-58cd07010ca5\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1aea2c0b-8b08-4d60-b89a-1eb40bbaf83f\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a8cf1e27-023c-41c8-85d3-30db7e2b9353\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f0128ccb-ee9c-42a9-b4c3-4e7147bab88e\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/147b0caa-e6c3-4861-ba18-6fb58dd689d4\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ae3bbb7d-242d-4b8b-b642-8ca5e4d3cbe7\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/26647463-2ea5-4bf9-8618-6fc56ff2d7ce\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a17715c0-9cc3-4150-b764-8ec1ba6a853b\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/507c91c9-92e5-4901-b65d-a85fb55a81f6\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/65be9b1a-9253-48a1-ae5e-985065404591\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/25d40ec1-4588-44d8-8c61-f2d745533e38\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d7bdc80d-e708-4116-9da5-0cac36ed4335\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b304a372-fa21-4ef8-90bf-2a6e6d657f8d\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0d1718fb-8100-4112-8fdd-2b567c143672\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/675775dc-5b07-4eaa-b502-56243f730385\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2a9defe2-4bda-4229-933d-3644f9013e5c\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8d373bd4-eeb9-4d1d-921a-ec8092b6292a\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a2d871b2-84d3-4e89-91ed-9a714bf5f3ff\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/98b30f6a-3478-4d61-91f4-e09f869e24e9\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b9fb4a03-34d1-4734-9c72-a0fd6e804aaf\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/83305543-8e33-4438-9936-70e48db74016\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7dfcbed7-4d0f-41fb-be5b-8855c672a461\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1dff9a24-46aa-4ac6-bfb1-9860f204341d\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7ca14e34-b056-4643-87b0-d35f0a6ca28d\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/66ebb135-2d92-4080-add9-a1e0d8267ab9\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a1683579-ed9d-45b2-9728-c5be3416996b\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4af36073-e493-47ae-b5a7-48d70e4f8174\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/5364c093-6590-4375-99b0-8827b74e30cb\",\"moduleSequenceNumber\":261},{\"filename\":\"/cct/spiral.js\",\"url\":\"blob:https://danielyxie.github.io/e84fb67c-3b8e-4a3d-a2b1-50b0937cc664\",\"moduleSequenceNumber\":472}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":720,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The largest sum of a non-empty, contiguous subarray.\\n *\\n * @param array An array of integers.\\n * @return The largest sum of any non-empty, contiguous subarray of the given\\n *     array.\\n */\\nfunction subarray_sum(array) {\\n    // Use Kadane's algorithm.\\n    assert(array.length > 0);\\n    let best = Number.NEGATIVE_INFINITY;\\n    let current = 0;\\n    for (const n of array) {\\n        current = Math.max(n, current + n);\\n        best = Math.max(best, current);\\n    }\\n    return best;\\n}\\n\\n/**\\n * Subarray with Maximum Sum: Given an array of integers, find the\\n * contiguous subarray (containing at least one number) which has the\\n * largest sum and return that sum.\\n *\\n * Determine a non-empty, contiguous subarray that has the largest sum\\n * possible.  See Wikipedia for more details:\\n *\\n * https://en.wikipedia.org/wiki/Maximum_subarray_problem\\n *\\n * Usage: run cct/subarray.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(subarray_sum(array), cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/subarray.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/subarray.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c6690630-89da-430f-884a-e5b0413ba1a2\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b83597c0-5281-4696-93c7-115ca0367131\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ab7f223e-db17-4878-8ae5-c3c0d8454937\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/93735ef1-9364-4732-9454-37e6e6ab0cc4\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3c771251-12f6-40c3-b7e8-a79517d4928a\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/085c6499-9501-492e-9f59-abddf017f58d\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b70b8add-a807-42b7-b5b4-bf4e1953b85b\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c58e8f36-6802-4ead-8588-ae3164be0a55\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/eeb1644b-9777-4e51-9302-bd0ee61e386a\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1e917ce8-d65b-4d40-9b6e-a1027c27a5c5\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/da881295-7b99-4664-b74a-15bd06c94749\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bec04abe-445e-41e6-9314-7f32e80bcf91\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f82a0084-f098-42b4-b9bf-d6dc80243a74\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/32afa31f-9564-4d4f-b936-e571c50149c6\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c133976b-de82-4c7c-b83e-81edde4df960\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2c2be290-f938-4659-85a2-1548208ab35b\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/49800cb0-860d-4e37-be57-33fad2b4ae5d\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0a96d440-47d6-4dd7-82d7-cb750af745ff\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f4e86faf-d70e-41a1-b17d-69a75287921e\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/34d7a271-8f26-413b-b196-f7da8424cb1b\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dadfc358-8c98-4c5e-9691-36b8fa801a6b\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6e5ba16c-c549-4cb0-bc15-33a7b0514f30\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c99ad2a9-fe81-402c-8730-565e2a506109\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/20a0f941-816e-4da8-8a1a-315654c8c1b3\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/aff579f4-c6e9-40b5-9d32-d7ad09a80ea4\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2637b540-1c16-4902-b0d0-4270fa9cb44e\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ad2ede0c-81fc-43cf-8f38-0b5ac45dd58e\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ca097a09-bfd9-4bab-8968-d57959c67ec8\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/4484a76b-4597-4daf-8a7a-717be208d628\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0f9b1db3-d83b-4022-9fc5-67ee68303444\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e629be04-cb9a-47a5-9eab-6942185c830b\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/76a706b9-f9e7-41eb-ad51-2a53e24119ec\",\"moduleSequenceNumber\":261},{\"filename\":\"/cct/subarray.js\",\"url\":\"blob:https://danielyxie.github.io/f292c313-43c9-4376-af00-a49a18f8d69a\",\"moduleSequenceNumber\":464}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":721,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The number of possible partitions of a non-negative integer n.  That is,\\n * the number of ways to write n as a sum of positive integers.  In number\\n * theory, the partition function p(n) solves the problem.  One solution is to\\n * use a recurrence relation due to Euler, derived from using Euler's pentagonal\\n * number theorem.  The recurrence relation is\\n *\\n * p(n) := \\\\sum_{k \\\\in PP} (-1)^{k-1} \\\\{ A + B \\\\}\\n *\\n * where\\n *\\n * A := p(n - k(3k - 1) / 2)\\n * B := p(n - k(3k + 1) / 2)\\n * PP := The set of all positive integers.\\n *\\n * In practice, we only sum up to and including k := n.  Another way to\\n * calculate p(n) is to note that p(n) is the coefficient of z^n in the\\n * generating function\\n *\\n * P(z) = \\\\prod_{i=1}^n \\\\frac{1}{1 - z^i}\\n *\\n * Calculating the coefficient of z^n is straightforward.  Refer to the\\n * following for more details:\\n *\\n * [1] https://en.wikipedia.org/wiki/Pentagonal_number_theorem\\n * [2] On Euler's Pentagonal Theorem\\n *     https://www.mathpages.com/home/kmath623/kmath623.htm\\n * [3] John A. Ewell.  Recurrences for the Partition Function and Its Relatives.\\n *     Rocky Mountain Journal of Mathematics, volume 34, issue 2, pp.619--627,\\n *     2004.\\n *     DOI: 10.1216/rmjm/1181069871\\n *\\n * @param n We want to determine the number of partitions of this number.\\n *     Must be a non-negative integer.\\n * @return Possible values:\\n *     (1) 1 if n = 0.\\n *     (2) 0 if n < 0.\\n *     (3) p(n)\\n */\\nfunction partition(n) {\\n    assert(n >= 0);\\n    if (n === 0) {\\n        return 1;\\n    }\\n    // Use an array of n + 1 elements because we also need to take care of the\\n    // base case.\\n    const cache = Array(n + 1).fill(0);\\n    cache[0] = 1;\\n    for (let i = 1; i <= n; i++) {\\n        for (let j = i; j <= n; j++) {\\n            cache[j] += cache[j - i];\\n        }\\n    }\\n    return cache[n];\\n}\\n\\n/**\\n * Total Ways to Sum: Given a number, how many different distinct ways can\\n * that number be written as a sum of at least two positive integers?\\n *\\n * This is the problem of integer partition, in particular calculating\\n * the partition number of a positive integer.  The problem asks for a\\n * partition that has at least two parts, so we must subtract 1 from\\n * the partition number.  See Wikipedia for more details:\\n *\\n * https://en.wikipedia.org/wiki/Partition_(number_theory)\\n * https://en.wikipedia.org/wiki/Partition_function_(number_theory)\\n *\\n * Use the method of generating function.\\n *\\n * Usage: run cct/sum.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const n = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(partition(n) - 1, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/sum.txt\\\";\\n        await log_cct_failure(ns, log, cct, host, n);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/sum.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/959b46b3-23d8-4c60-9be3-6ecdc9cf4f1f\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f6e79193-2431-4145-8415-c97c23d57081\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/66c6509c-eb4f-4788-b0ec-75b7fe07117e\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1b658bbb-786b-465a-88e5-1fbc05358d7b\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5c636a55-c42d-4918-97bc-4feeb31d10ee\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0f57bfa6-c99a-4797-bbcb-e075dd65ed24\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/833dce4e-da3f-401c-a696-c838464691f6\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0945a44e-31a8-4b4d-a766-023f911705a9\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/313a485e-57be-48d2-8666-888d799e6d32\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3b53426a-2808-48ea-869e-3ee7a65bccd5\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/da49b64d-2305-4a39-87ed-b179ac381afe\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/493cef6d-f73f-4e52-a012-78928c9081bb\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/55685dd3-22f3-46a5-ad06-8d043bed9d34\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c1197a71-3cbf-4c71-9df2-a7043bbd57b8\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1fd6a2aa-f5ca-486f-8519-b60a79546cab\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e2c13856-013d-46b4-bea1-75bb5ff87257\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/910ef04e-67a2-4854-9353-e7602917a4ce\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/70fa338f-dde7-44be-9932-1c5905eb1e47\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/900efb74-6f3b-421c-bce6-2da7687732c4\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/05d380c2-f328-4e7f-bfdc-42f6941e7e12\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e474b672-7111-4e81-b772-1249a2d4b1e5\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a65cd9cd-5044-471e-968e-055baacef77e\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/376a48a0-e608-4b8b-9aae-5275bcab56be\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bcfb5d0d-1b2f-4e62-be8a-4a3e2cd3cf20\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e01c13a5-d807-420e-967a-0742fcd69e9a\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/af8e860a-0f5f-4dad-82af-e1e872821602\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/62e84493-fbdf-4a61-8b12-5ea07edfd388\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f2c96ef2-0549-4971-bb16-f009dd795865\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/40c82728-c2ba-4476-8f76-3e3b3bafabf2\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/00dd5fe2-cfe8-42e2-9888-19929423035a\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/72bcfba6-8201-409e-a0af-fc33a8d04ad7\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/692539a4-6ca6-4272-bd5a-d6baf0d5df5c\",\"moduleSequenceNumber\":68960},{\"filename\":\"/cct/sum.js\",\"url\":\"blob:https://danielyxie.github.io/41db9d03-360a-46ea-b589-daf2d142b477\",\"moduleSequenceNumber\":96895}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":722,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The number of ways to change n using coins in the given set of denominations.\\n *\\n * @param n We want to partition this number.  Must be a positive integer.\\n * @param denom The array of denominations.  An array of positive integers to\\n *     use to partition n.  Elements of the array are unique.\\n * @return The number of ways to change n using the given denominations.\\n */\\nfunction coin_change(n, denom) {\\n    assert(n > 0);\\n    assert(denom.length > 0);\\n    // Sort the array of denominations in ascending order.\\n    let denomination = Array.from(new Set(denom));\\n    denomination = MyArray.sort_ascending(denomination);\\n    // Remove any coin value higher than n.\\n    let i = denomination.length - 1;\\n    while (n < denomination[i]) {\\n        denomination.pop();\\n        i = denomination.length - 1;\\n    }\\n    return partition(n, denomination);\\n}\\n\\n/**\\n * The number of ways to partition an integer using only integers from a given\\n * set.  Let n be our target sum and let our m denominations be\\n * D := [d_0, d_1, ..., d_{m-1}], where d_i < d_j whenever i < j.  We make the\\n * following assumptions:\\n *\\n * (1) n >= 0.\\n * (2) Each d_i > 0.\\n * (3) Each d_i <= n.\\n *\\n * The problem has the following recursive interpretation.  Let C(n) be the\\n * number of ways to partition n using a denomination d.  Then we have the\\n * recurrence relation\\n *\\n * C(n) := C(n) + C(n - d)\\n *\\n * We have the base case C(0) := 1 because there is only one way to make a\\n * change for zero, namely choose no coins at all.  Refer to the following page\\n * for more details:\\n *\\n * https://www.educative.io/m/coin-changing-problem\\n *\\n * @param n We want to partition this integer.\\n * @param denom The array of denominations.  An array of positive integers to\\n *     use to partition n.  Elements of the array are unique and the array is\\n *     assumed to be sorted in ascending order.\\n * @return The number of ways to partition n using only integers from\\n *     the denomination array.\\n */\\nfunction partition(n, denom) {\\n    // Use an array of n + 1 elements because we also need to take care of the\\n    // base case.\\n    const cache = Array(n + 1).fill(0);\\n    cache[0] = 1;\\n    for (const d of denom) {\\n        for (let i = d; i < cache.length; i++) {\\n            cache[i] += cache[i - d];\\n        }\\n    }\\n    return cache[n];\\n}\\n\\n/**\\n * Total Ways to Sum II: You are given an array with two elements.  The first\\n * element is an integer n.  The second element is an array of numbers\\n * representing the set of available integers.  How many different ways can\\n * that number n be written as a sum of integers contained in the given set?\\n * You may use each integer in the set zero or more times.\\n *\\n * This is also known as the money changing problem.  Suppose we have a target\\n * amount of money n.  We have m distinct dollar notes a_0, a_1, ..., a_{m-1}.\\n * How many ways are there to combine one or more notes such that the total\\n * amount is n?  We can use a note zero, one, or more times.  More details here:\\n *\\n * https://algorithmist.com/wiki/Coin_change\\n *\\n * Usage: run cct/sum2.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [n, denomination] = ns.codingcontract.getData(cct, host);\\n    const npart = coin_change(n, denomination);\\n    const result = ns.codingcontract.attempt(npart, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/sum2.txt\\\";\\n        const data = `[${n}, [${denomination.join(\\\",\\\")}]]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/sum2.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a0195c09-0b4d-4c0d-91b4-6322968b0e51\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/354cb3be-ab98-4f53-a036-22e355f496ca\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6de42365-a859-49e1-8307-77f5de6cda7d\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2a0c74a5-7ef9-46b5-bda1-3fbdc90b5be1\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/84987ce7-dc23-4961-b55b-99f7e37ab312\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c020f511-e32b-4702-bc19-21f718abf6e0\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/88c44552-d776-4955-85b3-9575954a8b54\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/55cf35c0-8d09-4717-b244-12ed089d98d0\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8141366f-65bc-4314-b47b-63182f40284c\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6ae38d13-f5c9-4da4-acff-6de6c60a4c06\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3db5c774-8bbe-40c4-81b8-74a8a7650738\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/71ca2a16-6a8b-4dcf-b157-07c219763550\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7603c037-c1cb-40d3-bc8e-3a6ebb88d54a\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ac963021-14da-4ba0-a376-c07847541333\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f4440bf4-45b0-4db4-9253-5b41cfe4ffa7\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/349998f4-2509-45a6-b978-ba23cba60fb1\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/560a7165-aa9a-483a-8580-9580d33a6044\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cd430e31-4241-403d-8fed-22ba91a7a73b\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8ecf8fe1-6903-4abd-9172-68b98511fb94\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/13d3e7a5-6bfe-4479-ba86-617408e9005b\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0e68bdda-2d1f-446f-970b-5e78ca9bbaea\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6879632a-1cb5-4f5a-b191-e191c09af70d\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d6baecef-0d98-4f10-9b15-8c24c2dc2d4f\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/207cdf7c-6c6e-40e3-ac65-83c200e74e51\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/26a93c1a-5c99-4eb5-872b-9d8aa6df54f2\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bab6e35d-2acd-44c4-b455-586ccdf71be6\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/81f7a172-2ac7-4792-9f33-8f5dd1319dd8\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ac3d9d37-eb20-4694-856f-760591130058\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/52a472a7-26b7-44ad-812e-f0aeaac3301c\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8c1e4849-727c-4091-b8b4-5dd86f16bf55\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/069563b9-79df-4af3-9f95-116fe9ebb4e8\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/c8ecbc2c-4847-42b3-a151-357e9eeaff0d\",\"moduleSequenceNumber\":68960},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c5bca682-5e8f-4c07-a9f3-24e61eff06d3\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e582829e-bfcb-4595-944c-b44cbdcc04a3\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fda12612-4dfb-4266-a9a3-fc8d1e9ee335\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ffffb4af-f2f4-4669-8286-d4b5d67bbc0b\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/529671bc-cac3-4a09-8e70-40529863dc3b\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c4d13dd6-73d9-45e5-8654-264953a1750f\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/231a7ac1-9aef-4d0b-9118-51af8b0b8013\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/314f9f69-c877-4eb2-8f6d-0f6c5c8aa350\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8eca5e43-f45f-4d0f-a0c1-3fffb30e1e16\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/823e47e5-dfb5-4dcb-9803-77112579bf28\",\"moduleSequenceNumber\":68959},{\"filename\":\"/cct/sum2.js\",\"url\":\"blob:https://danielyxie.github.io/06512b76-ab68-4311-82f1-425f68072aea\",\"moduleSequenceNumber\":88378}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":723,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    max_profit_kadane,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\n\\n/**\\n * Algorithmic Stock Trader I: You are given an array of numbers representing\\n * stock prices, where the i-th element represents the stock price on day i.\\n * Determine the maximum possible profit you can earn using at most one\\n * transaction (i.e. you can buy and sell the stock once).  If no profit can\\n * be made, then the answer should be 0.  Note that you must buy the stock\\n * before you can sell it.\\n *\\n * This is similar, but not identical, to the problem\\n * \\\"Subarray with Maximum Sum\\\".\\n *\\n * Usage: run cct/trader.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(\\n        max_profit_kadane(array),\\n        cct,\\n        host,\\n        {\\n            returnReward: true,\\n        }\\n    );\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/trader.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/trader.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8640ed3e-bae2-4344-8bb9-756ab4994d0b\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e44ed8c2-712e-4c68-bef4-8dbdb2707371\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e9e230ee-ac1c-4074-8bcc-1b330d8a49f9\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fe8c1b14-7059-4624-a7b0-a6042b900654\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/18ed52b6-c5b8-4c01-83a3-6b520ec9b712\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fe305ba5-6237-4c82-904d-06cba9f901d8\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/65e49a1b-f577-4092-a95d-84cf910b10ec\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/602322a8-6e80-4d28-88b2-9690e2c87620\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6733110f-815e-41da-bf3a-ae95c31b738e\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d7bbca7e-4f37-4743-87b2-8ceaa949d289\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/337b8bf7-4869-4c95-b49e-ec0604fbc51b\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/84527ab5-f485-443b-8d5f-b20b32a2ddb5\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a0a3defc-ec4b-43b8-a3f8-2cde8733a047\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/10bdb6af-7b8b-4719-bce9-d810777b346c\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/dc8071f3-1969-4fa9-80d9-eb71d0c7069d\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2694aea3-1ce1-491e-98df-fbce33654b1a\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/442c16f2-2f4c-4bd9-a018-fa16ab4c9baf\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ed4950b2-8b5c-48b8-8308-0f4bae5b60ed\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/39310937-8359-45bc-8b54-ff0ebd7ffada\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/6755a904-3ffa-4e7d-b790-daca88bd885d\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f23e7404-df87-4901-9ab6-87b86769c3ec\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c734713e-6ef7-4873-aa4f-1fa8e4127d72\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/757006e9-e37d-4c3c-8928-93c6574f1721\",\"moduleSequenceNumber\":261},{\"filename\":\"/cct/trader.js\",\"url\":\"blob:https://danielyxie.github.io/03cae26e-daac-46aa-bf6b-657f124c6c06\",\"moduleSequenceNumber\":467}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":724,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { log_cct_failure, print_error, print_success } from \\\"/lib/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The maximum profit that can be obtained if we are allowed to make an\\n * unlimited number of transactions.  Each transaction is a pair of buy/sell.\\n * A stock must first be bought before it can be sold.\\n *\\n * We have already solved the case where we are allowed to make at most one\\n * transaction.  The basic idea boils down to finding two days i and j, where\\n * i < j and price[i] < price[j], such that the difference price[j] - price[i]\\n * is as large as possible.\\n *\\n * Let's reuse the above idea.  Let mp be the running maximum profit.  Given\\n * two consecutive days i and i + 1, we have three cases:\\n *\\n * (1) price[i] < price[i+1].  We can make a profit if we buy on day i and\\n *     sell the next day.  Add that profit to our running profit mp.\\n * (2) price[i] = price[i+1].  We break even.  No need to add the difference\\n *     price[i+1] - price[i] to our running profit mp because the difference\\n *     is zero.\\n * (3) price[i] > price[i+1].  We make a loss.  Do not buy on day i and sell\\n *     the next day.\\n *\\n * The edge case is when i is the last day.  We should not buy the stock on\\n * the last day because we won't be able to sell it the next day.\\n *\\n * @param price An array where price[i] is the price of a stock on day i.\\n * @return The maximum profit to be made, provided we are allowed to make\\n *     as many transactions as we want.  Return 0 if no profits can be made.\\n */\\nfunction maximize_profit(price) {\\n    // Sanity checks.\\n    assert(price.length > 0);\\n    // If the price array has only one value, we can buy on the first day.\\n    // However, we won't be able to sell at all.  Therefore the maximum profit\\n    // should be zero.\\n    if (price.length === 1) {\\n        return 0;\\n    }\\n    // Keep track of the running maximum profit by considering the price\\n    // difference between consecutive days.\\n    assert(price.length >= 2);\\n    const lastidx = price.length - 1;\\n    let max_profit = 0;\\n    for (let i = 0; i < lastidx; i++) {\\n        if (price[i] < price[i + 1]) {\\n            max_profit += price[i + 1] - price[i];\\n        }\\n    }\\n    return max_profit;\\n}\\n\\n/**\\n * Algorithmic Stock Trader II: You are given an array of numbers representing\\n * stock prices, where the i-th element represents the stock price on day i.\\n * Determine the maximum possible profit you can earn using as many\\n * transactions as you like.  A transaction is defined as buying and then\\n * selling one share of the stock.  Note that you cannot engage in multiple\\n * transactions at once.  In other words, you must sell the stock before you\\n * buy it again.  If no profit can be made, then the answer should be 0.\\n *\\n * Each price in the array relates to the same stock.\\n *\\n * Usage: run cct/trader2.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(\\n        maximize_profit(array),\\n        cct,\\n        host,\\n        {\\n            returnReward: true,\\n        }\\n    );\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/trader2.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/trader2.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/74911aec-6d30-4188-b46f-5b8ffd54c7bf\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/572c38a5-f383-4554-9a92-fe8eb03d0745\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3a84b322-8b62-4933-820d-67dba0f351f7\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7799dd6d-33bb-4f99-be5c-499f23578d61\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/466a6f09-b4c9-4027-aacb-c2ed03c324e6\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ca0ba2a0-fd69-4bb3-9984-2287ca70f94e\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/08e414d5-e797-49cf-b344-636cc3fb9031\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e8ce3a97-3fd8-4541-8daa-99fb37362537\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d2c24cf4-1d60-4296-8151-fbf0d65be795\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7f17632d-09c4-4991-af0e-99b58fd0811d\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/346dab5e-709a-4576-97c3-89bda0b33406\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3d456956-2956-4030-9a0b-be2c16eb01fd\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e51fb467-aaaf-4e7d-bdbe-609d2fae34a1\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9488dff6-6d0f-4e17-a944-18378c6d30d2\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7d83fd74-1478-4295-9100-620d7e6e819a\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7aaf40d7-e07b-47d7-ab64-9a926c111224\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2d7e09b9-6d51-455f-a407-0a1a3da1d9f5\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/612597f4-12f9-4236-89a7-2316955637a0\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/df856688-4708-4252-be59-3b3f6db0e6d6\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a34d608f-01fd-4ad0-bd01-60901a0800a8\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f950a605-783b-40c6-94e0-042648f81c09\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bbd10fd7-2a52-47e5-9fc6-e2bdfdfc8184\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d947f864-e9af-4ef5-8deb-e94e60a952ae\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6cc12cc4-279e-4344-bbff-8a00db2ee7ab\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3a59c0c5-5534-4535-99d4-9f75bcc49c2e\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e8cc1992-03ea-4d5d-9b01-58ed0b84af3e\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3652f41d-e24f-4c34-9142-3f9b65a7b300\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fcfd2f9d-b0fd-4fb0-bc1d-a29b18c27286\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/75887d28-1f44-4eb8-baca-5f0b19ee86b8\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bade12ea-b0dc-4c69-a3e7-9ee748071c5f\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/67a96a5c-89a1-43fe-8cdb-b9c8c54d8529\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/f6c5c74b-add3-45cb-bb38-b224e3449e60\",\"moduleSequenceNumber\":261},{\"filename\":\"/cct/trader2.js\",\"url\":\"blob:https://danielyxie.github.io/5aeb3ef0-48a6-43d0-917a-5faea26583ea\",\"moduleSequenceNumber\":466}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":725,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    print_error,\\n    print_success,\\n    stock_traderIII,\\n} from \\\"/lib/cct.js\\\";\\n\\n/**\\n * Algorithmic Stock Trader III: You are given an array of numbers representing\\n * stock prices, where the i-th element represents the stock price on day i.\\n * Determine the maximum possible profit you can earn using at most two\\n * transactions.  A transaction is defined as buying and then selling one share\\n * of the stock.  Note that you cannot engage in multiple transactions at once.\\n * In other words, you must sell the stock before you buy it again.  If no\\n * profit can be made, then the answer should be 0.\\n *\\n * This is similar to Algorithmic Stock Trader I.  The twist is that we can now\\n * make at most two transactions, where previously we were restricted to at\\n * most one transaction.\\n *\\n * Usage: run cct/trader3.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const array = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(\\n        stock_traderIII(array),\\n        cct,\\n        host,\\n        {\\n            returnReward: true,\\n        }\\n    );\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/trader3.txt\\\";\\n        const data = `[${array.join(\\\",\\\")}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/trader3.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f1a52dd8-d4ca-4e97-828d-29deec87baa2\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c3b93bf9-a76e-4f5e-8c9b-c9e2af93d755\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6ed596c3-9ea2-44fc-8ec4-f75b0aa983f9\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ee93247f-7436-41b8-af0e-0e197edb5850\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f45975a9-e139-47e0-9c5c-82edce8f6529\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ab3b811c-1b42-4e1d-8693-e4416295ae3b\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1487e132-7802-4f59-beb1-561062ea30c0\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/627d853a-d881-4288-bd87-3a5a4f5ccf39\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7b726154-9a5f-40fb-8487-890632410817\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/dc7d532f-6f02-418a-abe4-30969630231e\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fa69751f-c2df-4122-a9bb-f6db693a0682\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c79512cc-0259-4c57-9bf6-68806a3fcf28\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/38c23bdc-53d8-4fce-81b2-c088c40fc6df\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/573ffc4c-2c01-4c0a-a27d-53d0c5c88815\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/79b23e53-7f06-41cb-930e-600585649cf3\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/41fb429b-967c-4ef5-abd9-9cb6b6741972\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/12efa215-1d2b-4c01-9e11-b7d6b2650412\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/65afc0cf-6620-46f4-9ddf-aa96902658ea\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c7651396-71f9-40d8-9246-88e9890957fb\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/64b531ab-f262-4c76-88bd-07f2b6062939\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d01a6ce0-d4f1-41cd-b86c-84968d577c6d\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bda65613-f834-4ee1-97e3-e9b3e1ece7bb\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/e0b94f34-f8f8-41d5-b184-ae5ccaadd1df\",\"moduleSequenceNumber\":68960},{\"filename\":\"/cct/trader3.js\",\"url\":\"blob:https://danielyxie.github.io/23cb2526-a4b0-4c32-a5df-34b869ee77bb\",\"moduleSequenceNumber\":79067}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":726,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    max_profit_kadane,\\n    print_error,\\n    print_success,\\n    stock_traderIII,\\n} from \\\"/lib/cct.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The maximum profit that can be made when we are restricted to at most t\\n * transactions.  When we are restricted to at most 2 transactions, we find\\n * all possible partitions of the price array into 2 non-overlapping subarrays.\\n * For each such partition we have 2 subarrays.  We run Kadane's algorithm on\\n * each subarray, sum the results of both subarrays, and return the sum as the\\n * maximum profit possible.  The true maximum profit is the maximum of the\\n * results of all partitions.\\n *\\n * Now consider t > 2.  We use the same idea as per the case when we are\\n * restricted to at most 2 transactions.  The minor difference now is that we\\n * must partition the price array into t non-overlapping subarrays.  We run\\n * Kadane's algorithm on each subarray, add together the result of each run of\\n * the algorithm, and return the sum as the maximum possible profit.  The only\\n * tricky part is generating all possible partitions of the price array, where\\n * each partition consists of t non-overlapping subarrays.  The above method is\\n * conceptually simple to understand as it builds on the intuition for the case\\n * where t = 2.  However, the method can be slow.  Let k := t - 1.  Given a set\\n * of n elements, we have C(n, k) ways to choose k numbers that partition the\\n * price array into t non-overlapping subarrays.  Here, the number C(n, k) is\\n * the binomial coefficient.  Thus there are C(n, k) possible partitions of the\\n * price array into t non-overlapping subarrays.  Notice that when t = 2, we\\n * need only to choose k = t - 1 = 1 number to act as a barrier for dividing\\n * the price array into 2 non-overlapping subarrays.  Therefore in the worst\\n * case the above method has factorial running time, which is worse than\\n * exponential running time.\\n *\\n * Let's see whether we can use recursion to calculate the solution for day i\\n * based on our solution for day i-1.  Suppose price[i] is the value of the\\n * stock on day i.  Define p[t][i] as the maximum profit obtained by using at\\n * most t transactions up to and including day i.  We have two cases for day i.\\n *\\n * (1) If no transactions are made on day i, then the value of p[t][i] is\\n *     equivalent to p[t][i-1], i.e. p[t][i] = p[t][i-1].\\n * (2) Suppose we sell on the i-th day.  Then we must have bought one share of\\n *     the stock on a day j, where 0 <= j <= i-1.  Purchasing a share on day j\\n *     and selling it at a later day i would net us a profit of\\n *\\n *     price[i] - price[j]\\n *\\n *     for one transaction.  What about the profits from the remaining t-1\\n *     transactions?  Those profits are collectively represented as p[t-1][j].\\n *     If we sell on the i-th day and this is our t-th transaction, then the\\n *     profit from all t transactions can be written as\\n *\\n *     (*) price[i] - price[j] + p[t-1][j]\\n *\\n *     To maximize our profit from all t transactions, we need to maximize the\\n *     value of expression (*).  We calculate the value of (*) for each value\\n *     of j between 0 and i-1, inclusive.  That is, we have the expression\\n *\\n *     (**) max{price[i] - price[j] + p[t-1][j]}\\n *\\n *     where 0 <= j <= i-1.  Therefore p[t][i] is defined as the maximum of\\n *     p[t][i-1] and expression (**).\\n *\\n * The base cases are:\\n *\\n * (i) p[0][i] := 0 for all i.\\n * (ii) p[t][0] := 0 for all t.\\n *\\n * If n is the number of elements in the price array, the maximum profit we can\\n * obtain is p[t][n-1] provided we are restricted to at most t transactions.\\n * Refer to the following page for more details:\\n *\\n * https://www.techiedelight.com/find-maximum-profit-earned-at-most-k-stock-transactions/\\n *\\n * @param ns The Netscript API.\\n * @param t The maximum number of transactions.\\n * @param price An array of prices, where price[i] is the price of one share of\\n *     a stock on day i.  All prices relate to the same stock.\\n * @return The maximum profit to be made, assuming we can perform at most t\\n *     transactions.  Return 0 if no profit can be made.\\n */\\nasync function maximize_profit(ns, t, price) {\\n    assert(t >= 0);\\n    assert(price.length > 0);\\n    // No transactions means no profit.  We don't buy and sell, therefore\\n    // no profit at all.\\n    if (t === 0) {\\n        return 0;\\n    }\\n    // If t = 1, we are restricted to at most 1 transaction.  Simply use\\n    // Kadane's algorithm on the price array.\\n    if (t === 1) {\\n        return max_profit_kadane(price);\\n    }\\n    // If t = 2, we are restricted to at most 2 transactions.  This is the case\\n    // of Algorithmic Stock Trader III.\\n    if (t === 2) {\\n        return stock_traderIII(price);\\n    }\\n    // Perform at most t >= 3 transactions.  Let p[t][i] be the maximum profit\\n    // obtained by using at most t transactions up to and including day i.  The\\n    // value of p[t][i] is the maximum of these two expressions:\\n    //\\n    // (1) p[t][i-1]\\n    // (2) max{price[i] - price[j] + p[t-1][j]} for all 0 <= j <= i-1.\\n    //\\n    // Using the recursive structure of p[t][i], we create a 2-D matrix to hold\\n    // the previous values p[r][c].  The row number r represents the current\\n    // maximum number of transactions.  The column number c represents the\\n    // current day.\\n    assert(t >= 3);\\n    // The base case p[0][i] := 0 for all i.\\n    const p = [];\\n    p.push(new Array(price.length).fill(0));\\n    for (let i = 1; i <= t; i++) {\\n        // The base case p[t][0] := 0 for all t.\\n        const array = new Array(price.length);\\n        array[0] = 0;\\n        p.push(array);\\n    }\\n    // The case of at least t >= 3 transactions.  Here, 1 <= tau <= t.  Build\\n    // up our table from tau = 1 up to and including tau = t.\\n    for (let tau = 1; tau <= t; tau++) {\\n        // Let the number of transactions be at most tau.  Consider each\\n        // day > 0 in the price array.  As we move to the next day, we do not\\n        // have to recalculate the maximization expression\\n        //\\n        // max{price[i] - price[j] + p[t-1][j]}\\n        //\\n        // for all 0 <= j <= i-1.  Define the number\\n        //\\n        // mp := max{p[t-1][k] - price[k]}\\n        //\\n        // where 0 <= k <= i-2.  Then we have the expression\\n        //\\n        // max{price[i] - price[j] + p[t-1][j]}\\n        // = price[i] + max(mp, p[t-1][i-1] - price[i-1])\\n        //\\n        // Thus p[t][i] is the maximum of p[t][i-1] and the expression\\n        //\\n        // price[i] + max(mp, p[t-1][i-1] - price[i-1])\\n        let mp = p[tau - 1][0] - price[0];\\n        for (let day = 1; day < price.length; day++) {\\n            // The maximum profit if we do not make a transaction on this day.\\n            const a = p[tau][day - 1];\\n            // The maximum profit if we make a transaction on this day.\\n            mp = Math.max(mp, p[tau - 1][day - 1] - price[day - 1]);\\n            // The maximum profit using at most t transactions up to and\\n            // including this day.\\n            p[tau][day] = Math.max(a, price[day] + mp);\\n            await ns.sleep(wait_t.MILLISECOND);\\n        }\\n    }\\n    return p[t][price.length - 1];\\n}\\n\\n/**\\n * Algorithmic Stock Trader IV: You are given an array with two elements.  The\\n * first element is an integer k.  The second element is an array of numbers\\n * representing stock prices, where the i-th element represents the stock price\\n * on day i.  Determine the maximum possible profit you can earn using at most\\n * k transactions.  A transaction is defined as buying and then selling one\\n * share of the stock.  Note that you cannot engage in multiple transactions at\\n * once.  In other words, you must sell the stock before you can buy it.  If no\\n * profit can be made, then the answer should be 0.\\n *\\n * This is similar to Algorithmic Stock Trader III.  The twist is that we can\\n * now make at most k transactions, where previously we were restricted to at\\n * most two transactions.  Of course, k can be 0, 1, 2, or a higher integer.\\n *\\n * Usage: run cct/trader4.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [t, price] = ns.codingcontract.getData(cct, host);\\n    const mp = await maximize_profit(ns, t, price);\\n    const result = ns.codingcontract.attempt(mp, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/trader4.txt\\\";\\n        const data = `[${t}, [${price.join(\\\",\\\")}]]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/trader4.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/231dfadb-07b6-4fc8-94f8-cd1b34cc24ab\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e7de285e-8c91-48fb-ac61-101b76315bf1\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d70b78a8-e3ea-4be1-bb1a-0463a0b82eb5\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2a9faf13-109a-4783-9a71-aeb545612bff\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9b535248-65b1-4857-bf0c-86f2fd051cfd\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/adeef1ea-7938-401f-8e58-fff95af431ef\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a4a3fbca-de79-49f8-a383-56d8c4257247\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/62c3ffc6-c032-4c49-b887-0911a01808ba\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/668a1df8-ce7c-40b0-a17d-f1d75b5f34a8\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c52e08be-1d7b-4e27-a068-88546e144aac\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e2c8b032-d602-45f1-b124-97847dbb1aeb\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/100da304-8ea5-4552-b364-6aefc6477c44\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b9d526d1-2808-48a1-a829-fb3bc3fde2c3\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2625b109-ce89-42c3-8970-a0eefcc6fe52\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/26d618b7-a878-4899-8ad9-8841e8683dd5\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/533d0f17-ce83-4543-aaf4-8b96aa7b0a9e\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c7d64ca2-c45f-4eb1-8285-71247fd85534\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1720d677-8c76-43a1-b51e-1a0bc1be614e\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e3359ceb-6c52-4090-8b10-d0dd95c9940c\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/da030154-91c4-412d-9ee1-205395144dce\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e00169ac-92a4-4150-92f2-f3c33471b0c6\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/66240cee-db71-44c1-8f83-fb0582b8e442\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f9674158-821f-418b-a0a9-c9284655f6bd\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6674c222-b856-472b-9cca-342bd08a58e9\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/790efc86-6bdf-4383-8459-89d486c9da11\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2fdcc2b0-5ede-4113-bad5-a553c4fd850f\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7641b52b-b055-4a29-a697-c0d76f21141a\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7486b515-33f1-4895-8c4c-9993947b0f63\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e7b06bb4-004c-4143-9502-d87fc1560caa\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/2a3ee84e-46ac-4b47-800c-54a9047eaf41\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/29322b21-b47b-4d7c-a5a8-4ca11a800aa1\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5cab73d2-3a86-4e61-a20d-f14d48f5c5d2\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/7e41ee01-c653-4c5d-8e9e-fcdcb46ad055\",\"moduleSequenceNumber\":261},{\"filename\":\"/cct/trader4.js\",\"url\":\"blob:https://danielyxie.github.io/26c35238-d8e4-436f-b2c6-1b03440add00\",\"moduleSequenceNumber\":473}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":727,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    log_cct_failure,\\n    matrix_to_string,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A deep copy of a triangle.\\n *\\n * @param triangle A triangle represented as an array of arrays.\\n * @return The same triangle, but as a deep copy.\\n */\\nfunction clone(triangle) {\\n    const new_triangle = [];\\n    for (let i = 0; i < triangle.length; i++) {\\n        const level = [...triangle[i]];\\n        new_triangle.push(level);\\n    }\\n    return new_triangle;\\n}\\n\\n/**\\n * Descend from the top to the bottom of a triangle, finding a path of minimum\\n * sum as we go.\\n *\\n * @param triangle A triangle represented as an array of arrays.\\n * @return An array [path, min_sum] as follows:\\n *     (1) path := A path of minimum sum from the top of the triangle to the\\n *         bottom.\\n *     (2) min_sum := The minimum path sum.\\n */\\nfunction descend(triangle) {\\n    // Sanity checks.\\n    assert(is_triangle(triangle));\\n    if (triangle.length === 1) {\\n        return [triangle[0], triangle[0][0]];\\n    }\\n    // A triangle having at least 2 levels.  Consider the following triangle:\\n    //\\n    // (0)       2\\n    // (1)     3   4\\n    // (2)   6   5   7\\n    // (3) 4   1   8   3\\n    //\\n    // Think of the problem in a top-down manner.  To obtain a path of minimum\\n    // sum from level (0) to level (3), we must obtain a path of minimum sum\\n    // from level (0) to level (2), which in turn requires that we obtain a path\\n    // of minimum sum from level (0) to level (1).  Let min_sum be the minimum\\n    // sum of a path from level (0) to level (i) and suppose this path ends at\\n    // a[j], the j-th number at level (i).  Let b be an array of numbers at\\n    // level (i + 1).  The minimum sum of a path from level (0) to level\\n    // (i + 1) is given by\\n    //\\n    // min_sum + minimum(b[j], b[j + 1])\\n    //\\n    // Alternatively, consider the problem in a bottom-up manner.  Any minimum\\n    // path must end at the bottom level of the triangle.  Let i be any level\\n    // in the triangle, except for the last level.  Let mtriangle[i][j] be the\\n    // j-th number at level (i) and update this number to\\n    //\\n    // mtriangle[i][j] := mtriangle[i][j] + minimum(b[j], b[j + 1])\\n    //\\n    // where b is an array of numbers at level (i + 1).  Move up one level and\\n    // repeat the above calculation, propagating the minimum sum up the\\n    // triangle so that mtriangle[0][0] is the minimum sum of any path.\\n\\n    // Get a deep copy of the triangle.  We don't want to modify the input\\n    // triangle.\\n    const mtriangle = clone(triangle);\\n    const path = [];\\n    // Start from the penultimate level and work upward to the top level.\\n    // Keep track of a minimum path as we move along.\\n    for (let i = triangle.length - 2; i >= 0; i--) {\\n        // The minimum sum at level i.\\n        let minsum = Infinity;\\n        // A node at level i + 1.  This is a node of a path of minimum sum.\\n        let mink = Infinity;\\n        for (let j = 0; j < triangle[i].length; j++) {\\n            // Consider nodes at level i + 1.\\n            const a = mtriangle[i + 1][j];\\n            const b = mtriangle[i + 1][j + 1];\\n            mtriangle[i][j] += Math.min(a, b);\\n            // Update the path of minimum sum.  We keep track of the column\\n            // index at level i + 1.\\n            if (minsum > mtriangle[i][j]) {\\n                minsum = mtriangle[i][j];\\n                mink = a < b ? j : j + 1;\\n            }\\n        }\\n        path.push(mink);\\n    }\\n    path.push(0);\\n    path.reverse();\\n    // Reconstruct a path of minimum sum.  This path contains the intermediate\\n    // nodes from the top of the triangle to the bottom level.\\n    for (let i = 0; i < triangle.length; i++) {\\n        path[i] = triangle[i][path[i]];\\n    }\\n    return [path, mtriangle[0][0]];\\n}\\n\\n/**\\n * Whether the given array represents a valid triangle.\\n *\\n * @param triangle A triangle represented as an array of arrays.\\n * @return true if the array represents a triangle; false otherwise.\\n */\\nfunction is_triangle(triangle) {\\n    assert(triangle.length > 0);\\n    for (let i = 0; i < triangle.length - 1; i++) {\\n        const top = triangle[i];\\n        const bottom = triangle[i + 1];\\n        if (top.length < 1) {\\n            return bool.INVALID;\\n        }\\n        if (bottom.length < 1) {\\n            return bool.INVALID;\\n        }\\n        if (top.length !== bottom.length - 1) {\\n            return bool.INVALID;\\n        }\\n    }\\n    return bool.VALID;\\n}\\n\\n/**\\n * Minimum Path Sum in a Triangle: You are given a 2-D array of numbers\\n * (array of arrays of numbers) that represents a triangle (the first array\\n * has one element, each subsequent array has one more element than the one\\n * before it, forming a triangle).  Find the minimum path sum from the top to\\n * the bottom of the triangle.  In each step of the path, you may only move to\\n * adjacent numbers in the row below.\\n *\\n * For example, given this array\\n *\\n * [[2], [3, 4], [6, 5, 7], [4, 1, 8, 3]]\\n *\\n * we can represent it as this triangle\\n *\\n *       2\\n *     3   4\\n *   6   5   7\\n * 4   1   8   3\\n *\\n * From one level of the triangle, we move to a level below but only to a\\n * number directly below a given number.  At level 0, we have [2].  At level\\n * 1, we have [3, 4].  From 3, we can move down to either 6 or 5, but we\\n * cannot move from 3 to 7 because 7 is not directly below 3.\\n *\\n * Usage: run cct/triangle.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const triangle = ns.codingcontract.getData(cct, host);\\n    const [, sum] = descend(triangle);\\n    const result = ns.codingcontract.attempt(sum, cct, host, {\\n        returnReward: true,\\n    });\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/triangle.txt\\\";\\n        const data = matrix_to_string(triangle);\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/triangle.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0b91200e-ff51-440a-a203-3c931ad18e17\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d925fdea-85cb-438c-9424-a96887217a10\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/aa1baa41-89aa-4d96-ae68-efd3e3bc8022\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d4159e13-a5dc-4d62-802c-fbf01afcae4c\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b878bec9-c746-4a89-9e74-0150be7debce\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5ddb3777-0f88-481e-9ca5-c49eefd3d073\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e132dede-b49d-47cf-bc23-dc6f5c6060d5\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dd984b61-d226-4208-bd05-50949c6d1c50\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a8b66e66-2d71-4188-ac56-f1631d931845\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/eb2d7737-3aae-4dfe-bdb5-138d80713918\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2310635d-cff8-4c91-a875-f693a99e8cfb\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/77d450eb-2c02-45a9-8ab8-f371da211ce3\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f120ce3c-c634-405e-91d6-e985a86eeb9a\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/50c9bed2-b02b-4961-afed-943bc4dc953a\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c6a0ac06-6dab-4e46-bc05-5dfdc45169a7\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d37f6bf4-0ec8-470c-a3c0-934a183edc53\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/089cf642-3d21-4ec2-9ce7-c1beabd66605\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f9b34a3f-9ce0-4e28-8473-66b5ac45a6f7\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a6c7405d-4157-4066-850f-b75a3e56da81\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/16b2aa63-3994-41e9-821a-8cdab89161e2\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f5e0135d-ecde-4472-82d3-86b045916ef8\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/eb7ec4b9-1db2-49a2-9f59-db616f06e008\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/11537b84-4fcd-4916-acd5-f39e3be3d6cc\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6b74e579-1d36-4962-b5a4-8bdc3aeaaa97\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c0a90bef-838c-479d-b011-dfa25420a72d\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d058dedd-520d-4b1f-9a7f-ca84031a2dd5\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0135d197-86ae-4ce4-a0c1-f5a4ff4f651a\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/efe6aa99-a5aa-43e3-a83d-ab0657f80b8e\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1128659f-8bc2-4f6c-af78-c174ec5bac9f\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/e1d712ac-4928-44e6-88cc-fe568a837152\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a13cd886-f2cf-43de-a56b-092ff8ca7d59\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8993d52c-0e7f-44b3-bf6a-360d4ea6c773\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/7d835d6f-d41c-4d8c-a2a9-f3d92ce1a4b4\",\"moduleSequenceNumber\":261},{\"filename\":\"/cct/triangle.js\",\"url\":\"blob:https://danielyxie.github.io/94d5471d-baf8-415d-b5fa-0d9a768c17e9\",\"moduleSequenceNumber\":469}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":728,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    char_index,\\n    is_alphabetic,\\n    log_cct_failure,\\n    print_error,\\n    print_success,\\n} from \\\"/lib/cct.js\\\";\\nimport { vigenere_square } from \\\"/lib/constant/cct.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Pad the key so that it is the same length as the plaintext.\\n *\\n * @param plaintext We want to encrypt this string.  Cannot be empty string.\\n * @param key Encryption is done using this key.  Cannot be empty string.\\n * @return A string representing the key, possibly padded.  If the plaintext\\n *     and key are of the same length, then return the original key.\\n */\\nfunction pad_key(plaintext, key) {\\n    assert(plaintext.length > 0);\\n    assert(key.length > 0);\\n    if (plaintext.length === key.length) {\\n        return key;\\n    }\\n    let new_key = String(key);\\n    let i = 0;\\n    let n = 0;\\n    while (new_key.length < plaintext.length) {\\n        new_key += key[i];\\n        n++;\\n        i = n % key.length;\\n    }\\n    assert(new_key.length === plaintext.length);\\n    assert(new_key.length > key.length);\\n    return new_key;\\n}\\n\\n/**\\n * Vigenère encryption.  We encrypt only uppercase letters of the English\\n * alphabet.  All other characters are ignored.\\n *\\n * @param plaintext We want to encrypt this string.  Cannot be empty string.\\n * @param key Encryption is done using this key.  Cannot be empty string.\\n * @return A ciphertext encrypted using the Vigenère cipher.\\n */\\nfunction vigenere(plaintext, key) {\\n    // Sanity checks.\\n    assert(plaintext.length > 0);\\n    assert(key.length > 0);\\n    // Encryption.\\n    const ptxt = plaintext.toUpperCase();\\n    const pk = pad_key(plaintext, key);\\n    let ciphertext = \\\"\\\";\\n    const matrix = Array.from(vigenere_square);\\n    for (let i = 0; i < ptxt.length; i++) {\\n        if (!is_alphabetic(ptxt[i])) {\\n            ciphertext += ptxt[i];\\n            continue;\\n        }\\n        const row = char_index(ptxt[i]);\\n        const col = char_index(pk[i]);\\n        ciphertext += matrix[row][col];\\n    }\\n    assert(ciphertext.length === plaintext.length);\\n    return ciphertext;\\n}\\n\\n/**\\n * Encryption II: Vigenère Cipher: Vigenère cipher is a type of polyalphabetic\\n * substitution.  It uses the Vigenère square to encrypt and decrypt plaintext\\n * with a keyword.  Vigenère square:\\n *\\n *     A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\\n *   +====================================================\\n * A | A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\\n * B | B C D E F G H I J K L M N O P Q R S T U V W X Y Z A\\n * C | C D E F G H I J K L M N O P Q R S T U V W X Y Z A B\\n * D | D E F G H I J K L M N O P Q R S T U V W X Y Z A B C\\n * E | E F G H I J K L M N O P Q R S T U V W X Y Z A B C D\\n * .......................................................\\n * Y | Y Z A B C D E F G H I J K L M N O P Q R S T U V W X\\n * Z | Z A B C D E F G H I J K L M N O P Q R S T U V W X Y\\n *\\n * For encryption each letter of the plaintext is paired with the corresponding\\n * letter of a repeating keyword. For example, the plaintext DASHBOARD is\\n * encrypted with the keyword LINUX:\\n *\\n * Plaintext: DASHBOARD\\n *   Keyword: LINUXLINU\\n *\\n * So, the first letter D is paired with the first letter of the key L.\\n * Therefore, row D and column L of the Vigenère square are used to get the\\n * first cipher letter O.  This must be repeated for the whole ciphertext.  You\\n * are given an array with two elements.  The first element is the plaintext,\\n * the second element is the keyword.  Return the ciphertext as uppercase\\n * string.\\n *\\n * This is Vigenère encryption, where the plaintext alphabet is the uppercase\\n * characters of the English alphabet.\\n *\\n * Usage: run cct/vigenere.js [cct] [hostname]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // The file name of the coding contract.\\n    const cct = ns.args[0];\\n    // The hostname of the server where the coding contract is located.\\n    const host = ns.args[1];\\n    // Solve the coding contract.\\n    const [plaintext, key] = ns.codingcontract.getData(cct, host);\\n    const result = ns.codingcontract.attempt(\\n        vigenere(plaintext, key),\\n        cct,\\n        host,\\n        {\\n            returnReward: true,\\n        }\\n    );\\n    // Log the result in case of failure.\\n    if (result.length === 0) {\\n        const log = \\\"/cct/vigenere.txt\\\";\\n        const data = `[${plaintext}, ${key}]`;\\n        await log_cct_failure(ns, log, cct, host, data);\\n        print_error(ns, host, cct);\\n        return;\\n    }\\n    print_success(ns, host, cct, result);\\n}\\n\",\"filename\":\"/cct/vigenere.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f34d1067-d608-454d-abf6-10e769465452\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7afa4494-0a0f-4ad5-b7db-e70597edb368\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/aa50abda-7de3-46c7-ae09-182c4700240a\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/09fe6a18-5257-42da-bc7e-18b328240681\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9b0578cf-e095-495c-bbf5-20c4bf26ef6d\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4817aa07-810d-41e6-b3cb-f42767a53d00\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/84f11efa-44c7-4fd9-870d-fa26ef4db765\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/49999786-14af-4427-afb4-0cd6445a02c2\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/be718b7c-6726-46f7-a33f-d7e907516663\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/cct.js\",\"url\":\"blob:https://danielyxie.github.io/41973488-d398-4988-a794-6b14c362d180\",\"moduleSequenceNumber\":68963},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d5eb3fe4-1767-430b-a47a-d52da70760a3\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/609d8872-dca5-44f6-b41f-5a821522e500\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f12b30d3-4852-4e6c-a36f-2b2cc212d0c5\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/98cc245b-a49e-4c33-95b2-f78fb34f9d6a\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7dae6e66-3fec-4535-9bb0-8e81c156f162\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e3b72f10-79d0-4b16-9aab-c9c62c3bceee\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3e4e052f-7a9a-446f-91c3-2806a4d035a8\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f0819aff-50f5-4e02-8378-04e601e29f5b\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9e7f19b9-93e9-4252-bb47-3da59c8e2580\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2f9dfc55-7829-425e-ba81-fd0c062991c1\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/476b707d-91a5-48df-89b9-0dc3db152321\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/10ae8fd2-2768-4005-b90d-23207246ebdc\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cf228a41-7d7d-47d5-a4e1-2a50640460e4\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3755f6dc-256f-42d5-b7f7-042b207942a1\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/79aa1a72-dc98-46ab-b139-1fa81c6cfdc4\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/922e4cf8-ef40-4059-b319-ba36d620172a\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/686411dc-c9f5-4cd0-b7d8-9652d30b0a7c\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/29cb499d-1de6-4ac7-86b1-a01ed9e86a49\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7bce5c07-1bcb-44c8-9d39-bcf128c0316b\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/320e93ef-8ac4-4511-b439-1b30d8c72c9b\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d8c29898-0f6d-4af0-ae29-0a751b445895\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b55b0820-8670-4e9b-9982-2444b202ada8\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/cct.js\",\"url\":\"blob:https://danielyxie.github.io/44214066-48a1-4343-98b1-496393f69ae2\",\"moduleSequenceNumber\":68960},{\"filename\":\"/cct/vigenere.js\",\"url\":\"blob:https://danielyxie.github.io/f7f8c18e-175d-41ff-829a-7893016c0096\",\"moduleSequenceNumber\":90360}],\"dependents\":[],\"ramUsage\":16.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":729,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"codingcontract.getData\",\"cost\":5},{\"type\":\"fn\",\"name\":\"codingcontract.attempt\",\"cost\":10}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { corp, corp_t } from \\\"/lib/constant/corp.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { Corporation } from \\\"/lib/corporation/corp.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_corporation_api } from \\\"/lib/source.js\\\";\\n\\n/**\\n * Create a corporation.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function create_corp(ns) {\\n    const org = new Corporation(ns);\\n    if (org.has_corp()) {\\n        log(ns, \\\"Manage a corporation\\\");\\n        return;\\n    }\\n    while (!org.create()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    log(ns, \\\"Create and manage a corporation\\\");\\n}\\n\\n/**\\n * Expand our divisions by opening offices in other cities.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction expand_city(ns) {\\n    const org = new Corporation(ns);\\n    for (const div of org.all_divisions()) {\\n        cities.all.forEach((ct) => {\\n            if (!org.has_division_office(div, ct)) {\\n                org.expand_city(div, ct);\\n                org.buy_warehouse(div, ct);\\n            }\\n            org.warehouse_init_upgrade(div, ct);\\n        });\\n    }\\n}\\n\\n/**\\n * Expand into other industries.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction expand_industry(ns) {\\n    const org = new Corporation(ns);\\n    org.expand_industry();\\n}\\n\\n/**\\n * Whether we have access to the Office and Warehouse APIs.  We have permanent\\n * access to these APIs after we have destroyed BN3.3.\\n */\\nfunction has_office_warehouse_api(ns) {\\n    const org = new Corporation(ns);\\n    return (\\n        org.has_unlock_upgrade(corp.unlock.OFFICE)\\n        && org.has_unlock_upgrade(corp.unlock.WAREHOUSE)\\n    );\\n}\\n\\n/**\\n * Hire AdVert.inc to advertise for our company.\\n */\\nfunction hire_advert(ns) {\\n    const org = new Corporation(ns);\\n    org.all_divisions().forEach((div) => org.hire_advert(div));\\n}\\n\\n/**\\n * The initial bulk purchase of these materials:\\n *\\n * (1) Hardware.  We want a total of 125.\\n * (2) AI Cores.  We want a total of 75.\\n * (3) Real Estate.  We want a total of 27k.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction initial_bulk_purchase(ns) {\\n    const org = new Corporation(ns);\\n    const material = [\\n        corp.material.AI,\\n        corp.material.HARDWARE,\\n        corp.material.LAND,\\n    ];\\n    const amount = [\\n        corp_t.material.ai.buy.INIT_BULK,\\n        corp_t.material.hardware.buy.INIT_BULK,\\n        corp_t.material.land.buy.INIT_BULK,\\n    ];\\n    for (let i = 0; i < material.length; i++) {\\n        org.material_bulk_buy(material[i], amount[i]);\\n    }\\n}\\n\\n/**\\n * Hire 3 employees for each new office in each city.  For each office, assign\\n * an employee to each of the following positions: Business, Engineer, and\\n * Operations.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction initial_hire(ns) {\\n    const org = new Corporation(ns);\\n    for (const div of org.all_divisions()) {\\n        cities.all.forEach((ct) => org.initial_hire(div, ct));\\n    }\\n}\\n\\n/**\\n * Add some levels to various upgrades.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction initial_level_upgrade(ns) {\\n    const org = new Corporation(ns);\\n    const upgrade = [\\n        corp.upgrade.FOCUS,\\n        corp.upgrade.NEURAL,\\n        corp.upgrade.SPEECH,\\n        corp.upgrade.INJECTOR,\\n        corp.upgrade.FACTORY,\\n    ];\\n    for (let i = 0; i < corp_t.upgrade.INIT_LEVEL; i++) {\\n        upgrade.forEach((upg) => org.level_upgrade(upg));\\n    }\\n}\\n\\n/**\\n * The initial selling of materials.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction initial_material_sell(ns) {\\n    const org = new Corporation(ns);\\n    for (const div of org.all_divisions()) {\\n        cities.all.forEach((ct) => {\\n            org.material_initial_sell(div, ct, corp.material.FOOD);\\n            org.material_initial_sell(div, ct, corp.material.PLANT);\\n        });\\n    }\\n}\\n\\n/**\\n * The initial setup of our corporation.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction stage_one(ns) {\\n    expand_industry(ns);\\n    expand_city(ns);\\n    unlock_upgrade(ns);\\n    initial_hire(ns);\\n    hire_advert(ns);\\n    initial_material_sell(ns);\\n    initial_level_upgrade(ns);\\n    initial_bulk_purchase(ns);\\n}\\n\\n/**\\n * Purchase an unlock upgrade.  This is a one-time unlockable upgrade.  It\\n * applies to the entire corporation and cannot be levelled.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction unlock_upgrade(ns) {\\n    const org = new Corporation(ns);\\n    if (!org.has_unlock_upgrade(corp.unlock.SMART)) {\\n        org.buy_unlock_upgrade(corp.unlock.SMART);\\n        org.enable_smart_supply();\\n    }\\n}\\n\\n/**\\n * Create and manage a corporation.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Sanity check.\\n    if (!has_corporation_api(ns)) {\\n        log(ns, \\\"No access to Corporation API\\\", colour.RED);\\n        return;\\n    }\\n    // Create our corporation.  If we do not have access to the Office and\\n    // Warehouse APIs, then we cannot automate the early stages of our\\n    // corporation.  We want to automate as much of the game as possible.\\n    // Without the above APIs, quit the script as soon as possible.\\n    await create_corp(ns);\\n    if (!has_office_warehouse_api(ns)) {\\n        log(ns, \\\"No access to Warehouse and/or Office APIs\\\", colour.RED);\\n        return;\\n    }\\n    // Manage our corporation.\\n    stage_one(ns);\\n}\\n\",\"filename\":\"/corporation/corp.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/09eef65f-c8c8-4261-ba7e-92849f21455d\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2c82abff-8f0e-4de6-a50a-8280d5d2e567\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7f9ef7c1-31b5-4bdc-b440-2d0f2fb92cf7\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0311dffb-59c4-4c43-a1e8-29429e376082\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1d13a3c2-e1e8-4007-bf05-1a6e5103a219\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b24cb20d-c28f-45a1-9150-f357429424c5\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4ca41d21-79f9-46de-ac68-4f8c86b43c9c\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/19ff375b-25f2-4626-8c37-b3aaa9f8a1e0\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e57cf146-2968-4d00-975c-b3fc7d7df3f7\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/bc2de97a-742e-42e8-8809-f26870073452\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/125578ce-5077-4390-a26a-23092f10ad83\",\"moduleSequenceNumber\":68961},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/12ce596c-54dd-4723-95c2-43848d384f3c\",\"moduleSequenceNumber\":69000},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0c7dcf4d-2494-4f44-9a01-aee346afbc17\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1da44733-f5bb-4fdf-9065-b0de232ce9d1\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ba567d16-bfc6-4d16-96ad-28793e88e27d\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/766af293-a529-4b64-96a5-8acb02e72b51\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/17bde674-925b-434d-b61d-df3f27246080\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/28f1697f-8107-4427-8c5c-252184c4333f\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/74f5c664-c5a9-4381-b191-9f05ba3d2f58\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d03c42d8-fd75-4c5b-8aab-4bc4bc06bb98\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fcad248d-dfef-40c9-ab4c-bbc36bb75768\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c9cb6881-92f6-458c-a35f-829678e0abaf\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/f386d6f8-6754-4cce-b8f7-1b0c57f16b93\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c6e46629-523f-4088-b371-9b5c6146e581\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/182fc2a2-fbc3-4dfc-986c-b106e55248db\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c4d4303c-6d5d-435d-acfd-ddbd72ab6cb4\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d44b9c98-f6f1-497a-9a87-75508c2795b2\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/24e1e987-1644-4919-9ef2-3cb3b4e78136\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4a7fff91-804c-452c-b39e-30b3141276cf\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e5e2b959-55df-43d9-9bd8-e75ae171d046\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ea3df9b4-4255-4ece-a51b-72409648eb72\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7f62ccd1-fd5c-44e9-ac5f-f8d07d2eb265\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c8ead3b9-4fb9-452e-9c2f-03ebc0c2ac9b\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e5d4d299-ff9b-463f-bafb-b5b2470c69cd\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/08de8b4f-7ec2-439d-b0e6-ce61792bed2f\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1cce63ff-2e44-493a-ae0c-d6aa30e77e54\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a6850b42-9680-47f9-a3d2-0598e052f3a5\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/14104a10-782d-475f-b0d9-4b0a5f303be8\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/91117038-2b46-449a-8d32-38dd2a02b695\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/20cc7106-9402-4f63-a927-99be164e356b\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9c3d6a60-b761-4c84-aacb-246c0988268d\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/910f52d8-4f5c-45fa-9adf-1a0d6864791d\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9829be98-62a9-4db0-99f4-8f9e79b2f79d\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/94bbfa23-d656-4c55-b0df-cd8f5942010b\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/a45ff5da-6ae4-494b-bf7f-d261e71e37ed\",\"moduleSequenceNumber\":68986},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ed7de72b-c730-4096-ba50-c6daecfc8194\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/corp.js\",\"url\":\"blob:https://danielyxie.github.io/7cabfe76-800e-4aec-bcdc-b8697816e542\",\"moduleSequenceNumber\":68964},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/01776be0-353a-40e1-8139-b9718922e3e4\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/5e4fc175-e64a-4f5e-b287-361e5ab2ba4a\",\"moduleSequenceNumber\":68961},{\"filename\":\"/lib/corporation/corp.js\",\"url\":\"blob:https://danielyxie.github.io/bc5ead62-093c-4599-b782-23d61ccfeae9\",\"moduleSequenceNumber\":68980},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/05d0e6c4-e2f8-479a-9c14-d906f7db7be2\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3c467284-3d90-47d4-9200-9f95e6128715\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/638d340f-f299-4ee9-8441-af7c059be321\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/corp.js\",\"url\":\"blob:https://danielyxie.github.io/725b1450-686a-4310-ae4a-adfb8bdfdb72\",\"moduleSequenceNumber\":68964},{\"filename\":\"/corporation/corp.js\",\"url\":\"blob:https://danielyxie.github.io/48885209-33a2-43fb-be75-808f01bbe538\",\"moduleSequenceNumber\":69071}],\"dependents\":[],\"ramUsage\":9.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":730,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport {\\n    augment_to_install,\\n    purchase_augment,\\n} from \\\"/lib/singularity/augment.js\\\";\\nimport { has_gang_api } from \\\"/lib/source.js\\\";\\n\\n/**\\n * Purchase Augmentations from our gang faction.\\n *\\n * @param ns The Netscript API.\\n * @return True if we bought at least one Augmentation; false otherwise.\\n */\\nasync function buy_augment(ns) {\\n    const { faction } = ns.gang.getGangInformation();\\n    await purchase_augment(\\n        ns,\\n        faction,\\n        bool.NO_STOP_TRADE,\\n        bool.NO_BUY_NFG,\\n        bool.NO_RAISE_MONEY\\n    );\\n    const to_install = augment_to_install(ns);\\n    return to_install.length > 0;\\n}\\n\\n/**\\n * Purchase Augmentations from the faction in which we created a gang.  We use\\n * any money available to us.  This should help to speed up our run through a\\n * BitNode.\\n *\\n * Usage: run gang/augment.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Sanity check.\\n    if (!has_gang_api(ns)) {\\n        log(ns, \\\"No access to Gang API\\\", colour.RED);\\n        return;\\n    }\\n    // The update loop.\\n    while (!ns.gang.inGang()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    const { faction } = ns.gang.getGangInformation();\\n    log(ns, `Purchasing Augmentations from gang faction: ${faction}`);\\n    const success = await buy_augment(ns);\\n    if (success) {\\n        log(ns, `Augmentations bought from ${faction}`);\\n        // The next script in the load chain.\\n        const script = \\\"/singularity/home.js\\\";\\n        const nthread = 1;\\n        ns.exec(script, home, nthread);\\n        return;\\n    }\\n    log(ns, `No Augmentations bought from ${faction}`);\\n}\\n\",\"filename\":\"/gang/augment.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":58.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":731,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport {\\n    armour,\\n    gang_augment,\\n    gang_t,\\n    members,\\n    penalty_t,\\n    rootkit,\\n    task_t,\\n    vehicle,\\n    weapon,\\n} from \\\"/lib/constant/gang.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { Gangster } from \\\"/lib/gang/gangster.js\\\";\\nimport { reassign_vigilante, strongest_member } from \\\"/lib/gang/util.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Ascend a gang member.  Ascension provides a permanent boost to a member's\\n * stat multipliers.  However, the costs include:\\n *\\n * (1) Reset the member's progress and stats.\\n * (2) Lose all non-Augmentation equipment.\\n * (3) Lose all respect points gained by the member.  The respect points gained\\n *     by this member will be deducted from our total respect.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction ascend(ns) {\\n    const member = ns.gang.getMemberNames();\\n    if (member.length === 0) {\\n        return;\\n    }\\n    const gangster = new Gangster(ns);\\n    member.forEach((s) => gangster.ascend(s));\\n}\\n\\n/**\\n * Marshall our forces on the border and be ready for war.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction casus_belli(ns) {\\n    assert(ns.gang.getGangInformation().territoryWarfareEngaged);\\n    assert(has_max_members(ns));\\n    const gangster = new Gangster(ns);\\n    gangster.turf_war(ns.gang.getMemberNames());\\n}\\n\\n/**\\n * Choose gang members to be assigned to territory warfare.  This is territory\\n * warfare to help increase our gang power, not a clash against a rival gang.\\n * We want the following members to engage in turf war:\\n *\\n * (1) Vanguard x 1\\n * (2) Artillery x 1\\n * (3) Pilot x 1\\n * (4) Punk x 1\\n *\\n * As we have multiple gang members who hold the role of Punk, choose the\\n * strongest of those members.\\n *\\n * @param ns The Netscript API.\\n * @return An array of member names.  This is never an empty array.\\n */\\nfunction choose_warriors(ns) {\\n    const gangster = new Gangster(ns);\\n    const combatant = ns.gang\\n        .getMemberNames()\\n        .filter(\\n            (s) => gangster.is_vanguard(s)\\n                || gangster.is_artillery(s)\\n                || gangster.is_pilot(s)\\n        );\\n    assert(combatant.length > 0);\\n    // We want at most 1 Punk assigned to territory warfare.\\n    const punk = ns.gang.getMemberNames().filter((s) => gangster.is_punk(s));\\n    const punk_warrior = punk.filter((p) => gangster.is_warrior(p));\\n    assert(punk.length > 0);\\n    let warrior = [];\\n    if (punk_warrior.length > 0) {\\n        warrior = combatant.concat([]);\\n    } else {\\n        warrior = combatant.concat([strongest_member(ns, punk)]);\\n    }\\n    assert(warrior.length > 0);\\n    assert(warrior.length <= members.WARRIOR);\\n    return warrior;\\n}\\n\\n/**\\n * Create a gang within the given criminal organization.  If we are in a\\n * BitNode other than BN2.x, we must have a certain amount of negative karma\\n * as a pre-requisite for creating a gang.\\n *\\n * @param ns The Netscript API.\\n * @param fac A string representing the name of a criminal organization.\\n */\\nasync function create_gang(ns, fac) {\\n    assert(is_valid_faction(fac));\\n    if (ns.gang.inGang()) {\\n        log(ns, `Manage a gang in ${fac}`);\\n        return;\\n    }\\n    log(ns, `Create and manage a gang in ${fac}`);\\n    while (!ns.gang.inGang()) {\\n        ns.gang.createGang(fac);\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n}\\n\\n/**\\n * Reassign gang members to various tasks that help to lower our penalty.  As\\n * this is a criminal gang, our members can only engage in vigilante justice\\n * and are not able to engage in ethical hacking.  Choose a number of our\\n * gangsters and set them to vigilante justice.  The remaining members are given\\n * jobs that attract less wanted levels than their current jobs.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction decrease_penalty(ns) {\\n    reassign_vigilante(ns);\\n    const combatant = [];\\n    const other = [];\\n    const trainee = [];\\n    const gangster = new Gangster(ns);\\n    const candidate = ns.gang\\n        .getMemberNames()\\n        .filter((s) => !gangster.is_vigilante(s));\\n    candidate.forEach((s) => {\\n        if (gangster.needs_training(s)) {\\n            trainee.push(s);\\n        } else if (gangster.is_combatant(s)) {\\n            combatant.push(s);\\n        } else if (gangster.is_miscellaneous(s)) {\\n            other.push(s);\\n        }\\n    });\\n    gangster.train(trainee);\\n    graduate(ns);\\n    gangster.extort(combatant);\\n    gangster.blackmail(other);\\n}\\n\\n/**\\n * All Augmentations that raise the defense of a gang member.\\n */\\nfunction defensive_equipment_augment() {\\n    return Object.values(gang_augment).filter(\\n        (a) => a !== gang_augment.ARMS\\n            && a !== gang_augment.LEGS\\n            && a !== gang_augment.HEART\\n            && a !== gang_augment.WIRE\\n            && a !== gang_augment.NEURAL\\n            && a !== gang_augment.DATA\\n    );\\n}\\n\\n/**\\n * All weapons that raise the defense of a gang member.\\n */\\nfunction defensive_equipment_weapon() {\\n    return Object.values(weapon).filter((w) => w !== weapon.AWM);\\n}\\n\\n/**\\n * Whether to engage in territory warfare against a rival gang.  By default,\\n * we do not engage in turf warfare.  However, we enable turf warfare provided\\n * that the following conditions are satisfied:\\n *\\n * (1) We have the maximum number of gang members.\\n * (2) Our chance of winning against a rival gang is at least a given\\n *     percentage.\\n *\\n * However, if our gang already has taken over 100% of the territory, then\\n * there is no need to engage in turf warfare.\\n *\\n * @param ns The Netscript API.\\n * @return True if we are to engage in territory warfare against another gang;\\n *     false otherwise.\\n */\\nfunction enable_turf_war(ns) {\\n    if (has_all_turf(ns)) {\\n        return bool.NO_WAR;\\n    }\\n    if (has_max_members(ns) && min_victory_chance(ns) >= gang_t.WIN) {\\n        return bool.WAR;\\n    }\\n    return bool.NO_WAR;\\n}\\n\\n/**\\n * Attempt to equip each gang member with each of the following:\\n *\\n * (1) Augmentation\\n * (2) weapon\\n * (3) armour\\n * (4) vehicle\\n * (5) rootkit\\n *\\n * If a member already has an Augmentation, weapon, armour, vehicle, or rootkit\\n * then we attempt to give them another piece of equipment.  Our attempt can\\n * succeed or fail, depending on whether we have sufficient funds to purchase\\n * equipment.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction equip(ns) {\\n    const gangster = new Gangster(ns);\\n    for (const s of ns.gang.getMemberNames()) {\\n        // Equip items that raise a member's defense.  Higher defense translates\\n        // to a lower probability of death during a clash against a rival gang.\\n        // Always try to first purchase an Augmentation that raises defense\\n        // because the effects of Augmentations are persistent after an\\n        // ascension.  Next, we equip weapons that raise defense.  Not all\\n        // weapons raise the defense of a gang member.  Finally, we equip armour\\n        // pieces, all of which raise defense.\\n        equip_augment_def(ns, s);\\n        equip_weapon_def(ns, s);\\n        for (const amr of Object.values(armour)) {\\n            if (gangster.has_armour(s, amr)) {\\n                continue;\\n            }\\n            if (gangster.equip_armour(s, amr)) {\\n                break;\\n            }\\n        }\\n        // Now equip items that raise other stats.  Ensure we have first\\n        // equipped all items that raise defense.\\n        if (!has_all_def_equipment(ns, s)) {\\n            continue;\\n        }\\n        // Try to equip other Augmentations.\\n        const other_augment = Object.values(gang_augment).filter(\\n            (a) => !defensive_equipment_augment().includes(a)\\n        );\\n        for (const aug of other_augment) {\\n            if (gangster.has_augment(s, aug)) {\\n                continue;\\n            }\\n            if (gangster.equip_augment(s, aug)) {\\n                break;\\n            }\\n        }\\n        // Try to equip other weapons.\\n        const other_weapon = Object.values(weapon).filter(\\n            (w) => !defensive_equipment_weapon().includes(w)\\n        );\\n        for (const wpn of other_weapon) {\\n            if (gangster.has_weapon(s, wpn)) {\\n                continue;\\n            }\\n            if (gangster.equip_weapon(s, wpn)) {\\n                break;\\n            }\\n        }\\n        // Try to equip a new vehicle.\\n        for (const vhc of Object.values(vehicle)) {\\n            if (gangster.has_vehicle(s, vhc)) {\\n                continue;\\n            }\\n            if (gangster.equip_vehicle(s, vhc)) {\\n                break;\\n            }\\n        }\\n        // Try to equip a rootkit.  This should be low on our priority list\\n        // because members of a criminal gang primarily depend on their combat\\n        // stats and Charisma.\\n        for (const kit of Object.values(rootkit)) {\\n            if (gangster.has_rootkit(s, kit)) {\\n                continue;\\n            }\\n            if (gangster.equip_rootkit(s, kit)) {\\n                break;\\n            }\\n        }\\n    }\\n}\\n\\n/**\\n * Equip a gang member with various Augmentations that raise their defense.  The\\n * effects of Augmentations are persistent and a member does not lose them after\\n * an ascension.  We want to equip a member with Augmentations that raise their\\n * defense.  The higher is the defense of a member, the lower is the probability\\n * of death during a clash against a rival gang.  The following Augmentations\\n * raise defense:\\n *\\n * (1) Bionic Spine: 1.15\\n * (2) BrachiBlades: 1.4\\n * (3) Nanofiber Weave: 1.2\\n * (4) Synfibril Muscle: 1.3\\n * (5) Graphene Bone Lacings: 1.7\\n *\\n * Unfortunately, the following Augmentations do not raise defense:\\n *\\n * (1) Bionic Arms\\n * (2) Bionic Legs\\n * (3) Synthetic Heart\\n * (4) BitWire\\n * (5) Neuralstimulator\\n * (6) DataJack\\n *\\n * Refer to these files for more detail:\\n *\\n * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Gang/Gang.ts\\n * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Gang/data/upgrades.ts\\n *\\n * @param ns The Netscript API.\\n * @param name A string representing the name of our gang member.\\n */\\nfunction equip_augment_def(ns, name) {\\n    const gangster = new Gangster(ns);\\n    for (const aug of defensive_equipment_augment()) {\\n        if (gangster.has_augment(name, aug)) {\\n            continue;\\n        }\\n        if (gangster.equip_augment(name, aug)) {\\n            return;\\n        }\\n    }\\n}\\n\\n/**\\n * Equip a gang member with various weapons that raise their defense.  Weapons\\n * are important because most of them raise a gangster's defense.  While engaged\\n * in a clash against a rival gang, the defense of our gangster helps to lower\\n * the chance of death.  The higher is our member's defense, the lower is the\\n * probability of death.  The following weapons raise defense:\\n *\\n * (1) Baseball Bat: 1.04\\n * (2) Katana: 1.08\\n * (3) Glock 18C: 1.1\\n * (4) P90C: 1.1\\n * (5) Steyr AUG: 1.15\\n * (6) AK-47: 1.2\\n * (7) M15A10 Assault Rifle: 1.25\\n *\\n * Unfortunately, the AWM Sniper Rifle does not raise our member's defense.\\n * Refer to these files for more detail:\\n *\\n * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Gang/Gang.ts\\n * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Gang/data/upgrades.ts\\n *\\n * @param ns The Netscript API.\\n * @param name A string representing the name of our gang member.\\n */\\nfunction equip_weapon_def(ns, name) {\\n    const gangster = new Gangster(ns);\\n    for (const wpn of defensive_equipment_weapon()) {\\n        if (gangster.has_weapon(name, wpn)) {\\n            continue;\\n        }\\n        if (gangster.equip_weapon(name, wpn)) {\\n            return;\\n        }\\n    }\\n}\\n\\n/**\\n * Once a new member has completed their training, graduate and assign them\\n * their first job.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction graduate(ns) {\\n    const member = ns.gang.getMemberNames();\\n    const gangster = new Gangster(ns);\\n    gangster.graduate_combatant(member, task_t.COMBAT);\\n    gangster.graduate_hacker(member, task_t.HACK);\\n    gangster.graduate_other(member, task_t.CHARISMA);\\n}\\n\\n/**\\n * Whether we have equipped all items that raise a gang member's defense.\\n * Defense is important during a clash against a rival gang.  The higher is a\\n * member's defense, the lower is the probability of death during the clash.\\n *\\n * @param ns The Netscript API.\\n * @param name A string representing the name of a gang member.\\n * @return True if a gang member has all equipment that raise their defense;\\n *     false otherwise.\\n */\\nfunction has_all_def_equipment(ns, name) {\\n    const gangster = new Gangster(ns);\\n    for (const aug of defensive_equipment_augment()) {\\n        if (!gangster.has_augment(name, aug)) {\\n            return bool.NOT;\\n        }\\n    }\\n    for (const wpn of defensive_equipment_weapon()) {\\n        if (!gangster.has_weapon(name, wpn)) {\\n            return bool.NOT;\\n        }\\n    }\\n    for (const amr of Object.values(armour)) {\\n        if (!gangster.has_armour(name, amr)) {\\n            return bool.NOT;\\n        }\\n    }\\n    return bool.HAS;\\n}\\n\\n/**\\n * Whether our gang already controls 100% of the territory.\\n *\\n * @param ns The Netscript API.\\n * @return True if we already have control over 100% of the territory;\\n *     false otherwise.\\n */\\nfunction has_all_turf(ns) {\\n    return ns.gang.getGangInformation().territory >= 1;\\n}\\n\\n/**\\n * Whether we have the maximum number of members in our gang.\\n *\\n * @param ns The Netscript API.\\n * @return True if our gang is at capacity; false otherwise.\\n */\\nfunction has_max_members(ns) {\\n    return members.MAX === ns.gang.getMemberNames().length;\\n}\\n\\n/**\\n * Whether any of our gang members are currently committing acts of terrorism.\\n *\\n * @param ns The Netscript API.\\n * @return True if at least one gang member is committing acts of terrorism;\\n *     false otherwise.\\n */\\nfunction has_terrorist(ns) {\\n    const gangster = new Gangster(ns);\\n    for (const s of ns.gang.getMemberNames()) {\\n        if (gangster.is_terrorist(s)) {\\n            return true;\\n        }\\n    }\\n    return false;\\n}\\n\\n/**\\n * Whether any of our gang members are currently on vigilante justice.\\n *\\n * @param ns The Netscript API.\\n * @return True if at least one gang member is currently assigned to vigilante\\n *     justice; false otherwise.\\n */\\nfunction has_vigilante(ns) {\\n    const gangster = new Gangster(ns);\\n    for (const s of ns.gang.getMemberNames()) {\\n        if (gangster.is_vigilante(s)) {\\n            return true;\\n        }\\n    }\\n    return false;\\n}\\n\\n/**\\n * Whether our gang is engaged in turf warfare.\\n *\\n * @param ns The Netscript API.\\n * @return True if our gang is engaged in turf warfare against a rival gang;\\n *     false otherwise.\\n */\\nfunction is_in_war(ns) {\\n    if (!ns.gang.getGangInformation().territoryWarfareEngaged) {\\n        return false;\\n    }\\n    const gangster = new Gangster(ns);\\n    const warrior = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_warrior(s));\\n    return warrior.length === members.MAX;\\n}\\n\\n/**\\n * Whether we are currently in a new tick.  Each tick lasts for approximately\\n * the time period as defined by the constant gang_t.TICK.  At the start of\\n * each tick, there is a chance for our gang to clash against a rival gang.\\n *\\n * @param ns The Netscript API.\\n * @param other An object containing information about other gangs.  The data\\n *     in the object should be from the previous tick.\\n * @return True if we are in a new tick; false otherwise.\\n */\\nfunction is_new_tick(ns, other) {\\n    const current = ns.gang.getOtherGangInformation();\\n    for (const g of Object.keys(current)) {\\n        if (\\n            current[g].power !== other[g].power\\n            || current[g].territory !== other[g].territory\\n        ) {\\n            return bool.NEW;\\n        }\\n    }\\n    return bool.NOT_NEW;\\n}\\n\\n/**\\n * Whether the given string represents the name of a criminal organization\\n * within which we can create a criminal gang.\\n *\\n * @param fac A string representing the name of a criminal organization.\\n * @return True if we can create a criminal gang within the given faction;\\n *     false otherwise.\\n */\\nfunction is_valid_faction(fac) {\\n    assert(fac.length > 0);\\n    const organization = [\\n        \\\"Slum Snakes\\\",\\n        \\\"Speakers for the Dead\\\",\\n        \\\"Tetrads\\\",\\n        \\\"The Dark Army\\\",\\n        \\\"The Syndicate\\\",\\n    ];\\n    return organization.includes(fac);\\n}\\n\\n/**\\n * The minimum chance of winning a clash against any rival gang.  The chance is\\n * reported as an integer percentage.  For example, if our chance to win a\\n * clash is 0.6879, we convert this to the percentage of 68.79 and take only\\n * the integer part, which in this case is 68%.\\n *\\n * @param ns The Netscript API.\\n * @return The minimum chance as an integer percentage of winning a clash\\n *     against any rival gang.\\n */\\nfunction min_victory_chance(ns) {\\n    let chance = Infinity;\\n    const our_gang = ns.gang.getGangInformation().faction;\\n    const other_gang = ns.gang.getOtherGangInformation();\\n    for (const g of Object.keys(other_gang)) {\\n        if (our_gang === g) {\\n            continue;\\n        }\\n        chance = Math.min(chance, ns.gang.getChanceToWinClash(g));\\n    }\\n    return Math.floor(chance * 100);\\n}\\n\\n/**\\n * Si vis pacem, para bellum.  Make preparation to increase our power.  We do\\n * not engage in turf warfare yet.  First, build our gang power.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction para_bellum(ns) {\\n    // If we already control 100% of the territory, there is no need to send\\n    // any gang member to turf warfare.\\n    if (has_all_turf(ns)) {\\n        return;\\n    }\\n    // We want at most members.WARRIOR members to be engaged in territory\\n    // warfare.  The remaining members should be in as high-paying jobs as\\n    // possible.  The 4 combatants can be assigned to arms trafficking and the\\n    // 4 miscellaneous members can be assigned to trafficking humans.  We can\\n    // have 8 members be involved in some form of trafficking.  However, we\\n    // also need 1 member to be committing acts of terrorism to help raise our\\n    // respect so we can recruit more members.  The number of members engaged\\n    // in some form of trafficking is effectively 7.  The subtraction of 1\\n    // accounts for the lone member who commits acts of terrorism.\\n    const threshold = members.MAX - members.WARRIOR - 1;\\n    // Not yet time to send gang members to turf warfare.\\n    const gangster = new Gangster(ns);\\n    const trafficker = ns.gang\\n        .getMemberNames()\\n        .filter(\\n            (s) => gangster.is_arms_trafficker(s)\\n                || gangster.is_human_trafficker(s)\\n        );\\n    if (trafficker.length < threshold) {\\n        return;\\n    }\\n    // Choose various combatants and reassign them to turf warfare.\\n    assert(trafficker.length >= threshold);\\n    gangster.turf_war(choose_warriors(ns));\\n}\\n\\n/**\\n * The penalty p is defined as the ratio of the wanted level over our respect.\\n * Multiply p by 100 and we see that the penalty expresses the wanted level as\\n * a percentage of our respect.  Tasks that our gang members engage in would\\n * take p percent longer as compared to when our wanted level is zero.  Note\\n * that the wanted level can never be lower than 1.  Aim to keep the penalty p\\n * below a certain fraction.\\n *\\n * @param ns The Netscript API.\\n * @return The penalty as a percentage.\\n */\\nfunction penalty(ns) {\\n    const wanted = ns.gang.getGangInformation().wantedLevel;\\n    const { respect } = ns.gang.getGangInformation();\\n    const p = Math.floor(100 * (wanted / respect));\\n    assert(p >= 0);\\n    return p;\\n}\\n\\n/**\\n * Reassign gang members to some other tasks.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign(ns) {\\n    reassign_combatant(ns);\\n    reassign_hacker(ns);\\n    reassign_miscellaneous(ns);\\n    reassign_from_neutral(ns);\\n}\\n\\n/**\\n * When we no longer need to lower our penalty, reassign our gang members to\\n * other jobs.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign_after_vigilante_justice(ns) {\\n    const gangster = new Gangster(ns);\\n    gangster.neutral(ns.gang.getMemberNames());\\n    update(ns);\\n}\\n\\n/**\\n * Following territory warfare against a rival gang, reassign our gang members\\n * to other jobs.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign_after_warfare(ns) {\\n    const gangster = new Gangster(ns);\\n    gangster.neutral(ns.gang.getMemberNames());\\n    update(ns);\\n}\\n\\n/**\\n * Reassign high-level gang members to trafficking illegal arms.  Reassign\\n * gang members if their Strength stat is in the half-open interval [min, max).\\n * That is, we include the minimum threshold but exclude the maximum threshold.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to traffick illegal arms.\\n * @param min The minimum value for the Strength stat.\\n * @param max The maximum value for the Strength stat.\\n */\\nfunction reassign_arms_trafficking(ns, member, min, max) {\\n    const gangster = new Gangster(ns);\\n    const candidate = [];\\n    for (const s of member) {\\n        if (!has_all_turf(ns)) {\\n            if (gangster.is_terrorist(s) || gangster.is_warrior(s)) {\\n                continue;\\n            }\\n        }\\n        if (min <= gangster.strength(s) && gangster.strength(s) < max) {\\n            candidate.push(s);\\n        }\\n    }\\n    gangster.traffick_arms(candidate);\\n}\\n\\n/**\\n * Reassign our miscellaneous gang members to threaten and blackmail\\n * high-profile targets.  Reassign our members if their Charisma stat is in the\\n * half-open interval [min, max).  We include the minimum threshold but exclude\\n * the maximum threshold.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to threaten and blackmail people.\\n * @param min The minimum value for the Charisma stat.\\n * @param max The maximum value for the Charisma stat.\\n */\\nfunction reassign_blackmail(ns, member, min, max) {\\n    const gangster = new Gangster(ns);\\n    const candidate = member.filter(\\n        (s) => min <= gangster.charisma(s) && gangster.charisma(s) < max\\n    );\\n    gangster.blackmail(candidate);\\n}\\n\\n/**\\n * Reassign combatants to other jobs.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign_combatant(ns) {\\n    const gangster = new Gangster(ns);\\n    const combatant = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_combatant(s));\\n    // Assign gang members with mid- to advanced-level stats to more\\n    // profitable jobs.\\n    reassign_extortion(ns, combatant, task_t.EXTORT, task_t.ROBBERY);\\n    reassign_robbery(ns, combatant, task_t.ROBBERY, task_t.TRAFFICK_ARMS);\\n    // Try to have at least one gang member assigned to commit acts of\\n    // terrorism.  This should help to increase our respect so we can recruit\\n    // more members.  However, if we already have the maximum number of\\n    // gangsters, then there is no need to have anyone be terrorists.\\n    reassign_terrorism(ns, combatant, task_t.TERROR, Infinity);\\n    // Assign other high-level members to trafficking illegal arms.\\n    reassign_arms_trafficking(ns, combatant, task_t.TRAFFICK_ARMS, Infinity);\\n}\\n\\n/**\\n * Reassign our miscellaneous gang members to run a con.  Reassign our members\\n * if their Charisma stat is in the half-open interval [min, max).  We include\\n * the minimum threshold but exclude the maximum threshold.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to run a con.\\n * @param min The minimum value for the Charisma stat.\\n * @param max The maximum value for the Charisma stat.\\n */\\nfunction reassign_con(ns, member, min, max) {\\n    const gangster = new Gangster(ns);\\n    const candidate = member.filter(\\n        (s) => min <= gangster.charisma(s) && gangster.charisma(s) < max\\n    );\\n    gangster.con(candidate);\\n}\\n\\n/**\\n * Reassign mid-level gang members to strongarm civilians on our turf.\\n * Reassign gang members if their Strength stat is in the half-open interval\\n * [min, max).  That is, we include the minimum threshold but exclude the\\n * maximum threshold.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to strongarm civilians.\\n * @param min The minimum value for the Strength stat.\\n * @param max The maximum value for the Strength stat.\\n */\\nfunction reassign_extortion(ns, member, min, max) {\\n    const gangster = new Gangster(ns);\\n    const candidate = member.filter(\\n        (s) => min <= gangster.strength(s) && gangster.strength(s) < max\\n    );\\n    gangster.extort(candidate);\\n}\\n\\n/**\\n * Reassign anyone who is in the neutral state to a default task.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign_from_neutral(ns) {\\n    const gangster = new Gangster(ns);\\n    const idle = ns.gang.getMemberNames().filter((s) => gangster.is_idle(s));\\n    if (idle.length === 0) {\\n        return;\\n    }\\n    const combatant = idle.filter((s) => gangster.is_combatant(s));\\n    const other = idle.filter(\\n        (s) => gangster.is_hacker(s) || gangster.is_miscellaneous(s)\\n    );\\n    gangster.extort(combatant);\\n    gangster.con(other);\\n}\\n\\n/**\\n * Reassign our Hacker to some other job.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign_hacker(ns) {\\n    const gangster = new Gangster(ns);\\n    const hacker = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_hacker(s));\\n    assert(hacker.length === 1);\\n    // This is not a hacking gang.  Reassign the Hacker to one of the jobs\\n    // normally done by a miscellaneous gang member.\\n    reassign_con(ns, hacker, task_t.CON, task_t.BLACKMAIL);\\n    reassign_blackmail(ns, hacker, task_t.BLACKMAIL, task_t.TRAFFICK_HUMAN);\\n    // If we already control 100% of the territory, then assign everyone to\\n    // trafficking illegal arms because this task generally earns more money\\n    // than human trafficking.\\n    if (has_all_turf(ns)) {\\n        reassign_arms_trafficking(ns, hacker, task_t.TRAFFICK_ARMS, Infinity);\\n        return;\\n    }\\n    reassign_human_trafficking(ns, hacker, task_t.TRAFFICK_HUMAN, Infinity);\\n}\\n\\n/**\\n * Reassign our miscellaneous gang members to engage in human trafficking.\\n * Reassign our members if their Charisma stat is in the half-open interval\\n * [min, max).  We include the minimum threshold but exclude the maximum\\n * threshold.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to operate a human trafficking ring.\\n * @param min The minimum value for the Charisma stat.\\n * @param max The maximum value for the Charisma stat.\\n */\\nfunction reassign_human_trafficking(ns, member, min, max) {\\n    const gangster = new Gangster(ns);\\n    const candidate = member.filter(\\n        (s) => min <= gangster.charisma(s) && gangster.charisma(s) < max\\n    );\\n    gangster.traffick_human(candidate);\\n}\\n\\n/**\\n * Reassign miscellaneous gang members to various jobs.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction reassign_miscellaneous(ns) {\\n    const gangster = new Gangster(ns);\\n    const other = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_miscellaneous(s));\\n    reassign_con(ns, other, task_t.CON, task_t.BLACKMAIL);\\n    reassign_blackmail(ns, other, task_t.BLACKMAIL, task_t.TRAFFICK_HUMAN);\\n    // If we already control 100% of the territory, then assign everyone to\\n    // trafficking illegal arms because this task generally earns more money\\n    // than human trafficking.\\n    if (has_all_turf(ns)) {\\n        reassign_arms_trafficking(ns, other, task_t.TRAFFICK_ARMS, Infinity);\\n        return;\\n    }\\n    reassign_human_trafficking(ns, other, task_t.TRAFFICK_HUMAN, Infinity);\\n}\\n\\n/**\\n * Reassign above mid-level gang members to armed robbery.  Reassign gang\\n * members if their Strength stat is in the half-open interval [min, max).\\n * That is, we include the minimum threshold but exclude the maximum threshold.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to armed robbery.\\n * @param min The minimum value for the Strength stat.\\n * @param max The maximum value for the Strength stat.\\n */\\nfunction reassign_robbery(ns, member, min, max) {\\n    const gangster = new Gangster(ns);\\n    const candidate = member.filter(\\n        (s) => min <= gangster.strength(s) && gangster.strength(s) < max\\n    );\\n    gangster.robbery(candidate);\\n}\\n\\n/**\\n * Reassign advanced-level gang members to commit acts of terrorism.  Reassign\\n * gang members if their Strength stat is in the half-open interval [min, max).\\n * That is, we include the minimum threshold but exclude the maximum threshold.\\n * We usually assign members to acts of terrorism because this task greatly\\n * increases respect, which in turn helps to recruit new members, but does not\\n * generate income.  However, if we already have the maximum number of members,\\n * there is no reason to have any terrorists around.  Only assign a limited\\n * number of members to terrorism.\\n *\\n * @param ns The Netscript API.\\n * @param member An array of member names.  We want to reassign these members\\n *     to acts of terrorism.\\n * @param min The minimum value for the Strength stat.\\n * @param max The maximum value for the Strength stat.\\n */\\nfunction reassign_terrorism(ns, member, min, max) {\\n    if (has_terrorist(ns) && !has_max_members(ns)) {\\n        return;\\n    }\\n    // We already have the maximum number of gang members.  Reassign the\\n    // terrorists to trafficking illegal arms.\\n    const gangster = new Gangster(ns);\\n    if (has_max_members(ns)) {\\n        const name = ns.gang\\n            .getMemberNames()\\n            .filter((s) => gangster.is_terrorist(s));\\n        gangster.traffick_arms(name);\\n        return;\\n    }\\n    assert(!has_terrorist(ns));\\n    assert(!has_max_members(ns));\\n    // We want our Vanguard to commit acts of terrorism.\\n    const vanguard = member.filter(\\n        (s) => gangster.is_vanguard(s)\\n            && min <= gangster.strength(s)\\n            && gangster.strength(s) < max\\n    );\\n    if (vanguard.length === 0) {\\n        return;\\n    }\\n    assert(vanguard.length === 1);\\n    gangster.terrorism(vanguard);\\n}\\n\\n/**\\n * Recruit as many new members as possible.  Set the newbies to train their\\n * various stats.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction recruit(ns) {\\n    const gangster = new Gangster(ns);\\n    if (ns.gang.getMemberNames().length < members.MAX) {\\n        const newbie = gangster.recruit();\\n        gangster.train(newbie);\\n        if (newbie.length > 0) {\\n            newbie.forEach((s) => log(ns, `Recruited new member: ${s}`));\\n        }\\n    }\\n}\\n\\n/**\\n * Retrain the stats of gang members as necessary.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction retrain(ns) {\\n    const gangster = new Gangster(ns);\\n    const member = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.needs_training(s));\\n    gangster.train(member);\\n}\\n\\n/**\\n * Manage our criminal gang.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction update(ns) {\\n    recruit(ns);\\n    retrain(ns);\\n    graduate(ns);\\n    // Ascend a gang member before we spend any more money on them.  After the\\n    // ascension, the member would lose all equipment and their stats would\\n    // reset.  We ascend the member now so down the pipeline we can retrain\\n    // and re-equip them.\\n    ascend(ns);\\n    equip(ns);\\n    // Do we have anyone on vigilante justice?\\n    if (has_vigilante(ns)) {\\n        if (penalty(ns) <= penalty_t.LOW) {\\n            reassign_after_vigilante_justice(ns);\\n            return;\\n        }\\n    }\\n    // Initially, our gang has a small number of members.  Assigning one or\\n    // more members to vigilante justice would do precious little to decrease\\n    // our wanted level.  With such a small membership, it is more important to\\n    // raise the members' stats and recruit more members than to lower our\\n    // wanted level.\\n    if (ns.gang.getMemberNames().length > members.HALF) {\\n        // Is our penalty too high?  If our penalty percentage exceeds a given\\n        // threshold, then reassign some gang members to vigilante justice in\\n        // order to lower our penalty.  Furthermore, reassign the remaining\\n        // members to jobs that attract a lower wanted level.\\n        if (penalty(ns) >= penalty_t.HIGH) {\\n            decrease_penalty(ns);\\n            return;\\n        }\\n    }\\n    reassign(ns);\\n    // Prepare for war.\\n    para_bellum(ns);\\n}\\n\\n/**\\n * Create and manage a criminal gang.  Our objective is to get a criminal gang\\n * started.  We let members train their stats.  Once a member graduates out of\\n * training, we set them to generate some money.  In the early stage of a\\n * BitNode, we need as many sources of income as possible and a criminal gang\\n * happens to be a source of revenue.\\n *\\n * This script accepts a command line argument, i.e. the name of the faction\\n * within which to create a criminal gang.  The faction must be a criminal\\n * organization.   We can create a criminal gang within any of the following\\n * criminal organizations:\\n *\\n * (1) Slum Snakes\\n * (2) Tetrads\\n * (3) The Syndicate\\n * (4) The Dark Army\\n * (5) Speakers for the Dead\\n *\\n * Usage: run gang/crime.js [faction]\\n * Example: run gang/crime.js \\\"Slum Snakes\\\"\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress various log messages.\\n    ns.disableLog(\\\"gang.setTerritoryWarfare\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Sanity checks.\\n    if (ns.args.length !== 1) {\\n        ns.tprint(\\\"Must provide the name of a criminal organization.\\\");\\n        return;\\n    }\\n    const faction = ns.args[0];\\n    if (!is_valid_faction(faction)) {\\n        ns.tprint(`Cannot create criminal gang within faction: ${faction}`);\\n        return;\\n    }\\n    // Create our criminal gang and recruit the first crop of gangsters.  By\\n    // default, we disable territory warfare.  Instead, we concentrate on\\n    // recruitment and building the strengths of our gang members.\\n    await create_gang(ns, faction);\\n    log(ns, `Disable territory warfare for gang in ${faction}`);\\n    ns.gang.setTerritoryWarfare(bool.DISABLE);\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    recruit(ns);\\n    // Manage our gang.\\n    // A tick is a period of time as defined by the constant gang_t.TICK.  At\\n    // the start of each tick, there is a chance for our gang to clash against\\n    // any rival gang.  The tick threshold is the time near the start of a new\\n    // tick.  If we are at the tick threshold, then do whatever is necessary to\\n    // prepare for a clash against a rival gang.\\n    let other_gang = ns.gang.getOtherGangInformation();\\n    let tick_threshold = 1;\\n    for (;;) {\\n        if (enable_turf_war(ns)) {\\n            if (!ns.gang.getGangInformation().territoryWarfareEngaged) {\\n                log(ns, `Enable territory warfare for gang in ${faction}`);\\n                ns.gang.setTerritoryWarfare(bool.ENABLE);\\n            }\\n        } else if (ns.gang.getGangInformation().territoryWarfareEngaged) {\\n            log(ns, `Disable territory warfare for gang in ${faction}`);\\n            ns.gang.setTerritoryWarfare(bool.DISABLE);\\n        }\\n        // Are we in a new tick?  If we are having a turf war, then let our\\n        // gang members fight until a new tick occurs.\\n        if (is_in_war(ns) && is_new_tick(ns, other_gang)) {\\n            // The tick threshold should be a little under gang_t.TICK.\\n            tick_threshold = Date.now() + (gang_t.TICK - wait_t.SECOND);\\n            other_gang = ns.gang.getOtherGangInformation();\\n            reassign_after_warfare(ns);\\n            await ns.sleep(wait_t.MILLISECOND);\\n            continue;\\n        }\\n        // We are in the same tick.  Is it time to go to war?\\n        if (Date.now() > tick_threshold) {\\n            if (ns.gang.getGangInformation().territoryWarfareEngaged) {\\n                casus_belli(ns);\\n                await ns.sleep(wait_t.MILLISECOND);\\n                continue;\\n            }\\n        }\\n        update(ns);\\n        await ns.sleep(wait_t.MILLISECOND);\\n    }\\n}\\n\",\"filename\":\"/gang/crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":33.8,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":732,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.createGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getOtherGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getChanceToWinClash\",\"cost\":4},{\"type\":\"fn\",\"name\":\"gang.setTerritoryWarfare\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getAscensionResult\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.ascendMember\",\"cost\":4},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bitnode } from \\\"/lib/constant/bn.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { gang_t } from \\\"/lib/constant/gang.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport {\\n    join_faction,\\n    raise_combat_stats,\\n    raise_hack,\\n} from \\\"/lib/singularity/faction.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The karma threshold.  We want to lower our karma to a given amount.  Outside\\n * of BN2, to join a gang we must have karma at -54,000 or lower.  It takes a\\n * very long time to achieve this many negative karma.  A more sensible option\\n * is to have a target karma value and try to lower our karma to that value.\\n * Then move on.  Say we want to lower our karma in 4 batches, each batch is\\n * followed by possibly a soft reset.  In each batch, we would need to achieve\\n * -13,500 karma.\\n *\\n * @param ns The Netscript API.\\n * @return Our current negative karma plus some more negative karma value as\\n *     low as -13,500.  Return 0 if we have enough negative karma to create a\\n *     gang.\\n */\\nfunction karma_threshold(ns) {\\n    const player = new Player(ns);\\n    const current_karma = Math.floor(player.karma());\\n    if (current_karma <= gang_t.KARMA) {\\n        return 0;\\n    }\\n    let target = -13500;\\n    const delta = gang_t.KARMA - current_karma;\\n    if (Math.abs(delta) < Math.abs(target)) {\\n        target = delta;\\n    }\\n    return Math.floor(current_karma + target);\\n}\\n\\n/**\\n * Run the next script(s) in our load chain for criminal gangs.\\n *\\n * @param ns The Netscript API.\\n * @param faction The name of a criminal organization.  Must be a faction that\\n *     allows us to create a criminal gang.\\n */\\nfunction load_chain(ns, faction) {\\n    const script = \\\"/gang/crime.js\\\";\\n    const nthread = 1;\\n    ns.exec(script, home, nthread, faction);\\n}\\n\\n/**\\n * Decrease our karma low enough to allow us to create a gang.  We need -54,000\\n * karma.  Homicide yields -3 karma so we must commit homicide at most 18,000\\n * times.  We lower our karma in batches.  After each batch we might not have\\n * enough negative karma to create a gang.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function lower_karma(ns) {\\n    const threshold = karma_threshold(ns);\\n    ns.singularity.goToLocation(cities.generic.slum); // Raise Int XP.\\n    ns.singularity.commitCrime(crimes.KILL, bool.FOCUS);\\n    const player = new Player(ns);\\n    while (Math.floor(player.karma()) > threshold) {\\n        if (Math.floor(player.karma()) < gang_t.KARMA) {\\n            break;\\n        }\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * NOTE: Assume we are not in BN2.\\n *\\n * Join the criminal faction Speakers for the Dead.  Our ultimate purpose is to\\n * form and manage a gang within that faction.  To receive an invitation from\\n * Speakers for the Dead, we must satisfy these requirements:\\n *\\n * (1) At least 100 Hack.\\n * (2) At least 300 in each combat stat.\\n * (3) Killed at least 30 people.\\n * (4) Negative karma at -45 or lower.\\n * (5) Not working for CIA or NSA.\\n *\\n * Usage: run gang/dead-speakers.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Should not be in BN2.  If in BN2, it's easier to join Slum Snakes.\\n    assert(bitnode[\\\"Rise of the Underworld\\\"] !== ns.getPlayer().bitNodeN);\\n    // Should not be working for any of the banned companies.\\n    const fac = \\\"Speakers for the Dead\\\";\\n    const player = new Player(ns);\\n    faction_req[fac].ban.map((e) => assert(!player.is_employer(e)));\\n    // Raise Hack and combat stats, ensure we have the required minimum karma,\\n    // and killed the required number of people.  Then join the faction\\n    // Speakers for the Dead.  Lower our karma so we can create a gang.\\n    await lower_karma(ns);\\n    if (!player.faction().includes(fac)) {\\n        await raise_hack(ns, faction_req[fac].hack);\\n        await raise_combat_stats(ns, faction_req[fac].combat);\\n        assert(player.karma() <= faction_req[fac].karma);\\n        await join_faction(ns, fac);\\n    }\\n    load_chain(ns, fac);\\n}\\n\",\"filename\":\"/gang/dead-speakers.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":46.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":733,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_gang_api } from \\\"/lib/source.js\\\";\\n\\n/**\\n * Decide which criminal faction to join.  Our goal is to create a gang within\\n * a criminal organization.  We can create a criminal gang within any of the\\n * following criminal organizations:\\n *\\n * (1) Slum Snakes\\n * (2) Tetrads\\n * (3) The Syndicate\\n * (4) The Dark Army\\n * (5) Speakers for the Dead\\n *\\n * Slum Snakes has the lowest requirements for sending a faction invitation.\\n * This fits well with BN2 because in that BitNode we only need to join a\\n * criminal faction and then would be allowed to create a gang.  Thus, if we\\n * are in BN2 we should join Slum Snakes as early as possible and then create\\n * our gang.  In BitNodes other than BN2, we must satisfy 2 requirements to\\n * create a gang:\\n *\\n * (1) Our karma must be -54,000 or lower.\\n * (2) Satisfy the requirements for receiving an invitation from a criminal\\n *     faction.\\n *\\n * Thus, in BitNodes other than BN2, we should lower our karma as quickly as\\n * possible.  By the time our negative karma is at -54,000 or lower, it is\\n * likely that we would have also satisfied the requirements to join one of the\\n * other factions listed above.  We might be tempted to join Speakers for the\\n * Dead and create our criminal gang within that faction.  One reason is that\\n * Speakers for the Dead has the highest power multiplier of all criminal\\n * factions:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/power.ts\\n *\\n * The Black Hand has the same power multiplier as Speakers for the Dead.\\n * These are the only 2 factions with the highest power multipliers.  Why\\n * should we create our gang within any of these 2 factions?  The power\\n * multiplier affects only NPC gangs, not the gang we create.  The higher is\\n * the power multiplier of an NPC gang, the quicker would its power rise.\\n * Creating a gang within either of the above 2 factions means we would only\\n * need to worry about catching up with the power of the other powerful NPC\\n * gang.  However, this can be a problem because the most powerful NPC gang\\n * would devour the other less powerful NPC gangs and easily take over their\\n * territories.  If we have 2 powerful NPC gangs, i.e. Speakers for the Dead\\n * and The Black Hand, they can duke it out amongst themselves.  They might\\n * swallow up the territories of other weaker NPC gangs, but when these 2\\n * powerful gangs fight amongst themselves it can take a long time for one of\\n * them to be vanquished.\\n *\\n * Anyway, join Slum Snakes regardless of the BitNode we are in.\\n *\\n * Usage: run gang/go.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    if (!has_gang_api(ns)) {\\n        log(ns, \\\"No access to Gang API\\\", colour.RED);\\n        return;\\n    }\\n    // Regardless of the BitNode we are in, join Slum Snakes and set up our\\n    // gang within that faction.\\n    const script = [\\n        \\\"/gang/augment.js\\\",\\n        \\\"/gang/program.js\\\",\\n        \\\"/gang/slum-snakes.js\\\",\\n    ];\\n    const nthread = 1;\\n    script.forEach((s) => ns.exec(s, home, nthread));\\n    // If we want, we can create a criminal gang within Speakers for the Dead.\\n    // Note that it can take a very long time to satisfy all requirements for\\n    // joining this faction and setting up a gang within that faction.\\n    // const script = \\\"/gang/dead-speakers.js\\\";\\n    // ns.exec(script, home, nthread);\\n}\\n\",\"filename\":\"/gang/go.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ab348fa3-aea9-4084-bc4e-df62422b9291\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b2675498-e395-4723-8b26-be875b0e6651\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/051f54cb-9e07-47f8-aeb5-0751dd83db55\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/17b59271-e70b-4477-996b-cbe2c5f8b2fd\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f527a068-7c55-4ece-8d84-d4b404981ba9\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2cd89f1d-3a56-4a68-9369-8689d1bfef6a\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c756ce5f-195d-4cbf-85c9-ed4f4d188f8c\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/764d5f56-831e-4af1-86cb-48248958755b\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9432d88d-d07d-416d-9bef-6fa6c048667e\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a73efce6-5f07-4f8f-9aa9-ec1438ff6938\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/5cf92d28-a536-4124-bf2d-f9e8be56c3cb\",\"moduleSequenceNumber\":68961},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/4a1d4e0e-ac3f-45b3-9631-cbbc14ef5095\",\"moduleSequenceNumber\":69000},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/36ad567f-e9ca-4884-a4b1-289e6af0d4a2\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/025da85a-cb15-4617-b416-f9c2b362a90b\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/781ba3f6-0809-4e25-bbb8-e39faf0162bd\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2486d377-aa54-4b23-8a85-98165d9f6ffb\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ae6b372b-aacf-4ade-b28e-2d2cf2d8d7e9\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8516f908-f41e-4326-b98f-0ad19493369a\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8e49baec-ab44-40e6-8e06-1adb09348150\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/41b5177f-3ca0-4f63-be56-5f54caf572aa\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cd6eb4be-0d4d-49fb-93b7-245e8945f5e0\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f1015c9c-7e77-44ee-9e4c-9f9f3848ff9d\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/adecd10a-be46-47eb-86e7-63d1fcae3d37\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d933dbb1-ea4e-4ff8-8ad0-4e8c130e4b6f\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/57aa9db4-58ac-4e47-af9c-eb43a262dd54\",\"moduleSequenceNumber\":68972},{\"filename\":\"/gang/go.js\",\"url\":\"blob:https://danielyxie.github.io/4529bb92-27d4-4742-97e3-e668328a7ac3\",\"moduleSequenceNumber\":69074}],\"dependents\":[],\"ramUsage\":8.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":734,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { buy_all_programs } from \\\"/lib/singularity/program.js\\\";\\nimport { has_gang_api } from \\\"/lib/source.js\\\";\\n\\n/**\\n * Purchase programs via the dark web.  We use any money available to us, most\\n * likely money generated by our gang.\\n *\\n * Usage: run gang/program.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Purchase programs via the dark web.\\n    if (has_gang_api(ns)) {\\n        log(ns, \\\"Buy programs via dark web\\\");\\n        await buy_all_programs(ns, bool.NO_VISIT, bool.NO_WORK);\\n    }\\n}\\n\",\"filename\":\"/gang/program.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/53af3096-eafc-40d5-a6f0-4de7722aae2c\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/373c0fd8-f532-4c5b-a91b-86743796cdc2\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9e35cd7d-ee9f-4927-ba8d-80cb58857fcc\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f4f4cee5-56c2-4ae6-b385-ee86abf3c381\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9b6362b2-b683-46f3-a294-57063f180b15\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/227682c7-e565-4418-b07e-910850db9562\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/43b281e7-fe01-4044-9915-601f4dd3d7c3\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/83b1a00e-7d7c-44c7-8a34-85b024ecf1a9\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fc210edf-67d1-4970-b280-558c6c9fe7c7\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/0ae3fa2c-23e0-4a89-9467-a7eac5699ccd\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/60b5dace-f854-400e-a4fe-d1cd19601529\",\"moduleSequenceNumber\":68961},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/d2d65b30-91bf-45bd-b2bd-565d87436626\",\"moduleSequenceNumber\":69000},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4b9bb087-76fc-40a5-b522-9ce132fc1aec\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e5abd153-d016-4101-86ea-e7520ec9cdb2\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6f3e7726-9bfb-445d-8dae-9dba758731b1\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c9a40dff-3d23-4af1-ad14-a566e03071d5\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/09f3dac4-c6af-4a70-a5c2-4e013928d6f4\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f811108b-79b2-4ccd-9eec-be349194b08e\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b4232c0e-2dc7-4a60-9364-7b3b85efda3e\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a598152a-b54e-404d-9132-590decbf91bf\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cfb5272d-73d9-4628-b725-0972fec1aac5\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0343b569-52e9-4e39-8713-9272a76f05e8\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a95b6a7b-b618-410f-909d-7c509a6cfd4c\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3e27b3ca-3a99-4310-83a9-e1be1b2a2e24\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9a6fd3b9-526e-488d-ae3f-000b43171fd6\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/506f1fdc-f012-4670-b6f5-d359d47dfecb\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f6018acd-e646-4163-a4fc-cc668baa5a6e\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9883f67c-e44c-4b9b-9913-f84a77eedbad\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/400871d9-b032-440e-a90e-074ee5cb794f\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bd9651b2-5130-4098-b7e8-769a20fd7252\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1c566e87-780b-453d-9d91-3460ca4544c1\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e7db40f3-079d-4893-93db-5e5994020539\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b7060f4e-5c02-4ddd-88ef-881b1d0b75b6\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0442d31c-749f-4307-821c-62b358a59f58\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d44fe97b-6847-4e41-a1d8-0fa66917e460\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/34c727ed-7e23-457c-8069-2308cb72cadb\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ec4c55ce-5b92-4d1a-b3ba-1ba3c32cea88\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7145ef03-da64-4154-825b-60a0f6b57437\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bce94f04-d385-440a-97f6-7363a56f3993\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ffccae54-1dbf-4928-a5e4-61cf009207ac\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/96e0845d-983c-4701-bceb-5ebfbae1b248\",\"moduleSequenceNumber\":68976},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/369d18b9-0b0e-4bc7-a2f5-0bed0db8675e\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ecade23a-64fe-4dd2-bdbd-387439327698\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/290230bd-84c9-45ee-a023-65dbfd6a8afd\",\"moduleSequenceNumber\":68995},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1ec40f46-67f0-4335-b386-648777bacb87\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1e69a47e-8e15-4618-8dd9-aac788936239\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bbf191b8-b0e7-447a-b017-10854fbe9baf\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/28ef5408-20d4-4190-bb3f-acf3e45d4b5b\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a633a433-c10d-486c-bf0b-1078fb5ecfe0\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/03eb72ac-90ee-4ca6-8200-913cb80fd3bc\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a27a4bc8-85e6-4b38-b69a-20957f9fac30\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ed4df493-8350-4a94-b0d6-4d3dcd1415ec\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/57668229-5f47-4054-8ea3-80dc8c2dd02d\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4dc1d065-39d7-4eaf-92fc-c374aaec683a\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1a3d46af-d961-45ea-9974-e10c6cb85c9a\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/73317574-e268-43cc-bbbd-9818d316a6c9\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/3da09db9-0521-4cc5-964a-753fb36ada17\",\"moduleSequenceNumber\":68986},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9f6a62eb-4dac-4cfe-a803-7649f0c07e5e\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0c42b833-adef-4319-a94c-2fdce6bbf91c\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d98951ce-c0f7-4bae-bd9a-f0013636104e\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f2a34357-b2c9-4f17-a90b-799e35f43894\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/44467bea-9587-43fd-98b0-887186ae081b\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0335a249-f35c-4b02-995c-7310732d76d7\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4ab63761-1b72-4d4b-8522-52632f6f2510\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/57dc5985-fb88-42ad-a1ba-f889a82b70e3\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1bfc167f-714f-43e4-8ec5-2433605a9000\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d1bb72bb-1f55-420c-bc25-251f57225e14\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/ce2fcb69-65e3-4c40-8026-673d141413d9\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/e3729f64-76bb-4bd4-b612-3046c46d072e\",\"moduleSequenceNumber\":68978},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/567c50e6-0501-40da-a956-5b0f9dccea41\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9748ebbb-cf24-4ec9-8278-15656f7d1eef\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4fdce1cd-c1f8-4b09-bbb5-486a47cc75f1\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9e05843c-2c03-43dc-937d-7d7e5aab1603\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/aaeec48a-f5d4-4dbf-bfb7-fa8c785a9cb3\",\"moduleSequenceNumber\":68997},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cc591cc4-82a9-4cfd-ac27-1f563224f686\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6b6460f9-d7fc-429c-b351-864f97df0f6e\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/singularity/util.js\",\"url\":\"blob:https://danielyxie.github.io/ee1a0e7c-0a51-4643-b4c0-af38474b36ab\",\"moduleSequenceNumber\":68996},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/67b7fc6a-9af7-41b1-8f6a-eb68a9edd27e\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3eb9f0b4-14a9-4755-8927-9cb496926be2\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9a219657-a3fb-4372-b832-76a0de179f0e\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f7de557c-fe52-431d-9dd4-156a5004d5aa\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/05b9307e-8fc8-46a2-941d-15d1104d8be1\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/60fbee45-57b6-42a7-bed5-86642bdbe056\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/53c85ca5-e229-4629-aca6-94149be387be\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5d3d923e-9cbe-47f9-b935-ad72d76ec943\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ff94a924-c5e1-4c91-b247-a6110bebb976\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a8cf2a87-658d-452d-997a-93e97920847b\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/5f2195e7-b8f0-4c9f-9a37-cd84054e6b5b\",\"moduleSequenceNumber\":68976},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a34f74da-4154-4513-9f6a-a6c06921902f\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b42deaa6-5a70-448b-bf5c-9e15390fdbff\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/b0e5b8f0-267e-44f5-95e4-d760bf9b2ee7\",\"moduleSequenceNumber\":68995},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6dae3248-e41a-42b6-abec-f7e887741628\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ecea8c9c-9cb4-4b0c-a2c5-56d5be9f23af\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/eeffed63-e46d-44da-8c82-5c707c7dd879\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5a349ac1-5d9c-426e-9217-2afbf4f5d806\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9d31b8e4-fc92-4d42-87e1-9b84a9a92dab\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/affccace-cca8-437e-9655-e8d38708c3b7\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/493dc5b2-dadd-4da3-b778-56680d09b76a\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ce401d4e-eeca-4424-9ab8-9cbab2cfc944\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3736c3b1-115f-4f48-a1ad-c80f08129f40\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0b3cbca6-c4d3-4e75-81bd-c3a9deac3c8f\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fae09883-0411-40b5-af85-1e6966393d74\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e89c3959-3759-49ce-810d-f88b646b59d8\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/aeeead18-45b0-4ec8-b2e1-39e2d0274bb7\",\"moduleSequenceNumber\":68986},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/36d784dd-01ae-43b4-948e-871681d38d13\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0ce8a60e-c953-4256-a9bb-6532e153cacc\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/65c9452d-aac7-485a-a1a2-7a7a688e1a5f\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8e1fcb6e-6672-4a0a-ac65-d33051b74972\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/aa8ed9e3-e1c6-4240-8c5c-9180c05a175b\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9e9dd0f4-b39e-427b-82a9-543c1381c5af\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/154c8a50-5b4a-4195-97b1-5b95f3f18fea\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e69931c0-a3f9-4c3e-9bee-4762df2a307c\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9ee0b89e-4093-440f-8148-f9154e2de764\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3a8d186e-9512-4857-bf5a-ceb3b30e9086\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/f36d8918-945d-4311-b0ec-7fc4dec57614\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e471651b-41c4-4dea-8d0f-4c57db76080c\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2cb487f6-9fc9-4c05-a4df-6d87540123aa\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5b2c24eb-c548-4d02-85fe-dafbba250992\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/singularity/program.js\",\"url\":\"blob:https://danielyxie.github.io/cd155269-604f-4903-a9e6-b5996ef35a54\",\"moduleSequenceNumber\":68994},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3745b1af-cd1a-4feb-9f1d-591553caa012\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8af1ed77-8eef-4b14-9182-e85bde556dfd\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/54eb1b11-cac7-4a9e-952d-1d0f3333f21f\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f7ee403e-b01c-464d-887e-dfcb542dc523\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/26ecbe5b-74a1-4f2e-a53a-5aaff020d871\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bef3054e-e530-460e-b68b-5a5056f07c1c\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fdc8d978-c96c-4250-a233-49ae11e9db22\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8a67d6cd-1673-4cb8-9355-69cd1ae43033\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/81e1a25d-b178-40bb-92eb-7e9a0a60f1d5\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/728aeb09-1a5d-4aca-9b79-14bcac0c5373\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/06ed8473-21bd-4488-81fb-337ccc910c7a\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/52c3c6c8-2abb-415c-b2d2-b2a1c2f223cf\",\"moduleSequenceNumber\":68962},{\"filename\":\"/gang/program.js\",\"url\":\"blob:https://danielyxie.github.io/35dc2b8e-77eb-4917-ad62-62a9bc70f2f7\",\"moduleSequenceNumber\":69062}],\"dependents\":[],\"ramUsage\":33.8,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":735,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getDarkwebPrograms\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"purchaseTor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"purchaseProgram\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getDarkwebProgramCost\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bitnode } from \\\"/lib/constant/bn.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { gang_t } from \\\"/lib/constant/gang.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { join_faction } from \\\"/lib/singularity/faction.js\\\";\\nimport { work } from \\\"/lib/singularity/work.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The karma threshold.  This value depends on the BitNode we are currently in.\\n *\\n * @param ns The Netscript API.\\n * @return The karma threshold.\\n */\\nfunction karma_threshold(ns) {\\n    if (bitnode[\\\"Rise of the Underworld\\\"] === ns.getPlayer().bitNodeN) {\\n        return faction_req[\\\"Slum Snakes\\\"].karma;\\n    }\\n    return gang_t.KARMA;\\n}\\n\\n/**\\n * Run the next script(s) in our load chain for criminal gangs.\\n *\\n * @param ns The Netscript API.\\n * @param faction The name of a criminal organization.  Must be a faction that\\n *     allows us to create a criminal gang.\\n */\\nfunction load_chain(ns, faction) {\\n    const script = \\\"/gang/crime.js\\\";\\n    const nthread = 1;\\n    ns.exec(script, home, nthread, faction);\\n}\\n\\n/**\\n * Decrease our karma low enough to allow us to create a gang.  In BN2, we only\\n * need to satisfy the karma requirement of Slum Snakes.  In a BitNode other\\n * than BN2, we need -54,000 karma.  Homicide yields -3 karma so we must commit\\n * homicide at most 18,000 times.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function lower_karma(ns) {\\n    ns.singularity.goToLocation(cities.generic.slum); // Raise Int XP.\\n    ns.singularity.commitCrime(crimes.KILL, bool.FOCUS);\\n    const player = new Player(ns);\\n    const threshold = karma_threshold(ns);\\n    while (Math.floor(player.karma()) > threshold) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Raise our combat stats to a given threshold.  Mugging someone is one of the\\n * best ways to raise all of our combat stats.  Upon success, we gain XP for\\n * each of the following stats: Strength, Defense, Dexterity, Agility.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Each of our combat stats should be at least this level.\\n */\\nasync function raise_combat_stats(ns, threshold) {\\n    assert(threshold > 0);\\n    ns.singularity.goToLocation(cities.generic.slum); // Raise Int XP.\\n    // Continue to mug someone until each of our combat stats is at least\\n    // the given threshold.\\n    const player = new Player(ns);\\n    ns.singularity.commitCrime(crimes.MUG, bool.FOCUS);\\n    while (\\n        player.strength() < threshold\\n        || player.defense() < threshold\\n        || player.dexterity() < threshold\\n        || player.agility() < threshold\\n    ) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Join the Slum Snakes faction.  Our ultimate purpose is to form and manage\\n * a gang.  Among the criminal organizations, Slum Snakes has the lowest\\n * requirements for sending a faction invitation.  To receive an invitation\\n * from Slum Snakes, we must satisfy these requirements:\\n *\\n * (1) Each of the combat stats must be at least 30.\\n * (2) Karma must be -9 or lower.\\n * (3) At least $1m.\\n *\\n * Usage: run gang/slum-snakes.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Raise combat stats, ensure we have the required minimum karma, raise our\\n    // income.  Then join the Slum Snakes faction.  Lower our karma so we can\\n    // create a gang.\\n    await lower_karma(ns);\\n    const fac = \\\"Slum Snakes\\\";\\n    const player = new Player(ns);\\n    if (!player.faction().includes(fac)) {\\n        await raise_combat_stats(ns, faction_req[fac].combat);\\n        assert(player.karma() <= faction_req[fac].karma);\\n        await work(ns, faction_req[fac].money);\\n        await join_faction(ns, fac);\\n    }\\n    load_chain(ns, fac);\\n}\\n\",\"filename\":\"/gang/slum-snakes.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":38.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":736,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A class to hold various utility methods for dealing with arrays.  Cannot\\n * name it \\\"Array\\\" because there is already a class called \\\"Array\\\" in the\\n * standard API library.\\n */\\nexport class MyArray {\\n    /**\\n     * Whether the given array has only non-negative numbers.\\n     *\\n     * @param array An array of integers.  Cannot be an empty array.\\n     * @return true if the given array has only non-negative integers;\\n     *     false otherwise.\\n     */\\n    static all_nonnegative(array) {\\n        assert(array.length > 0);\\n        for (const a of array) {\\n            if (a < 0) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    /**\\n     * The maximum element of an array.\\n     *\\n     * @param array We want to determine the maximum element of this array.\\n     *     Cannot be an empty array.\\n     * @return The largest element of the given array.\\n     */\\n    static max(array) {\\n        assert(array.length > 0);\\n        const init_value = -Infinity;\\n        return array.reduce((x, y) => Math.max(x, y), init_value);\\n    }\\n\\n    /**\\n     * A sequence of non-negative integers, starting from zero.  Each number in\\n     * the sequence is one more than the previous number.\\n     *\\n     * @param num How many numbers in the sequence.  Must be positive.  If\\n     *     num := 4, then our sequence is [0, 1, 2, 3].\\n     * @return An array representing a sequence of num numbers starting from 0.\\n     */\\n    static sequence(num) {\\n        const n = Math.floor(num);\\n        assert(n > 0);\\n        // Zoekeeper (Ansopedi#3422) on the Bitburner server of Discord pointed\\n        // out that this code is faster:\\n        //\\n        // return Array(n).fill().map((_, index) => index);\\n        //\\n        // However, the above is less readable than the line below.\\n        return [...Array(n).keys()];\\n    }\\n\\n    /**\\n     * Sort an array in ascending order.\\n     *\\n     * @param array We want to sort this array.  Cannot be an empty array.\\n     * @return A new array whose elements are sorted in ascending order.  If\\n     *     the array has duplicate elements, we are actually sorting in\\n     *     non-decreasing order.\\n     */\\n    static sort_ascending(array) {\\n        assert(array.length > 0);\\n        const arr = Array.from(array);\\n        arr.sort((a, b) => a - b);\\n        return arr;\\n    }\\n\\n    /**\\n     * Sort an array of 2-tuples in ascending order, using the first element of\\n     * each tuple.  The usual scenario is when we have an array of arrays like\\n     * so:\\n     *\\n     * [[1, 2], [3, 1], [1, 3], [5, 4]]\\n     *\\n     * where each element is a 2-tuple, i.e. an array of 2 elements.  The\\n     * sorted array would be\\n     *\\n     * [[1, 2], [1, 3], [3, 1], [5, 4]]\\n     *\\n     * @param array We want to sort this array of 2-tuples.  Cannot be an empty\\n     *     array.\\n     * @return A new array of 2-tuples, where each element is sorted in\\n     *     ascending order.  The sort is done based on the first element of\\n     *     each 2-tuple.\\n     */\\n    static sort_ascending_tuple(array) {\\n        assert(array.length > 0);\\n        const arr = Array.from(array);\\n        arr.sort((a, b) => a[0] - b[0]);\\n        return arr;\\n    }\\n\\n    /**\\n     * Sort an array in descending order.\\n     *\\n     * @param array We want to sort this array.  Cannot be an empty array.\\n     * @return A new array whose elements are sorted in descending order.  If\\n     *     the array has duplicate elements, then we are actually sorting the\\n     *     array in non-increasing order.\\n     */\\n    static sort_descending(array) {\\n        assert(array.length > 0);\\n        const arr = Array.from(array);\\n        arr.sort((a, b) => b - a);\\n        return arr;\\n    }\\n\\n    /**\\n     * Sum the elements of an array.\\n     *\\n     * @param array We want to add the elements of this array.  Cannot be an\\n     *     empty array.\\n     * @return The sum of the elements in the given array.\\n     */\\n    static sum(array) {\\n        assert(array.length > 0);\\n        const init_value = 0;\\n        return array.reduce((sum, current) => sum + current, init_value);\\n    }\\n}\\n\",\"filename\":\"/lib/array.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":737,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions for solving coding contracts.\\n\\nimport { io } from \\\"/lib/constant/io.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The index of an alphabetic character.\\n *\\n * @param c A character of the English alphabet.  Cannot be empty string.\\n * @return The index of the given character, where index starts from zero.\\n */\\nexport function char_index(c) {\\n    assert(c.length === 1);\\n    const alphabet = new Map([\\n        [\\\"A\\\", 0],\\n        [\\\"B\\\", 1],\\n        [\\\"C\\\", 2],\\n        [\\\"D\\\", 3],\\n        [\\\"E\\\", 4],\\n        [\\\"F\\\", 5],\\n        [\\\"G\\\", 6],\\n        [\\\"H\\\", 7],\\n        [\\\"I\\\", 8],\\n        [\\\"J\\\", 9],\\n        [\\\"K\\\", 10],\\n        [\\\"L\\\", 11],\\n        [\\\"M\\\", 12],\\n        [\\\"N\\\", 13],\\n        [\\\"O\\\", 14],\\n        [\\\"P\\\", 15],\\n        [\\\"Q\\\", 16],\\n        [\\\"R\\\", 17],\\n        [\\\"S\\\", 18],\\n        [\\\"T\\\", 19],\\n        [\\\"U\\\", 20],\\n        [\\\"V\\\", 21],\\n        [\\\"W\\\", 22],\\n        [\\\"X\\\", 23],\\n        [\\\"Y\\\", 24],\\n        [\\\"Z\\\", 25],\\n    ]);\\n    assert(alphabet.has(c));\\n    return alphabet.get(c);\\n}\\n\\n/**\\n * Count the total occurrence of 1 in a bit string.  This function does not\\n * necessarily count all 1s in a bit string.  Some positions can be skipped.\\n *\\n * @param msg A bit string, representing a possibly incomplete encoded message.\\n *     The message is encoded using Hamming code.  If the bit string is an\\n *     incomplete encoded message, the location of each parity bit has been\\n *     filled with rubbish.\\n * @param p The position of a parity (or redundant) bit.  Its value is always\\n *     a power of 2.  We start counting from this position in the bit string.\\n *     The value of p also tells us how many consecutive positions to skip.\\n *     In Hamming code, when checking parity we check p consecutive positions\\n *     and skip p consecutive positions, giving us a window of 2p consecutive\\n *     positions.  To reach the next window, we should skip 2p positions.\\n * @return The number of 1s in the given bit string, while skipping over\\n *     some positions.\\n */\\nexport function count_one(msg, p) {\\n    assert(msg.length > 0);\\n    assert(p > 0);\\n    let n1 = 0;\\n    let i = p;\\n    const skip = 2 * p;\\n    while (i < msg.length) {\\n        for (let j = i; j < i + p; j++) {\\n            if (msg[j] === 1) {\\n                n1++;\\n            }\\n        }\\n        i += skip;\\n    }\\n    return n1;\\n}\\n\\n/**\\n * An array of uppercase letters of the English alphabet.\\n */\\nexport function english_alphabet() {\\n    return \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\\";\\n}\\n\\n/**\\n * Whether a character is an uppercase letter of the English alphabet.\\n *\\n * @param c A character.  Cannot be empty string.\\n * @return true if the given character is an uppercase letter of the English\\n *     alphabet; false otherwise.\\n */\\nexport function is_alphabetic(c) {\\n    assert(c.length === 1);\\n    return english_alphabet().includes(c);\\n}\\n\\n/**\\n * Log a failure when attempting to solve a coding contract.\\n *\\n * @param ns The Netscript API.\\n * @param fname Write our log to this file.  Must be a text file with\\n *     file extension \\\".txt\\\".\\n * @param cct The file name of the coding contract.\\n * @param host The hostname of the server where the coding contract is located.\\n * @param data The data used for solving the coding contract.\\n */\\nexport async function log_cct_failure(ns, fname, cct, host, data) {\\n    const date = new Date(Date.now());\\n    await ns.write(fname, date.toISOString(), io.APPEND);\\n    await ns.write(fname, `, ${host}, ${cct}${io.NEWLINE}`, io.APPEND);\\n    await ns.write(fname, data + io.NEWLINE, io.APPEND);\\n}\\n\\n/**\\n * Format a matrix as a string.\\n *\\n * @param mat A matrix, i.e. an array of arrays.\\n * @return The given matrix as a string.\\n */\\nexport function matrix_to_string(mat) {\\n    let string = \\\"\\\";\\n    const delim = \\\", \\\";\\n    for (let i = 0; i < mat.length; i++) {\\n        string += `[${mat[i]}]${delim}`;\\n    }\\n    string = string.slice(0, string.length - delim.length);\\n    return `[${string}]`;\\n}\\n\\n/**\\n * The maximum profit to be made when we are restricted to at most one\\n * transaction.  The algorithm is similar to Kadane's algorithm.  However, we\\n * must keep track of the minimum price as well as the maximum profit.\\n * Essentially, we want to buy low and sell high, but we are restricted to one\\n * transaction.  This means we are restricted by these rules:\\n *\\n * (1) Only one buy action.\\n * (2) Only one sell action.\\n * (3) Must first buy before we can sell.\\n *\\n * The idea is to determine two days i and j, where i < j and\\n * price[i] < price[j], such that the difference price[j] - price[i] is\\n * maximized.\\n *\\n * Refer to the following for more details:\\n *\\n * https://betterprogramming.pub/dynamic-programming-interview-questions-how-to-maximize-stock-profits-8ed4966c2206\\n *\\n * @param price An array where price[i] represents the price of a stock on\\n *     day i.  All prices are for the same stock.\\n * @return The maximum profit we can make, assuming at most one transaction.\\n *       Return 0 if no profit can be made or the price array is empty.\\n */\\nexport function max_profit_kadane(price) {\\n    // Empty price array means zero profit.\\n    if (price.length === 0) {\\n        return 0;\\n    }\\n    let max_profit = 0;\\n    let min_price = price[0];\\n    // Must start on the second day.  On the first day, we have only one\\n    // price value so the minimum of one value is that value itself.\\n    for (let i = 1; i < price.length; i++) {\\n        // We need to keep track of the minimum price.  Let mp be the minimum\\n        // price so far.  If the price on day i is lower than mp, we set mp to\\n        // to the new minimum price.  Otherwise, we move to the price on the\\n        // next day.\\n        min_price = Math.min(min_price, price[i]);\\n        // Why do we need to keep track of the minimum price so far?  Let mp be\\n        // the minimum price up to and including day i.  Let price[i] be the\\n        // price on day i.  The profit pf is defined as the price on day i\\n        // minus the running minimum price:\\n        //\\n        // pf := price[i] - mp\\n        //\\n        // Here, the minimum price mp occurs during one of the days from the\\n        // first to the current day, i.e. mp is one of the price values\\n        //\\n        // price[0], price[1], ..., price[i]\\n        //\\n        // If we were to buy the stock on some day j (0 <= j <= i) at the\\n        // minimum price of mp, we can sell the stock on day i to make a profit\\n        // of pf.  The following can happen:\\n        //\\n        // (1) mp < price[i].  We make a profit pf.  Let mpf be the maximum\\n        //     profit we can make on day i.  We compare the profit pf on day i\\n        //     to the maximum profit mpf we can make on day i.  If mpf < pf,\\n        //     then we adjust our maximum profit so far to the value of pf.\\n        //     Otherwise, we keep the value of mpf as is.  The maximum profit\\n        //     we can make so far is the maximum of mpf and pf.\\n        // (2) mp = price[i].  We break even.  No loss, no profit.\\n        // (3) mp > price[i].  We make a loss because we are selling our stock\\n        //     at a price lower than when we bought the stock.  Our minimum\\n        //     price should be adjusted to the price on day i.  The minimum\\n        //     price so far is the minimum of mp and price[i].\\n        const profit = price[i] - min_price;\\n        max_profit = Math.max(max_profit, profit);\\n    }\\n    return max_profit;\\n}\\n\\n/**\\n * The positions (or indices) where the parity bits are placed in a bit string\\n * that has been encoded using Hamming code.  These parity bits are also known\\n * as redundant bits to distinguish them from the overall parity bit placed at\\n * index 0 in the encoded bit string.\\n *\\n * @param p The number of parity bits.\\n * @return An array, where each element represents the position or index of a\\n *     parity bit.  These parity bits are also called redundant bits.\\n *     This array does not include the position of the overall parity\\n *     bit, which is assumed to be at index 0 in the encoded message.\\n */\\nexport function parity_position(p) {\\n    assert(p > 0);\\n    const array = [];\\n    for (let i = 0; i < p; i++) {\\n        array.push(2 ** i);\\n    }\\n    return array;\\n}\\n\\n/**\\n * Print to the terminal an error message about which Coding Contract we did\\n * not solve correctly.\\n *\\n * @param The Netscript API.\\n * @param host The hostname of the server where the Coding Contract was found.\\n * @param cct The file name of the Coding Contract.\\n */\\nexport function print_error(ns, host, cct) {\\n    const msg = `${host}: ${cct}: FAILURE`;\\n    log(ns, msg, colour.RED);\\n}\\n\\n/**\\n * Print to the terminal a message about the reward from successfully solving\\n * a Coding Contract.\\n *\\n * @param The Netscript API.\\n * @param host The hostname of the server where the Coding Contract was found.\\n * @param cct The file name of the Coding Contract.\\n * @param reward The reward from solving the Coding Contract.\\n */\\nexport function print_success(ns, host, cct, reward) {\\n    const msg = `${host}: ${cct}: ${reward}`;\\n    log(ns, msg);\\n}\\n\\n/**\\n * The maximum profit that can be made when we are restricted to at most two\\n * transactions.  Transactions must occur one after the other.  Suppose we buy\\n * one share of a stock on day i and sell the share on day j, where i < j.  We\\n * cannot buy another share of the same stock on any day between i and j.\\n * However, we are allowed to buy another share of the stock from day j+1\\n * onward.\\n *\\n * The above description hints at a simple solution.  We partition the price\\n * array into two non-overlapping parts:\\n *\\n * (1) The left part starts from day 0 and ends at day k, inclusive.  Run\\n *     Kadane's algorithm on the left subarray to get mpl as our maximum profit\\n *     for the left subarray.\\n * (2) The right part starts from day k+1 and ends at the last day in the price\\n *     array.  Run Kadane's algorithm on the right subarray to get mpr as our\\n *     maximum profit for the right subarray.\\n *\\n * The maximum profit is mpl + mpr.  This maximum profit is for one particular\\n * partition of the price array.  There are many other partitions, one for each\\n * value of k.  Calculate the maximum profit for each partition.  The true\\n * maximum profit is the maximum of the results of all partitions.\\n *\\n * @param price An array of prices, where price[i] is the price of one share of\\n *     a stock on day i.  All prices relate to the same stock.\\n * @return The maximum profit to be made, assuming we can perform at most\\n *     two transactions.  Return 0 if no profit can be made.\\n */\\nexport function stock_traderIII(price) {\\n    assert(price.length > 0);\\n    // Obtain all possible partitions of the price array.  Each partition\\n    // divides the array into two parts: the left subarray and the right\\n    // subarray.\\n    let max_profit = 0;\\n    for (let k = 0; k < price.length; k++) {\\n        // The left and right subarrays in the partition.\\n        const left = price.slice(0, k + 1);\\n        const right = price.slice(k + 1, price.length);\\n        // The maximum profit of each subarray in the partition.\\n        const mpl = max_profit_kadane(left);\\n        const mpr = max_profit_kadane(right);\\n        // The running maximum profit.\\n        max_profit = Math.max(max_profit, mpl + mpr);\\n    }\\n    return max_profit;\\n}\\n\",\"filename\":\"/lib/cct.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":738,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constant values related to BitNodes.\\n\\n/**\\n * All named BitNodes.  The names are taken from this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/BitNode/BitNode.tsx\\n */\\nexport const bitnode = {\\n    \\\"Source Genesis\\\": 1,\\n    \\\"Rise of the Underworld\\\": 2,\\n    Corporatocracy: 3,\\n    \\\"The Singularity\\\": 4,\\n    \\\"Artificial Intelligence\\\": 5,\\n    Bladeburners: 6,\\n    \\\"Bladeburners 2079\\\": 7,\\n    \\\"Ghost of Wall Street\\\": 8,\\n    Hacktocracy: 9,\\n    \\\"Digital Carbon\\\": 10,\\n    \\\"The Big Crash\\\": 11,\\n    \\\"The Recursion\\\": 12,\\n    \\\"They're lunatics\\\": 13,\\n};\\n\",\"filename\":\"/lib/constant/bn.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":739,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n/**\\n * Various boolean values.\\n */\\nexport const bool = {\\n    /**\\n     * Whether or not a graph is bipartite.\\n     */\\n    BIPARTITE: true,\\n    NOT_BIPARTITE: false,\\n    /**\\n     * Whether or not to buy NeuroFlux Governor.\\n     */\\n    BUY_NFG: true,\\n    NO_BUY_NFG: false,\\n    /**\\n     * Whether or not we can run something.\\n     */\\n    CAN_RUN: true,\\n    NOT_RUN: false,\\n    /**\\n     * Whether or not a graph is directed.\\n     */\\n    DIRECTED: true,\\n    UNDIRECTED: false,\\n    /**\\n     * Enable or disable a feature.\\n     */\\n    ENABLE: true,\\n    DISABLE: false,\\n    /**\\n     * Whether or not to focus on an action.\\n     */\\n    FOCUS: true,\\n    NO_FOCUS: false,\\n    /**\\n     * Whether or not to graduate from a class or training.\\n     */\\n    GRADUATE: true,\\n    /**\\n     * Whether or not we have access to something.\\n     */\\n    HAS: true,\\n    NOT: false,\\n    /**\\n     * Whether or not it is time for something to occur.\\n     */\\n    IS_TIME: true,\\n    NOT_TIME: false,\\n    /**\\n     * Whether or not to join an organization.\\n     */\\n    JOIN: true,\\n    NO_JOIN: false,\\n    /**\\n     * Whether or not we can jump.\\n     */\\n    JUMP: true,\\n    NO_JUMP: false,\\n    /**\\n     * Whether or not a server is low-end.\\n     */\\n    LOWEND: true,\\n    NOT_LOWEND: false,\\n    /**\\n     * Whether or not we can merge two things together.\\n     */\\n    MERGE: true,\\n    NO_MERGE: false,\\n    /**\\n     * Whether or not we can move from one state to another.\\n     */\\n    MOVE: true,\\n    NOT_MOVE: false,\\n    /**\\n     * Whether or not a new state has occurred.\\n     */\\n    NEW: true,\\n    NOT_NEW: false,\\n    /**\\n     * Whether or not to consider something that is purchased.\\n     */\\n    PURCHASED: true,\\n    NOT_PURCHASED: false,\\n    /**\\n     * Whether or not to raise money to purchase various items.\\n     */\\n    RAISE_MONEY: true,\\n    NO_RAISE_MONEY: false,\\n    /**\\n     * Whether or not a state is reachable.  These values are specific to\\n     * Array Jumping Game.\\n     */\\n    REACHABLE: 1,\\n    NOT_REACHABLE: 0,\\n    /**\\n     * Whether we are self-funding the creation of our corporation.\\n     */\\n    SELF_FUND: true,\\n    /**\\n     * Whether or not to skip an action.\\n     */\\n    SKIP: true,\\n    NO_SKIP: false,\\n    /**\\n     * Whether or not to stop the trade bot from purchasing shares of stocks.\\n     */\\n    STOP_TRADE: true,\\n    NO_STOP_TRADE: false,\\n    /**\\n     * Whether or not we are successful at something.\\n     */\\n    SUCCESS: true,\\n    FAILURE: false,\\n    /**\\n     * Whether or not something is valid or correct.\\n     */\\n    VALID: true,\\n    INVALID: false,\\n    /**\\n     * Whether to visit a particular location.\\n     */\\n    VISIT: true,\\n    NO_VISIT: false,\\n    /**\\n     * Whether we are (or should be) engaged in territory warfare.\\n     */\\n    WAR: true,\\n    NO_WAR: false,\\n    /**\\n     * Whether to work to increase money or stats.\\n     */\\n    WORK: true,\\n    NO_WORK: false,\\n};\\n\",\"filename\":\"/lib/constant/bool.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":740,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constant values related to Coding Contracts.\\n\\nexport const cct = {\\n    /**\\n     * The suffix for files that contain Coding Contracts.\\n     */\\n    SUFFIX: \\\".cct\\\",\\n    /**\\n     * The time in milliseconds required for the game to randomly generate a\\n     * random Coding Contract on a random server, while in game.  While the\\n     * game is running, the probability for a Coding Contract to be spawned is\\n     * 0.25.  Each game cycle is 200 milliseconds.  The game randomly generates\\n     * a Coding Contract once every 3000 cycles.  Thus once every\\n     * 200 x 3000 = 600,000 milliseconds, or every 10 minutes, we have 25%\\n     * chance for a Coding Contract to spawn on a server.  These constants are\\n     * taken from\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/engine.tsx\\n     */\\n    UPDATE_TIME: 6e5,\\n};\\n\\n/**\\n * Various colours for graph colouring, i.e. testing whether a graph is\\n * bipartite.\\n */\\nexport const colour = {\\n    BLUE: 0,\\n    RED: 1,\\n    WHITE: 2,\\n};\\n\\n/**\\n * The types of chunk data in Lempel-Ziv compression and decompression.\\n */\\nexport const lzchunk = {\\n    /**\\n     * The chunk format L<string>.\\n     */\\n    LS: 1,\\n    /**\\n     * The chunk format LX.\\n     */\\n    LX: 2,\\n};\\n\\n/**\\n * The opening and closing parentheses.\\n */\\nexport const parenthesis = {\\n    CLOSE: \\\")\\\",\\n    OPEN: \\\"(\\\",\\n};\\n\\n/**\\n * A list of small prime numbers.\\n */\\nexport const small_primes = [\\n    2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\\n    73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151,\\n    157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211,\\n];\\n\\n/**\\n * The Vigenère square.\\n */\\nexport const vigenere_square = [\\n    \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\\",\\n    \\\"BCDEFGHIJKLMNOPQRSTUVWXYZA\\\",\\n    \\\"CDEFGHIJKLMNOPQRSTUVWXYZAB\\\",\\n    \\\"DEFGHIJKLMNOPQRSTUVWXYZABC\\\",\\n    \\\"EFGHIJKLMNOPQRSTUVWXYZABCD\\\",\\n    \\\"FGHIJKLMNOPQRSTUVWXYZABCDE\\\",\\n    \\\"GHIJKLMNOPQRSTUVWXYZABCDEF\\\",\\n    \\\"HIJKLMNOPQRSTUVWXYZABCDEFG\\\",\\n    \\\"IJKLMNOPQRSTUVWXYZABCDEFGH\\\",\\n    \\\"JKLMNOPQRSTUVWXYZABCDEFGHI\\\",\\n    \\\"KLMNOPQRSTUVWXYZABCDEFGHIJ\\\",\\n    \\\"LMNOPQRSTUVWXYZABCDEFGHIJK\\\",\\n    \\\"MNOPQRSTUVWXYZABCDEFGHIJKL\\\",\\n    \\\"NOPQRSTUVWXYZABCDEFGHIJKLM\\\",\\n    \\\"OPQRSTUVWXYZABCDEFGHIJKLMN\\\",\\n    \\\"PQRSTUVWXYZABCDEFGHIJKLMNO\\\",\\n    \\\"QRSTUVWXYZABCDEFGHIJKLMNOP\\\",\\n    \\\"RSTUVWXYZABCDEFGHIJKLMNOPQ\\\",\\n    \\\"STUVWXYZABCDEFGHIJKLMNOPQR\\\",\\n    \\\"TUVWXYZABCDEFGHIJKLMNOPQRS\\\",\\n    \\\"UVWXYZABCDEFGHIJKLMNOPQRST\\\",\\n    \\\"VWXYZABCDEFGHIJKLMNOPQRSTU\\\",\\n    \\\"WXYZABCDEFGHIJKLMNOPQRSTUV\\\",\\n    \\\"XYZABCDEFGHIJKLMNOPQRSTUVW\\\",\\n    \\\"YZABCDEFGHIJKLMNOPQRSTUVWX\\\",\\n    \\\"ZABCDEFGHIJKLMNOPQRSTUVWXY\\\",\\n];\\n\",\"filename\":\"/lib/constant/cct.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":741,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constant values related to corporation.\\n\\n/**\\n * Constants related to a corporation.\\n */\\nexport const corp = {\\n    /**\\n     * The name of the Corporation API.  We use this to circumvent the namespace\\n     * RAM cost.\\n     */\\n    API: \\\"corporation\\\",\\n    /**\\n     * All available industries into which we can expand.  Data taken from this\\n     * file:\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/Corporation/data/Constants.ts\\n     */\\n    industry: {\\n        AGRI: \\\"Agriculture\\\",\\n        CHEM: \\\"Chemical\\\",\\n        COMP: \\\"Computers\\\",\\n        ENERGY: \\\"Energy\\\",\\n        FISH: \\\"Fishing\\\",\\n        FOOD: \\\"Food\\\",\\n        HEALTH: \\\"Healthcare\\\",\\n        LAND: \\\"RealEstate\\\",\\n        MINE: \\\"Mining\\\",\\n        PHARMA: \\\"Pharmaceutical\\\",\\n        ROBO: \\\"Robotics\\\",\\n        SOFTWARE: \\\"Software\\\",\\n        TOBACCO: \\\"Tobacco\\\",\\n        UTIL: \\\"Utilities\\\",\\n    },\\n    /**\\n     * Various types of materials.  Data taken from this file:\\n     *\\n     * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Corporation/data/Constants.ts\\n     */\\n    material: {\\n        AI: \\\"AI Cores\\\",\\n        CHEMICAL: \\\"Chemicals\\\",\\n        DRUG: \\\"Drugs\\\",\\n        ENERGY: \\\"Energy\\\",\\n        FOOD: \\\"Food\\\",\\n        HARDWARE: \\\"Hardware\\\",\\n        LAND: \\\"Real Estate\\\",\\n        METAL: \\\"Metal\\\",\\n        PLANT: \\\"Plants\\\",\\n        ROBOT: \\\"Robots\\\",\\n        WATER: \\\"Water\\\",\\n    },\\n    /**\\n     * The positions to assign to employees.  Data taken from this file:\\n     *\\n     * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Corporation/EmployeePositions.ts\\n     */\\n    position: [\\n        \\\"Operations\\\",\\n        \\\"Engineer\\\",\\n        \\\"Business\\\",\\n        \\\"Management\\\",\\n        \\\"Research & Development\\\",\\n        \\\"Training\\\",\\n    ],\\n    /**\\n     * The name of our corporation.\\n     */\\n    NAME: \\\"Quacken Industries\\\",\\n    /**\\n     * Unlock upgrades.  These are one-time unlockable upgrades and apply to the\\n     * entire corporation.  We cannot level these upgrades.  Data are taken from\\n     * this file:\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/Corporation/data/CorporationUnlockUpgrades.ts\\n     */\\n    unlock: {\\n        /**\\n         * Shady tactics to reduce our corporation's tax.\\n         */\\n        ACCOUNT: \\\"Shady Accounting\\\",\\n        /**\\n         * Statistics about our corporation and its supply chain.\\n         */\\n        CHAIN: \\\"VeChain\\\",\\n        /**\\n         * Display the competition of each material or product.\\n         */\\n        COMPETITION: \\\"Market Data - Competition\\\",\\n        /**\\n         * Display the demand of each material or product.\\n         */\\n        DEMAND: \\\"Market Research - Demand\\\",\\n        /**\\n         * Allows us to export goods.\\n         */\\n        EXPORT: \\\"Export\\\",\\n        /**\\n         * The Office API.\\n         */\\n        OFFICE: \\\"Office API\\\",\\n        /**\\n         * Private/public partnership or PPP.  Partner with national governments\\n         * to help lower our taxes.\\n         */\\n        PPP: \\\"Government Partnership\\\",\\n        /**\\n         * Allows us to purchase the exact amount of supply for production.\\n         */\\n        SMART: \\\"Smart Supply\\\",\\n        /**\\n         * The Warehouse API.\\n         */\\n        WAREHOUSE: \\\"Warehouse API\\\",\\n    },\\n    /**\\n     * These are level upgrades, as distinct from the unlock upgrades.  All\\n     * level upgrades start off as level 0.  We must purchase more levels for a\\n     * particular upgrade to increase its effectiveness.  Data taken from this\\n     * file:\\n     *\\n     * https://github.com/bitburner-official/bitburner-src/blob/dev/src/Corporation/data/Constants.ts\\n     */\\n    upgrade: {\\n        ANALYTIC: \\\"Wilson Analytics\\\",\\n        DREAM: \\\"DreamSense\\\",\\n        FACTORY: \\\"Smart Factories\\\",\\n        FOCUS: \\\"FocusWires\\\",\\n        INJECTOR: \\\"Nuoptimal Nootropic Injector Implants\\\",\\n        INSIGHT: \\\"Project Insight\\\",\\n        NEURAL: \\\"Neural Accelerators\\\",\\n        SALE: \\\"ABC SalesBots\\\",\\n        SPEECH: \\\"Speech Processor Implants\\\",\\n        STORAGE: \\\"Smart Storage\\\",\\n    },\\n};\\n\\n/**\\n * Thresholds on various aspects of a corporation.\\n */\\nexport const corp_t = {\\n    /**\\n     * Various thresholds on materials.\\n     */\\n    material: {\\n        /**\\n         * AI Cores.\\n         */\\n        ai: {\\n            /**\\n             * Purchasing thresholds.\\n             */\\n            buy: {\\n                /**\\n                 * The amount for our initial bulk purchase.\\n                 */\\n                INIT_BULK: 75,\\n            },\\n        },\\n        /**\\n         * Hardware.\\n         */\\n        hardware: {\\n            /**\\n             * Purchasing thresholds.\\n             */\\n            buy: {\\n                /**\\n                 * The amount for our initial bulk purchase.\\n                 */\\n                INIT_BULK: 125,\\n            },\\n        },\\n        /**\\n         * Real Estate.\\n         */\\n        land: {\\n            /**\\n             * Purchasing thresholds.\\n             */\\n            buy: {\\n                /**\\n                 * The amount for our initial bulk purchase.\\n                 */\\n                INIT_BULK: 27e3,\\n            },\\n        },\\n    },\\n    /**\\n     * Various thresholds related to an office.\\n     */\\n    office: {\\n        /**\\n         * The initial number of employees to hire for an office.\\n         */\\n        INIT_HIRE: 3,\\n    },\\n    /**\\n     * We need $150b to start a corporation.  Data taken from this file:\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/NetscriptFunctions/Corporation.ts\\n     */\\n    SEED_COST: 15e10,\\n    /**\\n     * Thresholds on various aspects of selling materials or products.\\n     */\\n    sell: {\\n        /**\\n         * The sell amount.\\n         */\\n        amount: {\\n            /**\\n             * Sell the maximum of whatever we have.\\n             */\\n            MAX: \\\"MAX\\\",\\n        },\\n        /**\\n         * The sell price.\\n         */\\n        price: {\\n            /**\\n             * Sell at the market price.\\n             */\\n            MP: \\\"MP\\\",\\n        },\\n    },\\n    /**\\n     * Thresholds related to level upgrades.  These are distinct from unlock\\n     * upgrades.\\n     */\\n    upgrade: {\\n        /**\\n         * For our initial setup, we want at least 2 levels of various upgrades.\\n         */\\n        INIT_LEVEL: 2,\\n    },\\n    /**\\n     * Various thresholds related to a warehouse.\\n     */\\n    warehouse: {\\n        /**\\n         * The initial upgraded size of a warehouse.  When a warehouse is\\n         * bought, it has a size of 100.  We want to upgrade our early warehouse\\n         * to this size.\\n         */\\n        INIT_UPGRADE_SIZE: 300,\\n    },\\n};\\n\",\"filename\":\"/lib/constant/corp.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":742,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constant values related to crimes.\\n\\n/**\\n * Various constants and thresholds related to crimes.\\n */\\nexport const crimes = {\\n    /**\\n     * All available crimes.\\n     */\\n    ASSASS: \\\"assassinate\\\",\\n    DRUG: \\\"deal drugs\\\",\\n    FORGE: \\\"bond forgery\\\",\\n    GTA: \\\"grand theft auto\\\",\\n    HEIST: \\\"heist\\\",\\n    KILL: \\\"homicide\\\",\\n    KIDNAP: \\\"kidnap and ransom\\\",\\n    LARCENY: \\\"larceny\\\",\\n    MUG: \\\"mug someone\\\",\\n    ROB: \\\"rob store\\\",\\n    SHOP: \\\"shoplift\\\",\\n    TRAFFICK: \\\"traffick illegal arms\\\",\\n};\\n\\n/**\\n * Various thresholds related to crimes.\\n */\\nexport const crimes_t = {\\n    /**\\n     * Mugging increases all of our combat stats.  Check whether each of our\\n     * combat stats is at least this value.\\n     */\\n    MUG: 10,\\n    /**\\n     * The default number of times we want to commit a particular crime.\\n     */\\n    n: 10,\\n    /**\\n     * Shoplift increases our Dexterity and Agility.  Check whether each of our\\n     * Dexterity and Agility is at least this value.\\n     */\\n    SHOP: 5,\\n};\\n\",\"filename\":\"/lib/constant/crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":743,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to programs that can be created or bought\\n// via the dark web.\\n\\n/**\\n * All programs that can be created.  These programs can also be purchased via\\n * the dark web.  Data taken from this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Programs/data/ProgramsMetadata.ts\\n */\\nexport function all_programs() {\\n    // A map where the key/value pair is as follows:\\n    //\\n    // key := The name of a program.\\n    // value := The minimum Hack stat at which we are able to create the\\n    //     program.\\n    const program = new Map([\\n        [\\\"BruteSSH.exe\\\", 50],\\n        [\\\"FTPCrack.exe\\\", 100],\\n        [\\\"HTTPWorm.exe\\\", 500],\\n        [\\\"relaySMTP.exe\\\", 250],\\n        [\\\"SQLInject.exe\\\", 750],\\n        [\\\"DeepscanV1.exe\\\", 75],\\n        [\\\"DeepscanV2.exe\\\", 400],\\n        [\\\"ServerProfiler.exe\\\", 75],\\n        [\\\"AutoLink.exe\\\", 25],\\n        [\\\"Formulas.exe\\\", 1000],\\n    ]);\\n    return program;\\n}\\n\\n/**\\n * The cheapest programs available via the dark web are:\\n *\\n * (1) BruteSSH.exe\\n * (2) ServerProfiler.exe\\n * (3) DeepscanV1.exe\\n *\\n * Each costs the same amount of $500k.  Data taken from this page:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/DarkWeb/DarkWebItems.ts\\n *\\n * If we are to delete any of these cheapest programs, then we should\\n * definitely keep BruteSSH.exe.  The remaining candidates for deletion are\\n * ServerProfiler.exe and DeepscanV1.exe.  Decide which of these two programs\\n * we do not need and delete that one.\\n */\\nexport const cheapest_program = {\\n    COST: 5e5,\\n    NAME: \\\"DeepscanV1.exe\\\",\\n};\\n\\n/**\\n * These programs are port openers.  Each program can be used to open a\\n * specific port on a server.\\n */\\nexport const program = [\\n    \\\"BruteSSH.exe\\\",\\n    \\\"FTPCrack.exe\\\",\\n    \\\"HTTPWorm.exe\\\",\\n    \\\"relaySMTP.exe\\\",\\n    \\\"SQLInject.exe\\\",\\n];\\n\\n/**\\n * The purchasing schedule.  Use this schedule to help us buy a batch of\\n * programs, depending on our current funds.  This schedule is used whenever our\\n * money is less than some pre-defined constant M.  If our money is at least M,\\n * then we switch to a dynamic purchasing schedule.\\n */\\nexport const buy_schedule = {\\n    /**\\n     * When we use a dynamic purchasing schedule, this constant is used to help\\n     * us determine how many programs to buy in a batch.\\n     */\\n    DIVISOR: 1e12,\\n    /**\\n     * The money threshold at which we switch to a dynamic purchasing schedule.\\n     * If our money is less than this constant, use the pre-defined schedule\\n     * below.\\n     */\\n    DYNAMIC_TAU: 100e12,\\n    /**\\n     * How many programs in a batch.  Each number n means we purchase n copies\\n     * of a particular program.\\n     */\\n    howmany: [50, 25, 12, 6, 3, 1, 1],\\n    /**\\n     * Various money thresholds.\\n     */\\n    money: [\\n        10e12, // 10 trillion\\n        1e12, // 1 trillion\\n        500e9,\\n        100e9,\\n        1e9, // 1 billion\\n        100e6,\\n        10e6, // 10 million\\n    ],\\n    /**\\n     * The sleep time.  We sleep a given amount of time, depending on the batch\\n     * size and money.\\n     */\\n    time: [\\n        1, // 1 millisecond\\n        1,\\n        1e3, // 1 second\\n        10e3, // 10 seconds\\n        30e3,\\n        60e3, // 60 seconds or 1 minute\\n        120e3, // 120 seconds or 2 minutes\\n    ],\\n};\\n\\n/**\\n * These are utility programs.  They are useful when we need to manually\\n * traverse the network of world servers.\\n */\\nexport const utility_program = [\\n    \\\"AutoLink.exe\\\",\\n    \\\"DeepscanV1.exe\\\",\\n    \\\"DeepscanV2.exe\\\",\\n    \\\"Formulas.exe\\\",\\n    \\\"ServerProfiler.exe\\\",\\n];\\n\",\"filename\":\"/lib/constant/exe.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":744,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to factions and their Augmentations.\\n\\n/**\\n * Various constants and thresholds related to Augmentations.\\n */\\nexport const augment = {\\n    /**\\n     * The maximum number of Augmentations to purchase from a faction.  This\\n     * number does not include the NeuroFlux Governor.  We limit the number of\\n     * Augmentations to purchase to help speed up the process of buying all\\n     * Augmentations from a faction.  We purchase this number of Augmentations\\n     * from a faction and install them.  If the faction has any more\\n     * Augmentations (besides the NeuroFlux Governor), we purchase those after\\n     * the installation.  Some Augmentations require a huge amount of faction\\n     * reputation.  It can take a very long time to accumulate enough\\n     * reputation points, especially if an Augmentation requires at least one\\n     * million reputation points.  By purchasing a given number of\\n     * Augmentations and installing them, we gain some favour with the faction.\\n     * In case our favour points are high enough, we would be able to donate to\\n     * the faction in exchange for reputation points.  This should help to\\n     * shorten the amount of time required to reach a certain amount of\\n     * reputation points.\\n     */\\n    BUY_TAU: 5,\\n    /**\\n     * Named Augmentations.\\n     */\\n    NFG: \\\"NeuroFlux Governor\\\",\\n    TRP: \\\"The Red Pill\\\",\\n};\\n\\n/**\\n * Stat requirements for receiving an invitation from a faction.  Here is an\\n * explanation of each requirement.\\n *\\n * (1) backdoor := Must install a backdoor on this server.\\n * (2) ban := An array of companies at which we should not be working.\\n * (3) city := Must be located in this city.\\n * (4) combat := Lower threshold for each combat stat.  Each of our Strength,\\n *     Defense, Dexterity, and Agility must be at least this value.\\n * (5) hack := Lower threshold for our Hack stat.  Our Hack stat must be at\\n *     least this value.\\n * (6) karma := Our negative karma must be this value or lower.\\n * (7) kill := Must have killed at least this many people.\\n * (8) money := Must have at least this amount of money.\\n */\\nexport const faction_req = {\\n    Aevum: {\\n        city: \\\"Aevum\\\",\\n        money: 40e6,\\n    },\\n    \\\"Bachman & Associates\\\": {\\n        backdoor: \\\"b-and-a\\\",\\n        city: \\\"Aevum\\\",\\n    },\\n    BitRunners: {\\n        backdoor: \\\"run4theh111z\\\",\\n    },\\n    \\\"Blade Industries\\\": {\\n        backdoor: \\\"blade\\\",\\n        city: \\\"Sector-12\\\",\\n    },\\n    Chongqing: {\\n        city: \\\"Chongqing\\\",\\n        money: 20e6,\\n    },\\n    \\\"Clarke Incorporated\\\": {\\n        backdoor: \\\"clarkinc\\\",\\n        city: \\\"Aevum\\\",\\n    },\\n    CyberSec: {\\n        backdoor: \\\"CSEC\\\",\\n    },\\n    /**\\n     * This faction has a requirement not listed below.  We must install a\\n     * certain number of Augmentations.  This number can vary from one BitNode\\n     * to the next.\\n     */\\n    Daedalus: {\\n        combat: 1500,\\n        hack: 2500,\\n        money: 100e9,\\n    },\\n    ECorp: {\\n        backdoor: \\\"ecorp\\\",\\n        city: \\\"Aevum\\\",\\n    },\\n    \\\"Four Sigma\\\": {\\n        backdoor: \\\"4sigma\\\",\\n        city: \\\"Sector-12\\\",\\n    },\\n    \\\"Fulcrum Secret Technologies\\\": {\\n        backdoor: \\\"fulcrumassets\\\",\\n        city: \\\"Aevum\\\",\\n    },\\n    /**\\n     * This faction has a requirement not listed below.  We must install at\\n     * least 30 Augmentations.\\n     */\\n    Illuminati: {\\n        combat: 1200,\\n        hack: 1500,\\n        money: 150e9,\\n    },\\n    Ishima: {\\n        city: \\\"Ishima\\\",\\n        money: 30e6,\\n    },\\n    \\\"KuaiGong International\\\": {\\n        backdoor: \\\"kuai-gong\\\",\\n        city: \\\"Chongqing\\\",\\n    },\\n    MegaCorp: {\\n        backdoor: \\\"megacorp\\\",\\n        city: \\\"Sector-12\\\",\\n    },\\n    /**\\n     * This faction has another requirement not listed below.  Nodes in our\\n     * Hacknet farm must have a collective level of at least 100, a collective\\n     * RAM of at least 8, and a collective Cores of at least 4. For example, if\\n     * we have 3 Hacknet nodes then the Level of all 3 nodes should add up to\\n     * at least 100. One node can be at Level 50, another node can be at\\n     * Level 30, and the third node can be at Level 21.\\n     */\\n    Netburners: {\\n        hack: 80,\\n    },\\n    \\\"New Tokyo\\\": {\\n        city: \\\"New Tokyo\\\",\\n        money: 20e6,\\n    },\\n    NiteSec: {\\n        backdoor: \\\"avmnite-02h\\\",\\n    },\\n    NWO: {\\n        backdoor: \\\"nwo\\\",\\n        city: \\\"Volhaven\\\",\\n    },\\n    \\\"OmniTek Incorporated\\\": {\\n        backdoor: \\\"omnitek\\\",\\n        city: \\\"Volhaven\\\",\\n    },\\n    \\\"Sector-12\\\": {\\n        city: \\\"Sector-12\\\",\\n    },\\n    /**\\n     * This faction has another requirement not listed below.  We must be a\\n     * CTO, CFO, or CEO of a company.\\n     */\\n    Silhouette: {\\n        karma: -22,\\n        money: 15e6,\\n    },\\n    \\\"Slum Snakes\\\": {\\n        combat: 30,\\n        karma: -9,\\n        money: 1e6,\\n    },\\n    \\\"Speakers for the Dead\\\": {\\n        ban: [\\\"Central Intelligence Agency\\\", \\\"National Security Agency\\\"],\\n        combat: 300,\\n        hack: 100,\\n        karma: -45,\\n        kill: 30,\\n    },\\n    Tetrads: {\\n        city: \\\"Ishima\\\",\\n        combat: 75,\\n        karma: -18,\\n    },\\n    \\\"The Black Hand\\\": {\\n        backdoor: \\\"I.I.I.I\\\",\\n    },\\n    /**\\n     * This faction has a requirement not listed below.  We must have installed\\n     * at least 20 Augmentations.\\n     */\\n    \\\"The Covenant\\\": {\\n        combat: 850,\\n        hack: 850,\\n        money: 75e9,\\n    },\\n    \\\"The Dark Army\\\": {\\n        city: \\\"Chongqing\\\",\\n        combat: 300,\\n        hack: 300,\\n        karma: -45,\\n        kill: 5,\\n    },\\n    \\\"The Syndicate\\\": {\\n        city: \\\"Sector-12\\\",\\n        combat: 200,\\n        hack: 200,\\n        karma: -90,\\n        money: 10e6,\\n    },\\n    \\\"Tian Di Hui\\\": {\\n        city: \\\"Ishima\\\",\\n        hack: 50,\\n        money: 1e6,\\n    },\\n    Volhaven: {\\n        city: \\\"Volhaven\\\",\\n        money: 50e6,\\n    },\\n};\\n\\n/**\\n * Various thresholds related to factions.\\n */\\nexport const faction_t = {\\n    /**\\n     * Donate this percentage of our money to a faction.\\n     */\\n    DONATE_MULT: 0.2,\\n    /**\\n     * The minimum amount of reputation we must attain at a company.  This\\n     * reputation point is part of the pre-requisites for receiving an\\n     * invitation from a megacorporation faction.\\n     */\\n    CORP_REP: 3e5,\\n};\\n\\n/**\\n * Augmentations that are exclusive to various factions.  We can purchase some\\n * Augmentations provided that we are a member of the corresponding faction.\\n */\\nexport const exclusive_aug = {\\n    \\\"Bachman & Associates\\\": [\\\"SmartJaw\\\"],\\n    BitRunners: [\\n        \\\"BitRunners Neurolink\\\",\\n        \\\"Cranial Signal Processors - Gen V\\\",\\n        \\\"Neural Accelerator\\\",\\n    ],\\n    \\\"Blade Industries\\\": [\\\"Neotra\\\"],\\n    Chongqing: [\\\"Neuregen Gene Modification\\\"],\\n    \\\"Clarke Incorporated\\\": [\\n        \\\"Neuronal Densification\\\",\\n        \\\"nextSENS Gene Modification\\\",\\n    ],\\n    CyberSec: [\\n        \\\"Cranial Signal Processors - Gen I\\\",\\n        \\\"Neurotrainer I\\\",\\n        \\\"Synaptic Enhancement Implant\\\",\\n    ],\\n    Daedalus: [\\\"The Red Pill\\\"],\\n    ECorp: [\\\"ECorp HVMind Implant\\\"],\\n    \\\"Fulcrum Secret Technologies\\\": [\\n        \\\"PC Direct-Neural Interface NeuroNet Injector\\\",\\n    ],\\n    Illuminati: [\\\"QLink\\\"],\\n    Ishima: [\\\"INFRARET Enhancement\\\"],\\n    \\\"KuaiGong International\\\": [\\\"Photosynthetic Cells\\\"],\\n    MegaCorp: [\\\"CordiARC Fusion Reactor\\\"],\\n    Netburners: [\\n        \\\"Hacknet Node Cache Architecture Neural-Upload\\\",\\n        \\\"Hacknet Node Core Direct-Neural Interface\\\",\\n        \\\"Hacknet Node CPU Architecture Neural-Upload\\\",\\n        \\\"Hacknet Node Kernel Direct-Neural Interface\\\",\\n        \\\"Hacknet Node NIC Architecture Neural-Upload\\\",\\n    ],\\n    \\\"New Tokyo\\\": [\\\"NutriGen Implant\\\"],\\n    NiteSec: [\\\"CRTX42-AA Gene Modification\\\", \\\"Neural-Retention Enhancement\\\"],\\n    NWO: [\\\"Xanipher\\\"],\\n    \\\"OmniTek Incorporated\\\": [\\\"OmniTek InfoLoad\\\"],\\n    \\\"Sector-12\\\": [\\\"CashRoot Starter Kit\\\"],\\n    Silhouette: [\\\"TITN-41 Gene-Modification Injection\\\"],\\n    \\\"Slum Snakes\\\": [\\\"SmartSonar Implant\\\"],\\n    \\\"Speakers for the Dead\\\": [\\\"Graphene BrachiBlades Upgrade\\\"],\\n    Tetrads: [\\\"Bionic Arms\\\"],\\n    \\\"Tian Di Hui\\\": [\\\"Social Negotiation Assistant (S.N.A)\\\"],\\n    \\\"The Black Hand\\\": [\\\"The Black Hand\\\"],\\n    \\\"The Covenant\\\": [\\\"SPTN-97 Gene Modification\\\"],\\n    \\\"The Dark Army\\\": [\\\"Graphene Bionic Arms Upgrade\\\"],\\n    \\\"The Syndicate\\\": [\\\"BrachiBlades\\\"],\\n    Volhaven: [\\\"DermaForce Particle Barrier\\\"],\\n};\\n\\n/**\\n * Various divisions of factions in the game.\\n */\\nexport const factions = {\\n    /**\\n     * An array of all faction names.  The faction names are listed in a\\n     * specific order, usually along the following line of reasoning.\\n     *\\n     * (1) Sector-12 should be the first faction we must join.  The reason is\\n     *     simple.  This faction has the CashRoot Starter Kit Augmentation that\\n     *     grants us $1m and the BruteSSH.exe program after a soft reset.\\n     * (2) Netburners, CyberSec, and Tian Di Hui should be the next group of\\n     *     factions to join.  These factions have Augmentations that raise\\n     *     various hack-related stats.  In particular, Tian Di Hui has 4\\n     *     Augmentations that boost the amount of reputation we gain from\\n     *     factions and companies.\\n     * (3) BitRunners has an Augmentation that allows us to start with the\\n     *     FTPCrack.exe and relaySMTP.exe programs after a soft reset.\\n     * (4) The Syndicate has the Augmentation BrachiBlades, which is a\\n     *     pre-requisite of an Augmentation from Speakers for the Dead.\\n     *     Furthermore, The Syndicate has 2 Augmentations that boost the\\n     *     reputation we gain from factions and companies.\\n     * (5) Bachman & Associates has 5 Augmentations that boost the amount of\\n     *     reputation we gain from factions and companies.\\n     * (6) Aevum has the PCMatrix Augmentation that allows us to start with\\n     *     DeepscanV1.exe and AutoLink.exe after a soft reset.  These are\\n     *     strictly not necessary in an automated game play.\\n     * (7) Chongqing, Ishima, and New Tokyo are not enemies with each other.\\n     *     We can join all three factions at the same time, work toward\\n     *     purchasing all of their Augmentations, and install all Augmentations\\n     *     from all three factions at the same time.  Doing so can save us a\\n     *     lot of time as we do not need to go through a soft reset after\\n     *     purchasing all Augmentations from one faction.  However, we some way\\n     *     to generate a massive amount of income within a short amount of time.\\n     * (8) Volhaven should be the last city faction to join.\\n     * (9) NiteSec and The Black Hand are the remaining two hacking groups to\\n     *     join.  They have Augmentations to boost various hack-related stats.\\n     * (10) We can join the remaining megacorporation factions in any order we\\n     *      want.  These factions have various Augmentations that boost a\\n     *      number of social-related stats, i.e. reputation from factions and\\n     *      companies.  However, we should have purchased most or all of these\\n     *      from Bachman & Associates.\\n     * (11) Criminal organizations have Augmentations to boost various combat\\n     *      stats as well as social-related stats.  We should have bought from\\n     *      The Syndicate all or most of the Augmentations that boost our\\n     *      reputation gain from factions and companies.\\n     * (12) The endgame factions should be the last to join.  We can join\\n     *      Illuminati or The Covenant in any order we want.  However, Daedalus\\n     *      should be the very last faction that we join.\\n     */\\n    all: [\\n        /**\\n         * Early game factions, city factions, and hacking groups.\\n         */\\n        \\\"Sector-12\\\",\\n        \\\"Netburners\\\",\\n        \\\"CyberSec\\\",\\n        \\\"Tian Di Hui\\\",\\n        \\\"BitRunners\\\",\\n        /**\\n         * Criminal organization.\\n         */\\n        \\\"The Syndicate\\\",\\n        /**\\n         * Megacorporation.\\n         */\\n        \\\"Bachman & Associates\\\",\\n        /**\\n         * City factions.\\n         */\\n        \\\"Aevum\\\",\\n        \\\"Chongqing\\\",\\n        \\\"Ishima\\\",\\n        \\\"New Tokyo\\\",\\n        \\\"Volhaven\\\",\\n        /**\\n         * Hacking factions.\\n         */\\n        \\\"NiteSec\\\",\\n        \\\"The Black Hand\\\",\\n        /**\\n         * Megacorporations.\\n         */\\n        \\\"Blade Industries\\\",\\n        \\\"Clarke Incorporated\\\",\\n        \\\"ECorp\\\",\\n        \\\"Four Sigma\\\",\\n        \\\"Fulcrum Secret Technologies\\\",\\n        \\\"KuaiGong International\\\",\\n        \\\"MegaCorp\\\",\\n        \\\"NWO\\\",\\n        \\\"OmniTek Incorporated\\\",\\n        /**\\n         * Criminal organizations.\\n         */\\n        \\\"Silhouette\\\",\\n        \\\"Slum Snakes\\\",\\n        \\\"Speakers for the Dead\\\",\\n        \\\"Tetrads\\\",\\n        \\\"The Dark Army\\\",\\n        /**\\n         * Endgame factions.\\n         */\\n        \\\"Illuminati\\\",\\n        \\\"The Covenant\\\",\\n        \\\"Daedalus\\\",\\n    ],\\n    /**\\n     * Various early-game factions.\\n     */\\n    early: [\\\"Sector-12\\\", \\\"Netburners\\\", \\\"CyberSec\\\", \\\"Tian Di Hui\\\", \\\"BitRunners\\\"],\\n    /**\\n     * A bunch of factions that have these Augmentations:\\n     *\\n     * (1) Boost our faction reputation multiplier.\\n     * (2) Port opener programs.\\n     *\\n     * Join each of these factions, earn the required reputation points, and\\n     * purchase only the necessary Augmentations.\\n     */\\n    fast_track: {\\n        \\\"Sector-12\\\": [\\n            /**\\n             * This Augmentation allows us to start with $1m and BruteSSH.exe.\\n             */\\n            \\\"CashRoot Starter Kit\\\",\\n            \\\"Augmented Targeting I\\\",\\n            \\\"Combat Rib I\\\",\\n            \\\"Neuralstimulator\\\",\\n        ],\\n        CyberSec: [\\n            /**\\n             * This Augmentation is a pre-requisite of various Augmentations\\n             * from BitRunners.\\n             */\\n            \\\"Cranial Signal Processors - Gen I\\\",\\n        ],\\n        BitRunners: [\\n            /**\\n             * This Augmentation allows us to start with FTPCrack.exe and\\n             * relaySMTP.exe.\\n             */\\n            \\\"BitRunners Neurolink\\\",\\n            \\\"DataJack\\\",\\n        ],\\n        \\\"Tian Di Hui\\\": [\\n            \\\"ADR-V1 Pheromone Gene\\\",\\n            \\\"Social Negotiation Assistant (S.N.A)\\\",\\n        ],\\n        \\\"The Syndicate\\\": [\\\"The Shadow's Simulacrum\\\"],\\n        Aevum: [\\\"PCMatrix\\\"],\\n        \\\"Bachman & Associates\\\": [\\\"ADR-V2 Pheromone Gene\\\", \\\"SmartJaw\\\"],\\n    },\\n    /**\\n     * All megacorporation factions.\\n     */\\n    megacorp: [\\n        \\\"Bachman & Associates\\\",\\n        \\\"Blade Industries\\\",\\n        \\\"Clarke Incorporated\\\",\\n        \\\"ECorp\\\",\\n        \\\"Four Sigma\\\",\\n        \\\"Fulcrum Secret Technologies\\\",\\n        \\\"KuaiGong International\\\",\\n        \\\"MegaCorp\\\",\\n        \\\"NWO\\\",\\n        \\\"OmniTek Incorporated\\\",\\n    ],\\n};\\n\",\"filename\":\"/lib/constant/faction.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":745,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values relating to gangs.\\n\\n/**\\n * Various armour pieces that a gang member can equip.  Going from top to\\n * bottom, the armour pieces are listed in order from least expensive to most\\n * expensive.  These values are taken from the following page:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/upgrades.ts\\n */\\nexport const armour = {\\n    VEST: \\\"Bulletproof Vest\\\",\\n    FULL: \\\"Full Body Armor\\\",\\n    LIQUID: \\\"Liquid Body Armor\\\",\\n    GRAPHENE: \\\"Graphene Plating Armor\\\",\\n};\\n\\n/**\\n * All Augmentations that can be equipped on a gang member.  The Augmentations\\n * are listed from least expensive to most expensive.  The data are taken from\\n * this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/upgrades.ts\\n */\\nexport const gang_augment = {\\n    WIRE: \\\"BitWire\\\", // 5e9\\n    DATA: \\\"DataJack\\\", // 7.5e9\\n    ARMS: \\\"Bionic Arms\\\", // 10e9\\n    LEGS: \\\"Bionic Legs\\\", // 10e9\\n    NEURAL: \\\"Neuralstimulator\\\", // 10e9\\n    WEAVE: \\\"Nanofiber Weave\\\", // 12e9\\n    SPINE: \\\"Bionic Spine\\\", // 15e9\\n    MUSCLE: \\\"Synfibril Muscle\\\", // 15e9\\n    BLADES: \\\"BrachiBlades\\\", // 20e9\\n    HEART: \\\"Synthetic Heart\\\", // 25e9\\n    BONE: \\\"Graphene Bone Lacings\\\", // 50e9\\n};\\n\\n/**\\n * Constants related to various aspects of our gang members.\\n */\\nexport const members = {\\n    /**\\n     * The maximum number of gang members to assign to Ethical Hacking.\\n     */\\n    EHACK: 1,\\n    /**\\n     * The number of members that constitute half of the maximum number of\\n     * members we can have.  This is the 50% membership mark.\\n     */\\n    HALF: 6,\\n    /**\\n     * The number of gangsters we can recruit upon creating our gang.  We must\\n     * earn more respect to recruit more gang members.\\n     */\\n    INITIAL: 3,\\n    /**\\n     * The maximum number of members in a gang.  This number is taken from the\\n     * file:\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/Constants.ts\\n     */\\n    MAX: 12,\\n    /**\\n     * Various roles for members of our gang.\\n     */\\n    ROLE: {\\n        artillery: \\\"Artillery\\\",\\n        hacker: \\\"Hacker\\\",\\n        medic: \\\"Medic\\\",\\n        pilot: \\\"Pilot\\\",\\n        punk: \\\"Punk\\\",\\n        spy: \\\"Spy\\\",\\n        thief: \\\"Thief\\\",\\n        traitor: \\\"Traitor\\\",\\n        vanguard: \\\"Vanguard\\\",\\n    },\\n    /**\\n     * The maximum number of gang members to assign to acts of terrorism.\\n     * Terrorism greatly increases our respect and wanted level, but generate\\n     * no income.  We should only have one terrorist.\\n     */\\n    TERRORIST: 1,\\n    /**\\n     * The maximum number of gang members to assign to vigilante justice.\\n     * Assume we are in a criminal gang.\\n     */\\n    VIGILANTE: 4,\\n    /**\\n     * The maximum number of gang members to assign to territory warfare.  This\\n     * threshold applies only when we are not engaged in territory warfare\\n     * against a rival gang.  If we are about to clash against a rival gang, we\\n     * should devote more members to warfare.  In general, this threshold helps\\n     * to build our power while we are not engaged in dispute against any rival\\n     * gang.\\n     */\\n    WARRIOR: 4,\\n};\\n\\n/**\\n * Miscellaneous constants related to various thresholds.\\n */\\nexport const gang_t = {\\n    /**\\n     * The minimum percentage boost to a stat of a member.  Let x be the\\n     * ascension multiplier of a member, gained by having ascended one or\\n     * more times.  Let y be the next ascension multiplier, a boost to x after\\n     * ascending the member another time.  The value of y is represented as\\n     * 1.p, where 100 * p is the percentage boost to x.  After the next\\n     * ascension, the new ascension multiplier of the member would be x * y.\\n     * We want the value of y to be at least the given threshold.\\n     */\\n    ASCEND: 1.25,\\n    /**\\n     * The cost or expenditure multiplier.  Equipment and Augmentations for a\\n     * gang member are expensive.  Whenever we make a decision to purchase a\\n     * new equipment or Augmentation for a gang member, we multiply the cost of\\n     * the equipment or Augmentation by this multiplier.  In case we do buy the\\n     * new equipment, at least we would not have spent all our funds.  Do not\\n     * want to go bankrupt because we decided to purchase an expensive\\n     * equipment.\\n     */\\n    COST_MULT: 5,\\n    /**\\n     * In BitNodes other than BN2.x we must decrease our karma to -54,000 or\\n     * lower as a pre-requisite for creating a gang.  This constant is taken\\n     * from the file:\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/Constants.ts\\n     */\\n    KARMA: -54e3,\\n    /**\\n     * The roster of our gang.  This lists the number of members we want for\\n     * each role.  Except for punk, we want at most 1 member in each of the\\n     * other roles.  The number 8 below is the number of members in a non-punk\\n     * role.\\n     */\\n    ROSTER: {\\n        artillery: 1,\\n        hacker: 1,\\n        medic: 1,\\n        pilot: 1,\\n        punk: members.MAX - 8,\\n        spy: 1,\\n        thief: 1,\\n        traitor: 1,\\n        vanguard: 1,\\n    },\\n    /**\\n     * The territory and power of each gang is updated approximately every 20\\n     * seconds.  We refer to this time period as a tick.\\n     */\\n    TICK: 20e3,\\n    /**\\n     * The minimum chance of winning a clash against a rival gang.  This chance\\n     * of victory is expressed as an integer percentage.  In general, we should\\n     * only engage in turf warfare against another gang if our chance of victory\\n     * is at least this number.  The win chance is not the same as the\\n     * probability of death.  The defense of a gang member determines their\\n     * chance of dying during a turf war against a rival gang.\\n     */\\n    WIN: 55,\\n};\\n\\n/**\\n * Various types of gangster roles.  A list of names for each role.  We\\n * randomly choose a name to assign to a new recruit.  We want our gang to have\\n * the following types of members:\\n *\\n * (1) Artillery.  A gun expert and ranged fighter.  Good with bow and arrows,\\n *     or missiles.\\n * (2) Hacker.  The computer wizard.\\n * (3) Medic.  This is our doctor.\\n * (4) Pilot.  Air support from a helicopter, drone, or aeroplane.\\n * (5) Punk.  Low level soldiers who rake in money for the gang by committing\\n *     various crimes.\\n * (6) Spy.  An expert in espionage and reconnaissance.\\n * (7) Thief.  Someone who steals treasure.  A sneak.\\n * (8) Traitor.  Someone who would likely betray the gang.\\n * (9) Vanguard.  Our frontliner and tank.\\n */\\nexport const gangster_t = {\\n    artillery: [\\n        // A\\n        \\\"Alfred Nobel\\\",\\n        \\\"Angus MacGyver\\\",\\n        \\\"Artemus Gordon\\\",\\n        // B\\n        \\\"Bill Dolworth\\\",\\n        \\\"Billy Calloway\\\",\\n        \\\"Billy Rosewood\\\",\\n        \\\"Bobby Jay\\\",\\n        \\\"Bomb Man\\\",\\n        \\\"Bomberman\\\",\\n        \\\"Bomb Voyage\\\",\\n        \\\"Boom Box\\\",\\n        \\\"Boom Stick\\\",\\n        \\\"Boris Turgoff\\\",\\n        \\\"Burt Gummer\\\",\\n        // C\\n        \\\"Carlton Lassiter\\\",\\n        \\\"Chaplain Reynolds\\\",\\n        \\\"Clay Allison\\\",\\n        \\\"Colleen Anderson\\\",\\n        \\\"Colonel John Casey\\\",\\n        // D\\n        \\\"David Thurston\\\",\\n        \\\"Demoman\\\",\\n        \\\"Dutch\\\",\\n        // E\\n        \\\"Edgar K. B. Montrose\\\",\\n        \\\"Eugene Tackleberry\\\",\\n        // F\\n        \\\"Fatman\\\",\\n        \\\"Forte Stollen\\\",\\n        // G\\n        \\\"Gunne Knutt\\\",\\n        \\\"Guy Fawkes\\\",\\n        // H\\n        \\\"Hange Zoe\\\",\\n        \\\"Harry the Horse\\\",\\n        \\\"Hawkeye\\\",\\n        \\\"Hawkeye Gough\\\",\\n        \\\"Hazel D'Ark\\\",\\n        \\\"Hero Shackleby\\\",\\n        \\\"Holly Summers\\\",\\n        // I\\n        \\\"Isao Ota\\\",\\n        // J\\n        \\\"Jayne Cobb\\\",\\n        \\\"Jean Havoc\\\",\\n        \\\"Jessica Clearkin\\\",\\n        \\\"John Rambo\\\",\\n        \\\"John Wick\\\",\\n        \\\"Jun the Swan\\\",\\n        // K\\n        \\\"Kell Tainer\\\",\\n        \\\"Kota Hirano\\\",\\n        // L\\n        \\\"Laurie Strode\\\",\\n        // M\\n        \\\"Malcolm Reed\\\",\\n        \\\"Mark Briscoe\\\",\\n        \\\"Marty McChicken\\\",\\n        \\\"Maya Jingu\\\",\\n        \\\"Mike Teevee\\\",\\n        \\\"Minene Uryuu\\\",\\n        // O\\n        \\\"Ossie Brunt\\\",\\n        // P\\n        \\\"Poppy Bros.\\\",\\n        \\\"Professor Shikishima\\\",\\n        \\\"Private Wilson\\\",\\n        // R\\n        \\\"Rally Vincent\\\",\\n        \\\"Revy\\\",\\n        \\\"Ritsuko Inoue\\\",\\n        \\\"Riza Hawkeye\\\",\\n        \\\"Robin Scherbatsky\\\",\\n        \\\"Rocket Raccoon\\\",\\n        \\\"Ryo Saeba\\\",\\n        // S\\n        \\\"Seras Victoria\\\",\\n        \\\"Shino Asada\\\",\\n        \\\"Shuri\\\",\\n        \\\"Sidney Alford\\\",\\n        \\\"Simo Häyhä\\\",\\n        // T\\n        \\\"Teddy Bomber\\\",\\n        \\\"Tiny Tina\\\",\\n        // V\\n        \\\"Vash the Stampede\\\",\\n        // Y\\n        \\\"Yoko Littner\\\",\\n    ],\\n    hacker: [\\n        // Numbers\\n        \\\"1337 H4X0R\\\",\\n        // A\\n        \\\"Acid Burn\\\",\\n        \\\"Adrian Lamo\\\",\\n        \\\"Aelita Schaeffer\\\",\\n        \\\"Akira Shirase\\\",\\n        \\\"Albert Gonzalez\\\",\\n        \\\"Anna Grimsdóttír\\\",\\n        \\\"Anonymouse\\\",\\n        \\\"Apoc\\\",\\n        \\\"ASTRA\\\",\\n        // B\\n        \\\"Benji Dunn\\\",\\n        \\\"Beto O'Rourke\\\",\\n        \\\"Boris Grishenko\\\",\\n        \\\"Brave Coward\\\",\\n        // C\\n        \\\"Carl Arbogast\\\",\\n        \\\"Chihiro Fujisaki\\\",\\n        \\\"Chloe O'Brian\\\",\\n        \\\"Chrumium\\\",\\n        \\\"Chuck Bartowski\\\",\\n        \\\"Crash Override\\\",\\n        \\\"Crumbmium\\\",\\n        \\\"Cypher\\\",\\n        // D\\n        \\\"Dade Murphy\\\",\\n        \\\"Darren Roskow\\\",\\n        \\\"David Levinson\\\",\\n        \\\"David Lightman\\\",\\n        \\\"Dennis Nedry\\\",\\n        \\\"Dozer\\\",\\n        // E\\n        \\\"Edward Snowden\\\",\\n        \\\"Edward Wong Hau Pepelu Tivrusky IV\\\",\\n        \\\"Eugene Belford\\\",\\n        // F\\n        \\\"Felicity Smoak\\\",\\n        \\\"Firefax\\\",\\n        // H\\n        \\\"Henry Dorsett Case\\\",\\n        \\\"Hiro Protagonist\\\",\\n        // I\\n        \\\"Interknit Explorer\\\",\\n        \\\"Internet Exploiter\\\",\\n        \\\"Irwin Emery\\\",\\n        // J\\n        \\\"Jeanson James Ancheta\\\",\\n        \\\"Jeremy Belpois\\\",\\n        \\\"Jobe Smith\\\",\\n        \\\"Jonathan James\\\",\\n        // K\\n        \\\"Kate Libby\\\",\\n        \\\"Kevin Flynn\\\",\\n        \\\"Kevin Mitnick\\\",\\n        \\\"Kevin Poulsen\\\",\\n        \\\"Kimberley Vanvaeck\\\",\\n        // L\\n        \\\"Laughing Man\\\",\\n        \\\"Lee Sampson\\\",\\n        \\\"Lex Murphy\\\",\\n        \\\"Lisbeth Salander\\\",\\n        \\\"Lord Nikon\\\",\\n        \\\"Luther Stickell\\\",\\n        // M\\n        \\\"Marshall Flinkman\\\",\\n        \\\"Martin Bishop\\\",\\n        \\\"Matthew Bevan\\\",\\n        \\\"Michael Calce\\\",\\n        \\\"Milo Hoffman\\\",\\n        \\\"Morpheus\\\",\\n        \\\"Mouse\\\",\\n        // N\\n        \\\"Neo\\\",\\n        \\\"Net Surfer\\\",\\n        // P\\n        \\\"Packet Sniffer\\\",\\n        \\\"Paul Cook\\\",\\n        \\\"Penny Brown\\\",\\n        \\\"Phandom of the Opera\\\",\\n        \\\"Phantom Phreak\\\",\\n        // R\\n        \\\"Rachel Gibson\\\",\\n        \\\"Ramόn Sánchez (Phantom Phreak)\\\",\\n        \\\"Randy Waterhouse\\\",\\n        \\\"Richard Pryce\\\",\\n        \\\"Riley Poole\\\",\\n        // S\\n        \\\"Susan Headley\\\",\\n        \\\"Switch\\\",\\n        // T\\n        \\\"The Plague\\\",\\n        \\\"TORricelli's Lore\\\",\\n        \\\"Trinity\\\",\\n        \\\"TypoManiac\\\",\\n        // Z\\n        \\\"Zero Cool\\\",\\n    ],\\n    medic: [\\n        // A\\n        \\\"Abascantus\\\",\\n        \\\"Adamantius Judaeus\\\",\\n        \\\"Aegimus\\\",\\n        \\\"Aelius Promotus\\\",\\n        \\\"Aemilia Hilaria\\\",\\n        \\\"Aeschrion of Pergamon\\\",\\n        \\\"Aëtius of Amida\\\",\\n        \\\"Agathinus\\\",\\n        \\\"Albucius\\\",\\n        \\\"Alexander Fleming\\\",\\n        \\\"Alexander of Tralles\\\",\\n        \\\"al-Zahrawi\\\",\\n        \\\"Ambroise Paré\\\",\\n        \\\"Amenhotep\\\",\\n        \\\"Andries van Wesel\\\",\\n        \\\"Androcydes\\\",\\n        \\\"Andromachus\\\",\\n        \\\"Anonymus Londinensis\\\",\\n        \\\"Antipater\\\",\\n        \\\"Antiphanes of Delos\\\",\\n        \\\"Antonius Castor\\\",\\n        \\\"Antyllus\\\",\\n        \\\"Apollonius Claudius\\\",\\n        \\\"Apollonius Cyprius\\\",\\n        \\\"Apollonius Organicus\\\",\\n        \\\"Apollonius Pergamenus\\\",\\n        \\\"Apollonius Pitaneus\\\",\\n        \\\"Apollonius Senior\\\",\\n        \\\"Apollonius Tarensis\\\",\\n        \\\"Apollonius Ther\\\",\\n        \\\"Apollonius Glaucus\\\",\\n        \\\"Apollonios of Kition\\\",\\n        \\\"Archigenes\\\",\\n        \\\"Arcyon\\\",\\n        \\\"Aretaeus\\\",\\n        \\\"Asclepiades of Bithynia\\\",\\n        \\\"Asclepiades Pharmacion\\\",\\n        \\\"Asclepius\\\",\\n        \\\"Aspasia the Physician\\\",\\n        \\\"Athenaeus of Attalia\\\",\\n        \\\"Atreya\\\",\\n        \\\"Aulus Cornelius Celsus\\\",\\n        // B\\n        \\\"Bharadwaja\\\",\\n        \\\"Bian Que\\\",\\n        \\\"Bogar\\\",\\n        \\\"Bolus of Mendes\\\",\\n        // C\\n        \\\"Caelius Aurelianus\\\",\\n        \\\"Carl Clauberg\\\",\\n        \\\"Cassius Felix\\\",\\n        \\\"Charaka\\\",\\n        \\\"Charles R. Drew\\\",\\n        \\\"Charmis of Marseilles\\\",\\n        \\\"Claudius Philoxenus \\\",\\n        \\\"Cosmas and Damian\\\",\\n        \\\"Crinas of Marseilles\\\",\\n        \\\"Cristina Yang\\\",\\n        \\\"Criton of Heraclea\\\",\\n        \\\"Ctesias of Cnidus\\\",\\n        // D\\n        \\\"Daniel Hale Williams\\\",\\n        \\\"Demetrius of Apamea\\\",\\n        \\\"Demosthenes Philalethes\\\",\\n        \\\"Derek Shepherd\\\",\\n        \\\"Dexippus of Cos\\\",\\n        \\\"Dieuches\\\",\\n        \\\"Diocles of Carystus\\\",\\n        \\\"Diomedes of Tarsus\\\",\\n        \\\"Dong Feng\\\",\\n        \\\"Doogie Howser\\\",\\n        \\\"Doug Ross\\\",\\n        \\\"Dr. Nick\\\",\\n        // E\\n        \\\"Edward Jenner\\\",\\n        \\\"Elizabeth Blackwell\\\",\\n        \\\"Erasistratus\\\",\\n        \\\"Eudemus\\\",\\n        // F\\n        \\\"Frasier Crane\\\",\\n        // G\\n        \\\"Gaius Stertinius Xenophon\\\",\\n        \\\"Galen of Pergamon\\\",\\n        \\\"George O'Malley\\\",\\n        \\\"Georges Mathé\\\",\\n        \\\"Getafix\\\",\\n        \\\"Gregory House\\\",\\n        // H\\n        \\\"Hannibal Lecter\\\",\\n        \\\"Harold Shipman\\\",\\n        \\\"Hawkeye Pierce\\\",\\n        \\\"Helen B. Taussig\\\",\\n        \\\"Heliodorus\\\",\\n        \\\"Henry Jekyll\\\",\\n        \\\"Heraclides of Tarentum\\\",\\n        \\\"Herophilos\\\",\\n        \\\"H. H. Holmes\\\",\\n        \\\"Hicesius\\\",\\n        \\\"Hippocrates\\\",\\n        \\\"Hua Tuo\\\",\\n        // I\\n        \\\"Ibn Sina\\\",\\n        \\\"Ignaz Semmelweis\\\",\\n        \\\"Irynachet\\\",\\n        // J\\n        \\\"Jack Kevorkian\\\",\\n        \\\"Jack Shephard\\\",\\n        \\\"Jackson Avery\\\",\\n        \\\"Jane Cooke Wright\\\",\\n        \\\"Jayant Patel\\\",\\n        \\\"Jivaka Komarabhacca\\\",\\n        \\\"John Bodkin Adams\\\",\\n        \\\"John Carter\\\",\\n        \\\"John Dolittle\\\",\\n        \\\"John Dorian\\\",\\n        \\\"John H. Watson\\\",\\n        \\\"John Snow\\\",\\n        \\\"Jonas Salk\\\",\\n        \\\"Josef Mengele\\\",\\n        \\\"Joseph Lister\\\",\\n        // K\\n        \\\"Kashyapa\\\",\\n        \\\"Korakkar\\\",\\n        // L\\n        \\\"Leonard H. McCoy\\\",\\n        \\\"Leoparda\\\",\\n        \\\"Les McPainy\\\",\\n        \\\"Lexie Grey\\\",\\n        \\\"Linda Burfield Hazzard\\\",\\n        // M\\n        \\\"Madhava-kara\\\",\\n        \\\"Marcellus Empiricus\\\",\\n        \\\"Marcellus of Side\\\",\\n        \\\"Marcel Petiot\\\",\\n        \\\"Mark Sloan\\\",\\n        \\\"Meges of Sidon\\\",\\n        \\\"Menemachus\\\",\\n        \\\"Menodotus of Nicomedia\\\",\\n        \\\"Meredith Grey\\\",\\n        \\\"Metrodora\\\",\\n        \\\"Michael DeBakey\\\",\\n        \\\"Michael Swango\\\",\\n        \\\"Michaela Quinn\\\",\\n        \\\"Mindy Lahiri\\\",\\n        \\\"Miranda Bailey\\\",\\n        \\\"Mnesitheus\\\",\\n        \\\"Morris Bolber\\\",\\n        // O\\n        \\\"Oribasius\\\",\\n        // P\\n        \\\"Pain Hathaway\\\",\\n        \\\"Pain Killer\\\",\\n        \\\"Paracelsus\\\",\\n        \\\"Patanjali\\\",\\n        \\\"Paul of Aegina\\\",\\n        \\\"Pedanius Dioscorides\\\",\\n        \\\"Penthu\\\",\\n        \\\"Peseshet\\\",\\n        \\\"Philagrius of Epirus\\\",\\n        \\\"Philinus of Cos\\\",\\n        \\\"Philistion of Locri\\\",\\n        \\\"Philumenus\\\",\\n        \\\"Pil Moore\\\",\\n        \\\"Plistonicus\\\",\\n        \\\"Praxagoras of Cos\\\",\\n        // Q\\n        \\\"Qar\\\",\\n        \\\"Quintus Gargilius Martialis\\\",\\n        // R\\n        \\\"Rabâ-ša-Marduk\\\",\\n        \\\"Remy Hadley\\\",\\n        \\\"Richard Needleman\\\",\\n        \\\"Robert Koch\\\",\\n        \\\"Rufus of Ephesus\\\",\\n        // S\\n        \\\"Saint Fabiola\\\",\\n        \\\"Sawbone\\\",\\n        \\\"Scribonius Largus\\\",\\n        \\\"Serapion of Alexandria\\\",\\n        \\\"Servilius Damocrates\\\",\\n        \\\"Sextius Niger\\\",\\n        \\\"Sextus Empiricus\\\",\\n        \\\"Sextus Placitus\\\",\\n        \\\"Shennong\\\",\\n        \\\"Shepseskaf-ankh\\\",\\n        \\\"Soranus of Ephesus\\\",\\n        // T\\n        \\\"Themison of Laodicea\\\",\\n        \\\"Theodorus Priscianus\\\",\\n        \\\"Theophilus Protospatharius\\\",\\n        \\\"Thessalus of Tralles\\\",\\n        \\\"Thomas Neill Cream\\\",\\n        \\\"Tirumular\\\",\\n        // V\\n        \\\"Virginia Apgar\\\",\\n        // W\\n        \\\"Walter Freeman\\\",\\n        \\\"William Osler\\\",\\n        // X\\n        \\\"Xenocrates of Aphrodisias\\\",\\n        // Z\\n        \\\"Zhang Zhongjing\\\",\\n        \\\"Zopyrus\\\",\\n    ],\\n    pilot: [\\n        // A\\n        \\\"Air Boss\\\",\\n        \\\"Air Bust\\\",\\n        \\\"Alan Shepard\\\",\\n        \\\"Alex Rogan\\\",\\n        \\\"Amelia Earhart\\\",\\n        \\\"Amuro Ray\\\",\\n        \\\"Amy Johnson\\\",\\n        \\\"Anne Morrow Lindbergh\\\",\\n        \\\"Asami Sato\\\",\\n        // B\\n        \\\"Baloo\\\",\\n        \\\"Beryl Markham\\\",\\n        \\\"Bessie Coleman\\\",\\n        \\\"Betty Skelton\\\",\\n        \\\"Bill Owens\\\",\\n        \\\"Buttery Fly\\\",\\n        \\\"Buzz Aldrin\\\",\\n        // C\\n        \\\"Charles Kingsford Smith\\\",\\n        \\\"Charles Lindbergh\\\",\\n        \\\"Chesley Sullenberger\\\",\\n        \\\"Chopper McFly\\\",\\n        // D\\n        \\\"Diana Barnato Walker\\\",\\n        \\\"Dieter F. Uchtdorf\\\",\\n        \\\"Douglas Bader\\\",\\n        \\\"DragonFlew\\\",\\n        // E\\n        \\\"Edward O'Hare\\\",\\n        \\\"Elliott Roosevelt\\\",\\n        \\\"Eugene Bullard\\\",\\n        // F\\n        \\\"Fly Undone\\\",\\n        \\\"Fox McCloud\\\",\\n        \\\"Francis Gary Powers\\\",\\n        // G\\n        \\\"Geraldyn M. Cobb\\\",\\n        \\\"Ghost of Kyiv\\\",\\n        // H\\n        \\\"Han Solo\\\",\\n        \\\"Hanna Reitsch\\\",\\n        \\\"Hans Boehm\\\",\\n        \\\"Hans von Hammer\\\",\\n        \\\"Harriet Quimby\\\",\\n        \\\"Hera Syndulla\\\",\\n        \\\"Hikaru Sulu\\\",\\n        \\\"Hoban Washburne\\\",\\n        \\\"Howard Hughes\\\",\\n        // I\\n        \\\"Iceman Kazansky\\\",\\n        \\\"Ilan Ramon\\\",\\n        // J\\n        \\\"Jacqueline Cochran\\\",\\n        \\\"James McCloud\\\",\\n        \\\"Jean Batten\\\",\\n        \\\"Joe Sullivan\\\",\\n        \\\"Joker Moreau\\\",\\n        \\\"Joseph Cooper\\\",\\n        // K\\n        \\\"Kara Thrace\\\",\\n        // L\\n        \\\"Lord Flashheart\\\",\\n        \\\"Lothar von Richthofen\\\",\\n        \\\"Louis Blériot\\\",\\n        \\\"Lydia Litvyak\\\",\\n        // M\\n        \\\"Mamma Aiuto\\\",\\n        \\\"Manfred von Richthofen\\\",\\n        \\\"Mathias Rust\\\",\\n        \\\"Maverick Mitchell\\\",\\n        \\\"Mitchell Gant\\\",\\n        // N\\n        \\\"Nadiya Savchenko\\\",\\n        \\\"Night Witches\\\",\\n        \\\"Niobe\\\",\\n        // O\\n        \\\"Orville Wright\\\",\\n        // P\\n        \\\"Pancho Barnes\\\",\\n        \\\"Pappy Boyington\\\",\\n        \\\"Paul Tibbets\\\",\\n        \\\"Piotr Skut\\\",\\n        \\\"Poe Dameron\\\",\\n        \\\"Porco Rosso\\\",\\n        // R\\n        \\\"Raymonde de Laroche\\\",\\n        \\\"Richard Bong\\\",\\n        \\\"Rick Husband\\\",\\n        // S\\n        \\\"Sabiha Gökçen\\\",\\n        \\\"Slip Stream\\\",\\n        \\\"Star Lord\\\",\\n        \\\"Steve Fossett\\\",\\n        \\\"Steven Hiller\\\",\\n        // T\\n        \\\"Topper Harley\\\",\\n        \\\"Turanga Leela\\\",\\n        // V\\n        \\\"Valentina Tereshkova\\\",\\n        \\\"Valentina Vostok\\\",\\n        // W\\n        \\\"Warbird\\\",\\n        \\\"Wolf O'Donnell\\\",\\n        // Y\\n        \\\"Yuri Gagarin\\\",\\n        // Z\\n        \\\"Xenia Onatopp\\\",\\n    ],\\n    punk: [\\n        // A\\n        \\\"Aella\\\",\\n        \\\"Ainippe\\\",\\n        \\\"Al Capone\\\",\\n        \\\"Alfhild\\\",\\n        \\\"Al Swearengen\\\",\\n        \\\"Alkippe\\\",\\n        \\\"Andromache\\\",\\n        \\\"Anna Nzinga\\\",\\n        \\\"Anne Bonny\\\",\\n        \\\"Anne Dieu le Veut\\\",\\n        \\\"Antianeira\\\",\\n        // B\\n        \\\"Beatrix Kiddo\\\",\\n        \\\"Black Bart\\\",\\n        \\\"Blackbeard\\\",\\n        \\\"Bonnie Parker\\\",\\n        \\\"Bryan Mills\\\",\\n        // C\\n        \\\"Captain Haddock\\\",\\n        \\\"Captain Hook\\\",\\n        \\\"Charlotte Badger\\\",\\n        \\\"Clyde Barrow\\\",\\n        // D\\n        \\\"Deborah Sampson\\\",\\n        \\\"Deianira\\\",\\n        \\\"Diana Prince\\\",\\n        \\\"Donbot\\\",\\n        \\\"Don Corleone\\\",\\n        \\\"Don Logan\\\",\\n        // E\\n        \\\"Elise Eskilsdotter\\\",\\n        \\\"Ellen Ripley\\\",\\n        \\\"Elvira Hancock\\\",\\n        \\\"Eowyn\\\",\\n        \\\"Erza Scarlet\\\",\\n        \\\"Evie\\\",\\n        // F\\n        \\\"Fat Tony\\\",\\n        \\\"Francois l'Olonnais\\\",\\n        // G\\n        \\\"Gemma Teller Morrow\\\",\\n        \\\"Grace O'Malley\\\",\\n        // H\\n        \\\"Harriet Tubman\\\",\\n        \\\"Hippolyta\\\",\\n        \\\"Hippomache\\\",\\n        // J\\n        \\\"Jack Sparrow\\\",\\n        \\\"Jacquotte Delahaye\\\",\\n        \\\"Jeanne de Clisson\\\",\\n        \\\"Jen Yu\\\",\\n        \\\"Joe Chill\\\",\\n        \\\"Jules Winnfield\\\",\\n        // K\\n        \\\"Katniss Everdeen\\\",\\n        \\\"Kiyuchiyo\\\",\\n        // L\\n        \\\"Leon\\\",\\n        \\\"Long Ben\\\",\\n        \\\"Long John Silver\\\",\\n        // M\\n        \\\"Ma Barker\\\",\\n        \\\"Ma Beagle\\\",\\n        \\\"Mark Gor\\\",\\n        \\\"Mary Read\\\",\\n        \\\"Melanippe\\\",\\n        \\\"Mia Wallace\\\",\\n        \\\"Mikasa Ackerman\\\",\\n        // N\\n        \\\"Ned Kelly\\\",\\n        \\\"Nucky Thompson\\\",\\n        // O\\n        \\\"O-Ren Ishii\\\",\\n        // R\\n        \\\"Rani Velu Nachiyar\\\",\\n        \\\"Red Rackham\\\",\\n        \\\"Rusla\\\",\\n        // S\\n        \\\"Sadie Farrell\\\",\\n        \\\"Sayyida al Hurra\\\",\\n        \\\"Shiva of the East\\\",\\n        \\\"Sir Francis Drake\\\",\\n        \\\"Sir Henry Morgan\\\",\\n        \\\"Snaps Provolone\\\",\\n        \\\"Stephanie St. Clair\\\",\\n        \\\"Stringer Bell\\\",\\n        // T\\n        \\\"Tom Stall\\\",\\n        \\\"Tony Montana\\\",\\n        \\\"Tony Soprano\\\",\\n        \\\"Tyler Durden\\\",\\n        \\\"U. Tolkien 2 Me\\\",\\n        // V\\n        \\\"Vincent Vega\\\",\\n        \\\"Virginia Hill\\\",\\n        // W\\n        \\\"William Kidd\\\",\\n        // Z\\n        \\\"Zoro Roronoa\\\",\\n    ],\\n    spy: [\\n        // A\\n        \\\"Agent 99\\\",\\n        \\\"Agent Kay\\\",\\n        \\\"Aldrich Ames\\\",\\n        \\\"Andree Borrel\\\",\\n        \\\"Ashraf Marwan\\\",\\n        \\\"Atomic Blonde\\\",\\n        \\\"Austin Millbarge\\\",\\n        \\\"Austin Powers\\\",\\n        // B\\n        \\\"Belle Boyd\\\",\\n        \\\"Bob Ho\\\",\\n        \\\"Boris Badenov\\\",\\n        // C\\n        \\\"Cody Banks\\\",\\n        // D\\n        \\\"Derek Flint\\\",\\n        \\\"Donald Maclean\\\",\\n        // E\\n        \\\"Eileen Nearne\\\",\\n        \\\"Emily Pollifax\\\",\\n        \\\"Emma Peel\\\",\\n        \\\"Emmett Fitz-Hume\\\",\\n        \\\"Ethan Hunt\\\",\\n        \\\"Ethel Rosenberg\\\",\\n        // F\\n        \\\"Felix Leiter\\\",\\n        \\\"Foxy Skulk\\\",\\n        \\\"Francis Walsingham\\\",\\n        \\\"Frederick Joubert Duquesne\\\",\\n        // G\\n        \\\"George Koval\\\",\\n        \\\"George Reginald Starr\\\",\\n        \\\"George Smiley\\\",\\n        \\\"Giacomo Casanova\\\",\\n        // H\\n        \\\"Harry Hart\\\",\\n        \\\"Harry Tasker\\\",\\n        \\\"Herbert Philbrick\\\",\\n        \\\"Hubert Bonisseur de La Bath\\\",\\n        // I\\n        \\\"Ian Fleming\\\",\\n        \\\"Illya Kuryakin\\\",\\n        // J\\n        \\\"Jack Bauer\\\",\\n        \\\"Jack Ryan\\\",\\n        \\\"James Armistead Lafayette\\\",\\n        \\\"James Bond\\\",\\n        \\\"Jane Blonde\\\",\\n        \\\"Jane Smith\\\",\\n        \\\"Jason Bourne\\\",\\n        \\\"John André\\\",\\n        \\\"John Drake\\\",\\n        \\\"John Steed\\\",\\n        \\\"John Vassall\\\",\\n        \\\"Johnny English\\\",\\n        \\\"Joseph Turner\\\",\\n        \\\"Julius Rosenberg\\\",\\n        // K\\n        \\\"Kim Philby\\\",\\n        \\\"Klaus Fuchs\\\",\\n        \\\"Krystyna Skarbek\\\",\\n        // L\\n        \\\"Lafayette C. Baker\\\",\\n        // M\\n        \\\"Markus Wolf\\\",\\n        \\\"Mata Hari\\\",\\n        \\\"Maxwell Smart\\\",\\n        \\\"Michael Westen\\\",\\n        // N\\n        \\\"Napoleon Solo\\\",\\n        \\\"Natasha Fatale\\\",\\n        \\\"Nathan D. Muir\\\",\\n        \\\"Noor Inayat Khan\\\",\\n        // O\\n        \\\"Odette Hallowes\\\",\\n        \\\"Oleg Gordievsky\\\",\\n        // P\\n        \\\"Peggy Shippen\\\",\\n        \\\"Perry the Platypus\\\",\\n        // R\\n        \\\"Ralph McGehee\\\",\\n        \\\"Richard Sorge\\\",\\n        // S\\n        \\\"Sarah Walker\\\",\\n        \\\"Savitri Devi\\\",\\n        \\\"Secret Squirrel\\\",\\n        \\\"Severus Snape\\\",\\n        \\\"Shi Pei Pu\\\",\\n        \\\"Simon Templar\\\",\\n        \\\"Sterling Archer\\\",\\n        \\\"Sydney Bristow\\\",\\n        // T\\n        \\\"Tara King\\\",\\n        \\\"Tom Bishop\\\",\\n        // V\\n        \\\"Violette Szabo\\\",\\n        \\\"Virginia Hall\\\",\\n        // W\\n        \\\"William Brandt\\\",\\n        \\\"William Stephenson\\\",\\n        // X\\n        \\\"Xander Cage\\\",\\n        // Y\\n        \\\"Yelena Belova\\\",\\n        \\\"Yisrael Bar\\\",\\n    ],\\n    thief: [\\n        // A\\n        \\\"Adam Worth\\\",\\n        \\\"Alan Golder\\\",\\n        \\\"Albert Spaggiari\\\",\\n        // B\\n        \\\"Belle Starr\\\",\\n        \\\"Bender Bending Rodríguez\\\",\\n        \\\"Bill Mason\\\",\\n        \\\"Butch Cassidy\\\",\\n        // C\\n        \\\"Carl Gugasian\\\",\\n        \\\"Carmen Sandiego\\\",\\n        \\\"Catwoman\\\",\\n        \\\"Cat Burglar\\\",\\n        \\\"Charles Peace\\\",\\n        \\\"Colton Harris-Moore\\\",\\n        // D\\n        \\\"Danny Ocean\\\",\\n        \\\"David Brankle\\\",\\n        \\\"Derek Creighton Smalls\\\",\\n        \\\"Dinner Set Gang\\\",\\n        \\\"Doris Marie Payne\\\",\\n        // F\\n        \\\"Fagin\\\",\\n        \\\"Forty Elephants Gang\\\",\\n        \\\"Francois Villon\\\",\\n        \\\"Frank Abagnale, Jr.\\\",\\n        // H\\n        \\\"Hans Gruber\\\",\\n        // I\\n        \\\"Irene Adler\\\",\\n        \\\"Ishikawa Goemon\\\",\\n        // J\\n        \\\"Jackie Brown\\\",\\n        \\\"Jeanne de Valois-Saint-Remy\\\",\\n        \\\"Jesse James\\\",\\n        \\\"Jesse Woodson James\\\",\\n        \\\"John Herbert Dillinger\\\",\\n        \\\"Jonathan Wild\\\",\\n        // K\\n        \\\"Kenny Kimes\\\",\\n        \\\"Keyser Söze\\\",\\n        \\\"Koose Munisamy Veerappan\\\",\\n        // L\\n        \\\"Lara Croft\\\",\\n        \\\"Lester Joseph Gillis\\\",\\n        // M\\n        \\\"Mary Frith\\\",\\n        \\\"Mithilesh Kumar Srivastava\\\",\\n        // N\\n        \\\"Neal Caffrey\\\",\\n        \\\"Neil McCauley\\\",\\n        // P\\n        \\\"Prometheus\\\",\\n        // R\\n        \\\"Richard Turpin\\\",\\n        \\\"Rob McYoinker\\\",\\n        \\\"Robert LeRoy Parker\\\",\\n        \\\"Robert Money\\\",\\n        \\\"Robin Hood\\\",\\n        // S\\n        \\\"Sante Singhrs\\\",\\n        \\\"Scott Lang\\\",\\n        \\\"Snake Jailbird\\\",\\n        \\\"Sofia Ivanovna Blyuvshtein\\\",\\n        \\\"Starlet Bandit\\\",\\n        \\\"Stephen Blumberg\\\",\\n        // V\\n        \\\"Vincenzo Peruggia\\\",\\n        \\\"Vincenzo Pipino\\\",\\n    ],\\n    traitor: [\\n        // A\\n        \\\"Alfred Redl\\\",\\n        \\\"Alan Nunn May\\\",\\n        \\\"Andrey Vlasov\\\",\\n        // B\\n        \\\"Benedict Arnold\\\",\\n        \\\"Briony Tallis\\\",\\n        // C\\n        \\\"Charles Trask\\\",\\n        \\\"Charlie Kahn\\\",\\n        // D\\n        \\\"Doña Marina\\\",\\n        // E\\n        \\\"Edmund Pevensie\\\",\\n        \\\"Emilio Aguinaldo\\\",\\n        \\\"Ephialtes of Trachis\\\",\\n        // F\\n        \\\"Fernand Mondego\\\",\\n        \\\"Fredo Corleone\\\",\\n        // G\\n        \\\"Gaius Cassius Longinus\\\",\\n        \\\"Gollum\\\",\\n        // I\\n        \\\"Iago\\\",\\n        // J\\n        \\\"Jaime Lannister\\\",\\n        \\\"Ji Ben\\\",\\n        \\\"Judas Iscariot\\\",\\n        // L\\n        \\\"Lu Bu\\\",\\n        // M\\n        \\\"Marcus Junius Brutus\\\",\\n        \\\"Marvelous Chester\\\",\\n        \\\"Maven Calore\\\",\\n        \\\"Mir Jafar\\\",\\n        \\\"Mordechai Vanunu\\\",\\n        // P\\n        \\\"Petrus of Thorolund\\\",\\n        \\\"Pierre Laval\\\",\\n        \\\"Philippe Petain\\\",\\n        // Q\\n        \\\"Qin Hui\\\",\\n        // S\\n        \\\"Sidney Reilly\\\",\\n        \\\"Stella Kubler\\\",\\n        // T\\n        \\\"Trusty Patches\\\",\\n        // V\\n        \\\"Vidkun Quisling\\\",\\n        // W\\n        \\\"Wang Jingwei\\\",\\n        \\\"Winston Smith\\\",\\n    ],\\n    vanguard: [\\n        // A\\n        \\\"Achilles\\\",\\n        \\\"Akbar\\\",\\n        \\\"Alaric the Visigoth\\\",\\n        \\\"Alexander the Great\\\",\\n        \\\"Amina Sukhera\\\",\\n        \\\"Anita Garibaldi\\\",\\n        \\\"Aqualtune\\\",\\n        \\\"Aragorn\\\",\\n        \\\"Arawelo\\\",\\n        \\\"Arjuna\\\",\\n        \\\"Arminius\\\",\\n        \\\"Artemisia of Caria\\\",\\n        \\\"Asterix\\\",\\n        \\\"Asuna Yuuki\\\",\\n        \\\"Attila the Hun\\\",\\n        // B\\n        \\\"Babur\\\",\\n        \\\"Basil the Bulgar-Slayer\\\",\\n        \\\"Bhima\\\",\\n        \\\"Bjorn Ironside\\\",\\n        \\\"Boudicca\\\",\\n        // C\\n        \\\"Chen Jinnan\\\",\\n        \\\"Cnut the Great\\\",\\n        \\\"Colestah\\\",\\n        \\\"Constantine the Great\\\",\\n        \\\"Count Roland\\\",\\n        \\\"Cynane\\\",\\n        \\\"Cyrus the Great\\\",\\n        // D\\n        \\\"Douglas Haig\\\",\\n        \\\"Duke of Wellington\\\",\\n        // E\\n        \\\"Egil Skallagrimsson\\\",\\n        \\\"Eric Bloodaxe\\\",\\n        \\\"Erik the Red\\\",\\n        // F\\n        \\\"Fu Hao\\\",\\n        // G\\n        \\\"Galvarino\\\",\\n        \\\"Genghis Khan\\\",\\n        \\\"George Washington\\\",\\n        \\\"Gunnar Hamundarson\\\",\\n        \\\"Guts\\\",\\n        // H\\n        \\\"Hannibal Barca\\\",\\n        \\\"Harald Hardrada\\\",\\n        \\\"Hatshepsut\\\",\\n        \\\"Hattori Hanzo\\\",\\n        \\\"Hector\\\",\\n        \\\"Horatius Cocles\\\",\\n        // I\\n        \\\"I. M. Stronk\\\",\\n        \\\"Isshin\\\",\\n        // J\\n        \\\"Joan of Arc\\\",\\n        \\\"Julius Caesar\\\",\\n        // K\\n        \\\"Kahina\\\",\\n        \\\"Khutulun\\\",\\n        \\\"King Alfred\\\",\\n        \\\"King Arthur\\\",\\n        \\\"Knight Artorias\\\",\\n        // L\\n        \\\"Lady Trieu\\\",\\n        \\\"Leif Erikson\\\",\\n        \\\"Leonidas of Sparta\\\",\\n        \\\"Lord Nelson\\\",\\n        \\\"Lozen\\\",\\n        // M\\n        \\\"Maria Quiteria\\\",\\n        \\\"Maximus Decimus Meridius\\\",\\n        \\\"Meat Shield\\\",\\n        \\\"Miltiades\\\",\\n        \\\"Miyamoto Musashi\\\",\\n        // N\\n        \\\"Nakano Takeko\\\",\\n        \\\"Napoleon Bonaparte\\\",\\n        \\\"Nat Turner\\\",\\n        // O\\n        \\\"Obelix\\\",\\n        \\\"Oda Nobunaga\\\",\\n        \\\"Olympias\\\",\\n        // P\\n        \\\"Peter the Great\\\",\\n        \\\"Pyrrhus of Epirus\\\",\\n        // R\\n        \\\"Ragnor Lodbrok\\\",\\n        \\\"Richard the Lionheart\\\",\\n        \\\"Rollo of Normandy\\\",\\n        // S\\n        \\\"Saladin\\\",\\n        \\\"Sam Sharpe\\\",\\n        \\\"Sambhaji Bhosale\\\",\\n        \\\"Scathach\\\",\\n        \\\"Scipio Africanus\\\",\\n        \\\"Siegward of Catarina\\\",\\n        \\\"Simon Bolivar\\\",\\n        \\\"Sirris\\\",\\n        \\\"Sitting Bull\\\",\\n        \\\"Slave Knight Gael\\\",\\n        \\\"Solaire of Astora\\\",\\n        \\\"Sparethra\\\",\\n        \\\"Spartacus\\\",\\n        \\\"Sun Tzu\\\",\\n        // T\\n        \\\"T. E. Lawrence\\\",\\n        \\\"Teuta\\\",\\n        \\\"Tokugawa Ieyasu\\\",\\n        \\\"Tomoe Gozen\\\",\\n        \\\"Tomyris\\\",\\n        \\\"Toyotomi Hideyoshi\\\",\\n        // U\\n        \\\"Uesugi Kenshin\\\",\\n        // V\\n        \\\"Vlad the Impaler\\\",\\n        \\\"Vercingetorix\\\",\\n        // W\\n        \\\"William the Conqueror\\\",\\n        \\\"William Wallace\\\",\\n        // X\\n        \\\"Xiahou Dun\\\",\\n        // Y\\n        \\\"Yue Fei\\\",\\n        \\\"Yuria of Londor\\\",\\n        // Z\\n        \\\"Zenobia\\\",\\n        \\\"Zheng Yi Sao\\\",\\n    ],\\n};\\n\\n/**\\n * Various thresholds related to the penalty.\\n */\\nexport const penalty_t = {\\n    /**\\n     * The penalty percentage threshold at which we should lower our wanted\\n     * level.  If our penalty percentage is at least this value, then we should\\n     * reassign some gang members to jobs such as vigilante justice or ethical\\n     * hacking to help reduce our wanted level.\\n     */\\n    HIGH: 10,\\n    /**\\n     * The penalty percentage threshold at which we should move gang members\\n     * out of jobs that lower our wanted level.  Such jobs are vigilante\\n     * justice and ethical hacking.  In general, we strive to have as low\\n     * wanted level as possible.  However, if our wanted level is below this\\n     * threshold, then we should reassign members to jobs that yield income.\\n     */\\n    LOW: 2,\\n};\\n\\n/**\\n * Various rootkits we can purchase for a gang member.  Going from top to\\n * bottom, the rootkits are listed in ascending order of price.  The rootkit\\n * names are taken from this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/upgrades.ts\\n */\\nexport const rootkit = {\\n    NUKE: \\\"NUKE Rootkit\\\",\\n    SOUL: \\\"Soulstealer Rootkit\\\",\\n    HMAP: \\\"Hmap Node\\\",\\n    DEMON: \\\"Demon Rootkit\\\",\\n    JACK: \\\"Jack the Ripper\\\",\\n};\\n\\n/**\\n * Various tasks to which a gang member can be assigned.  The task names are\\n * taken from this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/tasks.ts\\n */\\nexport const task = {\\n    /**\\n     * Set a gang member to the idle state.  This is the default state upon\\n     * recruitment.\\n     * Gang: criminal, hacking\\n     */\\n    IDLE: \\\"Unassigned\\\",\\n    //\\n    // Hacking gangs.\\n    //\\n    /**\\n     * Set a gang member to commit cyberterrorism.\\n     * Gang: hacking\\n     * Money: N/A\\n     * Respect: great\\n     * Wanted: great\\n     */\\n    CYBERTERROR: \\\"Cyberterrorism\\\",\\n    /**\\n     * Set a gang member to attempt distributed denial of service (DDoS)\\n     * attacks.\\n     * Gang: hacking\\n     * Money: N/A\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    DDOS: \\\"DDoS Attacks\\\",\\n    /**\\n     * Set a gang member as an ethical hacker.\\n     * Gang: hacking\\n     * Money: yes\\n     * Respect: N/A\\n     * Wanted: negative\\n     */\\n    EHACK: \\\"Ethical Hacking\\\",\\n    /**\\n     * Set a gang member to commit financial fraud and digital counterfeiting.\\n     * Gang: hacking\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: slight\\n     */\\n    FRAUD: \\\"Fraud & Counterfeiting\\\",\\n    /**\\n     * Set a gang member to attempt identity theft.\\n     * Gang: hacking\\n     * Money: yes\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    ID_THEFT: \\\"Identity Theft\\\",\\n    /**\\n     * Set a gang member to launder money.\\n     * Gang: hacking\\n     * Money: yes\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    LAUNDER: \\\"Money Laundering\\\",\\n    /**\\n     * Set a gang member to attempt phishing scams and attacks.\\n     * Gang: hacking\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: slight\\n     */\\n    PHISH: \\\"Phishing\\\",\\n    /**\\n     * Set a gang member to create and distribute ransomware.\\n     * Gang: hacking\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: slight\\n     */\\n    RANSOMWARE: \\\"Ransomware\\\",\\n    /**\\n     * Set a gang member to create and distribute malicious viruses.\\n     * Gang: hacking\\n     * Money: N/A\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    VIRUS: \\\"Plant Virus\\\",\\n    //\\n    // Criminal gangs.\\n    //\\n    /**\\n     * Set a gang member to threaten and blackmail high-profile targets.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: slight\\n     */\\n    BLACKMAIL: \\\"Threaten & Blackmail\\\",\\n    /**\\n     * Set a gang member to run cons.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    CON: \\\"Run a Con\\\",\\n    /**\\n     * Set a gang member to sell drugs.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: slight\\n     */\\n    DRUGS: \\\"Deal Drugs\\\",\\n    /**\\n     * Set a gang member to extort civilians in our turf.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: yes\\n     */\\n    EXTORT: \\\"Strongarm Civilians\\\",\\n    /**\\n     * Set a gang member to randomly mug a person.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: slight\\n     * Wanted: very slight\\n     */\\n    MUG: \\\"Mug People\\\",\\n    /**\\n     * Set a gang member to commit armed robbery.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    ROBBERY: \\\"Armed Robbery\\\",\\n    /**\\n     * Set a gang member to commit acts of terrorism.\\n     * Gang: criminal\\n     * Money: N/A\\n     * Respect: great\\n     * Wanted: great\\n     */\\n    TERROR: \\\"Terrorism\\\",\\n    /**\\n     * Set a gang member to traffick illegal arms.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    TRAFFICK_ARMS: \\\"Traffick Illegal Arms\\\",\\n    /**\\n     * Set a gang member to attempt human trafficking.\\n     * Gang: criminal\\n     * Money: yes\\n     * Respect: yes\\n     * Wanted: yes\\n     */\\n    TRAFFICK_HUMAN: \\\"Human Trafficking\\\",\\n    //\\n    // Both criminal and hacking gangs.\\n    //\\n    /**\\n     * Set a gang member to train their Charisma stat.\\n     * Gang: criminal, hacking\\n     * Money: N/A\\n     * Wanted: N/A\\n     */\\n    CHARISMA: \\\"Train Charisma\\\",\\n    /**\\n     * Set a gang member to train their combat stats, i.e. Str, Def, Dex, Agi.\\n     * Gang: criminal, hacking\\n     * Money: N/A\\n     * Wanted: N/A\\n     */\\n    COMBAT: \\\"Train Combat\\\",\\n    /**\\n     * Set a gang member to train their Hack stat.\\n     * Gang: criminal, hacking\\n     * Money: N/A\\n     * Wanted: N/A\\n     */\\n    HACK: \\\"Train Hacking\\\",\\n    /**\\n     * Set a gang member to engage in territorial warfare against other gangs.\\n     * Gang: criminal, hacking\\n     * Money: N/A\\n     * Wanted: N/A\\n     */\\n    TURF_WAR: \\\"Territory Warfare\\\",\\n    /**\\n     * Set a gang member to be a vigilante and protect the city from criminals.\\n     * Gang: criminal, hacking\\n     * Money: N/A\\n     * Respect: N/A\\n     * Wanted: negative\\n     */\\n    VIGILANTE: \\\"Vigilante Justice\\\",\\n};\\n\\n/**\\n * Stat thresholds related to various tasks.\\n */\\nexport const task_t = {\\n    /**\\n     * The minimum Charisma stat at which a gang member might be assigned to\\n     * threaten and blackmail high-profile targets.\\n     */\\n    BLACKMAIL: 200,\\n    /**\\n     * The minimum threshold for the Charisma stat that a new recruit must\\n     * attain.  A new recruit might be assigned to train their Charisma.  They\\n     * graduate out of Charisma training after their Charisma stat is at least\\n     * this number.\\n     */\\n    CHARISMA: 15,\\n    /**\\n     * The minimum threshold for the combat stats that a new recruit must\\n     * attain.  A new recruit might be assigned to train their combat stats.\\n     * They graduate out of combat training after their combat stats are at\\n     * least this threshold.\\n     */\\n    COMBAT: 15,\\n    /**\\n     * The minimum Charisma stat at which a gang member might be assigned to\\n     * running a con.\\n     */\\n    CON: 100,\\n    /**\\n     * The minimum Hack stat at which a gang member might be assigned to commit\\n     * acts of cyberterrorism.\\n     */\\n    CYBER_TERROR: 400,\\n    /**\\n     * The minimum threshold on a combat stat at which a gang member might be\\n     * assigned to strongarm civilians.  For example, if a member has Strength\\n     * at least this number, then we might want to reassign the member to\\n     * strongarm civilians.\\n     */\\n    EXTORT: 50,\\n    /**\\n     * The minimum Hack stat at which a gang member might be assigned to commit\\n     * financial fraud and digital counterfeiting.\\n     */\\n    FRAUD: 200,\\n    /**\\n     * The minimum threshold for the Hack stat that a new recruit must attain.\\n     * A new recruit might be assigned to train their Hack stat.  They graduate\\n     * out of Hack training once their Hack stat is at least this number.\\n     */\\n    HACK: 15,\\n    /**\\n     * The minimum Hack stat at which a gang member might be assigned to\\n     * identity theft.\\n     */\\n    ID: 100,\\n    /**\\n     * The minimum Hack stat at which a gang member might be assigned to\\n     * launder money.\\n     */\\n    LAUNDER: 300,\\n    /**\\n     * The minimum Hack stat at which a gang member might be assigned to\\n     * phishing scams.\\n     */\\n    PHISH: 50,\\n    /**\\n     * The minimum threshold on a combat stat at which a gang member might be\\n     * assigned to armed robbery.  For example, if a member has Strength at\\n     * least this number, then we might want to re-assign the member to armed\\n     * robbery.\\n     */\\n    ROBBERY: 200,\\n    /**\\n     * The minimum threshold on a combat stat at which a gang member might be\\n     * assigned to acts of terrorism.  For example, if a member has Strength at\\n     * least this number, then we might want to re-assign the member to commit\\n     * acts of terrorism.\\n     */\\n    TERROR: 400,\\n    /**\\n     * The minimum threshold on a combat stat at which a gang member might be\\n     * assigned to trafficking illegal arms.  For example, if a member has\\n     * Strength at least this number, then we might want to reassign the\\n     * member to trafficking illegal arms.\\n     */\\n    TRAFFICK_ARMS: 300,\\n    /**\\n     * The minimum Charisma stat at which a gang member might be assigned to\\n     * trafficking humans.\\n     */\\n    TRAFFICK_HUMAN: 300,\\n};\\n\\n/**\\n * Various vehicles with which a gang member can be equipped.  Going from top\\n * to bottom, the vehicles are listed from least expensive to most expensive.\\n * The values are taken from this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/upgrades.ts\\n */\\nexport const vehicle = {\\n    FORD: \\\"Ford Flex V20\\\",\\n    ATX: \\\"ATX1070 Superbike\\\",\\n    MB: \\\"Mercedes-Benz S9001\\\",\\n    FERRARI: \\\"White Ferrari\\\",\\n};\\n\\n/**\\n * Various weapons we can purchase for our gang members.  Going from top to\\n * bottom in the given order, the weapons are listed from least expensive to\\n * most expensive.  The weapon names are taken from this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/upgrades.ts\\n */\\nexport const weapon = {\\n    BAT: \\\"Baseball Bat\\\",\\n    KATANA: \\\"Katana\\\",\\n    GLOCK: \\\"Glock 18C\\\",\\n    PNINE: \\\"P90C\\\",\\n    STEYR: \\\"Steyr AUG\\\",\\n    AK: \\\"AK-47\\\",\\n    MFIFTEEN: \\\"M15A10 Assault Rifle\\\",\\n    AWM: \\\"AWM Sniper Rifle\\\",\\n};\\n\",\"filename\":\"/lib/constant/gang.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":746,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to Hacknet nodes and servers.\\n\\n/**\\n * Various thresholds on our Hacknet farm.\\n */\\nexport const hnet_t = {\\n    /**\\n     * The maximum Level of a Hacknet node.  This number is taken from the file\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/Hacknet/data/Constants.ts\\n     */\\n    MAX_LEVEL: 200,\\n    /**\\n     * The money thresholds.  Use these to help us gauge how many Hacknet nodes\\n     * we should purchase.  The values 1e6 and 1e9 mean million and billion,\\n     * respectively.\\n     */\\n    MONEY: [10e6, 100e6, 1e9, 100e9],\\n    /**\\n     * The node thresholds.  At certain money thresholds, we should have the\\n     * corresponding number of nodes.\\n     */\\n    NODE: [6, 12, 24, 30],\\n    /**\\n     * The initial number of Hacknet nodes to buy.  Start our Hacknet farm\\n     * with this many seed nodes.\\n     */\\n    SEED_NODE: 3,\\n};\\n\",\"filename\":\"/lib/constant/hacknet.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":747,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constant values related to input and output.\\n\\n/**\\n * Constants for input and output.\\n */\\nexport const io = {\\n    APPEND: \\\"a\\\",\\n    NEWLINE: \\\"\\\\n\\\",\\n    WRITE: \\\"w\\\",\\n};\\n\",\"filename\":\"/lib/constant/io.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":748,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to various locations in the game world.\\n\\n/**\\n * All cities and their locations.  Data taken from:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Locations/data/LocationNames.ts\\n *\\n * Below are explanation of each field in a city object.  If a city object does\\n * not have a particular field, this means the city does not have the\\n * corresponding location.\\n *\\n * (1) company := An array of company names.  We can work for these companies.\\n * (2) gov := An array of names of governmental sites, e.g. police station or\\n *     government agency.\\n * (3) gym := An array of gym names.\\n * (4) leisure := A leisure centre, e.g. casino or arcade.\\n * (5) other := A miscellaneous location in the city.\\n * (6) shop := A hardware shop, where we can purchase servers or upgrade our\\n *     home server.\\n * (7) uni := The name of the city's university.\\n */\\nexport const cities = {\\n    /**\\n     * All cities in the game world.\\n     */\\n    all: [\\\"Aevum\\\", \\\"Chongqing\\\", \\\"Ishima\\\", \\\"New Tokyo\\\", \\\"Sector-12\\\", \\\"Volhaven\\\"],\\n    /**\\n     * Aevum locations.\\n     */\\n    Aevum: {\\n        company: [\\n            \\\"AeroCorp\\\",\\n            \\\"Bachman & Associates\\\",\\n            \\\"Clarke Incorporated\\\",\\n            \\\"ECorp\\\",\\n            \\\"Fulcrum Technologies\\\",\\n            \\\"Galactic Cybersystems\\\",\\n            \\\"Rho Construction\\\",\\n            \\\"Watchdog Security\\\",\\n        ],\\n        gov: [\\\"Aevum Police Headquarters\\\"],\\n        gym: [\\\"Crush Fitness Gym\\\", \\\"Snap Fitness Gym\\\"],\\n        leisure: \\\"Iker Molina Casino\\\",\\n        shop: \\\"NetLink Technologies\\\",\\n        uni: \\\"Summit University\\\",\\n    },\\n    /**\\n     * Chongqing locations.\\n     */\\n    Chongqing: {\\n        company: [\\\"KuaiGong International\\\", \\\"Solaris Space Systems\\\"],\\n        other: \\\"Church of the Machine God\\\",\\n    },\\n    /**\\n     * Ishima locations.\\n     */\\n    Ishima: {\\n        company: [\\\"Nova Medical\\\", \\\"Omega Software\\\"],\\n        other: \\\"0x6C1\\\",\\n        shop: \\\"Storm Technologies\\\",\\n    },\\n    /**\\n     * New Tokyo locations.\\n     */\\n    \\\"New Tokyo\\\": {\\n        company: [\\n            \\\"DefComm\\\",\\n            \\\"Global Pharmaceuticals\\\",\\n            \\\"Noodle Bar\\\",\\n            \\\"VitaLife\\\",\\n        ],\\n        leisure: \\\"Arcade\\\",\\n    },\\n    /**\\n     * Sector-12 locations.\\n     */\\n    \\\"Sector-12\\\": {\\n        company: [\\n            \\\"Blade Industries\\\",\\n            \\\"Carmichael Security\\\",\\n            \\\"DeltaOne\\\",\\n            \\\"FoodNStuff\\\",\\n            \\\"Four Sigma\\\",\\n            \\\"Icarus Microsystems\\\",\\n            \\\"Joe's Guns\\\",\\n            \\\"MegaCorp\\\",\\n            \\\"Universal Energy\\\",\\n        ],\\n        gov: [\\n            \\\"Central Intelligence Agency\\\",\\n            \\\"National Security Agency\\\",\\n            \\\"Sector-12 City Hall\\\",\\n        ],\\n        gym: [\\\"Iron Gym\\\", \\\"Powerhouse Gym\\\"],\\n        shop: \\\"Alpha Enterprises\\\",\\n        uni: \\\"Rothman University\\\",\\n    },\\n    /**\\n     * Volhaven locations.\\n     */\\n    Volhaven: {\\n        company: [\\n            \\\"CompuTek\\\",\\n            \\\"Helios Labs\\\",\\n            \\\"LexoCorp\\\",\\n            \\\"NWO\\\",\\n            \\\"Omnia Cybersystems\\\",\\n            \\\"SysCore Securities\\\",\\n        ],\\n        gym: [\\\"Millenium Fitness Gym\\\"],\\n        shop: \\\"OmniTek Incorporated\\\",\\n        uni: \\\"ZB Institute of Technology\\\",\\n    },\\n    /**\\n     * These are generic locations that are found in every city.\\n     */\\n    generic: {\\n        hospital: \\\"Hospital\\\",\\n        slum: \\\"The Slums\\\",\\n        TA: \\\"Travel Agency\\\",\\n        WSE: \\\"World Stock Exchange\\\",\\n    },\\n};\\n\",\"filename\":\"/lib/constant/location.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":749,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values.  These can be numeric constants or string\\n// constants.\\n\\n/**\\n * The bases for various number systems.\\n */\\nexport const base = {\\n    /**\\n     * The base of the binary number system.\\n     */\\n    BINARY: 2,\\n    /**\\n     * The base of the decimal number system.\\n     */\\n    DECIMAL: 10,\\n};\\n\\n/**\\n * Use ANSI escape codes to add colour.  Refer to this page for more details:\\n *\\n * https://www.lihaoyi.com/post/BuildyourownCommandLinewithANSIescapecodes.html\\n */\\nexport const colour = {\\n    DARK_GREEN: \\\"\\\\u001b[38;5;22m\\\",\\n    GREEN: \\\"\\\\u001b[32m\\\",\\n    RED: \\\"\\\\u001b[31m\\\",\\n    RESET: \\\"\\\\u001b[0m\\\",\\n};\\n\\n/**\\n * Always have this amount of money in reserve.  When engaging in any\\n * purchasing activities, we do not want to spend all our money.  We spend only\\n * if doing so would leave us with at least this amount of money left over.\\n */\\nexport const money_reserve = 50e6;\\n\\n/**\\n * The hack script.  This script is used for hacking a server.\\n */\\nexport const script = \\\"hack.js\\\";\\n\\n/**\\n * The cost of the TOR router.  Data from the file\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Constants.ts\\n */\\nexport const tor_cost = 200e3;\\n\\n/**\\n * The minimum required Hack stat to enable a player to work at most companies.\\n */\\nexport const work_hack_lvl = 250;\\n\",\"filename\":\"/lib/constant/misc.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":750,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to purchased servers.\\n\\nexport const pserv = {\\n    /**\\n     * The minimum amount of RAM each purchased server should have to be\\n     * considered high-end.\\n     */\\n    HIGH_RAM: 16384,\\n    /**\\n     * By default, we purchase this many servers to kickstart our farm of\\n     * purchased servers as an early source of income and Hack XP.\\n     */\\n    MIN: 13,\\n    /**\\n     * The prefix for the name of each purchased server.  The very first\\n     * purchased server is always named \\\"pserv\\\".  Any subsequent purchased\\n     * server is named as pserv-n, where n is a non-negative integer.\\n     */\\n    PREFIX: \\\"pserv\\\",\\n    /**\\n     * An array of valid RAM for a purchased server.  Each RAM amount is a\\n     * power of 2.\\n     */\\n    RAM: [\\n        32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536,\\n        131072, 262144, 524288, 1048576,\\n    ],\\n};\\n\",\"filename\":\"/lib/constant/pserv.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":751,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to servers in the game world.  We exclude\\n// purchased servers.\\n\\n/**\\n * The home server of the player.\\n */\\nexport const home = \\\"home\\\";\\n\\n/**\\n * Various thresholds related to our home server.\\n */\\nexport const home_t = {\\n    /**\\n     * The maximum number of Cores on the home server.  This is not necessarily\\n     * the greatest number of Cores the home server can have.  Use this\\n     * constant to help us decide whether to upgrade our home server any\\n     * further.\\n     */\\n    CORE: 4,\\n    /**\\n     * The maximum amount of RAM on the home server.  This is not necessarily\\n     * the largest amount of RAM the home server can have.  Use this constant\\n     * to help us decide whether to upgrade our home server any further.\\n     */\\n    RAM: 262144, // 2^18\\n    /**\\n     * The minimum amount of RAM for a high-end home server.\\n     */\\n    RAM_HIGH: 512,\\n    /**\\n     * The minimum amount of RAM for a high-end home server, assuming that we\\n     * have level 2 of \\\"Source-File 4: The Singularity\\\".\\n     */\\n    RAM_HUGE: 1024,\\n    /**\\n     * The minimum amount of RAM for a high-end home server, assuming that we\\n     * have level at most 1 of \\\"Source-File 4: The Singularity\\\".\\n     */\\n    RAM_MASSIVE: 2048,\\n    /**\\n     * The minimum amount of RAM for a mid-sized home server.\\n     */\\n    RAM_MID: 128,\\n    /**\\n     * Reserve various amounts of RAM on the home server.\\n     */\\n    reserve: {\\n        /**\\n         * By default, we reserve this amount of RAM on the home server.\\n         */\\n        DEFAULT: 64,\\n        /**\\n         * If our home server is high-end or better, reserve this amount of RAM.\\n         */\\n        HIGH: 512,\\n        /**\\n         * If we have only level 2 of \\\"Source-File 4: The Singularity\\\".\\n         */\\n        HUGE: 1024,\\n        /**\\n         * If we have only level 1 of \\\"Source-File 4: The Singularity\\\".\\n         */\\n        MASSIVE: 2048,\\n        /**\\n         * If our home server is mid-end or thereabout, reserve this amount of\\n         * RAM.\\n         */\\n        MID: 128,\\n    },\\n};\\n\\n/**\\n * Various constants related to a server.\\n */\\nexport const server = {\\n    /**\\n     * The name of a text file.  The file contains the hostname of the server we\\n     * are currently targetting.  We use our home RAM to hack the target.\\n     */\\n    HRAM: \\\"hram.txt\\\",\\n    /**\\n     * The darkweb server, accessible after purchasing the Tor router.\\n     */\\n    ONION: \\\"darkweb\\\",\\n    /**\\n     * The name of a text file.  If a file with the given name appears on our\\n     * home server, then it means one of the following:\\n     *\\n     * (1) We are sharing our home server with a faction.  Doing so boosts our\\n     *     reputation gain within the faction.\\n     * (2) We want to suspend the most RAM intensive script in order to free up\\n     *     some RAM on the home server.\\n     */\\n    SHARE: \\\"share.txt\\\",\\n    /**\\n     * The name of the script for sharing our home server with a faction.\\n     */\\n    SHARE_SCRIPT: \\\"share.js\\\",\\n    /**\\n     * The w0r1d_d43m0n server.\\n     */\\n    WD: \\\"w0r1d_d43m0n\\\",\\n};\\n\\n/**\\n * Various thresholds related to servers.\\n */\\nexport const server_t = {\\n    /**\\n     * The number of low-end servers to target.  This number means we target n\\n     * servers that have the lowest Hack stat requirement.  This number is\\n     * divided into various tiers.  We use each tier, depending on various\\n     * criteria.\\n     */\\n    lowend: {\\n        LOW: 1,\\n        MID: 2,\\n        HIGH: 3,\\n    },\\n};\\n\",\"filename\":\"/lib/constant/server.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":752,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constants related to sleeves.\\n\\n/**\\n * Miscellaneous thresholds related to sleeves.  A sleeve is a digital carbon\\n * copy (CC) of the player.\\n */\\nexport const cc_t = {\\n    /**\\n     * The cost or expenditure multiplier.  Augmentations for a sleeve are\\n     * expensive.  Whenever we make a decision to purchase an Augmentation for a\\n     * sleeve, we multiply the cost of the Augmentation by this multiplier.  In\\n     * case we do buy the Augmentation, at least we would not have spent all our\\n     * funds.  Do not want to go bankrupt because we decided to purchase an\\n     * expensive Augmentation.\\n     */\\n    COST_MULT: 3,\\n    /**\\n     * The maximum value at which a sleeve is fully synchronized with the\\n     * player's consciousness.\\n     */\\n    MAX_SYNC: 100,\\n    /**\\n     * The minimum shock value of a sleeve.\\n     */\\n    MIN_SHOCK: 0,\\n    /**\\n     * Mugging increases all of a sleeve's combat stats.  Let a sleeve mug until\\n     * each of their combat stats is at least this value.\\n     */\\n    MUG: 10,\\n    /**\\n     * Shoplift increases a sleeve's Dexterity and Agility.  Let a sleeve\\n     * shoplift until their Dexterity and Agility are at least this value.\\n     */\\n    SHOP: 5,\\n};\\n\",\"filename\":\"/lib/constant/sleeve.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":753,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to studying at a university.\\n\\n/**\\n * Various courses we can study at a university.  Data taken from\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/NetscriptFunctions/Singularity.ts\\n */\\nexport const course = {\\n    ALGO: \\\"Algorithms\\\",\\n    CS: \\\"Study Computer Science\\\",\\n    DATA: \\\"Data Structures\\\",\\n    LEAD: \\\"Leadership\\\",\\n    MANAGE: \\\"Management\\\",\\n    NET: \\\"Networks\\\",\\n};\\n\",\"filename\":\"/lib/constant/study.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":754,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Various constants related to time.\\n\\n/**\\n * Various pre-defined periods.  Use these as our waiting times.  If we want\\n * a custom period of time, we should define it using the given amount of\\n * time in millisecond, second, or minute.\\n */\\nexport const wait_t = {\\n    /**\\n     * The default waiting period in seconds.  Use this for most purposes, when\\n     * we wait for an action to complete.\\n     */\\n    DEFAULT: 5e3,\\n    /**\\n     * One hour expressed in milliseconds.\\n     */\\n    HOUR: 36e5,\\n    /**\\n     * One millisecond.\\n     */\\n    MILLISECOND: 1,\\n    /**\\n     * One minute expressed in milliseconds.\\n     */\\n    MINUTE: 6e4,\\n    /**\\n     * One second expressed in milliseconds.\\n     */\\n    SECOND: 1e3,\\n};\\n\",\"filename\":\"/lib/constant/time.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":755,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to working at a company or for a faction.\\n\\n/**\\n * Areas of employment within a company or faction.\\n */\\nexport const job_area = {\\n    BUSINESS: \\\"Business\\\",\\n    FIELD: \\\"Field Work\\\",\\n    HACK: \\\"Hacking Contracts\\\",\\n    SOFTWARE: \\\"Software\\\",\\n};\\n\\n/**\\n * Job titles at various companies.  Data taken from\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Company/data/companypositionnames.ts\\n */\\nexport const job_title = {\\n    CEO: \\\"Chief Executive Officer\\\",\\n    CFO: \\\"Chief Financial Officer\\\",\\n    CTO: \\\"Chief Technology Officer\\\",\\n};\\n\",\"filename\":\"/lib/constant/work.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":756,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A bunch of constant values related to the World Stock Exchange.\\n\\n/**\\n * Various thresholds related to the market forecast.\\n */\\nexport const forecast = {\\n    /**\\n     * The buying threshold for the market forecast.  We skip buying shares if\\n     * the forecast is below this threshold.\\n     */\\n    BUY: 0.575,\\n    /**\\n     * A selling threshold for the market forecast.  We sell all shares of a\\n     * stock if the forecast is below this threshold.\\n     */\\n    SELL: 0.5,\\n    /**\\n     * The threshold for the market volatility.  We do not buy shares if the\\n     * volatility is above this threshold.\\n     */\\n    VOLATILITY: 0.05,\\n};\\n\\n/**\\n * Miscellaneous constants.\\n */\\nexport const wse = {\\n    /**\\n     * A multiplier for the amount of money we should have in reserve.  When\\n     * trading on the Stock Market, we should not spend all our money on\\n     * shares.  Instead we should have a fixed amount of money in reserve.  The\\n     * multiplier is used to calculate how much money we should have before we\\n     * buy any shares.  Let our funds threshold be the reserve multiplier times\\n     * the amount of money to be held in reserve.  If our current amount of\\n     * money is greater than the resulting product, then we have sufficient\\n     * funds.  Increase the value of this constant to hold more money in\\n     * reserve.\\n     */\\n    RESERVE_MULT: 1.1,\\n    /**\\n     * The minimum amount of money we are willing to spend to purchase shares\\n     * of a stock.  This is our spending threshold.  If our money is less than\\n     * the spending threshold, then do not purchase any shares.\\n     */\\n    SPEND_T: 5e6,\\n    /**\\n     * The Stock Market updates approximately every 6 seconds.\\n     */\\n    TICK: 6e3,\\n    /**\\n     * A file name.  If the trade bot detects the existence of this file on the\\n     * home server, it would stop purchasing shares of stocks.  The behaviour\\n     * is subject to certain conditions.  See the trade-bot.js script for more\\n     * details.\\n     */\\n    STOP_BUY: \\\"trade_bot_stop_buy.txt\\\",\\n};\\n\",\"filename\":\"/lib/constant/wse.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":757,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bitnode } from \\\"/lib/constant/bn.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { corp, corp_t } from \\\"/lib/constant/corp.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { assert, is_valid_city } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A class to hold information about a corporation.  We use this class to help\\n * us manage a corporation.  We typically use the Corporation API by calling its\\n * functions along the format ns[\\\"Corporation\\\"].functionName in order to\\n * circumvent the high RAM cost.\\n */\\nexport class Corporation {\\n    /**\\n     * The namespace for the Netscript API.\\n     */\\n    #ns;\\n\\n    /**\\n     * Initialize a Corporation object.\\n     *\\n     * @param ns The namespace for the Netscript API.\\n     */\\n    constructor(ns) {\\n        this.#ns = ns;\\n    }\\n\\n    /**\\n     * All divisions of our corporation.\\n     *\\n     * @return An array containing the names of all divisions of our\\n     *     corporation.\\n     */\\n    all_divisions() {\\n        return this.#ns[corp.API].getCorporation().divisions.map((d) => d.name);\\n    }\\n\\n    /**\\n     * Purchase an unlock upgrade.  This type of upgrade is a one-time\\n     * unlockable.  It applies to the entire corporation and cannot be levelled.\\n     *\\n     * @param upg A string representing the name of an unlock upgrade.\\n     * @return true if we successfully purchased the given unlock upgrade or\\n     *     already have it; false otherwise.\\n     */\\n    buy_unlock_upgrade(upg) {\\n        assert(this.is_valid_unlock_upgrade(upg));\\n        if (this.has_unlock_upgrade(upg)) {\\n            return bool.SUCCESS;\\n        }\\n        if (this.funds() < this.#ns[corp.API].getUnlockUpgradeCost(upg)) {\\n            return bool.FAILURE;\\n        }\\n        this.#ns[corp.API].unlockUpgrade(upg);\\n        return this.has_unlock_upgrade(upg);\\n    }\\n\\n    /**\\n     * Purchase a warehouse for a division in a particular city.\\n     *\\n     * @param div A string representing the name of a division.\\n     * @param ct A string representing the name of a city.\\n     * @return True if the purchase was successful; false otherwise.\\n     */\\n    buy_warehouse(div, ct) {\\n        assert(this.is_valid_division(div));\\n        assert(is_valid_city(ct));\\n        if (this.funds() < this.#ns[corp.API].getPurchaseWarehouseCost()) {\\n            return bool.FAILURE;\\n        }\\n        this.#ns[corp.API].purchaseWarehouse(div, ct);\\n        return bool.SUCCESS;\\n    }\\n\\n    /**\\n     * Start a corporation.  We can start a corporation in one of two ways:\\n     *\\n     * (1) Self-funded.  Use $150b of our own money to start a corporation.\\n     *     This works in any BitNode, but has the disadvantage that we must have\\n     *     at least $150b upfront.\\n     * (2) Get a loan.  Take out a loan of $150b to start our corporation.  This\\n     *     only works in BN3.\\n     *\\n     * @return True if our corporation is successfully created; false otherwise.\\n     */\\n    create() {\\n        const player = new Player(this.#ns);\\n        // Assume we are in BN3.  Use our own money to start a corporation,\\n        // otherwise take out a loan.\\n        if (bitnode.Corporatocracy === player.bitnode()) {\\n            const self_fund = player.money() >= corp_t.SEED_COST;\\n            return this.#ns[corp.API].createCorporation(corp.NAME, self_fund);\\n        }\\n        // We are in a BitNode other than BN3.  Must use our own money to start\\n        // a corporation.  There is no option to take out a loan.\\n        if (player.money() < corp_t.SEED_COST) {\\n            return bool.FAILURE;\\n        }\\n        return this.#ns[corp.API].createCorporation(corp.NAME, bool.SELF_FUND);\\n    }\\n\\n    /**\\n     * Enable the Smart Supply for all divisions in each city.\\n     */\\n    enable_smart_supply() {\\n        for (const div of this.all_divisions()) {\\n            cities.all.forEach((ct) => {\\n                this.#ns[corp.API].setSmartSupply(div, ct, bool.ENABLE);\\n            });\\n        }\\n    }\\n\\n    /**\\n     * Expand our corporation into other cities.  We open a division office in\\n     * another city.\\n     *\\n     * @param name A string representing the name of a division of our\\n     *     corporation.\\n     * @param city A string representing the name of a city.  We want to expand\\n     *     the given division into this city.\\n     * @return True if the expansion is successful or we already have a division\\n     *     office in the given city; false otherwise.\\n     */\\n    expand_city(name, city) {\\n        if (this.has_division_office(name, city)) {\\n            return bool.SUCCESS;\\n        }\\n        this.#ns[corp.API].expandCity(name, city);\\n        return this.has_division_office(name, city);\\n    }\\n\\n    /**\\n     * Expand our corporation into other industries.\\n     */\\n    expand_industry() {\\n        if (!this.has_division(corp.industry.AGRI)) {\\n            this.#ns[corp.API].expandIndustry(\\n                corp.industry.AGRI,\\n                corp.industry.AGRI\\n            );\\n        }\\n    }\\n\\n    /**\\n     * The funds available to our corporation.\\n     */\\n    funds() {\\n        return this.#ns[corp.API].funds;\\n    }\\n\\n    /**\\n     * Whether we have already created a corporation.\\n     *\\n     * @return True if we have already created a corporation; false otherwise.\\n     */\\n    has_corp() {\\n        try {\\n            assert(this.#ns[corp.API].getCorporation().name === corp.NAME);\\n            return bool.HAS;\\n        } catch {\\n            return bool.NOT;\\n        }\\n    }\\n\\n    /**\\n     * Whether we have a particular division.\\n     *\\n     * @param div A string representing the name of a division.\\n     * @return True if we have expanded into the given division;\\n     *     false otherwise.\\n     */\\n    has_division(div) {\\n        for (const d of this.#ns[corp.API].getCorporation().divisions) {\\n            if (d.type === div) {\\n                return bool.HAS;\\n            }\\n        }\\n        return bool.NOT;\\n    }\\n\\n    /**\\n     * Whether one of our divisions has an office in a given city.\\n     *\\n     * @param name A string representing the name of a division.\\n     * @param city A string representing the name of a city.\\n     * @return True if the given division has an office in the particular city;\\n     *     false otherwise.\\n     */\\n    has_division_office(name, city) {\\n        assert(this.is_valid_division(name));\\n        assert(is_valid_city(city));\\n        for (const div of this.#ns[corp.API].getCorporation().divisions) {\\n            if (div.name === name) {\\n                return div.cities.includes(city);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Whether we have an unlockable upgrade.\\n     *\\n     * @param upg A string representing the name of an unlock upgrade.\\n     * @return True if we already have the given unlock upgrade;\\n     *     false otherwise.\\n     */\\n    has_unlock_upgrade(upg) {\\n        assert(this.is_valid_unlock_upgrade(upg));\\n        return this.#ns[corp.API].hasUnlockUpgrade(upg);\\n    }\\n\\n    /**\\n     * Hire a new employee for a division in a particular city.\\n     *\\n     * @param div A string representing the name of a division.\\n     * @param ct A string representing the name of a city.\\n     * @return A string representing the name of the newly hired employee.  An\\n     *     empty string if we fail to hire a new employee.\\n     */\\n    hire(div, ct) {\\n        assert(this.is_valid_division(div));\\n        assert(is_valid_city(ct));\\n        const worker = this.#ns[corp.API].hireEmployee(div, ct);\\n        return worker !== undefined ? worker.name : \\\"\\\";\\n    }\\n\\n    /**\\n     * Hire AdVert.inc to advertise for our company.\\n     *\\n     * @param div A string representing the name of a division.\\n     */\\n    hire_advert(div) {\\n        assert(this.is_valid_division(div));\\n        if (this.funds() > this.#ns[corp.API].getHireAdVertCost(div)) {\\n            this.#ns[corp.API].hireAdVert(div);\\n        }\\n    }\\n\\n    /**\\n     * Hire the initial crop of employees for a new office in a city.  Assign an\\n     * employee to each of the initial positions.\\n     *\\n     * @param div The name of a division.\\n     * @param ct The name of a city.\\n     */\\n    initial_hire(div, ct) {\\n        const max = corp_t.office.INIT_HIRE;\\n        for (let i = this.num_employees(div, ct); i < max; i++) {\\n            const name = this.hire(div, ct);\\n            if (name !== \\\"\\\") {\\n                this.#ns[corp.API].assignJob(div, ct, name, corp.position[i]);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Whether we have the given division.\\n     *\\n     * @param name A string representing the name of a division.\\n     * @return True if our corporation has a division with the given name;\\n     *     false otherwise.\\n     */\\n    is_valid_division(name) {\\n        assert(name !== \\\"\\\");\\n        for (const div of this.#ns[corp.API].getCorporation().divisions) {\\n            if (div.name === name) {\\n                return bool.VALID;\\n            }\\n        }\\n        return bool.INVALID;\\n    }\\n\\n    /**\\n     * Whether the given name represents a valid material.\\n     *\\n     * @param name A string representing a material name.\\n     * @return True if the given name represents a valid material;\\n     *     false otherwise.\\n     */\\n    // eslint-disable-next-line class-methods-use-this\\n    is_valid_material(name) {\\n        assert(name !== \\\"\\\");\\n        const material = new Set(Object.values(corp.material));\\n        return material.has(name);\\n    }\\n\\n    /**\\n     * Whether the given name refers to a valid unlock upgrade.\\n     *\\n     * @param upg A string representing the name of an unlock upgrade.\\n     * @return True if the given name refers to a valid unlock upgrade;\\n     *     false otherwise.\\n     */\\n    // eslint-disable-next-line class-methods-use-this\\n    is_valid_unlock_upgrade(upg) {\\n        assert(upg !== \\\"\\\");\\n        const upgrade = new Set(Object.values(corp.unlock));\\n        return upgrade.has(upg);\\n    }\\n\\n    /**\\n     * Whether the given name refers to a valid level upgrade.\\n     *\\n     * @param upg A string representing the name of a level upgrade.\\n     * @return True if the given name refers to a valid level upgrade;\\n     *     false otherwise.\\n     */\\n    // eslint-disable-next-line class-methods-use-this\\n    is_valid_upgrade(upg) {\\n        assert(upg !== \\\"\\\");\\n        const upgrade = new Set(Object.values(corp.upgrade));\\n        return upgrade.has(upg);\\n    }\\n\\n    /**\\n     * Level up an upgrade that can be levelled.  A level upgrade is not the\\n     * same as an unlock upgrade.\\n     *\\n     * @param name The name of the upgrade to level.\\n     * @return True if we successfully levelled up the given upgrade;\\n     *     false otherwise.\\n     */\\n    level_upgrade(name) {\\n        assert(this.is_valid_upgrade(name));\\n        const cost = this.#ns[corp.API].getUpgradeLevelCost(name);\\n        if (this.funds() < cost) {\\n            return bool.FAILURE;\\n        }\\n        this.#ns[corp.API].levelUpgrade(name);\\n        return bool.SUCCESS;\\n    }\\n\\n    /**\\n     * Purchase a material in bulk quantity.  We buy this material for each\\n     * division in each city.\\n     *\\n     * @param name The name of the material to buy.\\n     * @param amt The bulk amount to buy.\\n     */\\n    material_bulk_buy(name, amt) {\\n        assert(this.is_valid_material(name));\\n        assert(amt > 0);\\n        for (const div of this.all_divisions()) {\\n            cities.all.forEach((ct) => {\\n                this.#ns[corp.API].bulkPurchase(div, ct, name, amt);\\n            });\\n        }\\n    }\\n\\n    /**\\n     * The initial selling of our materials.  The amount is the maximum of\\n     * whatever we have.  The price is set at the market price.\\n     *\\n     * @param div The name of a division.\\n     * @param ct The name of a city.\\n     * @param name The name of the material to sell.\\n     */\\n    material_initial_sell(div, ct, name) {\\n        assert(this.is_valid_division(div));\\n        assert(is_valid_city(ct));\\n        assert(this.is_valid_material(name));\\n        this.#ns[corp.API].sellMaterial(\\n            div,\\n            ct,\\n            name,\\n            corp_t.sell.amount.MAX,\\n            corp_t.sell.price.MP\\n        );\\n    }\\n\\n    /**\\n     * The number of employees in a division at a particular city.\\n     *\\n     * @param div The name of a division.\\n     * @param ct The name of a city.\\n     * @return The number of employees in the given division at the given city.\\n     */\\n    num_employees(div, ct) {\\n        assert(this.is_valid_division(div));\\n        assert(is_valid_city(ct));\\n        return this.#ns[corp.API].getOffice(div, ct).employees.length;\\n    }\\n\\n    /**\\n     * Upgrade the warehouse of a division in a particular city.\\n     *\\n     * @param div A string representing the name of a division.\\n     * @param ct A string representing the name of a city.\\n     * @param n How many times to upgrade.  Default is 1.\\n     * @return True if the upgrade was successful; false otherwise.\\n     */\\n    upgrade_warehouse(div, ct, n = 1) {\\n        assert(this.is_valid_division(div));\\n        assert(is_valid_city(ct));\\n        assert(n >= 1);\\n        const cost = this.#ns[corp.API].getUpgradeWarehouseCost(div, ct, n);\\n        if (this.funds() < cost) {\\n            return bool.FAILURE;\\n        }\\n        this.#ns[corp.API].upgradeWarehouse(div, ct, n);\\n        return bool.SUCCESS;\\n    }\\n\\n    /**\\n     * Upgrade a newly purchased warehouse to the initial capacity.\\n     *\\n     * @param div A string representing the name of a division.\\n     * @param ct A string representing the name of a city.\\n     */\\n    warehouse_init_upgrade(div, ct) {\\n        assert(this.is_valid_division(div));\\n        assert(is_valid_city(ct));\\n        while (\\n            this.#ns[corp.API].getWarehouse(div, ct).size\\n            < corp_t.warehouse.INIT_UPGRADE_SIZE\\n        ) {\\n            this.upgrade_warehouse(div, ct);\\n        }\\n    }\\n}\\n\",\"filename\":\"/lib/corporation/corp.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":758,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport {\\n    armour,\\n    gang_augment,\\n    gang_t,\\n    gangster_t,\\n    members,\\n    rootkit,\\n    task,\\n    task_t,\\n    vehicle,\\n    weapon,\\n} from \\\"/lib/constant/gang.js\\\";\\nimport { money_reserve } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { random_integer } from \\\"/lib/random.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A class that holds various information about a gangster.\\n */\\nexport class Gangster {\\n    /**\\n     * The Netscript API.\\n     */\\n    #ns;\\n\\n    /**\\n     * Initialize a Gangster object.\\n     *\\n     * @param ns The Netscript API.\\n     */\\n    constructor(ns) {\\n        this.#ns = ns;\\n    }\\n\\n    /**\\n     * The Agility stat of a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return The Agility stat of the given member.\\n     */\\n    agility(name) {\\n        assert(this.is_member(name));\\n        return this.#ns.gang.getMemberInformation(name).agi;\\n    }\\n\\n    /**\\n     * Ascend a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return True if the ascension is successful; false otherwise.\\n     */\\n    ascend(name) {\\n        assert(this.is_member(name));\\n        const asc = this.#ns.gang.getAscensionResult(name);\\n        if (undefined === asc) {\\n            return bool.FAILURE;\\n        }\\n        // Convert a number in the form 1.xyz to 1xy.  We multiply the number\\n        // by 100 and take the integer part.  So 1.25 would be 125.  We do this\\n        // because comparing floating point numbers can be tricky and result in\\n        // unexpected behaviour.  It is easier and simpler to compare integers.\\n        const to_int = (x) => Math.floor(100 * x);\\n        // See whether we can ascend this gang member.  The cases of combatant,\\n        // hacker, and miscellaneous are each handled separately.\\n        const tau = to_int(gang_t.ASCEND);\\n        let ascend_this_member = false;\\n        if (this.is_combatant(name)) {\\n            if (\\n                to_int(asc.agi) > tau\\n                || to_int(asc.def) > tau\\n                || to_int(asc.dex) > tau\\n                || to_int(asc.str) > tau\\n            ) {\\n                ascend_this_member = true;\\n            }\\n        } else if (this.is_hacker(name)) {\\n            if (to_int(asc.hack) > tau || to_int(asc.cha) > tau) {\\n                ascend_this_member = true;\\n            }\\n        } else {\\n            assert(this.is_miscellaneous(name));\\n            if (\\n                to_int(asc.cha) > tau\\n                || to_int(asc.agi) > tau\\n                || to_int(asc.def) > tau\\n                || to_int(asc.dex) > tau\\n                || to_int(asc.str) > tau\\n            ) {\\n                ascend_this_member = true;\\n            }\\n        }\\n        // Now ascend the gangster.\\n        if (ascend_this_member) {\\n            const result = this.#ns.gang.ascendMember(name);\\n            if (undefined !== result) {\\n                return bool.SUCCESS;\\n            }\\n        }\\n        return bool.FAILURE;\\n    }\\n\\n    /**\\n     * Assign gang members to threaten and blackmail high-profile targets.\\n     *\\n     * @param name An array of member names.\\n     */\\n    blackmail(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members threaten and blackmail people.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_blackmailer(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.BLACKMAIL));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * The Charisma stat of a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return The Charisma stat of the given member.\\n     */\\n    charisma(name) {\\n        assert(this.is_member(name));\\n        return this.#ns.gang.getMemberInformation(name).cha;\\n    }\\n\\n    /**\\n     * Assign gang members to run a con.\\n     *\\n     * @param name An array of member names.\\n     */\\n    con(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members run a con.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_con_artist(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.CON));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to deal drugs.\\n     *\\n     * @param name An array of member names.\\n     */\\n    deal_drugs(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members be involved in dealing drugs.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_dealing_drugs(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.DRUGS));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * The Defense stat of a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return The Defense stat of the given member.\\n     */\\n    defense(name) {\\n        assert(this.is_member(name));\\n        return this.#ns.gang.getMemberInformation(name).def;\\n    }\\n\\n    /**\\n     * The Dexterity stat of a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return The Dexterity stat of the given member.\\n     */\\n    dexterity(name) {\\n        assert(this.is_member(name));\\n        return this.#ns.gang.getMemberInformation(name).dex;\\n    }\\n\\n    /**\\n     * Purchase the given armour piece and equip it on a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param amr A string representing the name of an armour piece.\\n     * @return true if the armour is successfully purchased for the given\\n     *     member; false otherwise.\\n     */\\n    equip_armour(name, amr) {\\n        assert(this.is_member(name));\\n        const gang_armour = new Set(Object.values(armour));\\n        assert(gang_armour.has(amr));\\n        const cost = this.#ns.gang.getEquipmentCost(amr);\\n        const funds = this.#player_money() - money_reserve;\\n        if (funds < gang_t.COST_MULT * cost) {\\n            return bool.FAILURE;\\n        }\\n        return this.#ns.gang.purchaseEquipment(name, amr);\\n    }\\n\\n    /**\\n     * Purchase the given Augmentation and equip it on a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param aug A string representing the name of an Augmentation.\\n     * @return true if the Augmentation is successfully purchased for the given\\n     *     member; false otherwise.\\n     */\\n    equip_augment(name, aug) {\\n        assert(this.is_member(name));\\n        const gang_aug = new Set(Object.values(gang_augment));\\n        assert(gang_aug.has(aug));\\n        const cost = this.#ns.gang.getEquipmentCost(aug);\\n        const funds = this.#player_money() - money_reserve;\\n        if (funds < gang_t.COST_MULT * cost) {\\n            return bool.FAILURE;\\n        }\\n        return this.#ns.gang.purchaseEquipment(name, aug);\\n    }\\n\\n    /**\\n     * Purchase the given rootkit and equip it on a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param kit A string representing the name of a rootkit.\\n     * @return true if the rootkit is successfully purchased for the given\\n     *     member; false otherwise.\\n     */\\n    equip_rootkit(name, kit) {\\n        assert(this.is_member(name));\\n        const gang_rootkit = new Set(Object.values(rootkit));\\n        assert(gang_rootkit.has(kit));\\n        const cost = this.#ns.gang.getEquipmentCost(kit);\\n        const funds = this.#player_money() - money_reserve;\\n        if (funds < gang_t.COST_MULT * cost) {\\n            return bool.FAILURE;\\n        }\\n        return this.#ns.gang.purchaseEquipment(name, kit);\\n    }\\n\\n    /**\\n     * Purchase the given vehicle and equip it on a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param vhc A string representing the name of a vehicle.\\n     * @return true if the vehicle is successfully purchased for the given\\n     *     member; false otherwise.\\n     */\\n    equip_vehicle(name, vhc) {\\n        assert(this.is_member(name));\\n        const gang_vehicle = new Set(Object.values(vehicle));\\n        assert(gang_vehicle.has(vhc));\\n        const cost = this.#ns.gang.getEquipmentCost(vhc);\\n        const funds = this.#player_money() - money_reserve;\\n        if (funds < gang_t.COST_MULT * cost) {\\n            return bool.FAILURE;\\n        }\\n        return this.#ns.gang.purchaseEquipment(name, vhc);\\n    }\\n\\n    /**\\n     * Purchase the given weapon and equip it on a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param wpn A string representing the name of a weapon.\\n     * @return true if the weapon is successfully purchased for the given\\n     *     member; false otherwise.\\n     */\\n    equip_weapon(name, wpn) {\\n        assert(this.is_member(name));\\n        const gang_weapon = new Set(Object.values(weapon));\\n        assert(gang_weapon.has(wpn));\\n        const cost = this.#ns.gang.getEquipmentCost(wpn);\\n        const funds = this.#player_money() - money_reserve;\\n        if (funds < gang_t.COST_MULT * cost) {\\n            return bool.FAILURE;\\n        }\\n        return this.#ns.gang.purchaseEquipment(name, wpn);\\n    }\\n\\n    /**\\n     * Assign gang members to ethical hacking.\\n     *\\n     * @param name An array of member names.\\n     */\\n    ethical_hacking(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members be involved in ethical hacking.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_ethical_hacker(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.EHACK));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to extort civilians on our turf.\\n     *\\n     * @param name An array of member names.\\n     */\\n    extort(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members strongarm civilians.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_extortionist(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.EXTORT));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to commit financial fraud and digital counterfeiting.\\n     *\\n     * @param name An array of member names.\\n     */\\n    fraud(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members commit financial fraud and digital counterfeiting.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_fraudster(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.FRAUD));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Graduate gang members who have been training their combat stats.  Assign\\n     * them to mug random people.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.\\n     * @param threshold A combatant transitions to mugging once each of their\\n     *     combat stats is at least this amount.\\n     */\\n    graduate_combatant(name, threshold) {\\n        // Sanity checks.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        name.forEach((s) => assert(this.is_member(s)));\\n        const min = Math.floor(threshold);\\n        assert(min > 0);\\n        // After training their combat stats, members graduate to mugging\\n        // random people.\\n        const graduate = name.filter(\\n            (s) => this.is_combatant(s)\\n                && this.is_training_combat(s)\\n                && this.strength(s) >= min\\n                && this.defense(s) >= min\\n                && this.dexterity(s) >= min\\n                && this.agility(s) >= min\\n        );\\n        this.mug(graduate);\\n    }\\n\\n    /**\\n     * Graduate gang members who have been training their Hack stat.  Although\\n     * hackers primarily train their Hack stat, they could also benefit from\\n     * some training in their Charisma stat.  After a hacker has trained their\\n     * Hack and Charisma stats, assign them their first job.  The first job of\\n     * the hacker depends on whether we have a criminal or hacking gang.  If we\\n     * have a criminal gang, then the first job of the hacker is the same as the\\n     * first job of a miscellaneous member.  In case our gang is a hacking gang,\\n     * the first job of a hacker is to create and distribute ransomware.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.\\n     * @param threshold A hacker transitions to ransomware (or the first job of\\n     *     a miscellaneous gangster) once their Hack stat is at least this\\n     *     amount.  The transition is also affected by their Charisma stat.  If\\n     *     they do not have sufficient Charisma, they must train their Charisma\\n     *     stat before being assigned their first job.\\n     */\\n    graduate_hacker(name, threshold) {\\n        // Sanity checks.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        name.forEach((s) => assert(this.is_member(s)));\\n        const min = Math.floor(threshold);\\n        assert(min > 0);\\n        // After training their Hack stat, a hacker also trains their Charisma\\n        // stat.\\n        const hacker = name.filter((s) => this.is_hacker(s));\\n        const hack_graduate = hacker.filter(\\n            (s) => this.is_training_hack(s) && this.hack(s) >= min\\n        );\\n        this.train_charisma(hack_graduate);\\n        // Once a hacker's Hack and Charisma stats are of minimum amounts,\\n        // assign them their first job.\\n        const charisma_graduate = hacker.filter(\\n            (s) => this.is_training_charisma(s)\\n                && this.charisma(s) >= task_t.CHARISMA\\n        );\\n        if (this.#ns.gang.getGangInformation().isHacking) {\\n            this.ransomware(charisma_graduate);\\n            return;\\n        }\\n        this.deal_drugs(charisma_graduate);\\n    }\\n\\n    /**\\n     * Graduate miscellaneous members who have been training their Charisma\\n     * stat.  Although miscellaneous members primarily train their Charisma\\n     * stat, they could also benefit from some training in their combat stats.\\n     * After a miscellaneous member has trained their Charisma and combat stats,\\n     * assign them their first job of dealing drugs.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.\\n     * @param threshold A miscellaneous member transitions to dealing drugs\\n     *     once their Charisma stat is at least this amount.  The transition is\\n     *     also affected by their combat stats.  If they do not have sufficient\\n     *     combat stats, they must train their combat stats before being\\n     *     assigned their first job.\\n     */\\n    graduate_other(name, threshold) {\\n        // Sanity checks.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        name.forEach((s) => assert(this.is_member(s)));\\n        const min = Math.floor(threshold);\\n        assert(min > 0);\\n        // After training their Charisma stat, a miscellaneous member also\\n        // trains their combat stats.\\n        const graduate = name.filter((s) => this.is_miscellaneous(s));\\n        const charisma_graduate = graduate.filter(\\n            (s) => this.is_training_charisma(s) && this.charisma(s) >= min\\n        );\\n        this.train_combat(charisma_graduate);\\n        // Once the Charisma and combat stats of a miscellaneous member are of\\n        // minimum amounts, assign them their first job.\\n        const combat_graduate = graduate.filter(\\n            (s) => this.is_training_combat(s)\\n                && this.strength(s) >= task_t.COMBAT\\n                && this.defense(s) >= task_t.COMBAT\\n                && this.dexterity(s) >= task_t.COMBAT\\n                && this.agility(s) >= task_t.COMBAT\\n        );\\n        this.deal_drugs(combat_graduate);\\n    }\\n\\n    /**\\n     * The Hack stat of a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return The Hack stat of the given member.\\n     */\\n    hack(name) {\\n        assert(this.is_member(name));\\n        return this.#ns.gang.getMemberInformation(name).hack;\\n    }\\n\\n    /**\\n     * Whether a gang member has a particular armour piece.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param amr A string representing the name of an armour.\\n     * @return true if the gang member has the given armour piece;\\n     *     false otherwise.\\n     */\\n    has_armour(name, amr) {\\n        assert(this.is_member(name));\\n        const gang_armour = new Set(Object.values(armour));\\n        assert(gang_armour.has(amr));\\n        const equipment = new Set(\\n            this.#ns.gang.getMemberInformation(name).upgrades\\n        );\\n        return equipment.has(amr);\\n    }\\n\\n    /**\\n     * Whether a gang member has a particular Augmentation.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param aug A string representing the name of an Augmentation.\\n     * @return true if the gang member has the given Augmentation;\\n     *     false otherwise.\\n     */\\n    has_augment(name, aug) {\\n        assert(this.is_member(name));\\n        const gang_aug = new Set(Object.values(gang_augment));\\n        assert(gang_aug.has(aug));\\n        const equipment = new Set(\\n            this.#ns.gang.getMemberInformation(name).augmentations\\n        );\\n        return equipment.has(aug);\\n    }\\n\\n    /**\\n     * Whether a gang member has a particular rootkit.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param kit A string representing the name of a rootkit.\\n     * @return true if the gang member has the given rootkit; false otherwise.\\n     */\\n    has_rootkit(name, kit) {\\n        assert(this.is_member(name));\\n        const gang_rootkit = new Set(Object.values(rootkit));\\n        assert(gang_rootkit.has(kit));\\n        const equipment = new Set(\\n            this.#ns.gang.getMemberInformation(name).upgrades\\n        );\\n        return equipment.has(kit);\\n    }\\n\\n    /**\\n     * Whether a gang member has a particular vehicle.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param vhc A string representing the name of a vehicle.\\n     * @return true if the gang member has the given vehicle; false otherwise.\\n     */\\n    has_vehicle(name, vhc) {\\n        assert(this.is_member(name));\\n        const gang_vehicle = new Set(Object.values(vehicle));\\n        assert(gang_vehicle.has(vhc));\\n        const equipment = new Set(\\n            this.#ns.gang.getMemberInformation(name).upgrades\\n        );\\n        return equipment.has(vhc);\\n    }\\n\\n    /**\\n     * Whether a gang member has a particular weapon.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @param wpn A string representing the name of a weapon.\\n     * @return true if the gang member has the given weapon; false otherwise.\\n     */\\n    has_weapon(name, wpn) {\\n        assert(this.is_member(name));\\n        const gang_weapon = new Set(Object.values(weapon));\\n        assert(gang_weapon.has(wpn));\\n        const equipment = new Set(\\n            this.#ns.gang.getMemberInformation(name).upgrades\\n        );\\n        return equipment.has(wpn);\\n    }\\n\\n    /**\\n     * Assign gang members to commit identity theft.\\n     *\\n     * @param name An array of member names.\\n     */\\n    id_theft(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members commit identity theft.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_id_thief(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.ID_THEFT));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Whether a gang member is engaged in trafficking illegal arms.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is trafficking illegal arms;\\n     *     false otherwise.\\n     */\\n    is_arms_trafficker(name) {\\n        assert(this.is_member(name));\\n        const current_task = this.#ns.gang.getMemberInformation(name).task;\\n        return task.TRAFFICK_ARMS === current_task;\\n    }\\n\\n    /**\\n     * Whether a gang member has been assigned the role of Artillery.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member takes on the role of Artillery;\\n     *     false otherwise.\\n     */\\n    is_artillery(name) {\\n        assert(this.is_member(name));\\n        return this.role(name) === members.ROLE.artillery;\\n    }\\n\\n    /**\\n     * Whether a gang member is threatening and blackmailing high-profile\\n     * targets.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is threatening and blackmailing people;\\n     *     false otherwise.\\n     */\\n    is_blackmailer(name) {\\n        assert(this.is_member(name));\\n        return task.BLACKMAIL === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is a combatant.  A gangster is a combatant if they\\n     * have been assigned one of these roles:\\n     *\\n     * (1) Artillery\\n     * (2) Pilot\\n     * (3) Punk\\n     * (4) Vanguard\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is a combatant; false otherwise.\\n     */\\n    is_combatant(name) {\\n        return (\\n            this.is_artillery(name)\\n            || this.is_pilot(name)\\n            || this.is_punk(name)\\n            || this.is_vanguard(name)\\n        );\\n    }\\n\\n    /**\\n     * Whether a gang member is running a con.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is running a con; false otherwise.\\n     */\\n    is_con_artist(name) {\\n        assert(this.is_member(name));\\n        return task.CON === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is creating and distributing ransomware.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is involved in the creation and\\n     *     distribution of ransomware; false otherwise.\\n     */\\n    is_creating_ransomware(name) {\\n        assert(this.is_member(name));\\n        const current_task = this.#ns.gang.getMemberInformation(name).task;\\n        return task.RANSOMWARE === current_task;\\n    }\\n\\n    /**\\n     * Whether a gang member is involved in dealing drugs.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is dealing drugs; false otherwise.\\n     */\\n    is_dealing_drugs(name) {\\n        assert(this.is_member(name));\\n        return task.DRUGS === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is engaged in ethical hacking.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is engaged in ethical hacking;\\n     *     false otherwise.\\n     */\\n    is_ethical_hacker(name) {\\n        assert(this.is_member(name));\\n        return task.EHACK === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is strongarming civilians.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is strongarming civilians;\\n     *     false otherwise.\\n     */\\n    is_extortionist(name) {\\n        assert(this.is_member(name));\\n        return task.EXTORT === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is committing financial fraud and digital\\n     * counterfeiting.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is committing financial fraud and\\n     *     digital counterfeiting; false otherwise.\\n     */\\n    is_fraudster(name) {\\n        assert(this.is_member(name));\\n        return task.FRAUD === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is a hacker.  A gangster is a hacker if they have\\n     * been assigned the role of Hacker.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is a hacker; false otherwise.\\n     */\\n    is_hacker(name) {\\n        assert(this.is_member(name));\\n        return this.role(name) === members.ROLE.hacker;\\n    }\\n\\n    /**\\n     * Whether a gang member is operating a human trafficking ring.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is trafficking humans; false otherwise.\\n     */\\n    is_human_trafficker(name) {\\n        assert(this.is_member(name));\\n        const current_task = this.#ns.gang.getMemberInformation(name).task;\\n        return task.TRAFFICK_HUMAN === current_task;\\n    }\\n\\n    /**\\n     * Whether a gang member is committing identity theft.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is committing identity theft;\\n     *     false otherwise.\\n     */\\n    is_id_thief(name) {\\n        assert(this.is_member(name));\\n        return task.ID_THEFT === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is currently unassigned.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is idle; false otherwise.\\n     */\\n    is_idle(name) {\\n        assert(this.is_member(name));\\n        return task.IDLE === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is laundering money.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is laundering money; false otherwise.\\n     */\\n    is_launderer(name) {\\n        assert(this.is_member(name));\\n        return task.LAUNDER === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether the given name belongs to a member of our gang.\\n     *\\n     * @param name A string representing the name of a gangster.  A member's\\n     *     name should be prefixed with their role, according to the format:\\n     *     \\\"[Role] Full Name\\\".\\n     * @return true if our gang has the specified member; false otherwise.\\n     */\\n    is_member(name) {\\n        assert(name.length > 0);\\n        const member = new Set(this.#ns.gang.getMemberNames());\\n        return member.has(name);\\n    }\\n\\n    /**\\n     * Whether a gang member holds one of the following miscellaneous roles:\\n     *\\n     * (1) Medic\\n     * (2) Spy\\n     * (3) Thief\\n     * (4) Traitor\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member holds a miscellaneous role;\\n     *     false otherwise.\\n     */\\n    is_miscellaneous(name) {\\n        assert(this.is_member(name));\\n        const role = this.role(name);\\n        return (\\n            role === members.ROLE.medic\\n            || role === members.ROLE.spy\\n            || role === members.ROLE.thief\\n            || role === members.ROLE.traitor\\n        );\\n    }\\n\\n    /**\\n     * Whether a gang member is mugging random people on the streets.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is mugging random people;\\n     *     false otherwise.\\n     */\\n    is_mugger(name) {\\n        assert(this.is_member(name));\\n        return task.MUG === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is committing phishing scams.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is involved in a phishing scam;\\n     *     false otherwise.\\n     */\\n    is_phisher(name) {\\n        assert(this.is_member(name));\\n        return task.PHISH === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member has been assigned the role of Pilot.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member takes on the role of Pilot;\\n     *     false otherwise.\\n     */\\n    is_pilot(name) {\\n        assert(this.is_member(name));\\n        return this.role(name) === members.ROLE.pilot;\\n    }\\n\\n    /**\\n     * Whether a gang member has been assigned the role of Punk.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member takes on the role of Punk;\\n     *     false otherwise.\\n     */\\n    is_punk(name) {\\n        assert(this.is_member(name));\\n        return this.role(name) === members.ROLE.punk;\\n    }\\n\\n    /**\\n     * Whether a gang member is engaged in armed robbery.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is committing armed robbery;\\n     *     false otherwise.\\n     */\\n    is_robber(name) {\\n        assert(this.is_member(name));\\n        return task.ROBBERY === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is committing acts of terrorism.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is committing acts of terrorism;\\n     *     false otherwise.\\n     */\\n    is_terrorist(name) {\\n        assert(this.is_member(name));\\n        return task.TERROR === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is in combat, charisma, or hack training.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is in combat, charisma, or hack\\n     *     training; false otherwise.\\n     */\\n    is_training(name) {\\n        return (\\n            this.is_training_charisma(name)\\n            || this.is_training_combat(name)\\n            || this.is_training_hack(name)\\n        );\\n    }\\n\\n    /**\\n     * Whether a gang member is in charisma training.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is in charisma training;\\n     *     false otherwise.\\n     */\\n    is_training_charisma(name) {\\n        assert(this.is_member(name));\\n        return task.CHARISMA === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is in combat training.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is in combat training; false otherwise.\\n     */\\n    is_training_combat(name) {\\n        assert(this.is_member(name));\\n        return task.COMBAT === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is in hack training.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is in hack training; false otherwise.\\n     */\\n    is_training_hack(name) {\\n        assert(this.is_member(name));\\n        return task.HACK === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member has been assigned the role of Vanguard.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is taking on the role of Vanguard;\\n     *     false otherwise.\\n     */\\n    is_vanguard(name) {\\n        assert(this.is_member(name));\\n        return this.role(name) === members.ROLE.vanguard;\\n    }\\n\\n    /**\\n     * Whether a gang member is engaged in vigilante justice.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is engaged in vigilante justice;\\n     *     false otherwise.\\n     */\\n    is_vigilante(name) {\\n        assert(this.is_member(name));\\n        return task.VIGILANTE === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Whether a gang member is engaged in turf warfare.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member is engaged in turf warfare;\\n     *     false otherwise.\\n     */\\n    is_warrior(name) {\\n        assert(this.is_member(name));\\n        return task.TURF_WAR === this.#ns.gang.getMemberInformation(name).task;\\n    }\\n\\n    /**\\n     * Assign gang members to launder money.\\n     *\\n     * @param name An array of member names.\\n     */\\n    launder(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members launder money.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_launderer(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.LAUNDER));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to mug random people on the street.\\n     *\\n     * @param name An array of member names.\\n     */\\n    mug(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members mug random people.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_mugger(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.MUG));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Whether a gang member needs to train their Charisma stat.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member needs Charisma training;\\n     *     false otherwise.\\n     */\\n    needs_charisma_training(name) {\\n        assert(this.is_member(name));\\n        return this.charisma(name) < task_t.CHARISMA;\\n    }\\n\\n    /**\\n     * Whether a gang member needs to train their combat stats.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member needs combat training; false otherwise.\\n     */\\n    needs_combat_training(name) {\\n        if (\\n            this.strength(name) < task_t.COMBAT\\n            || this.defense(name) < task_t.COMBAT\\n            || this.dexterity(name) < task_t.COMBAT\\n            || this.agility(name) < task_t.COMBAT\\n        ) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * Whether a gang member needs to train their Hack stat.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member needs Hack training; false otherwise.\\n     */\\n    needs_hack_training(name) {\\n        assert(this.is_member(name));\\n        return this.hack(name) < task_t.HACK;\\n    }\\n\\n    /**\\n     * Whether a gang member needs training in various stats.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return true if the given member needs training in one or more stats;\\n     *     false otherwise.\\n     */\\n    needs_training(name) {\\n        if (this.is_combatant(name)) {\\n            return this.needs_combat_training(name);\\n        }\\n        if (this.is_hacker(name)) {\\n            return (\\n                this.needs_hack_training(name)\\n                || this.needs_charisma_training(name)\\n            );\\n        }\\n        assert(this.is_miscellaneous(name));\\n        return (\\n            this.needs_charisma_training(name)\\n            || this.needs_combat_training(name)\\n        );\\n    }\\n\\n    /**\\n     * Assign gang members to the idle state.\\n     *\\n     * @param name An array of member names.\\n     */\\n    neutral(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members be in the idle state.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            this.#ns.gang.setMemberTask(s, task.IDLE);\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to commit phishing scams.\\n     *\\n     * @param name An array of member names.\\n     */\\n    phish(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members commit phishing scams.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_phisher(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.PHISH));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * The player's total amount of money.\\n     */\\n    #player_money() {\\n        return this.#ns.getServerMoneyAvailable(home);\\n    }\\n\\n    /**\\n     * A random name with which to assign a new gang member.\\n     *\\n     * @param name An array of potential names for our new recruit.  Use this\\n     *     array to randomly choose a name for our new member.\\n     * @return A string representing the name of our newest member.\\n     */\\n    // eslint-disable-next-line class-methods-use-this\\n    #random_name(name) {\\n        assert(name.length > 0);\\n        const min = 0;\\n        const max = name.length - 1;\\n        const i = random_integer(min, max);\\n        return name[i];\\n    }\\n\\n    /**\\n     * Assign gang members to create and distribute ransomware.\\n     *\\n     * @param name An array of member names.\\n     */\\n    ransomware(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members create and distribute ransomware.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_creating_ransomware(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.RANSOMWARE));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Recruit as many new gang members as possible.  There is a maximum to how\\n     * many members can be in our gang.  We want our gang to have the following\\n     * structure and let each member role play.\\n     *\\n     * (1) Artillery x 1.  A gun expert and ranged fighter.  Good with bow and\\n     *     arrows, or missiles.\\n     * (2) Hacker x 1.  The computer wizard.\\n     * (3) Medic x 1.  This is our doctor.\\n     * (4) Pilot x 1.  Air support from a helicopter, drone, or aeroplane.\\n     * (5) Punk x n.  Low level soldiers who rake in money for the gang by\\n     *     committing various crimes.  As many as we can recruit.\\n     * (6) Spy x 1.  An expert in espionage and reconnaissance.\\n     * (7) Thief x 1.  Someone who steals treasure.  A sneak.\\n     * (8) Traitor x 1.  Someone who would likely betray the gang.\\n     * (9) Vanguard x 1.  Our frontliner and tank.\\n     *\\n     * @return An array of the names of the new recruits.  Each name follows\\n     *     the format \\\"[Role] Full Name\\\".  Return an empty array if we cannot\\n     *     recruit any new members.\\n     */\\n    recruit() {\\n        const newbie = [];\\n        const roster = this.#roster();\\n        while (this.#ns.gang.canRecruitMember()) {\\n            let role = \\\"\\\";\\n            if (roster.vanguard < gang_t.ROSTER.vanguard) {\\n                role = members.ROLE.vanguard;\\n            } else if (roster.hacker < gang_t.ROSTER.hacker) {\\n                role = members.ROLE.hacker;\\n            } else if (roster.punk < gang_t.ROSTER.punk) {\\n                role = members.ROLE.punk;\\n            } else if (roster.artillery < gang_t.ROSTER.artillery) {\\n                role = members.ROLE.artillery;\\n            } else if (roster.medic < gang_t.ROSTER.medic) {\\n                role = members.ROLE.medic;\\n            } else if (roster.pilot < gang_t.ROSTER.pilot) {\\n                role = members.ROLE.pilot;\\n            } else if (roster.spy < gang_t.ROSTER.spy) {\\n                role = members.ROLE.spy;\\n            } else if (roster.thief < gang_t.ROSTER.thief) {\\n                role = members.ROLE.thief;\\n            } else if (roster.traitor < gang_t.ROSTER.traitor) {\\n                role = members.ROLE.traitor;\\n            }\\n            assert(role !== \\\"\\\");\\n            const role_lowercase = role.toLowerCase();\\n            const name = this.#recruit_member(gangster_t[role_lowercase], role);\\n            roster[role_lowercase]++;\\n            newbie.push(name);\\n        }\\n        return newbie;\\n    }\\n\\n    /**\\n     * Recruit a member to our gang.  Assume that we can recruit.\\n     *\\n     * @param name An array of potential names for our new recruit.  Choose a\\n     *     random name from this array.\\n     * @param role A string representing the role of our new recruit.\\n     * @return A string representing the role and name of our new member.\\n     *     Follow the format \\\"[Role] Full Name\\\".\\n     */\\n    #recruit_member(name, role) {\\n        assert(this.#ns.gang.canRecruitMember());\\n        assert(name.length > 0);\\n        assert(role.length > 0);\\n        let s = `[${role}] ${this.#random_name(name)}`;\\n        while (this.is_member(s)) {\\n            s = `[${role}] ${this.#random_name(name)}`;\\n        }\\n        assert(this.#ns.gang.recruitMember(s));\\n        return s;\\n    }\\n\\n    /**\\n     * Assign gang members to armed robbery.\\n     *\\n     * @param name An array of member names.\\n     */\\n    robbery(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members engage in armed robbery.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_robber(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.ROBBERY));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * The role of a gang member.  The name of a member follows the format:\\n     *\\n     * [Role] Full Name\\n     *\\n     * We can easily extract the role from this format.\\n     *\\n     * @param name A string representing the name of a gangster.\\n     * @return The role of the given gang member.\\n     */\\n    role(name) {\\n        assert(this.is_member(name));\\n        const prefix = name.split(\\\" \\\")[0];\\n        return prefix.replace(/[^a-zA-Z]/g, \\\"\\\");\\n    }\\n\\n    /**\\n     * Our current gang members and their roles.\\n     *\\n     * @return An object as follows:\\n     *\\n     *     {\\n     *         \\\"artillery\\\": number,\\n     *         \\\"hacker\\\": number,\\n     *         \\\"medic\\\": number,\\n     *         \\\"pilot\\\": number,\\n     *         \\\"punk\\\": number,\\n     *         \\\"spy\\\": number,\\n     *         \\\"thief\\\": number,\\n     *         \\\"traitor\\\": number,\\n     *         \\\"vanguard\\\": number,\\n     *     }\\n     *\\n     *     Each number represents the number of members who hold the\\n     *     corresponding role.\\n     */\\n    #roster() {\\n        const member = {\\n            artillery: 0,\\n            hacker: 0,\\n            medic: 0,\\n            pilot: 0,\\n            punk: 0,\\n            spy: 0,\\n            thief: 0,\\n            traitor: 0,\\n            vanguard: 0,\\n        };\\n        // Assume the name of each member follows this format:\\n        //\\n        // [Role] Full Name\\n        for (const name of this.#ns.gang.getMemberNames()) {\\n            const role = this.role(name).toLowerCase();\\n            member[role]++;\\n        }\\n        return member;\\n    }\\n\\n    /**\\n     * The Strength stat of a gang member.\\n     *\\n     * @param name A string representing the name of a gang member.\\n     * @return The Strength stat of the given member.\\n     */\\n    strength(name) {\\n        assert(this.is_member(name));\\n        return this.#ns.gang.getMemberInformation(name).str;\\n    }\\n\\n    /**\\n     * Assign gang members to commit acts of terrorism.\\n     *\\n     * @param name An array of member names.\\n     */\\n    terrorism(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members engage in terrorism.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_terrorist(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.TERROR));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to trafficking illegal arms.\\n     *\\n     * @param name An array of member names.\\n     */\\n    traffick_arms(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members engage in trafficking illegal arms.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_arms_trafficker(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.TRAFFICK_ARMS));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to engage in human trafficking.\\n     *\\n     * @param name An array of member names.\\n     */\\n    traffick_human(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members operate a human trafficking ring.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_human_trafficker(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.TRAFFICK_HUMAN));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Train one or more stats of a gang member.  The type of stats to train\\n     * depends on the role of a member.\\n     *\\n     * (1) Artillery, Pilot, Punk, Vanguard.  These roles specialize\\n     *     exclusively in combat stats.  Any gains in Hack or Charisma are\\n     *     incidental.\\n     * (2) Hacker.  This role focuses mostly on Hack stat, but also benefits\\n     *     from some investment in Charisma.\\n     * (3) Medic, Spy, Thief, Traitor.  These roles are primarily\\n     *     Charisma-based, but could benefit from some training in combat stats.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.  Each name follows the format \\\"[Role] Full Name\\\".  We\\n     *     want to raise various stats of each of these members.\\n     */\\n    train(name) {\\n        // Sanity checks.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        name.forEach((s) => assert(this.is_member(s)));\\n        // Train various stats.  The stat(s) to train, and the amount of time\\n        // spent in training, depend on a member's role.\\n        const hacker = name.filter((s) => this.is_hacker(s));\\n        const combatant = name.filter((s) => this.is_combatant(s));\\n        const other = name.filter((s) => this.is_miscellaneous(s));\\n        assert(hacker.length > 0 || combatant.length > 0 || other.length > 0);\\n        this.train_combat(combatant);\\n        this.train_hack(hacker);\\n        this.train_charisma(other);\\n    }\\n\\n    /**\\n     * Raise the Charisma stat of gang members.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.  We want to raise the Charisma stat of each of these\\n     *     members.\\n     */\\n    train_charisma(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Charisma training.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_training_charisma(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.CHARISMA));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Raise the combat stats of gang members.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.  We want to raise the combat stats of each of these\\n     *     members.\\n     */\\n    train_combat(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Combat training.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_training_combat(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.COMBAT));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Raise the Hack stat of gang members.\\n     *\\n     * @param name An array each of whose elements is a string that represents\\n     *     a member name.  We want to raise the Hack stat of each of these\\n     *     members.\\n     */\\n    train_hack(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Hack training.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_training_hack(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.HACK));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to engage in turf warfare.\\n     *\\n     * @param name An array of member names.\\n     */\\n    turf_war(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members engage in turf warfare.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_warrior(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.TURF_WAR));\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Assign gang members to vigilante justice.\\n     *\\n     * @param name An array of member names.\\n     */\\n    vigilante(name) {\\n        // Sanity check.\\n        if (name.length === 0) {\\n            return;\\n        }\\n        // Let gang members be vigilantes.\\n        name.forEach((s) => {\\n            assert(this.is_member(s));\\n            if (!this.is_vigilante(s)) {\\n                assert(this.#ns.gang.setMemberTask(s, task.VIGILANTE));\\n            }\\n        });\\n    }\\n}\\n\",\"filename\":\"/lib/gang/gangster.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":23.8,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":759,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getAscensionResult\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.ascendMember\",\"cost\":4},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Utility functions for managing a gang.\\n\\nimport { members } from \\\"/lib/constant/gang.js\\\";\\nimport { Gangster } from \\\"/lib/gang/gangster.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Choose the number of gang members to assign to vigilante justice.  The number\\n * of gangsters who will be assigned to these jobs depends on our current\\n * membership.\\n *\\n * @param ns The Netscript API.\\n * @return The number of members to assign to vigilante justice.\\n */\\nfunction choose_vigilante_threshold(ns) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    assert(members.VIGILANTE > 0);\\n    // Lower the threshold, depending on our gang membership.\\n    const mid_point = Math.floor(members.MAX / 2);\\n    const quarter_point = mid_point + Math.floor(mid_point / 2);\\n    const ngangster = ns.gang.getMemberNames().length;\\n    if (ngangster === members.INITIAL) {\\n        return 1;\\n    }\\n    if (members.INITIAL < ngangster && ngangster <= mid_point) {\\n        return 2;\\n    }\\n    if (mid_point < ngangster && ngangster <= quarter_point) {\\n        return 3;\\n    }\\n    assert(quarter_point < ngangster && ngangster <= members.MAX);\\n    return Math.floor(members.VIGILANTE);\\n}\\n\\n/**\\n * Whether we already have enough gang members assigned to vigilante justice.\\n *\\n * @param ns The Netscript API.\\n * @return true if enough gangsters are assigned to vigilante justice;\\n *     false otherwise.\\n */\\nfunction has_enough_vigilante(ns) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    const tau = choose_vigilante_threshold(ns);\\n    const gangster = new Gangster(ns);\\n    const vigilante = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vigilante(s));\\n    return tau === vigilante.length;\\n}\\n\\n/**\\n * We have too many gang members in vigilante justice.  Reassign the excess\\n * members to some other jobs.\\n *\\n * @param ns The Netscript API.\\n * @param threshold We want this many members to be in vigilante justice.\\n */\\nfunction reassign_excess_vigilante(ns, threshold) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    const tau = Math.floor(threshold);\\n    assert(tau > 0);\\n    const gangster = new Gangster(ns);\\n    const vigilante = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vigilante(s));\\n    const hacker = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_hacker(s));\\n    const vanguard = vigilante.filter((s) => gangster.is_vanguard(s));\\n    // The Vanguard is always the first to be assigned to vigilante justice.\\n    // The Hacker is always the next member to be assigned to this task.\\n    let vigilante_hacker = vanguard.concat(hacker);\\n    vigilante_hacker = vigilante_hacker.concat(\\n        vigilante.filter((s) => !gangster.is_vanguard(s))\\n    );\\n    assert(vigilante_hacker.length > tau);\\n    const candidate = [];\\n    while (vigilante_hacker.length > tau) {\\n        candidate.push(vigilante_hacker.pop());\\n    }\\n    assert(candidate.length > 0);\\n    gangster.vigilante(vigilante_hacker);\\n    // Reassign the rest to other jobs.\\n    reassign_other(ns, candidate);\\n}\\n\\n/**\\n * Reassign some members to other jobs.\\n *\\n * @param ns The Netscript API.\\n * @param name An array of member names.\\n */\\nfunction reassign_other(ns, name) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    if (name.length === 0) {\\n        return;\\n    }\\n    const trainee = [];\\n    const other = [];\\n    const gangster = new Gangster(ns);\\n    for (const s of name) {\\n        if (gangster.needs_training(s) && !gangster.is_training(s)) {\\n            trainee.push(s);\\n            continue;\\n        }\\n        other.push(s);\\n    }\\n    gangster.train_combat(trainee);\\n    gangster.extort(other);\\n}\\n\\n/**\\n * Reassign a number of our gang members to vigilante justice before doing a\\n * soft reset.  Our objective is to lower our wanted level while other gang\\n * members are involved in other jobs.\\n *\\n * @param ns The Netscript API.\\n */\\nexport function reassign_soft_reset(ns) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    // We want only one gang member on vigilante justice.  That member is the\\n    // Vanguard.\\n    const gangster = new Gangster(ns);\\n    const vanguard = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vanguard(s));\\n    assert(vanguard.length === 1);\\n    gangster.vigilante(vanguard);\\n    // Other members currently on vigilante justice are reassigned to other\\n    // jobs.\\n    const vigilante = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vigilante(s) && !gangster.is_vanguard(s));\\n    vigilante.forEach((s) => {\\n        if (gangster.is_hacker(s)) {\\n            gangster.blackmail([s]);\\n        } else {\\n            gangster.extort([s]);\\n        }\\n    });\\n}\\n\\n/**\\n * We do not have enough gang members in vigilante justice.  Reassign some\\n * members to these jobs.\\n *\\n * @param ns The Netscript API.\\n * @param threshold We want this many members to be in vigilante justice.\\n */\\nfunction reassign_to_vigilante(ns, threshold) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    const tau = Math.floor(threshold);\\n    assert(tau > 0);\\n    // All gang members who should be on vigilante justice.\\n    const gangster = new Gangster(ns);\\n    const vanguard = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vanguard(s));\\n    const hacker = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_hacker(s));\\n    const artillery = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_artillery(s));\\n    const pilot = ns.gang.getMemberNames().filter((s) => gangster.is_pilot(s));\\n    // Determine which members to assign to vigilante justice.  The Vanguard is\\n    // always the first to be assigned to vigilante justice.  This is followed\\n    // by the Hacker.  Next comes the Artillery and the Pilot, who are assigned\\n    // to vigilante justice in that order.\\n    const candidate = [vanguard, hacker, artillery, pilot].flat();\\n    const vigilante = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vigilante(s));\\n    assert(vigilante.length < candidate.length);\\n    assert(vigilante.length < tau);\\n    while (vigilante.includes(candidate[0])) {\\n        candidate.shift();\\n    }\\n    const nmore = tau - vigilante.length;\\n    assert(nmore > 0);\\n    while (candidate.length > nmore) {\\n        candidate.pop();\\n    }\\n    // Assign the candidates to vigilante justice.\\n    gangster.vigilante(candidate);\\n}\\n\\n/**\\n * Reassign a number of our gang members to vigilante justice.  Our objective is\\n * to lower our wanted level.\\n *\\n * @param ns The Netscript API.\\n */\\nexport function reassign_vigilante(ns) {\\n    assert(!ns.gang.getGangInformation().isHacking);\\n    // Initially, our gang has a small number of members.  Assigning one or\\n    // more members to vigilante justice would do precious little to decrease\\n    // our wanted level.  With such a small membership, it is more important to\\n    // raise the members' stats and recruit more members than to lower our\\n    // wanted level.\\n    assert(ns.gang.getMemberNames().length > members.HALF);\\n    // Do we already have the required number of members on vigilante justice?\\n    if (has_enough_vigilante(ns)) {\\n        return;\\n    }\\n    // We have more vigilantes than the given threshold.  Move some members out\\n    // of vigilante justice and into some other jobs.\\n    const gangster = new Gangster(ns);\\n    const tau = choose_vigilante_threshold(ns);\\n    const vigilante = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_vigilante(s));\\n    if (vigilante.length > tau) {\\n        reassign_excess_vigilante(ns, tau);\\n        return;\\n    }\\n    // If we already have some vigilantes, then add more members to vigilante\\n    // justice to make up the required threshold.\\n    assert(vigilante.length < tau);\\n    reassign_to_vigilante(ns, tau);\\n}\\n\\n/**\\n * The strongest member in our gang.\\n *\\n * @param ns The Netscript API.\\n * @param member Choose from among this array of member names.\\n * @return A string representing the name of the strongest gang member.\\n */\\nexport function strongest_member(ns, member) {\\n    assert(member.length > 0);\\n    let maxstr = -Infinity;\\n    let name = \\\"\\\";\\n    for (const s of member) {\\n        const { str } = ns.gang.getMemberInformation(s);\\n        if (str > maxstr) {\\n            maxstr = str;\\n            name = s;\\n        }\\n    }\\n    assert(name !== \\\"\\\");\\n    return name;\\n}\\n\",\"filename\":\"/lib/gang/util.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":23.8,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":760,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getAscensionResult\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.ascendMember\",\"cost\":4},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n// Miscellaneous functions for input/output.\\n\\n/**\\n * Print a log to the Terminal.\\n *\\n * @param ns The Netscript API.\\n * @param msg Print this message to the Terminal.\\n * @param clr Use this colour to print the given message.  Must be a string\\n *     representation of a Unicode escape sequence.  Default is empty string,\\n *     which means we use the default colour theme of the Terminal.\\n */\\nexport function log(ns, msg, clr = \\\"\\\") {\\n    const date = new Date(Date.now()).toISOString();\\n    const suffix = clr !== \\\"\\\" ? colour.RESET : \\\"\\\";\\n    ns.tprintf(`[${date}] ${clr}${ns.getScriptName()}: ${msg}${suffix}`);\\n}\\n\\n/**\\n * Convert a RAM amount in the game to a value suitable for display in the\\n * Terminal.\\n *\\n * @param ns The Netscript API.\\n * @param n An amount of RAM as returned by a function in the game.\\n * @return An amount of RAM suitable to be displayed in the Terminal.\\n */\\nexport function format_ram(ns, n) {\\n    assert(n > 0);\\n    const byte_factor = 1e9;\\n    return ns.nFormat(n * byte_factor, \\\"0.00b\\\");\\n}\\n\",\"filename\":\"/lib/io.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":761,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n/**\\n * A class to hold information about money.\\n */\\nexport class Money {\\n    /**\\n     * The value for one million.\\n     */\\n    #million;\\n\\n    /**\\n     * Initialize a money object.\\n     */\\n    constructor() {\\n        this.#million = 1e6;\\n    }\\n\\n    /**\\n     * One billion, i.e. 10^9.\\n     */\\n    billion() {\\n        return 1000 * this.million();\\n    }\\n\\n    /**\\n     * One million, i.e. 10^6.\\n     */\\n    million() {\\n        return this.#million;\\n    }\\n\\n    /**\\n     * One quadrillion, i.e. 10^15.\\n     */\\n    quadrillion() {\\n        return 1000 * this.trillion();\\n    }\\n\\n    /**\\n     * One trillion, i.e. 10^12.\\n     */\\n    trillion() {\\n        return 1000 * this.billion();\\n    }\\n}\\n\",\"filename\":\"/lib/money.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":762,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// A class and various utility functions related to network.\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { assert, filter_pserv } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A combinatorial graph, commonly referred to as a graph.\\n */\\nexport class Graph {\\n    /**\\n     * The adjacency map.  Each key is a vertex or node of the graph.  Each\\n     * value is an array of vertices to which the key is adjacent.  For\\n     * example, given a node i, adj[i] is an array such that each node in the\\n     * array is a neighbour of i.\\n     */\\n    #adj;\\n\\n    /**\\n     * A boolean signifying whether each edge is directed or undirected.\\n     */\\n    #directed;\\n\\n    /**\\n     * A graph object.\\n     *\\n     * @param directed A boolean indicating whether each edge of the graph is\\n     *     directed or undirected.  If true, then each edge is directed.  If\\n     *     false, then each edge is undirected.\\n     */\\n    constructor(directed) {\\n        this.#adj = new Map();\\n        this.#directed = false;\\n        if (directed) {\\n            this.#directed = true;\\n        }\\n    }\\n\\n    /**\\n     * Add an edge to this graph.\\n     *\\n     * @param u, v An edge between vertices u and v.\\n     * @return true if the edge was successfully added to the graph;\\n     *     false otherwise or the edge is already in the graph.\\n     */\\n    add_edge(u, v) {\\n        // Already have the edge.\\n        if (this.has_edge(u, v)) {\\n            return bool.FAILURE;\\n        }\\n        // First, add the nodes if we don't have them already.\\n        if (!this.has_node(u)) {\\n            assert(this.add_node(u));\\n        }\\n        if (!this.has_node(v)) {\\n            assert(this.add_node(v));\\n        }\\n        // Now insert the edge (u, v).\\n        // If the graph is directed, only need to add the edge (u, v).\\n        // If the graph is undirected, also must add the edge (v, u).\\n        const u_neighbour = this.neighbour(u);\\n        u_neighbour.push(v);\\n        this.#adj.set(u, u_neighbour);\\n        // Undirected graph.\\n        if (!this.#directed) {\\n            const v_neighbour = this.neighbour(v);\\n            v_neighbour.push(u);\\n            this.#adj.set(v, v_neighbour);\\n        }\\n        return bool.SUCCESS;\\n    }\\n\\n    /**\\n     * Add a vertex to this graph.\\n     *\\n     * @param v Add this node.\\n     * @return true if the given node was successfully added;\\n     *     false otherwise or the node already exists in the graph.\\n     */\\n    add_node(v) {\\n        if (this.has_node(v)) {\\n            return bool.FAILURE;\\n        }\\n        this.#adj.set(v, []);\\n        return bool.SUCCESS;\\n    }\\n\\n    /**\\n     * Use Dijkstra's algorithm to determine a shortest path from a given\\n     * node to all nodes in a graph.\\n     *\\n     * @param source The source vertex.  All shortest paths must start\\n     *     from this node.\\n     * @return These two data structures:\\n     *     (1) A map of the shortest number of nodes in a path to a target\\n     *         node.  Each path starts from the given source node.  For\\n     *         example, the map element A[i] means the shortest number of nodes\\n     *         in a path to node i.\\n     *     (2) A map of the node preceding a given node, in a shortest path.\\n     *         For example, the map element M[i] gives a node that directly\\n     *         connects to node i, where M[i] and i are nodes in a shortest\\n     *         path.\\n     */\\n    #dijkstra(source) {\\n        // The implementation is the same for both directed and undirected\\n        // graphs.\\n        // A map of the shortest number of nodes in a path to a target node.\\n        const dist = new Map();\\n        // A map of the node preceding a given node.\\n        const prev = new Map();\\n        // A queue of nodes to visit.\\n        let queue = [];\\n        // Initialization.\\n        for (const v of this.nodes()) {\\n            dist.set(v, Infinity);\\n            prev.set(v, undefined);\\n            queue.push(v);\\n        }\\n        // The distance from the source node to itself is zero.\\n        dist.set(source, 0);\\n        prev.set(source, undefined);\\n        queue.push(source);\\n        // Search for shortest paths from the source node to other nodes.  This\\n        // is an unweighted graph so the weight between a node and any of its\\n        // neighbours is 1.\\n        const weight = 1;\\n        while (queue.length > 0) {\\n            const u = this.#minimumq(queue, dist);\\n            queue = queue.filter((s) => s !== u);\\n            // Consider the neighbours of u.  Each neighbour must still be in\\n            // the queue.\\n            let neighbour = Array.from(this.neighbour(u));\\n            // eslint-disable-next-line no-loop-func\\n            neighbour = neighbour.filter((s) => queue.includes(s));\\n            for (const v of neighbour) {\\n                const alt = dist.get(u) + weight;\\n                // We have found a shorter path to v.\\n                if (alt < dist.get(v)) {\\n                    dist.set(v, alt);\\n                    prev.set(v, u);\\n                }\\n            }\\n        }\\n        return [dist, prev];\\n    }\\n\\n    /**\\n     * All edges of this graph, as an array of arrays.\\n     */\\n    edges() {\\n        // Directed graph.\\n        if (this.#directed) {\\n            const edge = [];\\n            this.nodes().forEach((u) => {\\n                this.neighbour(u).forEach((v) => edge.push([u, v]));\\n            });\\n            return edge;\\n        }\\n        // Undirected graph.\\n        assert(!this.#directed);\\n        const edge = new Set();\\n        for (const u of this.nodes()) {\\n            for (const v of this.neighbour(u)) {\\n                // Assume nodes to be comparable, i.e. we can compare the node\\n                // values.  If each node is an integer, the nodes are\\n                // comparable because there is an ordering of numbers.  If each\\n                // node is a string of alphabetic characters, the nodes are\\n                // also comparable because we can use lexicographic ordering.\\n                if (u > v) {\\n                    continue;\\n                }\\n                assert(!edge.has([u, v]));\\n                edge.add([u, v]);\\n            }\\n        }\\n        return [...edge];\\n    }\\n\\n    /**\\n     * Whether the graph has the given edge.\\n     *\\n     * @param u, v Check the graph for this edge.\\n     * @return true if the graph has the edge (u, v); false otherwise.\\n     */\\n    has_edge(u, v) {\\n        if (!this.has_node(u)) {\\n            return bool.NOT;\\n        }\\n        if (!this.has_node(v)) {\\n            return bool.NOT;\\n        }\\n        // Directed graph.\\n        if (this.#directed) {\\n            const neighbour = this.neighbour(u);\\n            return neighbour.includes(v);\\n        }\\n        // Undirected graph.\\n        assert(!this.#directed);\\n        const u_neighbour = this.neighbour(u);\\n        const v_neighbour = this.neighbour(v);\\n        if (u_neighbour.includes(v)) {\\n            assert(v_neighbour.includes(u));\\n            return bool.HAS;\\n        }\\n        return bool.NOT;\\n    }\\n\\n    /**\\n     * Whether the graph has the given vertex.\\n     *\\n     * @param v Check for the presence or absence of this vertex.\\n     * @return true if the graph already has the vertex; false otherwise.\\n     */\\n    has_node(v) {\\n        return this.#adj.has(v);\\n    }\\n\\n    /**\\n     * Choose the node i with minimum dist[i].  This is a simple\\n     * implementation.  For better performance, the queue should be implemented\\n     * as a minimum priority queue.\\n     *\\n     * @param queue An array of nodes to visit.\\n     * @param dist A map of the shortest number of nodes in a path to\\n     *     a target node.\\n     * @return The node i such that dist[i] is minimal.\\n     */\\n    // eslint-disable-next-line class-methods-use-this\\n    #minimumq(queue, dist) {\\n        assert(queue.length > 0);\\n        assert(dist.size > 0);\\n        let node = queue[0];\\n        for (const v of queue) {\\n            if (dist.get(v) < dist.get(node)) {\\n                node = v;\\n            }\\n        }\\n        return node;\\n    }\\n\\n    /**\\n     * The neighbours of a vertex.\\n     *\\n     * @param v A node of this graph.\\n     * @return An array representing the neighbours of the given node.\\n     */\\n    neighbour(v) {\\n        assert(this.has_node(v));\\n        return this.#adj.get(v);\\n    }\\n\\n    /**\\n     * All nodes of this graph, as an array.\\n     */\\n    nodes() {\\n        const vertex = [...this.#adj.keys()];\\n        vertex.sort();\\n        return vertex;\\n    }\\n\\n    /**\\n     * Determine a shortest path from the source to the target.\\n     *\\n     * @param source Start our path from this node.\\n     * @param target We want to reach this node.\\n     * @return An array representing a shortest path from source to target.\\n     *     An empty array if the target is not reachable from the source.\\n     */\\n    shortest_path(source, target) {\\n        // The implementation is the same for directed and undirected graphs.\\n        assert(this.has_node(source));\\n        assert(this.has_node(target));\\n        const [dist, prev] = this.#dijkstra(source);\\n        // Ensure the target is reachable from the source node.\\n        if (!dist.has(target)) {\\n            return [];\\n        }\\n        const stack = [];\\n        let u = target;\\n        // Start from the target and work backward to find a shortest path from\\n        // the source to the target.\\n        while (prev.get(u) !== undefined) {\\n            stack.push(u);\\n            u = prev.get(u);\\n        }\\n        // Target is not reachable from the source node.\\n        if (stack.length === 0) {\\n            return [];\\n        }\\n        // Reconstruct the full path from source to target.\\n        assert(stack.length > 0);\\n        stack.push(source);\\n        stack.reverse();\\n        return stack;\\n    }\\n}\\n\\n/**\\n * Scan the network of servers in the game world.  Each server must be\\n * reachable from our home server.  We do not include purchased servers.\\n *\\n * @param ns The Netscript API.\\n * @return An array of servers that can be reached from home.  Purchased\\n *     servers are excluded.\\n */\\nexport function network(ns) {\\n    // We scan the world network from a node, which is assumed to be our home\\n    // server.  We refer to our home server as the root of the tree.\\n    const root = home;\\n    // A set of all servers we can visit at the moment.\\n    let server = new Set();\\n    // A stack of servers to visit.  We start from our home server.\\n    const stack = new Array(root);\\n    // Use depth-first search to navigate all servers we can visit.\\n    while (stack.length > 0) {\\n        const s = stack.pop();\\n        // Have we visited the server s yet?\\n        if (!server.has(s)) {\\n            // The server s is now visited.\\n            server.add(s);\\n            // Add all neighbours of s to the stack.  Take care to exclude the\\n            // purchased servers.\\n            stack.push(...filter_pserv(ns, ns.scan(s)));\\n        }\\n    }\\n    // Convert the set of servers to an array of servers.\\n    server = [...server];\\n    // Remove the root node from our array.  We want all servers that are\\n    // connected either directly or indirectly to the root node.\\n    return server.filter((s) => root !== s);\\n}\\n\\n/**\\n * Determine a shortest path from the source server to the target server\\n * in the network of world servers.\\n *\\n * @param ns The Netscript API.\\n * @param source Start our path from this server.\\n * @param target We want to reach this server.\\n * @return An array of shortest path from source to target.  An\\n *     empty array if the target is not reachable from the source.\\n */\\nexport function shortest_path(ns, source, target) {\\n    // Represent the network of world servers as an undirected graph.\\n    const stack = [];\\n    const visit = new Set();\\n    stack.push(source);\\n    const graph = new Graph(bool.UNDIRECTED);\\n    // Use breath-first search to navigate the network.\\n    while (stack.length > 0) {\\n        const s = stack.pop();\\n        // Have we visited the server s yet?\\n        if (visit.has(s)) {\\n            continue;\\n        }\\n        visit.add(s);\\n        // All neighbours of s, excluding the purchased servers.\\n        const neighbour = [...filter_pserv(ns, ns.scan(s))];\\n        stack.push(...neighbour);\\n        for (const t of neighbour) {\\n            // Have we visited the server t yet?\\n            if (visit.has(t)) {\\n                continue;\\n            }\\n            assert(graph.add_edge(s, t));\\n        }\\n    }\\n    // A shortest path from source to target.\\n    return graph.shortest_path(source, target);\\n}\\n\",\"filename\":\"/lib/network.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.05,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":763,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { program } from \\\"/lib/constant/exe.js\\\";\\nimport { script } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A class that holds all information about a player.\\n */\\nexport class Player {\\n    /**\\n     * The name of the home server of this player.\\n     */\\n    #home;\\n\\n    /**\\n     * The Netscript API.\\n     */\\n    #ns;\\n\\n    /**\\n     * Programs that allow a player to open ports on a world server.\\n     * These are port openers.\\n     */\\n    #port_opener;\\n\\n    /**\\n     * Programs necessary for visiting the network of world servers.\\n     * These are usually network programs.\\n     */\\n    #program;\\n\\n    /**\\n     * The hack script of the player.  Assumed to be located on the player's\\n     * home server.\\n     */\\n    #script;\\n\\n    /**\\n     * Initialize a Player object.\\n     *\\n     * @param ns The Netscript API.\\n     */\\n    constructor(ns) {\\n        this.#home = home;\\n        this.#ns = ns;\\n        this.#port_opener = Array.from(program);\\n        this.#program = [\\\"DeepscanV1.exe\\\", \\\"DeepscanV2.exe\\\", \\\"NUKE.exe\\\"];\\n        this.#script = script;\\n    }\\n\\n    /**\\n     * The player's agility level.\\n     */\\n    agility() {\\n        return this.#ns.getPlayer().skills.agility;\\n    }\\n\\n    /**\\n     * The BitNode in which the player currently inhabits.\\n     */\\n    bitnode() {\\n        return this.#ns.getPlayer().bitNodeN;\\n    }\\n\\n    /**\\n     * The player's current Charisma level.\\n     */\\n    charisma() {\\n        return this.#ns.getPlayer().skills.charisma;\\n    }\\n\\n    /**\\n     * The current city where the player is located.\\n     */\\n    city() {\\n        return this.#ns.getPlayer().city;\\n    }\\n\\n    /**\\n     * The player's defense level.\\n     */\\n    defense() {\\n        return this.#ns.getPlayer().skills.defense;\\n    }\\n\\n    /**\\n     * The player's dexterity level.\\n     */\\n    dexterity() {\\n        return this.#ns.getPlayer().skills.dexterity;\\n    }\\n\\n    /**\\n     * An array of all factions to which the player is a member.\\n     */\\n    faction() {\\n        return this.#ns.getPlayer().factions;\\n    }\\n\\n    /**\\n     * The current Hack stat of the player.\\n     */\\n    hacking_skill() {\\n        return this.#ns.getHackingLevel();\\n    }\\n\\n    /**\\n     * Whether the player has all programs to open all ports on any world\\n     * server.\\n     *\\n     * @return true if the player can open all ports on another server;\\n     *     false otherwise.\\n     */\\n    has_all_port_openers() {\\n        return this.num_ports() === this.#port_opener.length;\\n    }\\n\\n    /**\\n     * Whether the player has all programs to visit all world servers and open\\n     * all ports on any world server.\\n     *\\n     * @return true if the player has all network programs and port openers;\\n     *     false otherwise.\\n     */\\n    has_all_programs() {\\n        const prog = Array.from(this.#port_opener).concat(this.#program);\\n        assert(prog.length > 0);\\n        for (const p of prog) {\\n            if (!this.has_program(p)) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    /**\\n     * Whether we have a given program.\\n     *\\n     * @param p A program we want to check.\\n     */\\n    has_program(p) {\\n        return this.#ns.fileExists(p, this.home());\\n    }\\n\\n    /**\\n     * Whether we have purchased the TOR router.\\n     *\\n     * @return true if we have purchased the TOR router; false otherwise.\\n     */\\n    has_tor() {\\n        return this.#ns.getPlayer().tor;\\n    }\\n\\n    /**\\n     * The home server of the player.\\n     */\\n    home() {\\n        return this.#home;\\n    }\\n\\n    /**\\n     * Whether the player is working for a company.\\n     *\\n     * @param company A string representing the name of a company.\\n     * @return true if the player is working for the given company;\\n     *     false otherwise.\\n     */\\n    is_employer(company) {\\n        assert(company.length > 0);\\n        const employer = new Set(Object.keys(this.#ns.getPlayer().jobs));\\n        return employer.has(company);\\n    }\\n\\n    /**\\n     * Whether the player is a member of a faction.\\n     *\\n     * @param fac A string representing the name of a faction.\\n     * @return true if the player belongs to the given faction; false otherwise.\\n     */\\n    is_member(fac) {\\n        assert(fac !== \\\"\\\");\\n        return this.#ns.getPlayer().factions.includes(fac);\\n    }\\n\\n    /**\\n     * The position the player holds at a given company.\\n     *\\n     * @param company The name of a company.\\n     * @return The position the player currently holds at the given company.\\n     *     Return an empty string if the player does not hold any position at\\n     *     the given company.\\n     */\\n    job(company) {\\n        assert(company.length > 0);\\n        const stat = this.#ns.getPlayer();\\n        if (stat.jobs[company] === undefined) {\\n            return \\\"\\\";\\n        }\\n        return stat.jobs[company];\\n    }\\n\\n    /**\\n     * The player's karma.  This is an Easter egg, buried in the source code\\n     * of the game.  Refer to this file:\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/src/NetscriptFunctions/Extra.ts\\n     */\\n    karma() {\\n        return this.#ns.heart.break();\\n    }\\n\\n    /**\\n     * The amount of money available to this player.\\n     */\\n    money() {\\n        return this.#ns.getServerMoneyAvailable(this.home());\\n    }\\n\\n    /**\\n     * The number of people the player has killed.\\n     */\\n    nkill() {\\n        return this.#ns.getPlayer().numPeopleKilled;\\n    }\\n\\n    /**\\n     * Determine the number of ports a player can currently open on servers in\\n     * the game world.  This depends on whether the player has the necessary\\n     * hacking programs on the home server.\\n     */\\n    num_ports() {\\n        // These are programs that can be created after satisfying certain\\n        // conditions.\\n        let prog = Array.from(this.#port_opener);\\n        // Determine the number of ports we can open on other servers.\\n        prog = prog.filter((p) => this.#ns.fileExists(p, this.home()));\\n        return prog.length;\\n    }\\n\\n    /**\\n     * All purchased servers of this player.\\n     */\\n    pserv() {\\n        return this.#ns.getPurchasedServers();\\n    }\\n\\n    /**\\n     * The name of the hacking script of the player.\\n     */\\n    script() {\\n        return this.#script;\\n    }\\n\\n    /**\\n     * The player's strength level.\\n     */\\n    strength() {\\n        return this.#ns.getPlayer().skills.strength;\\n    }\\n}\\n\",\"filename\":\"/lib/player.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":4.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":764,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { script } from \\\"/lib/constant/misc.js\\\";\\nimport { pserv } from \\\"/lib/constant/pserv.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A class that holds information specific to purchased servers.\\n */\\nexport class PurchasedServer {\\n    /**\\n     * The player's home server.\\n     */\\n    #home;\\n\\n    /**\\n     * The Netscript API.\\n     */\\n    #ns;\\n\\n    /**\\n     * The player's main hacking script.\\n     */\\n    #script;\\n\\n    /**\\n     * Possible amount of RAM (GB) for a purchased server.\\n     */\\n    #valid_ram;\\n\\n    /**\\n     * Create an object to represent a purchased server.\\n     *\\n     * @param ns The Netscript API.\\n     */\\n    constructor(ns) {\\n        this.#home = home;\\n        this.#ns = ns;\\n        this.#script = script;\\n        this.#valid_ram = Array.from(pserv.RAM);\\n    }\\n\\n    /**\\n     * The cost of buying a server with the given amount of RAM (GB).\\n     *\\n     * @param ram The amount of RAM (GB) to buy with this purchased server.\\n     *     RAM is assumed to be given as a power of 2.\\n     */\\n    cost(ram) {\\n        assert(this.is_valid_ram(ram));\\n        return this.#ns.getPurchasedServerCost(ram);\\n    }\\n\\n    /**\\n     * Choose the default amount of RAM (in GB) for a new purchased server.\\n     * The chosen amount of RAM should allow the purchased server to run our\\n     * hacking script using at least 2 threads.\\n     */\\n    default_ram() {\\n        const script_ram = this.#ns.getScriptRam(this.#script, this.#home);\\n        let i = 0;\\n        while (script_ram > this.#valid_ram[i]) {\\n            i++;\\n        }\\n        assert(i + 1 <= this.#valid_ram.length);\\n        return this.#valid_ram[i + 1];\\n    }\\n\\n    /**\\n     * Whether the given amount of RAM (GB) is valid for a purchased server.\\n     *\\n     * @param ram The amount of RAM in GB.  Must be a power of 2.  Lowest is\\n     *     2GB.  Will round down to the nearest whole number.\\n     * @return true if the given amount of RAM is valid for a purchased server;\\n     *     false otherwise.\\n     */\\n    is_valid_ram(ram) {\\n        const n = Math.floor(ram);\\n        return this.#valid_ram.includes(n);\\n    }\\n\\n    /**\\n     * Delete all purchased servers.  This would also kill all scripts running\\n     * on each purchased server.\\n     */\\n    kill_all() {\\n        for (const server of this.#ns.getPurchasedServers()) {\\n            // Kill all scripts running on a purchased server.\\n            this.#ns.killall(server);\\n            // Delete the purchased server.\\n            this.#ns.deleteServer(server);\\n        }\\n    }\\n\\n    /**\\n     * The maximum number of purchased servers that can be bought.\\n     */\\n    limit() {\\n        return this.#ns.getPurchasedServerLimit();\\n    }\\n\\n    /**\\n     * Purchase a new server with the given hostname and amount of RAM (GB).\\n     *\\n     * @param hostname The hostname of the new purchased server.  If a player\\n     *     already has a purchased server with the given hostname, append a\\n     *     numeric value to the hostname.\\n     * @param ram The amount of RAM (GB) of the purchased server.\\n     * @return The hostname of the newly purchased server.\\n     */\\n    purchase(hostname, ram) {\\n        return this.#ns.purchaseServer(hostname, ram);\\n    }\\n\\n    /**\\n     * The possible amount of RAM a purchased server can have.  According to\\n     * this page\\n     *\\n     * https://github.com/danielyxie/bitburner/blob/dev/markdown/bitburner.ns.getpurchasedservercost.md\\n     *\\n     * the highest amount of RAM for a purchased server is 1048576.\\n     */\\n    valid_ram() {\\n        return this.#valid_ram;\\n    }\\n}\\n\",\"filename\":\"/lib/pserv.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":9.25,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":765,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPurchasedServerCost\",\"cost\":0.25},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"killall\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"deleteServer\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getPurchasedServerLimit\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"purchaseServer\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions relating to random number generations.\\n\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A random integer between a minimum a and a maximum b, inclusive.  Code is\\n * adapted from\\n *\\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\\n *\\n * @param a The minimum integer value.\\n * @param b The maximum integer value.\\n * @return A random integer in the range [a, b], inclusive.  The returned\\n *     integer can be the given minimum or the given maximum.\\n */\\nexport function random_integer(a, b) {\\n    const min = Math.ceil(a);\\n    const max = Math.floor(b);\\n    const n = Math.floor(Math.random() * (max - min + 1) + min);\\n    assert(a <= n);\\n    assert(n <= b);\\n    return n;\\n}\\n\",\"filename\":\"/lib/random.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":1.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":766,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { script } from \\\"/lib/constant/misc.js\\\";\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A server class that holds all information about a server, whether it be\\n * a purchased server or a server found on the network in the game world.\\n */\\nexport class Server {\\n    /**\\n     * The amount of Hack stat required to hack this server.\\n     */\\n    #hacking_skill;\\n\\n    /**\\n     * The player's home server.\\n     */\\n    #home;\\n\\n    /**\\n     * The hostname of this server.\\n     */\\n    #hostname;\\n\\n    /**\\n     * The maximum amount of money this server can hold.\\n     */\\n    #money_max;\\n\\n    /**\\n     * How many ports must be opened on this server in order to run\\n     * NUKE.exe on it.\\n     */\\n    #n_ports_required;\\n\\n    /**\\n     * The Netscript API.\\n     */\\n    #ns;\\n\\n    /**\\n     * Reserve this amount of RAM.  We want the server to always have at least\\n     * this amount of RAM available.  The reserve RAM is important especially\\n     * if this is the player's home server.  We want to have a minimum amount\\n     * of RAM on the home server for various purposes.\\n     */\\n    #ram_reserve;\\n\\n    /**\\n     * The player's main hacking script.\\n     */\\n    #script;\\n\\n    /**\\n     * The minimum security level to which this server can be weakened.\\n     */\\n    #security_min;\\n\\n    /**\\n     * Create a server object with the given hostname.\\n     *\\n     * @param ns The Netscript API.\\n     * @param hostname The hostname of a server.  The server must exist in the\\n     *     game world and can be either a purchased server or a server found on\\n     *     the network in the game world.\\n     */\\n    constructor(ns, hostname) {\\n        assert(hostname.length > 0);\\n        const server = ns.getServer(hostname);\\n        this.#hacking_skill = server.requiredHackingSkill;\\n        this.#home = home;\\n        this.#hostname = server.hostname;\\n        this.#money_max = server.moneyMax;\\n        this.#n_ports_required = server.numOpenPortsRequired;\\n        this.#ns = ns;\\n        this.#script = script;\\n        this.#security_min = server.minDifficulty;\\n        // By default, we do not reserve any RAM.  However, if this is the\\n        // player's home server, then reserve some RAM.\\n        this.#ram_reserve = 0;\\n        if (this.hostname() === this.#home) {\\n            // Reserve an amount of RAM, depending on the maximum RAM on the\\n            // home server.\\n            this.#ram_reserve = this.#reserve_ram();\\n        }\\n    }\\n\\n    /**\\n     * How much RAM (in GB) is available on this server.\\n     */\\n    available_ram() {\\n        return this.ram_max() - this.#ns.getServerUsedRam(this.hostname());\\n    }\\n\\n    /**\\n     * Whether the server has enough RAM to run a given script, using at\\n     * least one thread.  We ignore any amount of RAM that has been reserved,\\n     * using all available RAM to help us make a decision.\\n     *\\n     * @param s We want to run this script on this server.\\n     * @return true if the given script can be run on this server;\\n     *     false otherwise.\\n     */\\n    can_run_script(s) {\\n        const script_ram = this.#ns.getScriptRam(s, this.#home);\\n        const server_ram = this.available_ram();\\n        if (server_ram < 1) {\\n            return bool.NOT_RUN;\\n        }\\n        const nthread = Math.floor(server_ram / script_ram);\\n        if (nthread < 1) {\\n            return bool.NOT_RUN;\\n        }\\n        return bool.CAN_RUN;\\n    }\\n\\n    /**\\n     * The number of CPU Cores on this server.\\n     */\\n    cores() {\\n        return this.#ns.getServer(this.hostname()).cpuCores;\\n    }\\n\\n    /**\\n     * Copy our hack script over to this server.  Run the hack script on this\\n     * server.\\n     *\\n     * @param target We run our hack script against this target server.\\n     * @return true if our hack script is running on the server using at least\\n     *     one thread; false otherwise.  The method can return false if, for\\n     *     example, there is no free RAM on the server or we do not have root\\n     *     access on either servers.\\n     */\\n    async deploy(target) {\\n        assert(target.length > 0);\\n        const targ = this.#ns.getServer(target);\\n        // No root access on either servers.\\n        if (!this.has_root_access()) {\\n            this.#ns.tprint(`No root access on ${this.hostname()}`);\\n            return bool.FAILURE;\\n        }\\n        if (!targ.hasAdminRights) {\\n            this.#ns.tprint(`No root access on ${targ.hostname}`);\\n            return bool.FAILURE;\\n        }\\n        // Hack script not found on our home server.\\n        if (!this.#ns.fileExists(this.#script, this.#home)) {\\n            this.#ns.tprint(`Hack script not found on server ${this.#home}`);\\n            return bool.FAILURE;\\n        }\\n        // No free RAM on server to run our hack script.\\n        const nthread = this.num_threads(this.#script);\\n        if (nthread < 1) {\\n            this.#ns.tprint(`No free RAM on server ${this.hostname()}`);\\n            return bool.FAILURE;\\n        }\\n        // Copy our script over to this server.  Use the server to hack the\\n        // target.\\n        await this.#ns.scp(this.#script, this.hostname(), this.#home);\\n        this.#ns.exec(this.#script, this.hostname(), nthread, targ.hostname);\\n        return bool.SUCCESS;\\n    }\\n\\n    /**\\n     * Try to gain root access on this server.\\n     *\\n     * @return true if the player has root access to this server;\\n     *     false if root access cannot be obtained.\\n     */\\n    async gain_root_access() {\\n        // Do we already have root access to this server?\\n        if (this.has_root_access()) {\\n            return true;\\n        }\\n        // Try to open all required ports and nuke the server.\\n        try {\\n            await this.#ns.brutessh(this.hostname());\\n        } catch {}\\n        try {\\n            await this.#ns.ftpcrack(this.hostname());\\n        } catch {}\\n        try {\\n            await this.#ns.httpworm(this.hostname());\\n        } catch {}\\n        try {\\n            await this.#ns.relaysmtp(this.hostname());\\n        } catch {}\\n        try {\\n            await this.#ns.sqlinject(this.hostname());\\n        } catch {}\\n        try {\\n            await this.#ns.nuke(this.hostname());\\n            return true;\\n        } catch {\\n            assert(!this.has_root_access());\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Increase the amount of money available on this server.\\n     *\\n     */\\n    async grow() {\\n        await this.#ns.grow(this.hostname());\\n    }\\n\\n    /**\\n     * Steal money from this server.\\n     *\\n     */\\n    async hack() {\\n        await this.#ns.hack(this.hostname());\\n    }\\n\\n    /**\\n     * The amount of Hack stat required to hack this server.\\n     */\\n    hacking_skill() {\\n        return this.#hacking_skill;\\n    }\\n\\n    /**\\n     * Whether we have root access to this server.\\n     *\\n     * @return true if we have root access to this server; false otherwise.\\n     */\\n    has_root_access() {\\n        return this.#ns.hasRootAccess(this.hostname());\\n    }\\n\\n    /**\\n     * The hostname of this server.\\n     */\\n    hostname() {\\n        return this.#hostname;\\n    }\\n\\n    /**\\n     * Determine whether the server is bankrupt, i.e. it can't hold any money.\\n     * This is not the same as there being zero money currently on the server.\\n     * The server can have zero money currently available, but we can grow the\\n     * server.  The server is bankrupt if the maximum amount of money it\\n     * can hold is zero.\\n     *\\n     * @return true if the server is bankrupt; false otherwise.\\n     */\\n    is_bankrupt() {\\n        return Math.floor(this.money_max()) === 0;\\n    }\\n\\n    /**\\n     * Whether this server is currently running a script.\\n     *\\n     * @param s Check to see if this script is currently running on the\\n     *     server.\\n     * @return true if the given script is running on the server;\\n     *     false otherwise.\\n     */\\n    is_running_script(s) {\\n        return this.#ns.scriptRunning(s, this.hostname());\\n    }\\n\\n    /**\\n     * The amount of money currently available on the server.\\n     *\\n     */\\n    money_available() {\\n        return this.#ns.getServerMoneyAvailable(this.hostname());\\n    }\\n\\n    /**\\n     * The maximum amount of money this server can hold.\\n     */\\n    money_max() {\\n        return this.#money_max;\\n    }\\n\\n    /**\\n     * The number of ports that must be opened in order to hack this server.\\n     */\\n    num_ports_required() {\\n        return this.#n_ports_required;\\n    }\\n\\n    /**\\n     * Determine how many threads we can run a given script on this server.\\n     * This function takes care not to use all available RAM on the player's\\n     * home server.  If this is the player's home server, the function reserves\\n     * some amount of RAM on the home server and use the remaining available\\n     * RAM to calculate the number of threads to devote to the given script.\\n     *\\n     * @param s We want to run this script on the server.  The script must\\n     *     exist on our home server.\\n     * @return The number of threads that can be used to run the given script\\n     *     on this server.  Return 0 if the amount of RAM to reserve is higher\\n     *     than the available RAM.\\n     */\\n    num_threads(s) {\\n        const script_ram = this.#ns.getScriptRam(s, this.#home);\\n        const server_ram = this.available_ram() - this.#ram_reserve;\\n        if (server_ram < 1) {\\n            return 0;\\n        }\\n        const nthread = Math.floor(server_ram / script_ram);\\n        return nthread;\\n    }\\n\\n    /**\\n     * The maximum amount of RAM (GB) of this server.\\n     */\\n    ram_max() {\\n        return this.#ns.getServer(this.hostname()).maxRam;\\n    }\\n\\n    /**\\n     * Reserve some RAM on the home server.  Use this method when we know we\\n     * have level 3 of \\\"Source-File 4: The Singularity\\\".  Even if we are in\\n     * BN4.1 or BN4.2, the game allows us to use Singularity functions at their\\n     * lowest RAM costs as if we have level 3 of the Source-File.\\n     *\\n     * @return The amount of RAM to reserve.\\n     */\\n    #reserve_ram() {\\n        // if (this.ram_max() >= home_t.RAM_HUGE) {\\n        //     return home_t.reserve.HIGH;\\n        // }\\n        if (this.ram_max() >= home_t.RAM_HIGH) {\\n            return home_t.reserve.HIGH / 2;\\n        }\\n        if (this.ram_max() >= home_t.RAM_HIGH / 2) {\\n            return home_t.reserve.MID;\\n        }\\n        if (this.ram_max() < home_t.reserve.DEFAULT) {\\n            return 0;\\n        }\\n    }\\n\\n    /**\\n     * The current security level of this server.\\n     *\\n     * @param ns The Netscript API.\\n     */\\n    security_level() {\\n        return this.#ns.getServerSecurityLevel(this.hostname());\\n    }\\n\\n    /**\\n     * The minimum security level to which this server can be weakened.\\n     */\\n    security_min() {\\n        return this.#security_min;\\n    }\\n\\n    /**\\n     * The number of threads to use for each instance of a script.  We want to\\n     * run various instances of a script, each instance uses a certain number\\n     * of threads.  Given the number of instances to run, we want to know how\\n     * many threads each instance can use.\\n     *\\n     * @param s The script to run on this server.\\n     * @param n We want to run this many instances of the given script.\\n     *     Must be a positive integer.\\n     * @return The number of threads for each instance of the script.\\n     *     Return 0 if we cannot run any scripts on this server.\\n     */\\n    threads_per_instance(s, n) {\\n        const ninstance = Math.floor(n);\\n        assert(ninstance > 0);\\n        return Math.floor(this.num_threads(s) / ninstance);\\n    }\\n\\n    /**\\n     * Weaken the security of this server.\\n     *\\n     */\\n    async weaken() {\\n        await this.#ns.weaken(this.hostname());\\n    }\\n}\\n\",\"filename\":\"/lib/server.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":7.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":767,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to Augmentations.\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { augment } from \\\"/lib/constant/faction.js\\\";\\nimport { work_hack_lvl } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { commit_crime } from \\\"/lib/singularity/crime.js\\\";\\nimport { work } from \\\"/lib/singularity/work.js\\\";\\nimport {\\n    assert,\\n    is_valid_faction,\\n    trade_bot_resume,\\n    trade_bot_stop_buy,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Augmentations we still need to purchase from a faction.  From all\\n * Augmentations that are yet to be purchased, we choose n Augmentations where\\n * one of these has reputation requirement higher than the remaining n - 1.  We\\n * order the Augmentations from least reputation requirement to highest\\n * reputation requirement and make our decision using this ascending list.  For\\n * example, if n = 5 we would be purchasing the first 5 Augmentations that have\\n * the lowest reputation requirements.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to purchase all Augmentations from this faction.\\n * @return An array of Augmentation names.  We do not yet have these\\n *     Augmentations.  This array never includes the NeuroFlux Governor\\n *     Augmentation.  An empty array if there are no Augmentations to buy from\\n *     the given faction.\\n */\\nexport function augment_to_buy(ns, fac) {\\n    assert(is_valid_faction(fac));\\n    // All Augmentations we have not yet purchased from the given faction.\\n    // Exclude the NeuroFlux Governor.\\n    const owned_aug = new Set(\\n        ns.singularity.getOwnedAugmentations(bool.PURCHASED)\\n    );\\n    let fac_aug = ns.singularity.getAugmentationsFromFaction(fac);\\n    fac_aug = fac_aug\\n        .filter((a) => !owned_aug.has(a))\\n        .filter((b) => b !== augment.NFG);\\n    if (fac_aug.length === 0) {\\n        return [];\\n    }\\n    // Choose n Augmentations that have the least reputation requirements.\\n    const tobuy = [];\\n    let i = 0;\\n    while (i < augment.BUY_TAU) {\\n        const aug = lowest_reputation(ns, fac_aug);\\n        tobuy.push(aug);\\n        fac_aug = fac_aug.filter((a) => a !== aug);\\n        if (fac_aug.length === 0) {\\n            break;\\n        }\\n        i++;\\n    }\\n    assert(tobuy.length > 0);\\n    return tobuy;\\n}\\n\\n/**\\n * Augmentations we have purchased and are yet to be installed.\\n *\\n * @param ns The Netscript API.\\n * @return An array of Augmentation names.  These are Augmentations we have\\n *     bought, but we have not yet installed them.  Can be an empty array.\\n */\\nexport function augment_to_install(ns) {\\n    const purchased_aug = ns.singularity.getOwnedAugmentations(bool.PURCHASED);\\n    const installed_aug = owned_augment(ns);\\n    return purchased_aug.filter((a) => !installed_aug.has(a));\\n}\\n\\n/**\\n * Choose the most expensive Augmentation to buy.  Why should we buy the most\\n * expensive Augmentation first?  The answer is simple.  After we have\\n * purchased an Augmentation from a faction, the cost of each remaining\\n * Augmentation is raised by a multiplier.  Had we not purchased the most\\n * expensive Augmentation, its cost would now be much higher than previously.\\n *\\n * @param ns The Netscript API.\\n * @param candidate An array of Augmentation names.  Cannot be an empty array.\\n * @return The name of the most expensive Augmentation from the given array.\\n */\\nexport function choose_augment(ns, candidate) {\\n    assert(candidate.length > 0);\\n    let max = -Infinity;\\n    let aug = \\\"\\\";\\n    for (const a of candidate) {\\n        const cost = Math.ceil(ns.singularity.getAugmentationPrice(a));\\n        if (max < cost) {\\n            max = cost;\\n            aug = a;\\n        }\\n    }\\n    assert(aug !== \\\"\\\");\\n    return aug;\\n}\\n\\n/**\\n * Whether we have a given Augmentation.\\n *\\n * @param ns The Netscript API.\\n * @param aug Check this Augmentation.\\n * @return true if we have already purchased the given Augmentation;\\n *     false otherwise.\\n */\\nexport function has_augment(ns, aug) {\\n    const candidate = new Set(\\n        ns.singularity.getOwnedAugmentations(bool.PURCHASED)\\n    );\\n    return candidate.has(aug);\\n}\\n\\n/**\\n * Determine an Augmentation that requires the least reputation points.\\n *\\n * @param ns The Netscript API.\\n * @param candidate An array of Augmentation names.  This array does not include\\n *     the NeuroFlux Governor.\\n * @return A string representing the name of an Augmentation that requires the\\n *     lowest amount of reputation points.\\n */\\nfunction lowest_reputation(ns, candidate) {\\n    assert(candidate.length > 0);\\n    assert(!candidate.includes(augment.NFG));\\n    let min = Infinity;\\n    let min_aug = \\\"\\\";\\n    for (const aug of candidate) {\\n        const rep = Math.ceil(ns.singularity.getAugmentationRepReq(aug));\\n        if (min > rep) {\\n            min = rep;\\n            min_aug = aug;\\n        }\\n    }\\n    assert(min_aug !== \\\"\\\");\\n    return min_aug;\\n}\\n\\n/**\\n * The number of Augmentations we have purchased.  This number only includes\\n * those that have been bought and not yet installed.\\n *\\n * @param ns The Netscript API.\\n * @return How many Augmentations we have bought and yet to install.\\n */\\nfunction num_augment(ns) {\\n    const owned_aug = ns.singularity.getOwnedAugmentations(bool.NOT_PURCHASED);\\n    const owned_bought_aug = ns.singularity.getOwnedAugmentations(\\n        bool.PURCHASED\\n    );\\n    assert(owned_bought_aug.length >= owned_aug.length);\\n    const npurchase = owned_bought_aug.length - owned_aug.length;\\n    return npurchase;\\n}\\n\\n/**\\n * All Augmentations we own and have already installed.\\n *\\n * @param ns The Netscript API.\\n * @return A set of all Augmentations we own.  These Augmentations are already\\n *     installed.\\n */\\nexport function owned_augment(ns) {\\n    return new Set(ns.singularity.getOwnedAugmentations(bool.NOT_PURCHASED));\\n}\\n\\n/**\\n * All pre-requisites of an Augmentation.  Include only pre-requisites we have\\n * not yet purchased.\\n *\\n * @param ns The Netscript API.\\n * @param aug A string representing the name of an Augmentation.\\n * @return An array of Augmentation names.  Each Augmentation in the array is a\\n *     pre-requisite of the given Augmentation.  Return an empty array if the\\n *     given Augmentation has no pre-requisites or we have already purchased\\n *     all of its pre-requisites.\\n */\\nexport function prerequisites(ns, aug) {\\n    assert(aug !== \\\"\\\");\\n    const prereq = ns.singularity.getAugmentationPrereq(aug);\\n    if (prereq.length === 0) {\\n        return [];\\n    }\\n    return prereq.filter((a) => !has_augment(ns, a));\\n}\\n\\n/**\\n * Purchase a bunch of Augmentations from a faction.  Buying Augmentations can\\n * be expensive.  If our trade bot is running, tell it to stop buying and start\\n * selling all shares.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to buy Augmentations from this faction.\\n * @param stop_trade A boolean signifying whether the trade bot should stop\\n *     buying shares of stocks.\\n * @param buy_nfg A boolean signifying whether to upgrade the NeuroFlux Governor\\n *     Augmentation.\\n * @param raise_money A boolean signifying whether we should raise funds to buy\\n *     Augmentations.  We can raise funds by working at a company or committing\\n *     crimes.\\n */\\nexport async function purchase_augment(\\n    ns,\\n    fac,\\n    stop_trade,\\n    buy_nfg,\\n    raise_money\\n) {\\n    // Sanity checks.\\n    assert(is_valid_faction(fac));\\n    let candidate = augment_to_buy(ns, fac);\\n    if (candidate.length === 0) {\\n        return;\\n    }\\n    // Tell the trade bot to stop buying shares of stocks.  We want to cash in\\n    // on our shares and raise money to buy Augmentations.\\n    if (stop_trade) {\\n        await trade_bot_stop_buy(ns);\\n    }\\n    // Below is our purchasing strategy.\\n    //\\n    // (1) Purchase the most expensive Augmentation first.\\n    // (2) If an Augmentation has a pre-requisite that we have not yet bought,\\n    //     purchase the pre-requisite first.\\n    // (3) Leave the NeuroFlux Governor Augmentation to last.\\n    const fac_aug = new Set(ns.singularity.getAugmentationsFromFaction(fac));\\n    const fac_has_aug = (a) => fac_aug.has(a);\\n    while (candidate.length > 0) {\\n        if (num_augment(ns) >= augment.BUY_TAU) {\\n            break;\\n        }\\n        // Choose the most expensive Augmentation.\\n        const aug = choose_augment(ns, candidate);\\n        if (has_augment(ns, aug)) {\\n            candidate = candidate.filter((a) => a !== aug);\\n            continue;\\n        }\\n        // If the most expensive Augmentation has no pre-requisites or we have\\n        // already purchased all of its pre-requisites, then purchase the\\n        // Augmentation.\\n        let prereq = prerequisites(ns, aug);\\n        if (prereq.length === 0) {\\n            await purchase_aug(ns, aug, fac, raise_money);\\n            candidate = candidate.filter((a) => a !== aug);\\n            continue;\\n        }\\n        // If the Augmentation has one or more pre-requisites we have not yet\\n        // purchased, then first purchase the pre-requisites.  Ensure that the\\n        // faction has the pre-requisites as well.\\n        if (!prereq.every(fac_has_aug)) {\\n            candidate = candidate.filter((a) => a !== aug);\\n            continue;\\n        }\\n        while (prereq.length > 0) {\\n            const pre = choose_augment(ns, prereq);\\n            await purchase_aug(ns, pre, fac, raise_money);\\n            prereq = prereq.filter((a) => a !== pre);\\n        }\\n        await purchase_aug(ns, aug, fac, raise_money);\\n        candidate = candidate.filter((a) => a !== aug);\\n    }\\n    // Level up the NeuroFlux Governor Augmentation as high as our funds allows.\\n    if (buy_nfg) {\\n        let cost = Math.ceil(ns.singularity.getAugmentationPrice(augment.NFG));\\n        let nfg_rep = Math.ceil(\\n            ns.singularity.getAugmentationRepReq(augment.NFG)\\n        );\\n        let fac_rep = Math.floor(ns.singularity.getFactionRep(fac));\\n        let money = ns.getServerMoneyAvailable(home);\\n        while (cost <= money && nfg_rep <= fac_rep) {\\n            assert(ns.singularity.purchaseAugmentation(fac, augment.NFG));\\n            cost = Math.ceil(ns.singularity.getAugmentationPrice(augment.NFG));\\n            nfg_rep = Math.ceil(\\n                ns.singularity.getAugmentationRepReq(augment.NFG)\\n            );\\n            fac_rep = Math.floor(ns.singularity.getFactionRep(fac));\\n            money = ns.getServerMoneyAvailable(home);\\n        }\\n    }\\n    // The trade bot can now resume buying and selling shares.\\n    if (stop_trade) {\\n        trade_bot_resume(ns);\\n    }\\n}\\n\\n/**\\n * Purchase an Augmentation.\\n *\\n * @param ns The Netscript API.\\n * @param aug We want to purchase this Augmentation.\\n * @param fac We want to purchase the given Augmentation from this faction.\\n * @param raise_money A boolean signifying whether we should raise funds to buy\\n *     the given Augmentation.  We can raise funds by working at a company or\\n *     committing crimes.\\n */\\nasync function purchase_aug(ns, aug, fac, raise_money) {\\n    // Purchase any pre-requisites first.\\n    let prereq = prerequisites(ns, aug);\\n    while (prereq.length > 0) {\\n        const pre = choose_augment(ns, prereq);\\n        await purchase_aug(ns, pre, fac, raise_money);\\n        prereq = prereq.filter((a) => a !== pre);\\n    }\\n    // Having purchased all pre-requisites of an Augmentation, now purchase\\n    // the Augmentation.\\n    let success = false;\\n    const cost = Math.ceil(ns.singularity.getAugmentationPrice(aug));\\n    while (!success) {\\n        assert(!has_augment(ns, aug));\\n        if (ns.getServerMoneyAvailable(home) < cost) {\\n            if (raise_money) {\\n                if (ns.getHackingLevel() < work_hack_lvl) {\\n                    log(ns, `Raising Hack stat to target: ${work_hack_lvl}`);\\n                    await commit_crime(ns, cost);\\n                } else {\\n                    log(\\n                        ns,\\n                        `Raising money to target: ${ns.nFormat(\\n                            cost,\\n                            \\\"$0,0.00a\\\"\\n                        )}`\\n                    );\\n                    await work(ns, cost);\\n                }\\n            }\\n        }\\n        await ns.sleep(wait_t.SECOND);\\n        success = ns.singularity.purchaseAugmentation(fac, aug);\\n    }\\n    assert(has_augment(ns, aug));\\n    log(ns, `Purchased ${aug} from ${fac}`);\\n}\\n\",\"filename\":\"/lib/singularity/augment.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":50.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":768,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to crime.\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Commit various crimes to raise our income to a given threshold.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Continue to commit crime as long as our income is below\\n *     this threshold.\\n */\\nexport async function commit_crime(ns, threshold) {\\n    assert(threshold > 0);\\n    const script = \\\"/singularity/crime.js\\\";\\n    const nthread = 1;\\n    ns.exec(script, home, nthread, threshold);\\n    let money = ns.getServerMoneyAvailable(home);\\n    while (money < threshold || ns.singularity.isBusy()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        money = ns.getServerMoneyAvailable(home);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Choose a crime that has the highest chance of success.\\n *\\n * @param ns The Netscript API.\\n * @param crime An array of crime names.\\n * @return An array of strings, where each element is the name of a crime.\\n *     If the array has multiple elements, then all crimes in the array have\\n *     the same chance of success.\\n */\\nexport function greatest_chance(ns, crime) {\\n    assert(crime.length > 0);\\n    let max = 0;\\n    const chance = new Map();\\n    const million = 1e6;\\n    for (const c of crime) {\\n        // We want to avoid floating point numbers when we compare the chance\\n        // of success of various crimes.  Convert the probability of success to\\n        // an integer.\\n        const prob = ns.singularity.getCrimeChance(c);\\n        const n = Math.round(prob * million);\\n        if (max < n) {\\n            max = n;\\n        }\\n        if (chance.has(n)) {\\n            const crime_name = chance.get(n);\\n            crime_name.push(c);\\n            chance.set(n, crime_name);\\n            continue;\\n        }\\n        const crime_name = [c];\\n        chance.set(n, crime_name);\\n    }\\n    return chance.get(max);\\n}\\n\\n/**\\n * Accumulate negative karma.  Stop when our negative karma is at or lower than\\n * a given threshold.\\n *\\n * @param ns The Netscript API.\\n * @param threshold We want our negative karma to be at or lower than this\\n *     threshold.  Must be a negative integer.\\n * @param crime The crime we must carry out to lower our karma.\\n *     Either \\\"shoplift\\\" or \\\"homicide\\\".\\n * @param nkill If crime := \\\"homicide\\\", then we must also provide the target\\n *     number of people to kill.  Pass in 0 if the crime is not homicide.  Pass\\n *     in Infinity if we care only about lowering our karma and not about the\\n *     number of people killed.  Must be a non-negative integer.\\n */\\nexport async function lower_karma(ns, threshold, crime, nkill) {\\n    // Sanity checks.\\n    assert(threshold < 0);\\n    assert(crimes.SHOP === crime || crimes.KILL === crime);\\n    assert(nkill >= 0);\\n    // Relocate to raise Intelligence XP.\\n    ns.singularity.goToLocation(cities.generic.slum);\\n    // Shoplift.  Use the ceiling function to convert the karma value to an\\n    // integer.  It is safer to compare integers than it is to compare floating\\n    // point numbers.\\n    const player = new Player(ns);\\n    if (crimes.SHOP === crime) {\\n        ns.singularity.commitCrime(crime, bool.FOCUS);\\n        while (Math.ceil(player.karma()) > threshold) {\\n            await ns.sleep(wait_t.SECOND);\\n        }\\n        ns.singularity.stopAction();\\n        assert(Math.ceil(player.karma()) < 0);\\n        assert(Math.ceil(player.karma()) <= threshold);\\n        return;\\n    }\\n    // Homicide.\\n    assert(crimes.KILL === crime);\\n    ns.singularity.commitCrime(crime, bool.FOCUS);\\n    while (Math.ceil(player.karma()) > threshold || player.nkill() < nkill) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    assert(Math.ceil(player.karma()) < 0);\\n    assert(Math.ceil(player.karma()) <= threshold);\\n    assert(player.nkill() >= nkill);\\n}\\n\",\"filename\":\"/lib/singularity/crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":22.4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":769,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getCrimeChance\",\"cost\":5},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to factions.\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { factions, faction_req, faction_t } from \\\"/lib/constant/faction.js\\\";\\nimport { home, server } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { augment_to_buy } from \\\"/lib/singularity/augment.js\\\";\\nimport { visit_city } from \\\"/lib/singularity/network.js\\\";\\nimport { study } from \\\"/lib/singularity/study.js\\\";\\nimport {\\n    assert,\\n    hram_resume,\\n    hram_suspend,\\n    is_valid_faction,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Wait for an invitation from the target faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want an invitation from this faction.\\n */\\nasync function await_invitation(ns, fac) {\\n    assert(is_valid_faction(fac));\\n    let invite = new Set(ns.singularity.checkFactionInvitations());\\n    while (!invite.has(fac)) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        invite = new Set(ns.singularity.checkFactionInvitations());\\n    }\\n}\\n\\n/**\\n * Whether a given faction is a megacorporation faction.\\n *\\n * @param fac The name of a faction.\\n * @return true if the given faction is a megacorporation faction;\\n *     false otherwise.\\n */\\nfunction is_megacorp_faction(fac) {\\n    return factions.megacorp.includes(fac);\\n}\\n\\n/**\\n * Join as many factions as we can.  We typically do this to raise our\\n * Intelligence stat.  Call this function prior to installing one or more\\n * Augmentations, or before hacking the w0r1d_d43m0n server.\\n */\\nexport function join_all_factions(ns) {\\n    const invite = new Set(ns.singularity.checkFactionInvitations());\\n    factions.all\\n        .filter((f) => invite.has(f))\\n        .forEach((g) => ns.singularity.joinFaction(g));\\n}\\n\\n/**\\n * Join a faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to join this faction.\\n */\\nexport async function join_faction(ns, fac) {\\n    assert(is_valid_faction(fac));\\n    log(ns, `Join faction: ${fac}`);\\n    // Since version 2.0 of the game, we must be working for a megacorporation\\n    // while waiting for an invitation from the corresponding faction.  We can\\n    // quit working once we have joined the faction.\\n    let company = fac;\\n    if (is_megacorp_faction(fac)) {\\n        if (fac === \\\"Fulcrum Secret Technologies\\\") {\\n            company = \\\"Fulcrum Technologies\\\";\\n        }\\n        ns.singularity.applyToCompany(company, job_area.SOFTWARE);\\n        ns.singularity.workForCompany(company, bool.FOCUS);\\n    }\\n    // Join the faction.\\n    const player = new Player(ns);\\n    const joined_faction = new Set(player.faction());\\n    if (!joined_faction.has(fac)) {\\n        await await_invitation(ns, fac);\\n        ns.singularity.joinFaction(fac);\\n    }\\n    // We are a member of the target faction.  Quit working for the\\n    // corresponding megacorporation.\\n    if (is_megacorp_faction(fac)) {\\n        ns.singularity.stopAction();\\n        ns.singularity.quitJob(company);\\n    }\\n}\\n\\n/**\\n * Raise each of our combat stats to a given level.  An easy way to raise our\\n * combat stats is to go to the slum of any city and either mug someone or\\n * commit homicide.  Mugging yields more XP for all our combat stats than\\n * homicide.  However, there are two reasons why we should choose homicide.\\n * First, it yields more negative karma than mugging.  We need lots of negative\\n * karma in order to create a gang.  Second, homicide yields more money than\\n * mugging.  Commit homicide until we meet the requirements for receiving an\\n * invitation from Slum Snakes.  Join Slum Snakes and perform Field Work for\\n * the faction to rapidly raise all our combat stats.  Another option is to\\n * join Tetrads and carry out Field Work for this other faction.  Choose Slum\\n * Snakes or Tetrads, depending on whether we have a gang within the other\\n * faction.  For example, if we have a gang within Slum Snakes, we are not\\n * allowed to perform Field Work for Slum Snakes.  In that case, join Tetrads.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Each of our combat stats should be raised to at least this\\n *     value.  Must be a positive integer.\\n */\\nexport async function raise_combat_stats(ns, threshold) {\\n    // Sanity checks.\\n    const tau = Math.ceil(threshold);\\n    assert(tau > 0);\\n    const player = new Player(ns);\\n    if (\\n        player.strength() >= tau\\n        && player.defense() >= tau\\n        && player.dexterity() >= tau\\n        && player.agility() >= tau\\n    ) {\\n        return;\\n    }\\n    // Commit homicide to raise all our combat stats.\\n    let target = \\\"Slum Snakes\\\";\\n    let city = \\\"Sector-12\\\";\\n    if (ns.gang.inGang()) {\\n        if (ns.gang.getGangInformation().faction === target) {\\n            target = \\\"Tetrads\\\";\\n            city = faction_req[target].city;\\n        }\\n    }\\n    await visit_city(ns, city);\\n    ns.singularity.commitCrime(crimes.KILL, bool.FOCUS);\\n    // Wait to receive an invitation from Slum Snakes (or Tetrads) and perform\\n    // Field Work for the faction.  Among the criminal organizations, Slum\\n    // Snakes has the lowest requirements.  Tetrads has slightly higher\\n    // requirements.\\n    const joined_faction = player.faction();\\n    if (!joined_faction.includes(target)) {\\n        await await_invitation(ns, target);\\n        ns.singularity.joinFaction(target);\\n    }\\n    ns.singularity.workForFaction(target, job_area.FIELD, bool.FOCUS);\\n    while (\\n        player.strength() < tau\\n        || player.defense() < tau\\n        || player.dexterity() < tau\\n        || player.agility() < tau\\n    ) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Raise our Hack stat.  Stop when our Hack stat is at least a given level.\\n *\\n * @param ns The Netscript API.\\n * @param threshold We want our Hack stat to be at least this level.  Must be a\\n *     positive integer.\\n */\\nexport async function raise_hack(ns, threshold) {\\n    assert(threshold > 0);\\n    const player = new Player(ns);\\n    if (player.hacking_skill() >= threshold) {\\n        return;\\n    }\\n    // Join a faction.  Choose from one of the early factions we should have\\n    // already joined.  See whether we can join one of them and perform\\n    // Hacking Contracts.\\n    const invite = new Set(ns.singularity.checkFactionInvitations());\\n    let target = \\\"\\\";\\n    for (const f of factions.early) {\\n        if (invite.has(f) || player.is_member(f)) {\\n            target = f;\\n            ns.singularity.joinFaction(f);\\n            break;\\n        }\\n    }\\n    // Carry out Hacking Contracts for the faction.\\n    if (target !== \\\"\\\") {\\n        ns.singularity.workForFaction(target, job_area.HACK, bool.FOCUS);\\n        while (player.hacking_skill() < threshold) {\\n            await ns.sleep(wait_t.DEFAULT);\\n        }\\n        ns.singularity.stopAction();\\n        return;\\n    }\\n    // Cannot join one of the early factions.  Default to studying at\\n    // university.\\n    const current_city = player.city();\\n    const new_city = \\\"Sector-12\\\";\\n    await visit_city(ns, new_city);\\n    await study(ns, threshold);\\n    await visit_city(ns, current_city);\\n}\\n\\n/**\\n * Start sharing our home server with a faction.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function start_share_home(ns) {\\n    // Tell the script hram.js to suspend whatever it is doing.  This should\\n    // free up some RAM on the home server.\\n    await hram_suspend(ns);\\n    // Share our home server with a faction.\\n    const serv = new Server(ns, home);\\n    const ncopy = 1;\\n    let nthread = serv.threads_per_instance(server.SHARE_SCRIPT, ncopy);\\n    if (nthread < 1) {\\n        nthread = 1;\\n    }\\n    ns.exec(server.SHARE_SCRIPT, home, nthread);\\n}\\n\\n/**\\n * Stop sharing our home server with a faction.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction stop_share_home(ns) {\\n    if (ns.isRunning(server.SHARE_SCRIPT, home)) {\\n        assert(ns.kill(server.SHARE_SCRIPT, home));\\n    }\\n    hram_resume(ns);\\n}\\n\\n/**\\n * The total amount of reputation points we need to earn in order to purchase\\n * some Augmentations from a faction.  This is not necessarily the highest\\n * reputation requirement of any Augmentation.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to earn reputation points from this faction.\\n * @return The maximum amount of reputation points we must earn from a faction.\\n *     Return 0 if we do not need to earn any reputation points.\\n */\\nfunction total_reputation(ns, fac) {\\n    const augment = augment_to_buy(ns, fac);\\n    if (augment.length === 0) {\\n        return 0;\\n    }\\n    // The total reputation points we need to earn.\\n    let max = -Infinity;\\n    for (const aug of augment) {\\n        const rep = ns.singularity.getAugmentationRepReq(aug);\\n        if (max < rep) {\\n            max = rep;\\n        }\\n    }\\n    return max;\\n}\\n\\n/**\\n * Work for a faction.  Stop working when we have accumulated enough reputation\\n * points to purchase all Augmentations from the faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to work for this faction.\\n * @param work_type The type of work to carry out for the given faction.\\n *     Either \\\"Hacking Contracts\\\" or \\\"Field Work\\\".\\n */\\nexport async function work_for_faction(ns, fac, work_type) {\\n    assert(is_valid_faction(fac));\\n    log(ns, `Work for faction: ${fac}`);\\n    assert(job_area.HACK === work_type || job_area.FIELD === work_type);\\n    // Share our home server with the faction.  Doing so would boost the amount\\n    // of reputation points we earn.\\n    await start_share_home(ns);\\n    log(ns, `Share home server with faction: ${fac}`);\\n    // Start working for the faction.\\n    const threshold = total_reputation(ns, fac);\\n    if (threshold === 0) {\\n        return;\\n    }\\n    ns.singularity.workForFaction(fac, work_type, bool.FOCUS);\\n    while (ns.singularity.getFactionRep(fac) < threshold) {\\n        // Donate some money to the faction in exchange for reputation points.\\n        const amount = Math.floor(\\n            faction_t.DONATE_MULT * ns.getServerMoneyAvailable(home)\\n        );\\n        ns.singularity.donateToFaction(fac, amount);\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    ns.singularity.stopAction();\\n    // We no longer need to share our home server with the faction.\\n    stop_share_home(ns);\\n    log(ns, `Stop sharing home server with faction: ${fac}`);\\n}\\n\",\"filename\":\"/lib/singularity/faction.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":66.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":770,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to network.\\n\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { shortest_path } from \\\"/lib/network.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Connect to a given server.  The target server can be multiple hops away.\\n *\\n * @param ns The Netscript API.\\n * @param source The source node.  We are currently on this server.\\n * @param target We want to connect to this server.  Not necessarily a\\n *     neighbour node.\\n */\\nexport function connect_to(ns, source, target) {\\n    const path = shortest_path(ns, source, target);\\n    assert(path.length > 0);\\n    assert(source === path[0]);\\n    path.shift();\\n    while (path.length > 0) {\\n        const node = path.shift();\\n        assert(ns.singularity.connect(node));\\n    }\\n}\\n\\n/**\\n * Install a backdoor on a world server.\\n *\\n * @param ns The Netscript API.\\n * @param hostname We want to install a backdoor on the server having this\\n *     hostname.  Assume that we have root access to the target server.\\n */\\nexport async function install_backdoor(ns, hostname) {\\n    // Sanity checks.\\n    const player = new Player(ns);\\n    const server = new Server(ns, hostname);\\n    assert(player.hacking_skill() >= server.hacking_skill());\\n    assert(server.has_root_access());\\n    // Install a backdoor on the target server.\\n    connect_to(ns, player.home(), server.hostname());\\n    await ns.singularity.installBackdoor();\\n    connect_to(ns, server.hostname(), player.home());\\n}\\n\\n/**\\n * Travel to a city.\\n *\\n * @param ns The Netscript API.\\n * @param city We want to travel to this city.\\n */\\nexport async function visit_city(ns, city) {\\n    const player = new Player(ns);\\n    if (player.city() === city) {\\n        return;\\n    }\\n    ns.singularity.goToLocation(cities.generic.TA); // Raise Int XP.\\n    let success = ns.singularity.travelToCity(city);\\n    while (!success) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        success = ns.singularity.travelToCity(city);\\n    }\\n}\\n\",\"filename\":\"/lib/singularity/network.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":21.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":771,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { program as popen } from \\\"/lib/constant/exe.js\\\";\\nimport { tor_cost, work_hack_lvl } from \\\"/lib/constant/misc.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { raise_hack } from \\\"/lib/singularity/study.js\\\";\\nimport { choose_hardware_company } from \\\"/lib/singularity/util.js\\\";\\nimport { work } from \\\"/lib/singularity/work.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n// Utility functions related to programs.\\n\\n/**\\n * Purchase all programs from the dark web.\\n *\\n * @param ns The Netscript API.\\n * @param visit A boolean signifying whether to visit a hardware store.\\n *     Although not required, we typically visit a hardware store to increase\\n *     our Intelligence XP.\\n * @param wrk A boolean signifying whether to work to increase our funds or\\n *     required stats.  We require money to puchase programs.  In most cases, we\\n *     require certain stats to be offered a job.\\n */\\nexport async function buy_all_programs(ns, visit, wrk) {\\n    // Purchase the Tor router from a hardware store.\\n    const shop = await choose_hardware_company(ns, visit);\\n    if (visit) {\\n        ns.singularity.goToLocation(shop);\\n    }\\n    await buy_tor_router(ns, wrk);\\n    // Work out which programs we still need to purchase via the dark web.\\n    let program = ns.singularity.getDarkwebPrograms();\\n    assert(program.length > 0);\\n    const player = new Player(ns);\\n    program = program.filter((p) => !player.has_program(p));\\n    if (program.length === 0) {\\n        return;\\n    }\\n    // Purchase all remaining programs.\\n    await buy_programs(ns, popen, wrk);\\n}\\n\\n/**\\n * Purchase all programs from a given list.\\n *\\n * @param ns The Netscript API.\\n * @param program We want to buy all programs from this list.\\n * @param wrk A boolean signifying whether to work to increase our funds or\\n *     required stats.  We require money to puchase programs.  In most cases, we\\n *     require certain stats to be offered a job.\\n */\\nasync function buy_programs(ns, program, wrk) {\\n    assert(program.length > 0);\\n    // First, determine which programs we do not have.\\n    const player = new Player(ns);\\n    let prog = Array.from(program);\\n    prog = prog.filter((p) => !player.has_program(p));\\n    if (prog.length === 0) {\\n        return;\\n    }\\n    // Purchase the remaining programs.\\n    log(ns, `Buying port openers: ${prog.join(\\\", \\\")}`);\\n    while (prog.length > 0) {\\n        const [p, cost] = cheapest(ns, prog);\\n        if (player.has_program(p)) {\\n            prog = prog.filter((e) => e !== p);\\n            continue;\\n        }\\n        while (player.money() < cost) {\\n            if (player.hacking_skill() < work_hack_lvl) {\\n                if (wrk) {\\n                    await raise_hack(ns, target_hack_lvl(ns));\\n                }\\n                await ns.sleep(wait_t.SECOND);\\n                continue;\\n            }\\n            if (wrk) {\\n                await work(ns, cost);\\n            }\\n            await ns.sleep(wait_t.SECOND);\\n        }\\n        assert(ns.singularity.purchaseProgram(p));\\n        log(ns, `Purchased program ${p}`);\\n        prog = prog.filter((e) => e !== p);\\n    }\\n}\\n\\n/**\\n * Purchase the Tor router so we can access the dark web.\\n *\\n * @param ns The Netscript API.\\n * @param wrk A boolean signifying whether to work to increase our funds or\\n *     required stats.  We require money to puchase the Tor router.  In most\\n *     cases, we require certain stats to be offered a job.\\n */\\nasync function buy_tor_router(ns, wrk) {\\n    log(ns, \\\"Purchase Tor router\\\");\\n    const player = new Player(ns);\\n    while (!ns.singularity.purchaseTor()) {\\n        if (player.hacking_skill() < work_hack_lvl) {\\n            if (wrk) {\\n                await raise_hack(ns, target_hack_lvl(ns));\\n            }\\n            await ns.sleep(wait_t.SECOND);\\n            continue;\\n        }\\n        if (wrk) {\\n            await work(ns, tor_cost);\\n        }\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n}\\n\\n/**\\n * Choose the least expensive program that can be purchased via the dark web.\\n *\\n * @param ns The Netscript API.\\n * @param program An array of program names.  We want to determine the cheapest\\n *     program from among this list.\\n * @return An array [prog, cost] as follows.\\n *     (1) prog := The name of cheapest program from among the given list of\\n *         program names.\\n *     (2) cost := The cost of the cheapest program.\\n */\\nfunction cheapest(ns, program) {\\n    assert(program.length > 0);\\n    let mincost = Infinity;\\n    let prog = \\\"\\\";\\n    for (const p of program) {\\n        const cost = ns.singularity.getDarkwebProgramCost(p);\\n        if (mincost > cost) {\\n            mincost = cost;\\n            prog = p;\\n        }\\n    }\\n    assert(mincost > 0);\\n    assert(prog.length > 0);\\n    assert(program.includes(prog));\\n    return [prog, mincost];\\n}\\n\\n/**\\n * Raise our Hack stat to at least a given number.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction target_hack_lvl(ns) {\\n    const player = new Player(ns);\\n    return player.hacking_skill() + 5;\\n}\\n\",\"filename\":\"/lib/singularity/program.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":28.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":772,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getDarkwebPrograms\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"purchaseProgram\",\"cost\":2},{\"type\":\"fn\",\"name\":\"purchaseTor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getDarkwebProgramCost\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to study at a university.\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { course } from \\\"/lib/constant/study.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Determine the university at which we should study.\\n *\\n * @param ns The Netscript API.\\n * @return A string representing the name of the university where we should\\n *     study.  An empty string if the player is located in a city that does not\\n *     have a university.\\n */\\nfunction choose_university(ns) {\\n    const { city } = ns.getPlayer();\\n    const { uni } = cities[city];\\n    if (undefined === uni) {\\n        return \\\"\\\";\\n    }\\n    return uni;\\n}\\n\\n/**\\n * Increase our Hack stat.  Continue doing so until our Hack stat is at least\\n * a given threshold.\\n *\\n * @param ns The Netscript API.\\n * @param threshold We want to increase our Hack stat to be at least this\\n *     threshold.\\n */\\nexport async function raise_hack(ns, threshold) {\\n    assert(threshold > 0);\\n    while (ns.getHackingLevel() < threshold) {\\n        await study(ns, threshold);\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n}\\n\\n/**\\n * Increase our Hack stat.  We stop when either of the following conditions are\\n * satisfied.\\n *\\n * (1) Our Hack stat is at least the given threshold.\\n * (2) We receive an invitation from the given faction.\\n *\\n * @param ns The Netscript API.\\n * @param threshold We want to increase our Hack stat to at least this\\n *     threshold.  The function can exit even if our Hack stat is below the\\n *     given threshold.\\n * @param fac The name of a faction.  We want to receive an invitation from this\\n *     faction.  The function can exit even if we do not receive an invitation\\n *     from the given faction.\\n */\\nexport async function raise_hack_until(ns, threshold, fac) {\\n    const tau = Math.floor(threshold);\\n    assert(tau > 0);\\n    assert(fac !== \\\"\\\");\\n    // By default, we study the free computer science course at a university.\\n    const uni = choose_university(ns);\\n    assert(uni !== \\\"\\\");\\n    ns.singularity.goToLocation(uni); // Raise Intelligence XP.\\n    assert(ns.singularity.universityCourse(uni, course.CS, bool.FOCUS));\\n    while (ns.getHackingLevel() < tau) {\\n        if (ns.getPlayer().factions.includes(fac)) {\\n            break;\\n        }\\n        const invitation = ns.singularity.checkFactionInvitations();\\n        if (invitation.includes(fac)) {\\n            break;\\n        }\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    assert(ns.singularity.stopAction());\\n}\\n\\n/**\\n * Study at a university to raise our Hack stat.  Use this function under the\\n * following situations:\\n *\\n * (1) Immediately after installing one or more Augmentations.\\n * (2) When we start all over on a different BitNode.\\n * (3) If there is a special need to increase our Hack stat.\\n *\\n * Note that some cities have universities, while others do not.  If we really\\n * want to study at a university, ensure we are located in a city that has a\\n * university.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Study until we have reached at least this amount of\\n *     Hack stat.\\n */\\nexport async function study(ns, threshold) {\\n    assert(threshold > 0);\\n    const uni = choose_university(ns);\\n    const empty_str = \\\"\\\";\\n    if (empty_str === uni) {\\n        return;\\n    }\\n    // Go to a different location to gain some Intelligence XP.\\n    assert(empty_str !== uni);\\n    ns.singularity.goToLocation(uni);\\n    // Study the free computer science course at a university.\\n    assert(ns.singularity.universityCourse(uni, course.CS, bool.FOCUS));\\n    // Stop our study when our Hack stat is at least the given threshold.\\n    while (ns.getHackingLevel() < threshold) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    assert(ns.singularity.stopAction());\\n}\\n\",\"filename\":\"/lib/singularity/study.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":13.15,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":773,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to the Singularity API.\\n\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\n\\n/**\\n * Determine the hardware company we should visit.  The company can sell us\\n * more RAM for our home server.\\n *\\n * @param ns The Netscript API.\\n * @param visit A boolean signifying whether to visit the travel agency.\\n *     Although not required, we typically visit a travel agency to raise our\\n *     Intelligence XP.\\n * @return A string representing the name of a hardware store.\\n */\\nexport async function choose_hardware_company(ns, visit) {\\n    let { city } = ns.getPlayer();\\n    // There are no hardware stores in Chongqing and New Tokyo.  If we are\\n    // currently in either of these cities, travel to Sector-12 to increase our\\n    // Intelligence XP.\\n    if (city === \\\"Chongqing\\\" || city === \\\"New Tokyo\\\") {\\n        city = \\\"Sector-12\\\";\\n        if (visit) {\\n            ns.singularity.goToLocation(cities.generic.TA);\\n        }\\n        let success = ns.singularity.travelToCity(city);\\n        while (!success) {\\n            await ns.sleep(wait_t.SECOND);\\n            success = ns.singularity.travelToCity(city);\\n        }\\n    }\\n    return cities[city].shop;\\n}\\n\",\"filename\":\"/lib/singularity/util.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":9.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":774,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions related to work.\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { work_hack_lvl } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { job_area, job_title } from \\\"/lib/constant/work.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { study } from \\\"/lib/singularity/study.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Choose a company at which to work.\\n *\\n * @param ns The Netscript API.\\n * @return A string representing the name of a company.\\n */\\nfunction choose_company(ns) {\\n    let company = \\\"\\\";\\n    switch (ns.getPlayer().city) {\\n        case \\\"Aevum\\\":\\n            company = \\\"ECorp\\\";\\n            break;\\n        case \\\"Chongqing\\\":\\n            company = \\\"KuaiGong International\\\";\\n            break;\\n        case \\\"Ishima\\\":\\n            company = \\\"Nova Medical\\\";\\n            break;\\n        case \\\"New Tokyo\\\":\\n            company = \\\"Global Pharmaceuticals\\\";\\n            break;\\n        case \\\"Sector-12\\\":\\n            company = \\\"MegaCorp\\\";\\n            break;\\n        case \\\"Volhaven\\\":\\n            company = \\\"NWO\\\";\\n            break;\\n        default:\\n            company = \\\"\\\";\\n            break;\\n    }\\n    assert(company !== \\\"\\\");\\n    return company;\\n}\\n\\n/**\\n * Choose the field of work.  Either \\\"Business\\\" or \\\"Software\\\".\\n *\\n * @param ns The Netscript API.\\n * @return The field of work.  Either \\\"Business\\\" or \\\"Software\\\".\\n */\\nexport function choose_field(ns) {\\n    const charisma_lvl = work_hack_lvl;\\n    if (ns.getPlayer().skills.charisma < charisma_lvl) {\\n        return job_area.SOFTWARE;\\n    }\\n    return job_area.BUSINESS;\\n}\\n\\n/**\\n * Work for a company to raise our Charisma to a given amount.\\n *\\n * @param ns The Netscript API.\\n * @param hack_lvl The minimum amount of Hack we must have.\\n * @param threshold Continue working until our Charisma is at this level or\\n *     higher.  Assume to be a positive integer.\\n */\\nexport async function raise_charisma(ns, hack_lvl, threshold) {\\n    // Sanity checks.\\n    const player = new Player(ns);\\n    if (player.charisma() >= threshold) {\\n        return;\\n    }\\n    assert(threshold > 0);\\n    // Ensure we have the minimum Hack stat.\\n    if (player.hacking_skill() < hack_lvl) {\\n        await study(ns, hack_lvl);\\n    }\\n    assert(player.hacking_skill() >= hack_lvl);\\n    // Work for a company as a software engineer until we have accumulated the\\n    // given amount of Charisma level.\\n    const company = choose_company(ns);\\n    ns.singularity.goToLocation(company); // Raise Intelligence XP.\\n    ns.singularity.applyToCompany(company, job_area.SOFTWARE);\\n    ns.singularity.workForCompany(company, bool.FOCUS);\\n    while (player.charisma() < threshold) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        const success = ns.singularity.applyToCompany(\\n            company,\\n            job_area.SOFTWARE\\n        );\\n        // We have a promotion.  Work in the new job.\\n        if (success) {\\n            ns.singularity.workForCompany(company, bool.FOCUS);\\n        }\\n    }\\n    ns.singularity.stopAction();\\n    ns.singularity.quitJob(company);\\n}\\n\\n/**\\n * Work at a company and rise to the position of Chief Financial Officer.  We\\n * do not quit the company after the function ends.\\n *\\n * @param ns The Netscript API.\\n * @param company We want to work for this company.\\n */\\nexport async function rise_to_cfo(ns, company) {\\n    // Ensure we have the minimum Hack and Charisma stats.\\n    const player = new Player(ns);\\n    const charisma_lvl = work_hack_lvl;\\n    assert(player.hacking_skill() >= work_hack_lvl);\\n    assert(player.charisma() >= charisma_lvl);\\n    // Work for the company in a business position.  Once in a while, apply for\\n    // a promotion until we reach the position of Chief Financial Officer.\\n    ns.singularity.goToLocation(company); // Raise Intelligence XP.\\n    ns.singularity.applyToCompany(company, job_area.BUSINESS);\\n    ns.singularity.workForCompany(company, bool.FOCUS);\\n    for (;;) {\\n        if (\\n            player.job(company) === job_title.CFO\\n            || player.job(company) === job_title.CEO\\n        ) {\\n            break;\\n        }\\n        await ns.sleep(wait_t.DEFAULT);\\n        const success = ns.singularity.applyToCompany(\\n            company,\\n            job_area.BUSINESS\\n        );\\n        // We have a promotion.  Work in the new job.\\n        if (success) {\\n            ns.singularity.workForCompany(company, bool.FOCUS);\\n        }\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Work to boost our income.  Stop working when we have accumulated a given\\n * amount of money.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Continue working as long as our money is less than this\\n *     threshold.\\n */\\nexport async function work(ns, threshold) {\\n    assert(threshold > 0);\\n    if (ns.getServerMoneyAvailable(home) >= threshold) {\\n        return;\\n    }\\n    // Ensure we have the minimum Hack stat.\\n    if (ns.getHackingLevel() < work_hack_lvl) {\\n        await study(ns, work_hack_lvl);\\n    }\\n    assert(ns.getHackingLevel() >= work_hack_lvl);\\n    // Work for a company until our money is at least the given threshold.\\n    // Every once in a while, apply for a promotion to earn more money per\\n    // second.  By default, we work a business job.  However, if our Charisma\\n    // level is low, work a software job instead to raise our Charisma.\\n    const company = choose_company(ns);\\n    ns.singularity.goToLocation(company); // Increase Intelligence XP.\\n    let field = choose_field(ns);\\n    ns.singularity.applyToCompany(company, field);\\n    ns.singularity.workForCompany(company, bool.FOCUS);\\n    ns.singularity.setFocus(bool.FOCUS);\\n    log(ns, `Work for ${company} in ${field}`);\\n    while (ns.getServerMoneyAvailable(home) < threshold) {\\n        await ns.sleep(10 * wait_t.SECOND);\\n        field = choose_field(ns);\\n        const success = ns.singularity.applyToCompany(company, field);\\n        ns.singularity.workForCompany(company, bool.FOCUS);\\n        ns.singularity.setFocus(bool.FOCUS);\\n        // We have a promotion.  Start working in the new job.\\n        if (success) {\\n            log(ns, `Work for ${company} in ${field}`);\\n        }\\n    }\\n    ns.singularity.stopAction();\\n    ns.singularity.quitJob(company);\\n}\\n\\n/**\\n * Work for a company.  Stop working when we have accumulated a given amount\\n * of reputation points.\\n *\\n * @param ns The Netscript API.\\n * @param company We want to work for this company.\\n * @param rep Work for the company until we have at least this amount of\\n *     reputation points.\\n */\\nexport async function work_for_company(ns, company, rep) {\\n    assert(rep > 0);\\n    ns.singularity.goToLocation(company); // Raise Intelligence XP.\\n    // Ensure we have the minimum Hack stat.\\n    if (ns.getHackingLevel() < work_hack_lvl) {\\n        await study(ns, work_hack_lvl);\\n    }\\n    assert(ns.getHackingLevel() >= work_hack_lvl);\\n    // Work for the company until we have accumulated the given amount of\\n    // reputation points.  Occasionally apply for a promotion to earn even\\n    // more reputation points per second.\\n    let field = choose_field(ns);\\n    ns.singularity.applyToCompany(company, field);\\n    ns.singularity.workForCompany(company, bool.FOCUS);\\n    log(ns, `Work for ${company} in ${field}`);\\n    while (ns.singularity.getCompanyRep(company) < rep) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        field = choose_field(ns);\\n        const success = ns.singularity.applyToCompany(company, field);\\n        // We have a promotion.  Work in the new job.\\n        if (success) {\\n            ns.singularity.workForCompany(company, bool.FOCUS);\\n            log(ns, `Work for ${company} in ${field}`);\\n        }\\n    }\\n    ns.singularity.stopAction();\\n    ns.singularity.quitJob(company);\\n}\\n\",\"filename\":\"/lib/singularity/work.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":22.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":775,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getCompanyRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { cc_t } from \\\"/lib/constant/sleeve.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * A class to manage various aspects of sleeves.\\n */\\nexport class Sleeve {\\n    /**\\n     * The Netscript API.\\n     */\\n    #ns;\\n\\n    /**\\n     * Construct a sleeve object.\\n     *\\n     * @param ns The Netscript API.\\n     */\\n    constructor(ns) {\\n        this.#ns = ns;\\n    }\\n\\n    /**\\n     * The Agility stat of a sleeve.\\n     *\\n     * @param idx The index of a sleeve.\\n     * @return The Agility stat of the sleeve having the given index.\\n     */\\n    agility(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return this.#ns.sleeve.getSleeveStats(idx).agility;\\n    }\\n\\n    /**\\n     * Indices of all sleeves.\\n     *\\n     * @return An array of all sleeve indices.\\n     */\\n    all() {\\n        return MyArray.sequence(this.#ns.sleeve.getNumSleeves());\\n    }\\n\\n    /**\\n     * Purchase an Augmentation for a sleeve.\\n     *\\n     * @param idx The index of a sleeve.\\n     * @param aug Purchase this Augmentation for the sleeve.\\n     * @return True if the given Augmentation was successfully purchased and\\n     *     installed on the sleeve; false otherwise.\\n     */\\n    buy_augment(idx, aug) {\\n        assert(this.#is_valid_index([idx]));\\n        if (this.is_in_shock(idx)) {\\n            return bool.NOT_PURCHASED;\\n        }\\n        return this.#ns.sleeve.purchaseSleeveAug(idx, aug);\\n    }\\n\\n    /**\\n     * The cheapest available Augmentation that a sleeve can purchase.\\n     *\\n     * @param idx The index of a sleeve.\\n     * @return An array [name, cost] as follows.  An empty array if no\\n     *     Augmentations are available for purchase.\\n     *     (1) name := A string representing the name of the cheapest\\n     *         Augmentation that the given sleeve can purchase at the moment.\\n     *     (2) cost := The cost of the cheapest Augmentation.\\n     */\\n    cheapest_augment(idx) {\\n        // Sanity checks.\\n        assert(this.#is_valid_index([idx]));\\n        const aug = this.#ns.sleeve.getSleevePurchasableAugs(idx);\\n        if (aug.length === 0) {\\n            return [];\\n        }\\n        // Find the cheapest Augmentation.\\n        let name = \\\"\\\";\\n        let cost = Infinity;\\n        aug.forEach((a) => {\\n            if (a.cost < cost) {\\n                cost = a.cost;\\n                name = a.name;\\n            }\\n        });\\n        assert(name !== \\\"\\\");\\n        assert(cost < Infinity);\\n        return [name, cost];\\n    }\\n\\n    /**\\n     * The Defense stat of a sleeve.\\n     *\\n     * @param idx The index of a sleeve.\\n     * @return The Defense stat of the sleeve having the given index.\\n     */\\n    defense(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return this.#ns.sleeve.getSleeveStats(idx).defense;\\n    }\\n\\n    /**\\n     * The Dexterity stat of a sleeve.\\n     *\\n     * @param idx The index of a sleeve.\\n     * @return The Dexterity stat of the sleeve having the given index.\\n     */\\n    dexterity(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return this.#ns.sleeve.getSleeveStats(idx).dexterity;\\n    }\\n\\n    /**\\n     * Whether to graduate sleeves from training stats by mugging people.\\n     *\\n     * @param s An array of sleeve indices.  We want to graduate these sleeves.\\n     * @return True if each sleeve in the given array can graduate;\\n     *     false otherwise or the array is empty.\\n     */\\n    graduate_mug(s) {\\n        if (s.length === 0) {\\n            return bool.NOT;\\n        }\\n        assert(this.#is_valid_index(s));\\n        for (const i of s) {\\n            if (!this.has_mug_threshold(i)) {\\n                return bool.NOT;\\n            }\\n        }\\n        return bool.GRADUATE;\\n    }\\n\\n    /**\\n     * Whether to graduate sleeves from training stats by shoplift.\\n     *\\n     * @param s An array of sleeve indices.  We want to graduate these sleeves.\\n     * @return True if each sleeve in the given array can graduate;\\n     *     false otherwise or the array is empty.\\n     */\\n    graduate_shoplift(s) {\\n        if (s.length === 0) {\\n            return bool.NOT;\\n        }\\n        assert(this.#is_valid_index(s));\\n        for (const i of s) {\\n            if (!this.has_shoplift_threshold(i)) {\\n                return bool.NOT;\\n            }\\n        }\\n        return bool.GRADUATE;\\n    }\\n\\n    /**\\n     * Whether the combat stats of a sleeve are at least the threshold for\\n     * mugging people.\\n     *\\n     * @param idx A sleeve index.\\n     * @return True if the combat stats of a sleeve are each at least the\\n     *     threshold for mugging people; false otherwise.\\n     */\\n    has_mug_threshold(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return (\\n            this.agility(idx) >= cc_t.MUG\\n            && this.defense(idx) >= cc_t.MUG\\n            && this.dexterity(idx) >= cc_t.MUG\\n            && this.strength(idx) >= cc_t.MUG\\n        );\\n    }\\n\\n    /**\\n     * Whether the Dexterity and Agility stats of a sleeve are at least the\\n     * threshold for shoplift.\\n     *\\n     * @param idx A sleeve index.\\n     * @return True if the Dexterity and Agility stats of a sleeve are each\\n     *     at least the threshold for shoplift; false otherwise.\\n     */\\n    has_shoplift_threshold(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return (\\n            this.agility(idx) >= cc_t.SHOP && this.dexterity(idx) >= cc_t.SHOP\\n        );\\n    }\\n\\n    /**\\n     * Assign sleeves to commit homicide.\\n     *\\n     * @param s An array of sleeve indices.\\n     */\\n    homicide(s) {\\n        if (s.length === 0) {\\n            return;\\n        }\\n        assert(this.#is_valid_index(s));\\n        s.forEach((i) => this.#ns.sleeve.setToCommitCrime(i, crimes.KILL));\\n    }\\n\\n    /**\\n     * Whether a sleeve is in shock.  A sleeve is in shock if its shock value is\\n     * greater than 0.\\n     *\\n     * @param idx The index of a sleeve.  Must be a non-negative integer.\\n     * @return True if the sleeve with the given index has a shock value greater\\n     *     than 0; false otherwise.\\n     */\\n    is_in_shock(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return this.#ns.sleeve.getSleeveStats(idx).shock > cc_t.MIN_SHOCK;\\n    }\\n\\n    /**\\n     * Whether a sleeve is fully synchronized with the player's consciousness.\\n     *\\n     * @param idx The index of a sleeve.  Must be a non-negative integer.\\n     * @return True if the sleeve having the given index is fully synchronized\\n     *     with the player; false otherwise.\\n     */\\n    is_in_sync(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return this.#ns.sleeve.getSleeveStats(idx).sync >= cc_t.MAX_SYNC;\\n    }\\n\\n    /**\\n     * Whether an array contains valid sleeve indices.\\n     *\\n     * @param s An array of sleeve indices.\\n     * @return True if the array has all valid sleeve indices; false otherwise.\\n     */\\n    #is_valid_index(s) {\\n        const min = 0;\\n        const max = this.#ns.sleeve.getNumSleeves();\\n        assert(s.length > 0);\\n        for (const i of s) {\\n            if (i < min || i >= max) {\\n                return bool.INVALID;\\n            }\\n        }\\n        return bool.VALID;\\n    }\\n\\n    /**\\n     * Assign sleeves to mug people.\\n     *\\n     * @param s An array of sleeve indices.\\n     */\\n    mug(s) {\\n        if (s.length === 0) {\\n            return;\\n        }\\n        assert(this.#is_valid_index(s));\\n        s.forEach((i) => this.#ns.sleeve.setToCommitCrime(i, crimes.MUG));\\n    }\\n\\n    /**\\n     * Assign sleeves to shoplift.\\n     *\\n     * @param s An array of sleeve indices.\\n     */\\n    shoplift(s) {\\n        if (s.length === 0) {\\n            return;\\n        }\\n        assert(this.#is_valid_index(s));\\n        s.forEach((i) => this.#ns.sleeve.setToCommitCrime(i, crimes.SHOP));\\n    }\\n\\n    /**\\n     * The Strength stat of a sleeve.\\n     *\\n     * @param idx The index of a sleeve.\\n     * @return The Strength stat of the sleeve having the given index.\\n     */\\n    strength(idx) {\\n        assert(this.#is_valid_index([idx]));\\n        return this.#ns.sleeve.getSleeveStats(idx).strength;\\n    }\\n\\n    /**\\n     * Assign sleeves to shock recovery.  Only assign those sleeves whose shock\\n     * values are greater than 0.\\n     */\\n    shock_recovery() {\\n        this.all()\\n            .filter((i) => this.is_in_shock(i))\\n            .forEach((j) => this.#ns.sleeve.setToShockRecovery(j));\\n    }\\n\\n    /**\\n     * Assign sleeves to synchronize with the consciousness of the player.  Only\\n     * assign those sleeves whose consciousness is not yet fully synchronized.\\n     */\\n    synchronize() {\\n        this.all()\\n            .filter((i) => !this.is_in_sync(i))\\n            .forEach((j) => this.#ns.sleeve.setToSynchronize(j));\\n    }\\n}\\n\",\"filename\":\"/lib/sleeve/cc.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":29.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":776,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"sleeve.getSleeveStats\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getNumSleeves\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.purchaseSleeveAug\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getSleevePurchasableAugs\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.setToCommitCrime\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.setToShockRecovery\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.setToSynchronize\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { MyArray } from \\\"/lib/array.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { cc_t } from \\\"/lib/constant/sleeve.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n// Utility functions for managing sleeves.  Use one or more of these utility\\n// functions to help lower the RAM cost of our scripts.  Importing one utility\\n// function does not incur as much RAM cost as importing the Sleeve class.\\n\\n/**\\n * The index of every sleeve.\\n *\\n * @param ns The Netscript API.\\n * @return An array of sleeve indices.\\n */\\nexport function all_sleeves(ns) {\\n    return MyArray.sequence(ns.sleeve.getNumSleeves());\\n}\\n\\n/**\\n * Whether the combat stats of sleeves are at least a given threshold.\\n *\\n * @param ns The Netscript API.\\n * @return True if the combat stats of each sleeve are each at least cc_t.MUG;\\n *     false otherwise.\\n */\\nexport function has_mug_threshold(ns) {\\n    const all_cc = all_sleeves(ns);\\n    assert(is_valid_index(ns, all_cc));\\n    for (const i of all_cc) {\\n        const stat = ns.sleeve.getSleeveStats(i);\\n        if (\\n            stat.agility < cc_t.MUG\\n            || stat.defense < cc_t.MUG\\n            || stat.dexterity < cc_t.MUG\\n            || stat.strength < cc_t.MUG\\n        ) {\\n            return bool.NOT;\\n        }\\n    }\\n    return bool.HAS;\\n}\\n\\n/**\\n * Whether the Dexterity and Agility stats of sleeves are at least a given\\n * threshold.\\n *\\n * @param ns The Netscript API.\\n * @return True if the Dexterity and Agility stats of each sleeve are each\\n *     at least cc_t.SHOP; false otherwise.\\n */\\nexport function has_shoplift_threshold(ns) {\\n    const all_cc = all_sleeves(ns);\\n    assert(is_valid_index(ns, all_cc));\\n    for (const i of all_cc) {\\n        const stat = ns.sleeve.getSleeveStats(i);\\n        if (stat.agility < cc_t.SHOP || stat.dexterity < cc_t.SHOP) {\\n            return bool.NOT;\\n        }\\n    }\\n    return bool.HAS;\\n}\\n\\n/**\\n * Whether an array contains valid sleeve indices.\\n *\\n * @param ns The Netscript API.\\n * @param s An array of sleeve indices.\\n * @return True if the array has all valid sleeve indices; false otherwise.\\n */\\nfunction is_valid_index(ns, s) {\\n    const min = 0;\\n    const max = ns.sleeve.getNumSleeves();\\n    assert(s.length > 0);\\n    for (const i of s) {\\n        if (i < min || i >= max) {\\n            return bool.INVALID;\\n        }\\n    }\\n    return bool.VALID;\\n}\\n\",\"filename\":\"/lib/sleeve/util.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":9.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":777,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"sleeve.getNumSleeves\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getSleeveStats\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bitnode } from \\\"/lib/constant/bn.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n// Helper functions relating to Source-Files.\\n\\n/**\\n * Whether we have access to the Artificial Intelligence (AI) API.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have access to the AI API; false otherwise.\\n */\\nexport function has_ai_api(ns) {\\n    try {\\n        // This is the only function we are rewarded with upon entering or\\n        // destroying BN5.1.\\n        ns.getBitNodeMultipliers();\\n        return bool.HAS;\\n    } catch {\\n        return bool.NOT;\\n    }\\n}\\n\\n/**\\n * Whether we have access to the Corporation API.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have access to the Corporation API; false otherwise.\\n */\\nexport function has_corporation_api(ns) {\\n    // Are we in BitNode-3: Corporatocracy?\\n    if (bitnode.Corporatocracy === ns.getPlayer().bitNodeN) {\\n        return bool.HAS;\\n    }\\n    // Use the Singularity API to help us find out.\\n    if (has_singularity_api(ns)) {\\n        for (const sf of ns.singularity.getOwnedSourceFiles()) {\\n            if (sf.n === bitnode.Corporatocracy) {\\n                return bool.HAS;\\n            }\\n        }\\n    }\\n    return bool.NOT;\\n}\\n\\n/**\\n * Whether we have access to the Gang API.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have access to the Gang API; false otherwise.\\n */\\nexport function has_gang_api(ns) {\\n    // Are we in BitNode-2: Rise of the Underworld?\\n    const bn_name = \\\"Rise of the Underworld\\\";\\n    if (bitnode[bn_name] === ns.getPlayer().bitNodeN) {\\n        return bool.HAS;\\n    }\\n    // Use the Singularity API to help us find out.\\n    if (has_singularity_api(ns)) {\\n        for (const sf of ns.singularity.getOwnedSourceFiles()) {\\n            if (sf.n === bitnode[bn_name]) {\\n                return bool.HAS;\\n            }\\n        }\\n    }\\n    return bool.NOT;\\n}\\n\\n/**\\n * Whether we have access to the Singularity API.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have access to the Singularity API; false otherwise.\\n */\\nexport function has_singularity_api(ns) {\\n    try {\\n        // This function from the Singularity API has the lowest RAM cost, at\\n        // 0.1GB.\\n        ns.singularity.isFocused();\\n        return bool.HAS;\\n    } catch {\\n        return bool.NOT;\\n    }\\n}\\n\\n/**\\n * Whether we have access to the Sleeve API.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have access to the Sleeve API; false otherwise.\\n */\\nexport function has_sleeve_api(ns) {\\n    // Are we in BitNode 10: Digital Carbon?\\n    const bn_name = \\\"Digital Carbon\\\";\\n    if (bitnode[bn_name] === ns.getPlayer().bitNodeN) {\\n        return bool.HAS;\\n    }\\n    // Use the Singularity API to help us find out.\\n    if (has_singularity_api(ns)) {\\n        for (const sf of ns.singularity.getOwnedSourceFiles()) {\\n            if (sf.n === bitnode[bn_name]) {\\n                return bool.HAS;\\n            }\\n        }\\n    }\\n    return bool.NOT;\\n}\\n\\n/**\\n * The level of a Source-File.\\n *\\n * @param ns The Netscript API.\\n * @param n The Source-File number.\\n * @return The level of the Source-File having the given number.\\n */\\nexport function sf_level(ns, n) {\\n    assert(n >= bitnode[\\\"Source Genesis\\\"]);\\n    assert(n <= bitnode[\\\"They're lunatics\\\"]);\\n    for (const sf of ns.singularity.getOwnedSourceFiles()) {\\n        if (sf.n === n) {\\n            return sf.lvl;\\n        }\\n    }\\n}\\n\",\"filename\":\"/lib/source.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":11.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":778,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getBitNodeMultipliers\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\n// Miscellaneous helper functions.\\n\\nimport { all_programs, program } from \\\"/lib/constant/exe.js\\\";\\nimport { factions } from \\\"/lib/constant/faction.js\\\";\\nimport { io } from \\\"/lib/constant/io.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { script } from \\\"/lib/constant/misc.js\\\";\\nimport { home, server } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { wse } from \\\"/lib/constant/wse.js\\\";\\n\\n/**\\n * A function for assertion.\\n *\\n * @param cond Assert that this condition is true.\\n * @return Throw an assertion error if the given condition is false.\\n */\\nexport function assert(cond) {\\n    if (!cond) {\\n        throw new Error(\\\"Assertion failed.\\\");\\n    }\\n}\\n\\n/**\\n * Determine the best server to hack.  The definition of \\\"best\\\" is subjective.\\n * However, at the moment the \\\"best\\\" server is the one that requires the\\n * highest hacking skill.\\n *\\n * @param ns The Netscript API.\\n * @param candidate Choose from among the servers in this array.\\n * @return The best server to hack.\\n */\\nexport function choose_best_server(ns, candidate) {\\n    assert(candidate.length > 0);\\n    let best = ns.getServer(candidate[0]);\\n    for (const s of candidate) {\\n        const serv = ns.getServer(s);\\n        if (best.requiredHackingSkill < serv.requiredHackingSkill) {\\n            best = serv;\\n        }\\n    }\\n    return best.hostname;\\n}\\n\\n/**\\n * Determine a bunch of servers in the game world to hack.  A target server is\\n * chosen based on these criteria:\\n *\\n * (1) We meet the hacking skill requirement of the server.\\n * (2) We can open all ports required to gain root access to the server.\\n *\\n * @param ns The Netscript API.\\n * @param candidate Use this array to search for targets to hack.\\n * @return An array of target servers.\\n */\\nexport function choose_targets(ns, candidate) {\\n    // Sanity check.\\n    assert(candidate.length > 0);\\n    // How many ports can we open?\\n    const port_opener = program.filter((p) => ns.fileExists(p, home));\\n    const nport = port_opener.length;\\n    // Find a bunch of target servers to hack.\\n    const target = [];\\n    for (const s of candidate) {\\n        const serv = ns.getServer(s);\\n        // Do we have the minimum hacking skill required?\\n        if (ns.getHackingLevel() < serv.requiredHackingSkill) {\\n            continue;\\n        }\\n        // Can we open all required ports?\\n        if (serv.numOpenPortsRequired > nport) {\\n            continue;\\n        }\\n        // We have found a target server.\\n        target.push(s);\\n    }\\n    return target;\\n}\\n\\n/**\\n * Remove any files created by other scripts.\\n *\\n * @param ns The Netscript API.\\n */\\nexport function cleanup(ns) {\\n    const junk = [server.HRAM, server.SHARE, wse.STOP_BUY];\\n    junk.forEach((f) => ns.rm(f, home));\\n}\\n\\n/**\\n * Execute a script on the home server and using 1 thread.\\n *\\n * @param ns The Netscript API.\\n * @param s A string representing the name of the script to run.\\n * @return The PID of the running script.\\n */\\nexport function exec(ns, s) {\\n    const nthread = 1;\\n    return ns.exec(s, home, nthread);\\n}\\n\\n/**\\n * Remove bankrupt servers from a given array of servers.  A server is bankrupt\\n * if the maximum amount of money it can hold is zero.\\n *\\n * @param ns The Netscript API.\\n * @param candidate An array of servers to filter.\\n * @return An array of servers, each of which is not bankrupt.\\n */\\nexport function filter_bankrupt_servers(ns, candidate) {\\n    assert(candidate.length > 0);\\n    return candidate.filter((s) => !is_bankrupt(ns, s));\\n}\\n\\n/**\\n * Exclude the purchased servers.\\n *\\n * @param ns The Netscript API.\\n * @param serv An array of server names.\\n * @return An array of servers, but minus the purchased servers.\\n */\\nexport function filter_pserv(ns, serv) {\\n    const pserv = ns.getPurchasedServers();\\n    return serv.filter((s) => !pserv.includes(s));\\n}\\n\\n/**\\n * Tell the script \\\"hram.js\\\" to resume whatever it was doing.\\n *\\n * @param ns The Netscript API.\\n */\\nexport function hram_resume(ns) {\\n    if (ns.fileExists(server.SHARE, home)) {\\n        ns.rm(server.SHARE, home);\\n    }\\n}\\n\\n/**\\n * Suspend the script \\\"hram.js\\\" to free up some RAM on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function hram_suspend(ns) {\\n    if (!ns.fileExists(server.SHARE, home)) {\\n        const data = \\\"Share home server.\\\";\\n        ns.write(server.SHARE, data, io.WRITE);\\n    }\\n    const target = ns.read(server.HRAM).trim();\\n    if (target === \\\"\\\") {\\n        while (ns.isRunning(script, home)) {\\n            await ns.sleep(wait_t.SECOND);\\n        }\\n    } else {\\n        while (ns.isRunning(script, home, target)) {\\n            await ns.sleep(wait_t.SECOND);\\n        }\\n    }\\n}\\n\\n/**\\n * Whether a server is bankrupt.  A server is bankrupt if the maximum amount\\n * of money it can hold is zero.\\n *\\n * @param ns The Netscript API.\\n * @param s Test this server for bankruptcy.\\n * @return true if the server is bankrupt; false otherwise.\\n */\\nexport function is_bankrupt(ns, s) {\\n    return ns.getServer(s).moneyMax === 0;\\n}\\n\\n/**\\n * Whether a given string represents a valid city in the game world.\\n *\\n * @param c A city name, represented as a string.  Cannot be an empty string.\\n * @return true if the given string represents a city in the game world;\\n *     false otherwise.\\n */\\nexport function is_valid_city(c) {\\n    assert(c.length > 0);\\n    const city = new Set(Object.keys(cities));\\n    return city.has(c);\\n}\\n\\n/**\\n * Whether the given name represents a valid faction.\\n *\\n * @param fac A string representing the name of a faction.\\n * @return true if the given name represents a valid faction;\\n *     false otherwise.\\n */\\nexport function is_valid_faction(fac) {\\n    assert(fac.length > 0);\\n    const faction = new Set(factions.all);\\n    return faction.has(fac);\\n}\\n\\n/**\\n * Whether the given name represents a valid program.\\n *\\n * @param name A string representing the name of a program.\\n * @return true if the given name refers to a valid program;\\n *     false otherwise.\\n */\\nexport function is_valid_program(name) {\\n    assert(name.length > 0);\\n    const prog = all_programs();\\n    return prog.has(name);\\n}\\n\\n/**\\n * Tell the trade bot to resume its transactions.  It can now buy and sell\\n * shares of stocks.\\n *\\n * @param ns The Netscript API.\\n */\\nexport function trade_bot_resume(ns) {\\n    if (ns.fileExists(wse.STOP_BUY, home)) {\\n        ns.rm(wse.STOP_BUY, home);\\n    }\\n}\\n\\n/**\\n * Tell the trade bot to stop buying shares of stocks.  We do not want to spend\\n * any more money on buying shares.  However, the trade bot can sell shares.\\n * The idea is to cash in on the shares we have.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function trade_bot_stop_buy(ns) {\\n    const fname = wse.STOP_BUY;\\n    const data = \\\"Trade bot stop buy.\\\";\\n    await ns.write(fname, data, io.WRITE);\\n}\\n\",\"filename\":\"/lib/util.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":8.4,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":779,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes, crimes_t } from \\\"/lib/constant/crime.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Commit some other crime to earn some income.  We also want to lower our\\n * karma so that we can create a gang at some later time.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Continue committing crimes as long as our money is less\\n *     than this amount.\\n */\\nasync function commit_other_crime(ns, threshold) {\\n    assert(threshold > 0);\\n    log(\\n        ns,\\n        `Commit homicide to raise money to ${ns.nFormat(threshold, \\\"$0,0.00a\\\")}`\\n    );\\n    ns.singularity.commitCrime(crimes.KILL, bool.FOCUS);\\n    while (ns.getServerMoneyAvailable(home) < threshold) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Whether our combat stats are at least a given threshold.\\n *\\n * @param ns The Netscript API.\\n * @return True if our combat stats are each at least crimes_t.MUG;\\n *     false otherwise.\\n */\\nfunction has_mug_threshold(ns) {\\n    const stat = ns.getPlayer().skills;\\n    return (\\n        stat.agility >= crimes_t.MUG\\n        && stat.defense >= crimes_t.MUG\\n        && stat.dexterity >= crimes_t.MUG\\n        && stat.strength >= crimes_t.MUG\\n    );\\n}\\n\\n/**\\n * Whether our Dexterity and Agility stats are at least a given threshold.\\n *\\n * @param ns The Netscript API.\\n * @return True if our Dexterity and Agility stats are each at least\\n *   crimes_t.SHOP; false otherwise.\\n */\\nfunction has_shoplift_threshold(ns) {\\n    const stat = ns.getPlayer().skills;\\n    return stat.agility >= crimes_t.SHOP && stat.dexterity >= crimes_t.SHOP;\\n}\\n\\n/**\\n * Mug someone a few times to raise all our combat stats, i.e. Strength,\\n * Defense, Dexterity, Agility.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function mug_someone(ns) {\\n    log(ns, \\\"Mug someone to raise money and combat stats\\\");\\n    const stat = ns.singularity.getCrimeStats(crimes.MUG);\\n    const time = crimes_t.n * stat.time;\\n    ns.singularity.commitCrime(crimes.MUG, bool.FOCUS);\\n    if (!has_mug_threshold(ns)) {\\n        await ns.sleep(time);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Shoplift a few times to raise our Dexterity and Agility stats.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function shoplift(ns) {\\n    log(ns, \\\"Shoplift to raise money, and Dexterity and Agility stats\\\");\\n    const stat = ns.singularity.getCrimeStats(crimes.SHOP);\\n    const time = crimes_t.n * stat.time;\\n    ns.singularity.commitCrime(crimes.SHOP, bool.FOCUS);\\n    if (!has_shoplift_threshold(ns)) {\\n        await ns.sleep(time);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * Commit various crimes to supplement our income.  Early in the game when our\\n * funds are limited, crimes can be a source of income to help us\\n * purchase/upgrade our Hacknet farm or purchase various servers with small\\n * amounts of RAM.  Committing crimes is also the best way to lower our karma.\\n * If we have already destroyed at least BN2.1, then we can form a gang in\\n * other BitNodes.  However, in BitNodes other than BN2.x we must decrease our\\n * karma to -54,000 or lower as a pre-requisite for creating a gang.  This\\n * constant is taken from the file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/Gang/data/Constants.ts\\n *\\n * The script accepts a command line argument:\\n *\\n * (1) threshold := As long as our income is less than this threshold, continue\\n *     to commit crimes to raise our income.\\n *\\n * Assume that our home server has 32GB RAM.  Try to keep the RAM cost of this\\n * script as low as possible.  Do not add anything to the script unless\\n * absolutely necessary.\\n *\\n * Usage: run singularity/crime.js [threshold]\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Sanity checks.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    const threshold = Math.floor(ns.args[0]);\\n    assert(threshold > 0);\\n    // Commit crimes as long as our funds is less than the given threshold.\\n    await shoplift(ns);\\n    await mug_someone(ns);\\n    await commit_other_crime(ns, threshold);\\n}\\n\",\"filename\":\"/singularity/crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c76631ca-8e4d-48e7-b87f-071d2faf46e9\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/29c889f3-bc6b-4dca-8b8a-bec8e13336ae\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d5e0ce1e-43f1-4515-95eb-45d2c6de22a9\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9ee0853e-6ef8-49ea-abbe-79eb3316fe5d\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/145bce2a-0ddd-4a05-8539-90db400ab4b9\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/857735cd-f313-49b9-8f34-8c2895e6e812\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2243378e-30fa-4a0c-9657-23fbbe0d594f\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/59231ce2-f0b1-47d0-86a1-b2f7dd553518\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a5e02017-b5ce-46a3-a092-f3e182f4416f\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d325416a-24d7-4624-8154-7b3938b6a305\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7f063713-1b46-4ebb-820a-3555508c4f0f\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f4138f8e-8481-4257-b816-8c09091c5724\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b51ef9bb-39b8-42c0-ae8e-1bca4397efee\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a1e0dee9-7472-4ec0-8580-50f087738717\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/aa21cdb5-6df1-4f9b-aec3-2241f2ce6982\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/19f51e7a-5e70-48a5-8bc5-c236b34dcb41\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/34210563-d9fc-4b42-a487-d352eda0de3e\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/49bc05d2-1a7b-4d81-9344-06298bc8bb7e\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c3ba4005-7f24-4335-86eb-aeeeb8d56faf\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/63bea494-60ee-4ab4-9e21-245c96ba32bd\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c1e00096-1801-4f6b-8a39-9eae915c7782\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4ba85bee-0230-41b1-80e6-738cd23d5a8f\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/3f981304-4d29-4c4d-a65b-ce75c0a8e883\",\"moduleSequenceNumber\":68965},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8f574122-db48-43ec-86d3-ea5de8586f09\",\"moduleSequenceNumber\":68962},{\"filename\":\"/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/af6cd013-2be5-4ad4-9502-3326758eba47\",\"moduleSequenceNumber\":69069}],\"dependents\":[],\"ramUsage\":13.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":780,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getCrimeStats\",\"cost\":5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { augment } from \\\"/lib/constant/faction.js\\\";\\nimport { server } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { join_all_factions } from \\\"/lib/singularity/faction.js\\\";\\nimport { connect_to } from \\\"/lib/singularity/network.js\\\";\\nimport { assert, cleanup } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Find and destroy the w0r1d_d43m0n server.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function destroy(ns) {\\n    log(ns, `Searching for target server: ${server.WD}`);\\n    const serv = new Server(ns, server.WD);\\n    const player = new Player(ns);\\n    while (player.hacking_skill() < serv.hacking_skill()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    while (!serv.has_root_access()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        await serv.gain_root_access();\\n    }\\n    assert(player.hacking_skill() >= serv.hacking_skill());\\n    assert(serv.has_root_access());\\n    // First, try to raise our Intelligence stat.\\n    join_all_factions(ns);\\n    // Now hack the target server.\\n    cleanup(ns);\\n    connect_to(ns, player.home(), serv.hostname());\\n    await ns.singularity.installBackdoor();\\n}\\n\\n/**\\n * Destroy the w0r1d_d43m0n server.\\n *\\n * Usage: run singularity/daemon.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const augmentation = ns.singularity.getOwnedAugmentations(\\n        bool.NOT_PURCHASED\\n    );\\n    if (!augmentation.includes(augment.TRP)) {\\n        return;\\n    }\\n    await destroy(ns);\\n}\\n\",\"filename\":\"/singularity/daemon.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/53665ada-dbab-4ade-925b-6bed059b49ca\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f48ed42d-61a8-4fdd-9b37-507bb5024346\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9e2c63f1-b752-4104-965d-bbd90628614a\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/95f993f9-6e5e-4c9f-9842-971c28ad3d3d\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7bed3620-9f91-45ad-b4dd-f988623aee25\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/de0694c2-c4aa-4f0e-b68e-ee050bbd5c1d\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e902178d-7202-4bc2-a674-d99ef12b9607\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/022de1b1-92af-4823-b34c-b4b0d385cab9\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/885f0697-04df-454b-a0d5-2bdd71032701\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a144bcfa-c9e1-4ac8-842b-2cf8d9ca8dd8\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e1273348-16d8-4fbc-99f0-c5b2beb609fa\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/65556364-6ef9-435f-9e6e-0d5ed63c7677\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bb09a0f4-2e6c-4ca5-a92c-8ff2279ab7bb\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c4456926-f7a2-4aa0-92c3-c9c0dada72bb\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/89e47c16-acc8-4bee-a288-2883800b6bdf\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5e3e6d8d-652a-4fc8-a164-fdabde584889\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ff7e7fc6-6bd3-4d29-87df-e86c50d834af\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d8231fd6-57bb-4497-9d44-3d463765bd37\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/256e0f7d-8c4b-4cc1-a0db-e579abe1943a\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/59a2cf74-022a-4141-bf18-b5a06338a94b\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1fce7349-4fc5-4dd6-afe2-dbb66993895e\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b7c24cd5-3533-4714-9cdb-69036300b783\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/edf63128-c0f2-452f-bdbd-a1056b9c797f\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3eb5f698-360a-447d-a58f-3222edb88f14\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3023f87a-59e8-4786-bf97-b3c0e3a03feb\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ece47c5f-a155-40a6-a1d2-17d10ceb24ae\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e2767614-db92-4148-83a8-3f4598c31d7b\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8b54eca9-a51a-4b0d-aed9-c41126c02de7\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b1e3fc73-7016-4576-aa4f-7ec4d53d39aa\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/5ba5109a-777e-42bd-b12f-6b3f3b17624a\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/43ff6081-603d-4634-b4c9-901bafde8f4e\",\"moduleSequenceNumber\":290},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9a82ffad-3def-4450-97cc-3adb0b435960\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f746e05c-4c4d-479c-a6b4-4d4b393b5eae\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/eacbd48d-2d67-4de0-be74-fbb22dd1d884\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/79f30733-d3ac-490a-bc63-86fe500d4730\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/77581151-774f-450c-83d1-887762324125\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/08c3ce6c-7f64-4542-99cf-5543240932aa\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4500544c-ebea-4ed0-be23-74b3e53ad1bb\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/31948baa-913e-40fc-b91a-6764c6aa4f11\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5a090d3c-d895-4660-a8f7-b57c15b58630\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/63e4c415-af23-42e9-82be-5b8e34c72276\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/94efabe1-1a4d-41e3-a3ad-9c981855b8cd\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f52c1f85-9aeb-4ac7-b89c-796f268cf49b\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/8a1e65f5-e31e-41a4-a174-675927a8e8a7\",\"moduleSequenceNumber\":287},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ae224900-394b-4b70-bfae-1acf2b322a5e\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f55c4a56-ec6f-484b-8409-97ba99e734e8\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7486ad87-f51b-488f-a5e4-af355d8293f8\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ad65274b-4481-4534-a2af-aa2cd04aedbc\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ad61ccc6-d484-4134-b4b0-865aed9f9c5a\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4569225a-85a1-4a80-bb93-ab51175d0163\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3ee477b0-8e56-4ac1-b399-14da098e2601\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e130a761-5b0b-4e53-af5a-116addc3727e\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/edbf33f2-9c34-4498-80d0-0ea3550a964e\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/85dcf6f4-8457-4007-b273-42a7a25b3e89\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8fce0590-cb6c-49a1-bb11-4eab5a4a2934\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/a3d6ea70-611d-4634-9e84-7e1b3ba0ded0\",\"moduleSequenceNumber\":286},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a9736098-82e0-46e6-a323-2dd6c9bb56a9\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/18bf8e53-fea2-4019-9118-5e2c80df454b\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/4813f496-d0a1-4c20-840b-ab1ecc630e8a\",\"moduleSequenceNumber\":294},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/854953df-c66b-4abb-a279-fe25f1abb83d\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fe3dd274-02ee-4df0-b909-1e2720b6e980\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e6d86c04-1a89-4a90-a93c-d6ff47c67c46\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/657d97f1-aa94-401e-b549-e3ef1504441c\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b1b9f89b-3713-4bef-857e-1a7788d4c4c4\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/80760adc-036b-4acf-9de6-754ce697836d\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b318b4a1-f58d-4328-8f90-8691ad3d1a81\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b234e2da-fa2b-4d3f-a12e-1fa0516e519a\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bae129c2-ca37-4a49-bb9c-7791d62d60f7\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3c14dceb-dff5-44a5-ae16-923fa085f08c\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/40af1057-b4c7-44f9-853e-dafb12f8218e\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2bfb6c6f-ce10-4cd5-9294-b302c116a14c\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4fa51df1-eaea-4ef5-9bf8-1f6689c0c2a2\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7ed18e7f-b4eb-4fa5-87ad-cb61b353df1c\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/42c91a99-7cf0-4b13-815b-622b3e95a1b5\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5a3e08c6-e664-4c36-a106-5d6fc98080bd\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/21c39bc9-4f3d-433b-8e09-9ff0aa01d8fb\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/be789dc3-c5c8-495b-86ca-e82dc97f20f6\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/67324fb4-07ab-4c74-baa5-2cb3f4ae16f0\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/b13b5ba2-6d64-47d5-9dd7-2a25c6648828\",\"moduleSequenceNumber\":277},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d4b6fea8-c3a2-4797-b07b-9d6998ca8d31\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f6c0b5a6-9825-4410-8985-a5e8713145ca\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/4699868c-f1bb-4256-a25a-f24a26a26ba7\",\"moduleSequenceNumber\":296},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7145daee-c66e-4346-849b-229bbd3dd610\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f3740cd4-290f-4ec5-bd20-1796d3818467\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9e28a1c3-30d0-4eec-8829-73b0792b9b5d\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c0989173-1f32-4a7e-bfa2-5fc4011ae81d\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/aa51c5d4-e12e-4667-acee-d37606bf5736\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/40acfc6d-9922-4c5d-9faa-d7d9b4821541\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/424b4820-060e-4f11-9e12-be52e5c60e96\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/660bac43-72ce-4ad8-852b-2713bcd2d4af\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cd3116d4-b614-4e97-94ea-31539c3821e8\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8cbfd38b-ffaf-4936-b4a0-c89b9b75a34f\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e9dc399f-29c8-43df-a8b8-b57a792aa30f\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/57b1b5c4-8c78-4f15-903a-b1323a873f32\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d1d705f8-caba-4226-ba21-b1094aa1f062\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3d0f57e9-59ce-4173-8604-cb4f20b3a116\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ba607448-141f-4e9f-9581-1db67cd14bbf\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bee93eb2-68cb-4b82-b94d-4f5adc0d148b\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/082eee58-faf7-4f79-a50a-ea5a827f93bf\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f8589efb-81b8-4b34-83c0-7a30be747753\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fbe2e5eb-d591-4ddd-aadf-3ef8197d7bf5\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8c0e1500-911c-4e26-8380-6cd4bb5769a2\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7dab41c2-06aa-470f-bd0e-7132b7515bb3\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/1b2ae9b0-d898-4048-9249-0ec6bff7630d\",\"moduleSequenceNumber\":290},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d15a69c7-c7b7-4d40-befe-aa74dd42ea3b\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bc86dfae-1a54-45a2-8e7a-2e597743825b\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a2c156f7-262b-407c-b345-8643f19e9bdc\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/58e59ba3-c1cf-447a-9534-ff0e282bea42\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/db4ce2a2-773d-471a-9ec6-77eee830e94e\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/15452791-9c3f-49c6-adcd-037ef7947460\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/05d1c709-b843-468e-93db-7b60dd693b08\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ae557238-0903-485f-939d-7dc17e26895a\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/668cd2e2-92be-437b-85fb-730b1072742b\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/38a163e8-99dd-42e8-88c4-6f7f6c2fa73c\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/407bdc26-f9d3-4a2e-820c-40d70cb4bf7b\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/678c4337-ede5-426c-8dc9-1921d5a91da6\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/2a7f9db0-fee6-4ca9-b489-a4e646ecc246\",\"moduleSequenceNumber\":287},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1a4c9f24-0b6f-4309-ae26-9526eec328b3\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d528e9ef-8a36-4cdf-80fd-565dd77e49a9\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1374d731-5485-4d80-aef2-60c3af9632f7\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/71132471-a409-4889-b1e6-5f8b507a56de\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/982079a6-3dd3-4519-8bf6-16c78adac522\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/deca1bc3-ebcc-498c-8b07-126d8baf221a\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/99247a69-11dc-45c3-a7c6-63e442797123\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/78097c3f-2937-4d7d-81d0-8437ba7b7e54\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/80289655-67e8-466a-9fa4-c0fce7b25aae\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/91e523bc-95d6-4f84-9596-1bf9127fc946\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a3c7a3e1-0cb2-4dbe-a821-536768bb8d3f\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/a7e3f039-e852-4f62-abd3-de43bb5aac17\",\"moduleSequenceNumber\":286},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6804cab4-9c4a-428a-9e9e-7ed7ee979c88\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/096a768c-33de-4ed2-82d9-04dec76b80e9\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/fb15cf50-e752-4d7b-9733-1af30580947f\",\"moduleSequenceNumber\":294},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/60211319-abd1-4bbf-a72a-2c253b08addc\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c2e2e360-5129-46b9-b1f4-6518f4b53d1d\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d60a02df-6af7-4ea5-ac76-fee82dc07020\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/68b3ad36-e4af-4e02-acd0-71c47cb7e03e\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5652e350-3823-424c-91c0-0d0c57d403ec\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/030963de-70a9-4b9a-8ca7-f2923787ebec\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/be7bb481-dad0-4eaf-88a3-18870b43c057\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b69f83a4-9c4b-41a2-b093-d4cd22516e49\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f79656e8-007a-423c-82fd-cd39468f78f1\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4f9200dc-1c93-4360-8664-809309d01936\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8d238900-bc26-466c-944a-8534988229b6\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/94033588-f6e2-419b-965e-1e358b66b543\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/98115f2c-5a86-437f-a759-44b01c0724d3\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/683bd48f-4a33-47b8-8cd4-4b7341f200cd\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cb827641-023f-48ed-9d98-4fc28d615f9e\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9b8be9e3-b264-4a08-b65e-4e13ac39eb3f\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6b635d9e-83a6-4ec5-8e14-eaf98ec25713\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/923c548b-0d36-4c03-95e4-4947624bacd5\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d695b24e-5d66-443d-82aa-32fb01f9b70d\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c2e85280-c3f6-4320-8642-7c928081fe17\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/86ca7540-165c-4e17-bcec-582dc34594be\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/52376e7e-8de4-47fb-b9a6-4693156b96d8\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0b18474b-2d76-4f08-9568-7f96301fddc8\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2072d1ee-0c6e-460e-9d4d-a6b7747fcaa3\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2d81485e-f860-4baa-8e04-860d85a60b1f\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2e8c21d5-d5e2-455a-b75e-dd752e32bfdc\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b73ccc07-4f20-46dd-8cfe-20b017a66648\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1b09caf7-d5d3-47e1-ab76-d304e243c3db\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/ecb41d41-a6c0-4a41-a262-3a663ae148a8\",\"moduleSequenceNumber\":277},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/096a5c37-4b1d-4709-b529-59659929a3a6\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8277936d-5400-4620-bce0-c3f8e107af5d\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/3208cf58-9058-4278-b31c-bd191ff8d9cd\",\"moduleSequenceNumber\":296},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5b44c5bb-ee11-4c6d-abb3-fd408f097269\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b5d58e68-54b7-4967-9841-d3fab9c3d93f\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fb8626a1-b752-4ba5-a176-d832dc265000\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3f74a5bd-494e-495d-b5da-f05c73d9dc88\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1af438d9-4122-4383-b15e-538a374c05be\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4d75cb8f-7aed-4b4b-bfaa-d8560828eb29\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b5fac64f-675d-48ff-aee1-482592700c22\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b43dad36-5d36-4c09-b7bf-78ba18b102ba\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ddcc6a7c-1b9f-4017-9964-f7c0fb2a53f7\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d64a00f0-2450-4c27-b627-7ed3099aa90f\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/46f9ecc6-ead7-4a1b-8191-1d7d9e87e00b\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ca7879a1-43f4-4de6-8e1b-b179b16e2594\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/caf992bb-605d-40b7-bcf9-ca11ce2810a3\",\"moduleSequenceNumber\":287},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/95e5ff0e-e9f4-4fb6-9f09-3172626976fc\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b0b1a41d-2af5-4d6d-a35a-9c2e9fd07394\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2e88a592-4448-41f9-8d41-69cdd69259bb\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/623b2163-6939-4005-9bef-daae76f5cf80\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cbe4c966-fdaf-44e5-a586-e6210dc1f14a\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/191793f0-e99a-4b7e-aec1-f338941bf04b\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/80d70eb4-4f11-413e-b279-c8c3f6eaf08c\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e6ccfcbc-b038-462d-8a13-8734e95ff13b\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/eeb49a7e-4738-4346-89cd-f2047f094b75\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2e1df673-5078-4886-8a23-b68825422f75\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/0d863e78-1ae5-4616-a619-97dc8673a49a\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/bb3fb7db-a456-4aa4-8d3c-86b7921372a5\",\"moduleSequenceNumber\":279},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/462e8512-4d74-4fde-8824-ffa3cd4b7026\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ddad0dc7-0ee1-444d-8a48-e56a0e5b70f1\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/35c387c8-dbb7-4e48-8eb6-b75dddf39487\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/980a257b-3bad-40a7-ab2a-3cec5dd67b0a\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/431eb4af-a0a5-4bfb-b331-5b0adf138fc6\",\"moduleSequenceNumber\":298},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0b9311c7-88a5-432a-97a4-9f7d09c2523b\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/be24bce3-5ece-4548-869f-d3352f61947d\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5ea06bf5-73ae-4d93-8868-236c27476959\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2e244ece-2c5a-4396-997c-aa980cf2a255\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9db13292-26e1-4dc0-8fb7-7258d40ee96e\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a8662380-6332-45e8-9164-914ff9c90c23\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/092a5f16-3261-4dbf-8493-3560b1f3ace5\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/52556cce-ae54-4003-87fc-f01f6fbe9970\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ceace9da-8590-4aac-aeb6-c2a61b2a7b86\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1df7e634-1469-40b4-b390-8b7938bc45f6\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/31837836-c226-4da6-b613-af27c35862d2\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/55d466b8-3733-4be8-9c41-85e64ae31841\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/80b07824-025a-404e-9eaa-d0ed3592dffd\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7d5c96f3-4cbe-4f26-bbc5-1e83871505f8\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6691feaf-3d82-41b6-a61a-e39b111cc2ee\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c02a4f06-1cfd-4c7a-9b4c-f820dff70f13\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c212b827-d243-4c19-86cf-ebd6cd17f636\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/52aef1b0-7154-4195-b965-b1c0952e6871\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/33717e83-7428-4b75-a3a7-a55ffa6945d0\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/666f8da8-c91b-4a8d-8345-a52e35c95242\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/20684350-ae67-49bc-83b2-183b9a9bcfc3\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/eed854f2-456c-470d-9c0a-3cd7c85125c6\",\"moduleSequenceNumber\":287},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d8573e04-c38a-4752-8040-12842077be55\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0774fb52-39c2-4dfc-b79d-702f7e5a5f55\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/73ae1bd3-0945-45fc-8ec9-2994857e202d\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/c2c735ee-110e-4854-9562-b00b807c6ab9\",\"moduleSequenceNumber\":266},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c5e202f3-a546-4e0a-ab1c-fa71dcc5ad3c\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/517bd782-5495-4145-ba64-60e4bfff159e\",\"moduleSequenceNumber\":292},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/be0fff6d-d137-4220-a785-a17d5c75710a\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/be82d71c-376c-4e69-a2da-d1d946e0a53d\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4d70a18b-59ad-4994-9270-08400b1f51e6\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/32ea4284-a1f7-419a-9696-ed8f2219a38b\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6f41e214-0f11-4212-a1c7-a127b6573db0\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/570967ab-2cab-4900-94fc-306bcfbd086a\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/db1067d3-2fae-4193-8006-272ad05516c9\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9609b2db-8d6c-417f-a899-2b4c4e42201c\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9f2b8728-bbb5-4b55-b73d-598d4aa38ec6\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e435d2cc-1515-433f-9b53-ba182d77560c\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/48bdbae8-82bc-43de-b7f5-468f47f0b84e\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ef287b4f-50b7-48f8-a53f-a46fda614479\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4cbb65b7-97a8-4069-a0fa-177bb331f993\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/915558d6-3b58-4304-bd45-279748f6c80f\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dbf9f06a-906c-40da-a415-3d72897499b6\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/49eb7182-328c-4b0e-9da6-2850b00aae89\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/fb16c13a-551d-4194-a7c0-09d715664909\",\"moduleSequenceNumber\":291},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fb8229bf-08ec-4590-8705-2b2b5c9cab67\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/06852d53-7795-4454-b153-d674533088b7\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8f10310e-3bdd-4ec0-bff9-1d7bcf6b2955\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/401b0b2b-203a-425d-a43c-aa51561ff5ab\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/21b848ca-3777-4889-93bb-cc2d75983f42\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e3161046-76c8-465d-9a22-9bd8c1824158\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9ed8eef9-e364-4b3a-a00a-32ff8fb9c4ce\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9f943e18-2929-4930-a519-5e96c5d8b97c\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/57b8227a-017c-45e0-b504-39540f1cd654\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cf987f43-4d57-49de-9ae8-7363ce66d898\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/660cfe83-bea4-4ba2-86ce-7c5623470a39\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/521fca89-5a30-4872-a397-eefe955c88f9\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/66f3da99-7e17-47a6-9d4b-49e327379d22\",\"moduleSequenceNumber\":290},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7372d98a-ca21-4435-bdee-63ce3d4a4311\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2204131f-8a2e-45d6-9d1b-af79104375e6\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/310bacb2-8279-47d7-94dd-1236c927f82d\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bc1e63bb-2508-4316-a91d-f5d15f19974a\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a8e14e7a-605e-447c-ad0c-ff4936291023\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/da62324e-8aa9-4b9d-822e-4235e14cd6c5\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/655df5b4-d4f3-40ce-9a14-5aa4cd7ba9fe\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d22c2d1f-2e93-4f36-a952-2b1cc8b8c3b7\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/43e3c7da-cb6c-415d-91e0-7a02c23386af\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8fa6e3f6-c1f9-4a97-8940-7acb2a4277d5\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/eadacdf9-4eaa-4bbb-8818-370806ae1674\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1f2c689c-dd2f-41f9-b6f3-0bd38f20d9dc\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/33c13c31-d847-4e0f-802c-f57260bba90d\",\"moduleSequenceNumber\":287},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/474c5bff-030a-41d3-afe1-d9965af47565\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b2d4ff0f-fe8b-496a-8eac-1c4ddcb725a4\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a13b122e-35ab-44fb-a5fc-01f9668ca50c\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/aeb7e258-58cb-47ef-9566-0345a35e16b5\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fdbe1228-df91-47eb-8bcc-2404e7d93885\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/45d84825-574c-4e3f-b857-0fd920a31370\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9810e789-cd59-4faf-8453-304496000bbc\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/63387d2a-4f02-45d9-928c-8ba2dd2df3de\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/798b52cf-563c-413b-8700-2f894dba9797\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dec5ba49-9b86-4942-ba7e-fdcaa16c8caa\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/728c5752-4f07-498e-ab41-bc83a99472e9\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/d80aca95-f775-485d-8bb7-cee74f486795\",\"moduleSequenceNumber\":279},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ded02966-0ed9-47b8-adff-41d17d104266\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d34bb602-b6eb-4283-b1bb-b6a357cef139\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/74fa6ba2-c628-45d4-a4dd-595de99e51bf\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/5235a92b-5a7a-455d-b621-216d31e9e974\",\"moduleSequenceNumber\":266},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f95fa900-bb9b-4ae7-bc5a-9a7c69440109\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d44f24aa-0e57-447b-8cde-21a3ebdba4f7\",\"moduleSequenceNumber\":293},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/dffe3061-2ee8-4402-94dd-38e078265a7a\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fa282753-2c92-4cd7-bdae-42706833122d\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e52f862a-249b-44dc-9a0f-b8fa3af3bd24\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8e27c639-0b49-498f-999f-e8ca30fd708a\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/81e51d09-98e2-4776-8635-4a862f0628c5\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/86eb78ab-9fa9-4b1f-ae06-5672b4800c8e\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fac2095f-13e7-4e20-92da-0efae18fd2ee\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5bbe551b-4cbc-43cd-badc-f691b1d65a8a\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1471cc1f-a34d-4f5b-908d-63ee55c47489\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a132282f-3a81-4605-8a38-f744d88fea3a\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/663c3d08-26e7-4a36-b0fb-62971cb9d89b\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/e6d426da-0e35-4ce7-ba4c-0bce2b5de786\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/bfffca8f-571f-43f1-818d-b2af52b516b5\",\"moduleSequenceNumber\":290},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3ded5852-9743-49ed-a51d-9295eb9e5cf4\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/36e57544-b16f-4689-94c1-063ba25a8fb1\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d2a1a574-c77c-4b99-b648-3bbe0c54999f\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5422e13b-d728-44d1-89f3-9574192bbe6a\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6012644e-2c15-434e-bf66-c266a4a01aeb\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b010e700-5d43-454e-8396-e3d460007f70\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d2cfa155-727b-4f12-8323-b9789c5c2c56\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b0bd18b6-7cfe-4c59-a0ee-a179596ab010\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2cd1df7e-7d03-415a-9bea-da593be085f6\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bdea3823-2c82-4f6c-82b4-c6783baf843b\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e0e7c6c1-fc3b-49fc-9424-40114568eadc\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/911a5475-1bb9-42d3-8563-fa6d52bc2f45\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/8a538763-ac88-4c1f-b019-03b93d0d10b9\",\"moduleSequenceNumber\":287},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/83602a95-2b71-41c6-b9eb-568bc45ae342\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/eb920cf1-f062-48bb-9d7d-b032f18cc87d\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/18ee562c-43ad-4182-894a-e482fcf5bcfb\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0e41e90d-d537-445d-80d4-70835729924f\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/21b70527-1077-425b-956c-f7bbf1c2df68\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7d473c1b-84b4-440e-899e-2907e8326c13\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e9856eb2-8d2b-48ec-8408-87cc83295f41\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c8c8448b-fdd8-4390-8688-8530f0b7c374\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e167917f-0505-4cc1-af4b-d9e5ef2219b0\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a7e1a9ff-c084-46af-a847-bddd26962da1\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/550cdde9-75e9-44ea-ab1b-379fbc602928\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3dccc3b9-73c2-42ae-9c5a-3d39b61993a6\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5a6eea5f-5142-4b25-8fa0-097f2ddb00d3\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b09cee59-4db7-4fb1-8703-1bed400dde82\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/41c8d3f9-6991-468b-b125-b4ac19edd5e5\",\"moduleSequenceNumber\":263},{\"filename\":\"/singularity/daemon.js\",\"url\":\"blob:https://danielyxie.github.io/58746f5b-0ab6-44a5-b4fa-959650b09bcd\",\"moduleSequenceNumber\":675}],\"dependents\":[],\"ramUsage\":26.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":781,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { work_hack_lvl } from \\\"/lib/constant/misc.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { purchase_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport { commit_crime } from \\\"/lib/singularity/crime.js\\\";\\nimport { join_faction, work_for_faction } from \\\"/lib/singularity/faction.js\\\";\\nimport { visit_city } from \\\"/lib/singularity/network.js\\\";\\nimport { work } from \\\"/lib/singularity/work.js\\\";\\nimport { assert, exec, is_valid_city } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Join a city faction.  The requirements for receiving an invitation usually\\n * follow this pattern:\\n *\\n * (1) Must be located in a particular city.\\n * (2) Have at least a certain amount of money.\\n *\\n * Here are the requirements for each city faction:\\n *\\n * (1) Aevum: must be in Aevum; have at least $40m.\\n * (2) Chongqing: must be in Chongqing; have at least $20m.\\n * (3) Ishima: must be in Ishima; have at least $30m.\\n * (4) New Tokyo: must be in New Tokyo; have at least $20m.\\n * (5) Sector-12: must be in Sector-12; have at least $15m.\\n * (6) Volhaven: must be in Volhaven; have at least $50m.\\n *\\n * @param ns The Netscript API.\\n * @param city We must be located in this city.  This is also the faction name.\\n */\\nasync function city_faction(ns, city) {\\n    assert(is_valid_city(city));\\n    await visit_city(ns, city);\\n    // Boost our income.\\n    const fac = city;\\n    const player = new Player(ns);\\n    if (player.money() < faction_req[fac].money) {\\n        if (player.hacking_skill() < work_hack_lvl) {\\n            await commit_crime(ns, faction_req[fac].money);\\n        } else {\\n            await work(ns, faction_req[fac].money);\\n        }\\n    }\\n    // Join the faction and purchase all of its Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join a city faction.  The city factions are: Aevum, Chongqing, Ishima,\\n * New Tokyo, Sector-12, Volhaven.  This script accepts a command line\\n * argument, i.e. the name of a faction.\\n *\\n * Usage: run singularity/faction-city.js [factionName]\\n * Example: run singularity/faction-city.js Sector-12\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Join the appropriate faction.\\n    const faction = ns.args[0];\\n    assert(\\n        faction === \\\"Aevum\\\"\\n            || faction === \\\"Chongqing\\\"\\n            || faction === \\\"Ishima\\\"\\n            || faction === \\\"New Tokyo\\\"\\n            || faction === \\\"Sector-12\\\"\\n            || faction === \\\"Volhaven\\\"\\n    );\\n    await city_faction(ns, faction);\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/home.js\\\");\\n}\\n\",\"filename\":\"/singularity/faction-city.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e209018e-49bb-489a-9b84-38092811fb1a\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4b62c502-d514-4bf1-927a-6ffb838691a1\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6b9af0c2-d4b0-4d27-8020-2618ace62a45\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/19fb5655-0968-4706-8047-e8fbecc7060b\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d3aa105b-52e8-448c-987c-8b3fe6c90ce4\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1a27a538-952f-4a1d-9360-81b1ceef6f5b\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8d1668b1-3e53-48d3-b0f1-5eca7d2c0fca\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fd547acd-a0d9-47f2-8c55-8772db99d452\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/19cb2e3c-331f-424f-bf5f-770f561b9265\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/44915557-5d9f-4709-a599-0aae68abe592\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ecd13cbf-f4d1-49be-8f18-45bc4cfa2667\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1879703f-b57e-4698-94b4-371264fda5e5\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b6644fad-6fdd-4b49-81c4-357aca79221c\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/78e58ebf-1c8e-4753-bfdb-318ddbbd5036\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7bb7c58a-5988-4cca-a2d2-fea4eee9cb08\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/77cd484c-6344-4098-b226-1cd9cfc309d9\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fe500ad2-041c-4a12-90c8-362580900edf\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9e36af56-2577-4a7a-83a0-02fbcb2b29ab\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/dcca8541-8e6a-4ff7-be00-bc16851fc1f4\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d9a606f8-aef0-4d45-a74b-a9caa467c7ff\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/85f56d8c-614e-4f5d-b116-5188d1fd3f81\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/86c12166-c38c-4ab6-b443-74dbbfbe1080\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3c8d9816-6f83-42a8-8baf-165ad0f64123\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4f4a3f01-4489-40c3-b571-c947ab003e13\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d00648f9-a367-45ab-9d59-58f9a784697f\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/07ea0d55-3540-4c27-b9b2-94a6148b62b9\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dbe50301-35fb-418e-9c17-f6ba082a0d10\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4c07b3db-a5a0-4f9d-a814-e2dedfcbf015\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/5172a2d3-a628-4735-a77a-d46771375dbc\",\"moduleSequenceNumber\":36272},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c6617207-3c5e-43f8-8c96-a3069719bfb2\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ec5afb01-1bb6-43c7-a212-d324a3d15c00\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/4db8271a-3f20-493c-952b-1c0b3b99b88e\",\"moduleSequenceNumber\":36291},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/30b38f42-f8ab-4cca-b2d5-44a0312caa51\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5ecd5370-85ad-479c-9eed-bcddd7e9571f\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e1d06b26-bc77-4476-aff3-ee49508b9f61\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/327c8551-37ae-428c-bab4-78bb78e77f6c\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ebf22209-e024-474e-8e3e-57bd0abe33e5\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e83994b4-c326-4a5e-b5c4-6d7434c51ed0\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0cb65c03-ae0d-4f9c-a1e0-899e87182c33\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b14f024d-c7f5-44d9-8f1f-ba809bce85b6\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8fad5c66-dd6d-4dec-ac45-6bada7fcdb17\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e803f02e-3411-4cb5-8fb3-46b5864a7f22\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/99341d1c-2660-4fe5-a6dd-cd8ab14fafb2\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8cad0ad2-2c33-491b-bf4e-68b4dac22cd0\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/ee2fb4d4-b304-4dcc-9d09-450b53d6fbea\",\"moduleSequenceNumber\":36282},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5d0f3011-a589-4475-8de9-82f7e098e873\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e24666fe-3337-4db8-a4f5-eb2a6ecf2078\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/375a0892-480a-4121-bf29-8dd88a2e8c2b\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7756fb13-a910-4b29-841e-a02ba509e2aa\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f80ae4d8-6c7d-4af1-92d7-0246ec40317e\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/63e2f6ff-e458-482d-b361-d7e760329816\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0e335a7c-7df3-4adb-bbed-412b2f4d9f5c\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1fdbc027-6bd9-44c6-be8e-5ebefedcb975\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ee2ea21f-0dd6-4f9b-9897-9879bf9cbf9a\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/620fb280-34a0-4016-b7ac-d2bc4acbf040\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/d2c99519-8322-4e49-b270-3a8f2da52eb1\",\"moduleSequenceNumber\":36279},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/988be174-1101-4098-beb2-374c908bec17\",\"moduleSequenceNumber\":36274},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f4c0b43f-6950-4070-93f2-f6b4e957ad86\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e26e5eab-6c54-4169-bd7f-88754e12cb2e\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e3185bb7-44d2-44b2-a11a-ef78f20b89b4\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a47ae77a-2ba3-4139-9430-30a28fcce5e2\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/cd542f89-1944-4bd0-ae2b-e4601c89fb99\",\"moduleSequenceNumber\":36293},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9626f6c4-41f7-48ae-b43a-ad38019846af\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/aeebecc6-2da5-434a-a85c-75bcb6918936\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/12af03df-0023-46ae-a6e6-6977a63e4446\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1adc6551-c47c-4daf-b994-a92639349ea5\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f27c12cc-0f98-43b6-b026-0748febcd839\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a3858366-422a-4048-ab7f-ea3c55f93c75\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/faea7f5d-cc96-4cab-b02d-e0d484745a07\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dd374889-e7b5-4057-9e55-bfe1c6473dcc\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/375e4d53-6c4f-49f7-a683-cf7ad6d00a17\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b8de799b-ebd9-45f5-80b5-4ad509889329\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7184cb27-b065-465b-8c8d-edd072f21bd7\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9d926668-cd8c-439a-a7d1-d7333a1f14c5\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bb391a34-f9fa-4acd-a349-d8cc113c0b1a\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/81b7f35c-12af-4d3d-8cff-1ceb72047da5\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/761cb4f7-06fe-411f-9504-5475ba3d8afc\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3ef7eac1-673b-4fef-838d-97183c6b9aeb\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f4456fad-24c2-46cc-b214-4de82a53dd16\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/542594ea-db57-459e-9e07-e868cf3b1840\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2da27706-fee7-4bbd-a549-987ad64a8528\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c99cebd3-0b5c-4b4d-85a2-4e446f99c998\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c65a06a9-f46a-49cc-8ba8-c1d66c2fba57\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/567509b0-0b93-4700-a72d-7d16414fed84\",\"moduleSequenceNumber\":36285},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d968240f-6598-4ecf-9c53-343f820e240f\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2dbc2e49-5b81-43e6-bdde-5d4a34db1526\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/109eebc8-b63d-4b83-ab9b-b3c87c5e675a\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/97e0ad4a-fe92-4430-8b95-423359927768\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/af87f391-b793-42cb-a44e-72e0ab1b3ae7\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/01876f26-6cd0-4a3b-9d9a-2794b9bbba41\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f738ed9c-46a1-42c6-b8df-fbc466886494\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4698c827-abe5-4cb2-addc-dd992926abb0\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ef901627-d197-428c-81e0-646010f8395f\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d6c6028e-0960-4947-af51-6bfea45fca04\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/510bdbb5-c36c-446e-9bea-cd25e74dbccd\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/035d58ce-3004-4d5a-9f1e-f605f4865c47\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/b6764a6f-8991-4b19-ab07-41aa7fd87156\",\"moduleSequenceNumber\":36282},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/03f8e8a0-c74a-48e6-a017-92abbae8981f\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b2d2ec7d-6c0e-4f6c-9db8-f7dd7d88f7d9\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ca28cc67-a889-498b-922e-a69ce06449b5\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/94c9cc1b-c890-4282-904e-d1081b6ba31b\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1ea47382-ad49-44a5-bd9b-ac7553f4af07\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/23b2498c-c0f1-41cc-ad9f-cd9c03aa854d\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5409120f-c338-4be5-837a-05f4de329b2f\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ae2829b9-8507-4634-97ff-21e607ee9262\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9f02f242-131c-46fd-8dd3-f200d3cd7913\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7f65a93e-bdca-45d7-b4bb-2827f55316db\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a5acc9dc-1b2b-4141-aa40-0c491ffac16c\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/b94110cd-ae9b-4e3a-849a-c7a31286d9e4\",\"moduleSequenceNumber\":36281},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c72d21bb-8312-41f0-8627-6b12b9425fae\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9f07e114-1e47-4121-8045-a2e22500f3d3\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/0940d613-00ec-4891-a147-e2df43a40fcd\",\"moduleSequenceNumber\":36289},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/381b3a36-a7cd-4a23-936c-fb3ea9d1be39\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f8741964-ee27-4190-aabd-71691cc87a00\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6babcb71-12b1-410c-bd74-92ffd1fecd7c\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/11990848-2d16-4e38-ad0e-8216581a2643\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/42ef7c75-1311-4923-9458-57fde6c04b15\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/02dd667d-eda8-4193-8d8f-41bae4b852e7\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5ce9a8d9-232c-408e-a49a-48d103b0e4dd\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cc18044c-1866-48ae-9715-05b565d233ff\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/28c65260-62e7-4d46-94d8-e784c0d3f5cd\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8b578f4f-723d-4893-ae0d-6cec2076c16e\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b503ab80-38d3-45bd-90dc-9f0b2b289e13\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a67cfff7-f2e3-4c96-bb1f-0467c0334813\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/eb399fef-f2f2-4de5-b50c-7e838411836b\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/14efcf29-e3b5-48cf-b860-4b6ac431483f\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/41948210-2055-47ab-91ce-7c84e1beb8e8\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/20909978-5fa4-4c4f-8edd-9ef640ca4a1b\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/67c185ed-fa8c-456e-ba12-1dfcaf36769d\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/84fa1218-23d3-4801-9f94-6812138afc05\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/de40810e-186d-468b-a383-e3c7a4e24b7a\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/544ba9a1-92d8-4d4b-86bd-9f25e4aa6e68\",\"moduleSequenceNumber\":36272},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fa3e5170-240d-42cf-b26b-9d908bf37f7c\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/17b6511d-3652-45dd-9af6-ef7128f8b91d\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/63a3d044-bfa5-4f12-8c31-50248acc3213\",\"moduleSequenceNumber\":36291},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/987d73a8-76cf-454a-a353-b1833aa11469\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/39ab0eca-5cb4-4ca9-9106-77967196824e\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b5bba0a7-a625-4af2-8681-aa6fb132f7d1\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/37bdaacf-1e29-403b-90a4-9d4bd674e147\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bd038517-fcce-4b16-b2a9-f2e9507f1886\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/56f9f63e-6912-4571-87e5-2310163b327d\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e5ba79ac-12a9-4f0e-a9a4-e2816b41838f\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3b181d46-aaff-47ad-b720-67b58b8d365a\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/68b97570-8b87-41a3-9e53-c67c7591a735\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cd3cc6f9-364e-465d-b8d0-0da8deb2a2fa\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ac58d99f-9e44-4d14-b6b3-04f9ca733b26\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/29b940ce-f619-4c3f-b2ee-fe0bda784218\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c4c321f8-cdc2-41b5-9da6-4c905eef662d\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/724182d5-f1a2-4c64-84cb-a8d4c887ab8b\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/24378f50-8928-43e9-9b11-76fff69d8e14\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d6a91469-bb35-4c11-906c-dc6d54c09c33\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c32c3549-a186-44b2-ba7a-b9fd08986a0b\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dce6ab5d-8c39-49bd-b4c8-488f51fe3657\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0806447c-5d3e-4089-9cd6-69e1e2ca502a\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/877c41f5-bf9d-495a-93cf-6ea2080897f5\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/de0d1f3e-a82c-44d3-b4f1-1381a3e4e00f\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/223c7ccd-9f6f-41f2-b783-5b00250fa58c\",\"moduleSequenceNumber\":36285},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9b46202e-5af6-461a-85ec-3eab7de757be\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ac77fe16-6955-4481-9820-cb7cbe977434\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/476b268b-904c-48d5-8be0-db4700b66699\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d294dc5f-5f20-4d16-b5fd-d5af1c627d39\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c4c142c4-bcbc-44fe-b26d-f574fdaa4979\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6e4ecf25-2ef5-45e6-b6f2-12598471b4ff\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/994e0fd4-46fe-40cd-a0bf-3eafe8485293\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/83f858c2-a082-44c6-8534-0a076a537a83\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/416f288b-5d91-41eb-848e-cee6d3515052\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a90d2de7-dfc7-4cb0-a918-9f8f60e6312b\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dacd2cf7-fd26-49c0-8a17-4af1f47b9711\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/497d33f9-eb1f-4516-86d6-6c90d7299724\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/9e6b8a2c-ed78-4b59-880f-b64d390cddba\",\"moduleSequenceNumber\":36282},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/187939fc-fd50-4051-b18a-0add68cb2b3c\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8ca8a560-dc98-45ea-82ae-0d372f5eeeba\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fb198b82-e7e7-432a-937c-97cc37622697\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6ea20527-8571-4d48-8408-2350bbe3268d\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f1482a3e-5430-4eee-ad36-a848e6ee8dee\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/dbd2880d-2d5a-44a2-8d80-5bc739163c08\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/198390d3-fd17-47ed-b6a1-66a6efe7a987\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5387c09d-0310-404b-980f-588c53ba0fa2\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a6fe2afd-d6eb-448c-ae59-1669a97e1754\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0f1983fd-71af-4105-a8ce-7347c8b09480\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/41279245-5910-4d04-9555-95b74abeef38\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/914d9641-d09b-42dd-81ec-afeee38182a5\",\"moduleSequenceNumber\":36281},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9f2359d5-04a8-4691-85ab-abf48c935e14\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/02daa9af-e9a7-4c3f-83fe-377a4553b47d\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/11481b5a-3e0f-48d2-bfc5-84176e6916cb\",\"moduleSequenceNumber\":36289},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1f8a296e-cfdb-4084-a1a9-84258a5d63c5\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9e26c81d-adc5-4e2b-91f4-6d12de3a7b9e\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1f4ebf67-8993-497b-9515-44f6d986f7a8\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c9b0389f-8698-43df-bdd7-6ad90aaa9608\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/687b0fbd-c7f0-4a62-a889-6507d2fba869\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8e25d8e8-e601-493f-ab44-9fbae241e50c\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c18341a7-a90e-4a42-8e17-c2da74a8814a\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/955cbda7-c344-47d6-8c74-bbfa4dd99b52\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/534f723b-ebe4-41ff-b1dd-65fca01df3bf\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b432a74c-393a-4464-ba30-d06e1db544f3\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ae4dbe54-e336-4a7b-850d-3074f32addc8\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ade977f2-4059-47ad-a892-0005bd48ed00\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ed52fa7d-be6e-49a8-99be-e3fc392ff03f\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/63713785-be14-4331-ab5b-77a85a23712d\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/dd547992-7c9c-4ca1-bfc2-21f64c2089df\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ba5f0304-081e-4f09-86aa-50b5955df858\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1b8ffe1a-cd5a-407d-95cb-e33fdd56b879\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0c5233f4-d1f6-4d5f-b5fe-5a162307a0ad\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/85b11cbd-0633-469b-ad91-e5042f0902c2\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6534d357-019b-4e80-a67b-05a4c3af0fb7\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c38d14be-f603-47e3-b107-83231e838103\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3f0af1ce-abd5-4805-9fb8-93c06776d423\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f928563e-7678-46b3-a0f2-50f3b7e3d30a\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3ae18bf2-5bfa-4cc1-bddc-62a78a60fdc3\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e5a84893-56d8-4428-9d5c-99f34d6fa98e\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5ffd3557-708b-4777-9cc8-8bc3e33e2537\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c7296e44-4a82-4f5f-99b5-16ebbfa7e89a\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9761e233-0554-487d-b9a1-4e33a2c60b49\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/76337f3d-4c84-4631-9c41-2c2103026c9c\",\"moduleSequenceNumber\":36272},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/40245b56-26f6-4d1b-bf57-0ad9f4924b78\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/db5da185-67af-431d-ab47-2e47f314e71f\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/0691ee0a-7c2f-4b97-9662-9be8bad656d4\",\"moduleSequenceNumber\":36291},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7e344061-f799-4be0-8a9c-66f19185b0b1\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/754038cb-e4d9-45a2-8f41-3065b98480ba\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/52c22bc6-f73a-49d5-b1b9-a0995f009497\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ff7ee8a7-302a-4a70-879e-1b46dd173e64\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/46955d2c-5a7e-4e92-a7b2-bb4e39345cd8\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c138d213-6c14-4a51-827c-beb10669b6b2\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7186da06-49c0-4ec0-89d1-433f0d0cdcf7\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6c8e2b6e-4dbd-4d7f-bb5d-7c374b7f9ef7\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ff2dea44-50c7-4ddb-b8fb-344adccf0fc8\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1cfc4864-65ac-41e3-94c2-8d80ae04bb69\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/603b1747-cbea-4b5c-a5bf-02e8dc8588e8\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1a2787e8-4f5c-47da-b8bf-3737b062fc34\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/5bede80a-8848-447f-91d4-cc96659e14ea\",\"moduleSequenceNumber\":36282},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1e53c8b0-431f-451f-9e1c-f885e9682d39\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/05372188-6f0e-4931-95d8-3046d7b13010\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2fbd05c4-53dc-4009-a3f6-b491ecb1f84a\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d221c3f8-02c4-4571-b867-83440872dd8a\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7743916b-4c12-4e77-a9f9-bb65a5bdb3b6\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6d598506-7bb4-4587-b2fb-b55a4c5d34a2\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b27c4603-1704-4246-9c4f-958d2396ed67\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ed03f76b-dc2a-4cb2-a346-48d7e31d9a99\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/86056a7a-2f40-41ea-a61d-8e9e66d53d79\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a978743f-2edc-4a0c-9182-7b6e1b2256bd\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/554d6df4-62be-4bd0-90c0-4bc5ec72a349\",\"moduleSequenceNumber\":36279},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/e0e7f1f1-f2aa-44b5-ae27-b1f368b2d6a2\",\"moduleSequenceNumber\":36274},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/883cb15f-517e-483a-9089-b8ce86781e2c\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e6fdd6ba-6604-4559-aa9c-a0c7b0525f2a\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3c8b1051-fdcf-467a-a4a1-53490e5760f3\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9d54dc13-e22f-425d-b8d6-6e6c5643efc1\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/daeedcf1-d9d9-4c6c-9b48-0bcaf9c47fd5\",\"moduleSequenceNumber\":36293},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ed47f951-b9dd-4d12-9ade-baf720ce8597\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ccf474ef-cf4f-4608-b880-5f3d58d8ec79\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ea950dc5-f5d3-4592-a703-bef3b72fccaa\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/11be71b0-ff11-42c7-ae2e-0aa0476ffaf1\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cb8e7318-c6f6-4298-b3b4-690d29f029b8\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a2c1f18d-c018-49da-ab3c-47235dab8346\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0a4e1ecc-42d0-4083-9d5a-87d027686045\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7dfaa4d3-0e93-4941-9ded-8911c20f127a\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0cf325fd-97c9-4c25-b216-597f15fb0e1a\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/91886db0-3005-4cbc-be3a-2ce729026a95\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9d294f1e-e53d-4643-9455-a0ccb6f6f8ab\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ac10c0e3-3ffd-44f5-a729-ef6d53725d3e\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/21cd8c00-08d3-467e-a871-e7223df187ed\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1e6d987f-6f35-4533-b290-9ca1ac4d9de1\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/171d9358-e0e4-41a9-b65d-33b6a358efad\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2db5c7d0-8157-4545-a5b3-b291f28950a4\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8cc5e1dd-4cf1-46fd-998c-9c9ce9b58509\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ffb59c15-9985-4f50-b8d7-25f32b91b254\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/87572c86-2531-4c87-9706-dc1d17785060\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/88747751-6de8-44fb-80e5-ff5f5b333653\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4863f2df-5095-46a7-8fa8-84cd0a38aa29\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/5397ee4e-f56b-464e-9f21-8a31434cff9d\",\"moduleSequenceNumber\":36282},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8763b7ac-355b-4363-93cb-6d8ed1645b69\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/65163712-7f99-48fc-8aea-013962272e3b\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/772581ac-883c-46c0-a882-a5c3954aedff\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/da401ab7-7afe-416d-b78a-15000b2a817a\",\"moduleSequenceNumber\":36261},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9057e970-88f8-4349-8653-435e0acb2e6e\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/d1688e2c-c867-405e-9787-c29dfb9c60f7\",\"moduleSequenceNumber\":36287},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ddac51aa-3049-4b9c-8b68-00bafbb9c2b2\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d9b2f068-ca97-47cb-bf5c-451b3bc413a2\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c764adff-ce95-4a8e-a730-d1ff63efa2d8\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bff5711f-021e-4f0d-9ffd-bfe6ff0bf0e7\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/46b54247-ffc2-4e69-968b-c95f14242d9d\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/807deed4-75db-49b6-9b64-803e332fd7dc\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c193fba4-999e-4f44-a8a2-0b0de2ddcc1b\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fce266c5-70ed-4aa2-a2fd-bb8972671e60\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dc059c7e-bd0d-4d1f-8505-90a68d924dc7\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e1e873a2-479a-43e0-9715-af8c2b7ed2e2\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/e256a595-38c6-4b27-b587-df1e2e686629\",\"moduleSequenceNumber\":36279},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b127f697-86b3-4199-8fdf-0ea55b103967\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d465b851-600b-45ae-957f-0b62a978e402\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3bfc6c6a-d125-4e39-880b-7551a1d31f33\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/00d58162-e0d2-40df-9990-9ec4770a3e79\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a061c262-6703-4596-85af-4cbd7aa1d7e9\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/bd4ea41f-47a9-43c3-b58a-78254da645b3\",\"moduleSequenceNumber\":36286},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/043d9947-e9f1-4a11-a847-5bf66294d44c\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8ffd7eab-f73a-46dc-8b2e-dc5a613ba6e9\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/031df58d-81d2-4e87-a51b-c9e7ff9ba2d6\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/17598178-d990-4ddc-9dd5-8606a5ddc55d\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5a3b0412-24a0-4fe4-92d0-240f2c843e5c\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9321ff68-8f28-45ca-8eee-bba55c2d1148\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/357d15be-9b84-4287-848b-5d3241f0e28d\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/18e189c8-d8b9-442a-8d10-605c3dd3edb8\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7ef1beb1-198b-452e-850e-3f0c4b49e644\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/600b9164-9a89-4725-91dc-26446a8567c9\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/46fe268a-bfca-40d3-9a68-ad35ebbcc811\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/33bf6054-77e9-42ad-86c6-ffa1bc2de13f\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/baff094a-5abe-4d37-9d09-262757e861ee\",\"moduleSequenceNumber\":36285},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4f52c9bf-eb15-4e56-b661-fa8234eb7710\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/efe4f133-05f0-4c34-bf76-39adf35e2173\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a923ad27-d6fa-4bbe-ba04-0f5cb5172327\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/061be962-ff1d-45d6-9b9a-10c65107a2b6\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e3b60215-c76d-4506-81c4-4ff077834397\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c8c7421b-fecf-47e8-99c7-fed39727e5f7\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6409a853-d4f9-41af-b586-231f0c90d387\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6acc9526-bf3b-4c43-96e9-a28005aea3fc\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b12db29c-1560-47ea-a880-462e1d807c90\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3602547a-8889-4e9a-96bf-4ee8433f1c8d\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ecc4eb93-1907-4003-8d93-ce8abb4e3d3e\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/823b00dc-0422-4d6a-acb7-e43d986aa2c3\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/4e8d3125-7b8f-4936-a5d6-901e661aea36\",\"moduleSequenceNumber\":36282},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7e5556c6-c472-49b9-8355-93470f3c23df\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/41c004e3-58a1-444d-9524-b4f67ee625a3\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/951d85d0-70de-4044-9a67-5e2e3bece8e7\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6eeab941-e6d2-4d84-95e7-98bdee1c36e7\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/30cb19aa-4e51-4e3e-88e6-2b238c774635\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/21160afb-0d6a-4b5a-b93c-d1aa056019c5\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/cb2b0f5d-6bdc-44bb-8acb-eb49a8e2f1cd\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3bc280f4-6176-47b3-8964-cf331fdb1293\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/17102fc9-e462-4fe9-a20e-3421ac793756\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e83d858c-1d68-4aec-952e-ced8e0a68821\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/7123583f-98eb-43a8-ac7a-44a0166547d9\",\"moduleSequenceNumber\":36279},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/dc8d8336-22f4-4f18-8b7b-a767c6a4b25c\",\"moduleSequenceNumber\":36274},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f1f74abd-10ec-4ad4-98ea-6bb967d5887e\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9482e11e-f1a7-4134-a640-ac66776b2ac1\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4bded46b-4ccf-44ad-8c4d-7c2bbc6c9fc9\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/2a0d9eed-8006-42e9-8a7a-ea625ce0607d\",\"moduleSequenceNumber\":36261},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/d3f55d19-4159-4f30-99dc-e22f3747021a\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dd6e050f-75d4-4d22-8ba3-aed14d88cb26\",\"moduleSequenceNumber\":36288},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3ad04f28-4519-4aa7-91f1-e768f539ada6\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ab1d2f39-0ea7-4296-a726-d7e1d0828353\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b7ff9151-9fd3-4bd2-9fc0-2b963bcea9d0\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f22320f9-5ae6-4da8-adb2-c463403742f0\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/481f4daa-2e95-4d58-9856-f64e901bf0a8\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8d85bcf3-3b65-4632-b37a-881f909753f9\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1110acf1-d06f-46c5-84ef-ad996e5ce977\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6ff777d6-fc13-43e9-a79b-d422150bd80c\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/53b565d6-28ef-4a50-802e-144f97122672\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/79ac2f81-380c-44fb-8f04-5c0ae90908ac\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f22febdd-bc54-486f-ac4d-5b7bc5a37c6c\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1026e2d0-e7bd-4ada-910d-de476405d994\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/982875a8-a669-4548-b876-b953efe8b196\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a16fd647-aba5-4f65-b0a9-2365eda7f254\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/67568e04-215d-437c-951a-529c9a5c90ed\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0cad07f3-cef3-4e87-846d-15f8d1d6fd06\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/06810499-3daa-45e9-ba4d-34ea8283e4a4\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d61b248a-5b54-442c-b4e6-a0c451020ad5\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d0c7d91e-2349-4092-bb6b-f45c8c13450f\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fb444bd6-4a20-4dbb-9a50-a1acf01aeef3\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c3840955-a5f1-4d45-95c1-fc802f4fc866\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/356f848e-5e12-441f-a7e6-b68e5fb3d545\",\"moduleSequenceNumber\":36282},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4c2fa95b-bfee-4195-9da8-ae9ced3f1cfd\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d12fc87a-5032-4b34-86bb-e8540dde1c46\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5b6cf583-4e0c-465c-90ea-355f573304bb\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/d0b39ae7-6a45-4b0a-b982-7b7b04de4ca5\",\"moduleSequenceNumber\":36261},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/14e601a2-ed30-48fc-a83c-20a1f274a20a\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/1bd5fecf-0d73-4ace-a45f-b0f74525547e\",\"moduleSequenceNumber\":36287},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/940a0884-3526-49eb-a553-69dc2690becc\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/215be8d6-c7c4-4108-a38f-cb142f89d2df\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6f96c309-79eb-4c4d-8cfb-d60a9390697f\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/11fd6492-14ef-42d4-9e65-d8a73cfc4124\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8abcaceb-4763-4fda-b883-4d5e6e1e68cb\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fa994405-a50f-42fc-911c-e8e4bc1cbf7c\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c7c9e32e-c954-48e0-be29-c431e81f7979\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d77dd10d-6781-4322-a621-1f112ef53ab3\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8484301e-9d05-4481-81f4-88470e4ead01\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3a354b1c-1d67-48ef-9b15-131d4431d984\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a3094c28-93e4-4a88-ba5c-bfd2e4374d4a\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8728c989-c432-4e64-bd2e-33f3f3d7e7ef\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a1bc3731-bd8e-4571-93e2-856473e898ba\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/400b3310-cfcd-4ed4-880d-79cd388b5c0e\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3c559d60-690d-4043-9732-bc0f4bd09792\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/cd99f355-18a1-4ab1-be69-1fc863960174\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a5a9f513-806e-460c-940e-6816ebe4ec70\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/55bccf5a-4b77-4874-893c-11f572f3bd3a\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cbb2b9e1-02ae-456a-b5f7-6a4be7a1257b\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3b6546a8-e1ea-4e21-9044-939387232d4b\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e132ae60-eb71-46a4-81be-651fbc1bb0f1\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d4aa36a2-1c5f-4f58-ab9d-f0ec2e0026e9\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fef8ddb5-b4c7-4f49-a0c0-2b8e9d5113da\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a7889dba-67bf-4fb8-9f0e-80ea2f798e4b\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/76af46b9-5022-4c97-8623-59edd66ccefa\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0b4a7897-6188-45ad-99d5-4c0bc525f959\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ea5aeca9-357f-4886-a77d-c72188ae4088\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/be582c48-adc5-4734-acae-caaf3dd177ea\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/4af02b6d-7357-465d-86a7-85ea1b70d94b\",\"moduleSequenceNumber\":36272},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/60b1cae1-ee4f-4d74-827e-422906d42338\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/52c1f4dd-25b1-453f-911e-e066c7c79888\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/2e121e26-a564-4550-8e44-7c7d3025b508\",\"moduleSequenceNumber\":36291},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/142b16f9-0a20-439c-b046-00f6f3ad15b3\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a7629772-2dfc-42a5-9bb9-de095a998d56\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5a6ccccb-52ca-48e8-8eec-eb349fbc8abb\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/40269279-72f1-4d3f-8fc6-40fc1d4a3671\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4a78a171-7cc9-4533-b7b9-66ad33cdd6e8\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d977a56b-bad7-43d6-8ea8-7978e2b2c6cd\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e60b9c96-8dde-4adf-907d-f5b32e19ee8e\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/beec2879-aae2-4d5a-b6e8-9f09556a3b63\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dff9a605-aba3-4405-a769-50142ef2f3e2\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5b7bc29e-7d60-4d93-bc76-85bd9a253b1c\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e1469f67-6006-461a-aee3-c7585b7adb24\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/83519f54-306d-4893-8c0c-1698f2f00907\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/31652cb3-79d4-4ce7-a00f-a3f70953185a\",\"moduleSequenceNumber\":36282},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a46c49e9-1795-4e61-934a-9c62ce5b83ae\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f6bd64a3-3eda-4ef0-aefb-327c97c53850\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4cfb8427-0f48-46ce-9756-6aa7bcd6176f\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/23a7151c-4607-4814-b826-8eda50f74295\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/87e94f6a-fbab-4a51-bd84-db78e21de543\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3f50aca7-23ca-4a3e-8d97-639a1166c87b\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dc44cc56-ddae-42d4-bc94-85b421b1aca8\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a7a628d7-2bb6-43c5-a328-84f7fb19790a\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/94d1a50a-e0ad-4a4d-b6d4-c4c0c85bca91\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1dbf5123-dca4-43ab-968d-e5689805edbe\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/3c6541ff-0330-4fc9-bc5c-8a74ad5f2d53\",\"moduleSequenceNumber\":36279},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/7089f5c3-76cf-496f-a835-c74a28f2a053\",\"moduleSequenceNumber\":36274},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/18298418-ce3c-4d66-bc4c-d0dacb62cd32\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6c2b24cb-5f60-4e5b-a496-e04e611bb333\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/05aa4d15-b9fa-4c61-a73f-6fc76505520c\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/34e8f5e9-8516-45a0-a85f-296bb4e46b40\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/359bd934-ef6f-4446-ac05-0078f8da367e\",\"moduleSequenceNumber\":36293},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c665e003-8482-43ea-a695-d88db4471900\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/90f16f0a-52f6-4b97-9b6c-71b5dfdc6d3c\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d93f2a77-5d2c-49d0-8d82-8c290d2d8c3c\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/921216ff-aeb1-4591-bc42-29337750d942\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/684574fe-8699-42f9-bd23-64083212c945\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1e68c6fb-5810-46f6-b4d2-b5f134919f3a\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2cb387f6-d0fe-4e41-9f2e-30bbd50e1d3a\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a36c33d0-3071-4eb6-8fc0-0b11a4783e96\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/16093335-1def-4326-bccc-d804bd503150\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9300f3d8-304c-4f9b-880b-74a00c33c7d3\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/21268ac1-e5a0-4c02-8d49-0cdfa20fe375\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4689d8e8-fdb3-4d4d-86e4-5e2a12c9e66e\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c51fefad-b820-4998-9386-69a830d87c0f\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a212f28e-03b6-449d-8011-13603fa40243\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d5b510dd-98fc-4556-a616-e2e8bd7b4f85\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/251dab5f-d015-4050-afda-2dca1a03eed1\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/74c235a6-3b19-4101-860d-795df954d215\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/38a37cfb-efa0-47e6-b6fe-7c13cb63f9b6\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ea8f6bb1-5788-4fda-ade6-5560f289e511\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3b16c449-8795-4298-a69c-0856ffe26afe\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/15bf046a-3508-4d25-bf08-5ff6db9b2a53\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/b0b8b218-646a-4ab1-82fc-4f3de9e832ce\",\"moduleSequenceNumber\":36282},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f9ab69dc-d831-473b-97da-d1b46662b4df\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/99a53e2a-5a77-4f79-b134-c30c55210379\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/96c8d34e-f7c9-43d7-90c9-c750576b27ed\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/6b81b28d-8826-478b-b307-83c609352fac\",\"moduleSequenceNumber\":36261},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6cdeea6b-1ea0-4894-a0de-511e47e08f67\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/fd10677b-b498-4185-800b-52b22d837cc3\",\"moduleSequenceNumber\":36287},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/aba79e1f-b365-4ba6-a54e-bef1a79bf7e1\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c7c76209-b7d5-4857-93e9-620970b497ba\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6d021bd8-b481-43f6-b513-6adef4fabe9e\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/64c83aab-c6ea-48f5-9f7a-ad4566298664\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c23a95cb-e468-4660-acc6-8aa190029426\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9c738d49-39e2-4a30-89a7-cc3b7163ba42\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3aa9efba-db9f-4749-95a8-1706ed00879d\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/52aa72e9-de29-44bf-9a5b-1cf54bda7c28\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/34343d3c-8a2f-4f2e-a1ac-395399b3abaf\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ff44f320-f243-49ce-995e-f8236f81a94d\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/4ff43358-ef7b-4409-92a8-ba76a5496ff8\",\"moduleSequenceNumber\":36279},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/befb6be5-96ba-47d8-b3e9-f678cae34abe\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f10cb69c-4ff1-4dc8-895e-952014fd614d\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b1f7ffb7-61d1-4600-b873-7cf2a975edb0\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fbeae471-2ffe-4c18-9b63-7ef0531d06ee\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/65d547e2-33f8-4d40-b20f-b9ed72538681\",\"moduleSequenceNumber\":36258},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/2663fb56-d9a9-4a88-aeb8-020d0741dab6\",\"moduleSequenceNumber\":36286},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/60485985-08f8-4f49-a084-df0942786ee1\",\"moduleSequenceNumber\":36275},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c10df9f7-333e-4af1-99f4-ac58d2d28e52\",\"moduleSequenceNumber\":36273},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/206f1140-0a1e-432a-aab5-504e34236d7c\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/65525866-d03b-4cd1-afde-54935ba8076a\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/44094744-d5ea-47d3-afb7-7ffc3b17d05c\",\"moduleSequenceNumber\":36267},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/21053ea1-fa95-4c63-b706-a35ffc19dc5a\",\"moduleSequenceNumber\":36266},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f03d724c-9ea6-4b8f-be3a-c1642db913ed\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/23fde959-293a-4ad7-8402-729ef4c83723\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/72a02b44-9c41-4bfc-9330-45dee302b2d2\",\"moduleSequenceNumber\":36297},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2488e44c-6ee4-491b-a51d-c93d2ae0880a\",\"moduleSequenceNumber\":36270},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2d7195c2-7aca-45ea-9ca2-031d17a2f835\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/eb8f83f4-602e-437a-9c44-6b774a60fc79\",\"moduleSequenceNumber\":36262},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/d95b91f1-9cc9-4f64-a8cc-1c92e3c00993\",\"moduleSequenceNumber\":36282},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/786a0166-4a3a-44f1-8497-b0236dbc5e40\",\"moduleSequenceNumber\":36274},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e3504b02-1d77-4ee1-bcff-8c7926fb119a\",\"moduleSequenceNumber\":36268},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/de00e47c-27d8-4673-8b7d-6d542e8c864d\",\"moduleSequenceNumber\":36263},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6195726b-06b6-4484-8332-946259099dab\",\"moduleSequenceNumber\":36258},{\"filename\":\"/singularity/faction-city.js\",\"url\":\"blob:https://danielyxie.github.io/c82e5a05-b9b6-4841-aa39-b2592db91f81\",\"moduleSequenceNumber\":41965}],\"dependents\":[],\"ramUsage\":71.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":782,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { work_hack_lvl } from \\\"/lib/constant/misc.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { purchase_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport { lower_karma } from \\\"/lib/singularity/crime.js\\\";\\nimport {\\n    join_faction,\\n    raise_combat_stats,\\n    raise_hack,\\n    work_for_faction,\\n} from \\\"/lib/singularity/faction.js\\\";\\nimport { visit_city } from \\\"/lib/singularity/network.js\\\";\\nimport { raise_charisma, rise_to_cfo, work } from \\\"/lib/singularity/work.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Join the Silhouette criminal organization.  The requirements for receiving\\n * an invitation:\\n *\\n * (1) Must be a CTO, CFO, or CEO of a company.  An easy way to meet this\\n *     requirement is to work our way up within a company.  Choose MegaCorp in\\n *     Sector-12.  Have at least 250 Hack.  Work a software job to raise our\\n *     Charisma to at least 250.  Then apply for a business job.  Work the job\\n *     and after a while apply for a promotion.  Rinse and repeat until we\\n *     reach the level of CFO.  The promotion chain at MegaCorp is: Business\\n *     Intern, Business Manager, Operations Manager, Chief Financial Officer,\\n *     Chief Executive Officer.  We stop at CFO of MegaCorp because we do not\\n *     want to spend any more time on becoming CEO of the company.\\n * (2) Have at least $15m.\\n * (3) Karma at -22 or lower.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function silhouette(ns) {\\n    // Relocate to raise Intelligence XP.\\n    await visit_city(ns, \\\"Sector-12\\\");\\n    const company = \\\"MegaCorp\\\";\\n    // Rise to a top position at a company.\\n    const charisma_lvl = work_hack_lvl;\\n    await raise_charisma(ns, work_hack_lvl, charisma_lvl);\\n    await rise_to_cfo(ns, company);\\n    // Lower karma and raise our money.\\n    const fac = \\\"Silhouette\\\";\\n    const nkill = 0;\\n    await lower_karma(ns, faction_req[fac].karma, crimes.SHOP, nkill);\\n    await work(ns, faction_req[fac].money);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the criminal organization Slum Snakes.  The requirements for receiving\\n * an invitation:\\n *\\n * (1) Each combat stat must be at least 30.  By now we should already have\\n *     joined and purchased all Augmentations from megacorporation factions.\\n *     To raise our combat stats, we simply re-join one of these factions and\\n *     carry out field work.\\n * (2) Karma at or lower than -9.\\n * (3) Have at least $1m.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function slum_snakes(ns) {\\n    // Lower karma, raise combat stats, and raise money.\\n    const fac = \\\"Slum Snakes\\\";\\n    const nkill = 0;\\n    await lower_karma(ns, faction_req[fac].karma, crimes.SHOP, nkill);\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    await work(ns, faction_req[fac].money);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.FIELD);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the criminal organization Speakers for the Dead.  The requirements for\\n * receiving an invitation:\\n *\\n * (1) At least 100 Hack.\\n * (2) Each combat stat must be at least 300.\\n * (3) Must have killed at least 30 people.\\n * (4) Karma is at -45 or lower.\\n * (5) Not working for CIA or NSA.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function speakers_for_the_dead(ns) {\\n    // Lower karma, raise combat stats, and raise Hack stat.\\n    const fac = \\\"Speakers for the Dead\\\";\\n    await lower_karma(\\n        ns,\\n        faction_req[fac].karma,\\n        crimes.KILL,\\n        faction_req[fac].kill\\n    );\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    await raise_hack(ns, faction_req[fac].hack);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    // Perform Hacking Contracts so we can benefit from the extra reputation\\n    // gain when we share our home server with the faction.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the criminal organization Tetrads.  The requirements for receiving an\\n * invitation:\\n *\\n * (1) Must be located in Chongqing, New Tokyo, or Ishima.\\n * (2) Each combat stat must be at least 75.\\n * (3) Karma is at -18 or lower.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function tetrads(ns) {\\n    const fac = \\\"Tetrads\\\";\\n    // Lower karma and raise combat stats.\\n    const nkill = 0;\\n    await lower_karma(ns, faction_req[fac].karma, crimes.SHOP, nkill);\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await visit_city(ns, faction_req[fac].city);\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.FIELD);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the criminal organization The Dark Army.  The requirements for\\n * receiving an invitation:\\n *\\n * (1) At least 300 Hack.\\n * (2) Each combat stat must be at least 300.\\n * (3) Must be located in Chongqing.\\n * (4) Must have killed at least 5 people.\\n * (5) Karma at -45 or lower.\\n * (6) Not working for CIA or NSA.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function the_dark_army(ns) {\\n    const fac = \\\"The Dark Army\\\";\\n    // Raise our Hack and combat stats, and lower our karma.\\n    await raise_hack(ns, faction_req[fac].hack);\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    await lower_karma(\\n        ns,\\n        faction_req[fac].karma,\\n        crimes.KILL,\\n        faction_req[fac].kill\\n    );\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await visit_city(ns, faction_req[fac].city);\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.FIELD);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the criminal organization The Syndicate.  The requirements for\\n * receiving an invitation:\\n *\\n * (1) At least 200 Hack.\\n * (2) Each combat stat must be at least 200.\\n * (3) Must be located in Aevum or Sector-12.\\n * (4) Have at least $10m.\\n * (5) Karma at -90 or lower.\\n * (6) Not working for CIA or NSA.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function the_syndicate(ns) {\\n    const fac = \\\"The Syndicate\\\";\\n    // Raise our Hack and combat stats, lower our karma, and raise our income.\\n    await raise_hack(ns, faction_req[fac].hack);\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    const nkill = 0;\\n    await lower_karma(ns, faction_req[fac].karma, crimes.KILL, nkill);\\n    await work(ns, faction_req[fac].money);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    // Perform Hacking Contracts so we can benefit from the extra reputation\\n    // gain when we share our home server with the faction.\\n    await visit_city(ns, faction_req[fac].city);\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join a criminal organization.  The criminal organizations are: Silhouette,\\n * Slum Snakes, The Syndicate, Speakers for the Dead, Tetrads, The Dark Army.\\n * This script accepts a command line argument, i.e. the name of a faction.\\n *\\n * Usage: run singularity/faction-crime.js [factionName]\\n * Example: run singularity/faction-crime.js Silhouette\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Join the appropriate faction.\\n    const faction = ns.args[0];\\n    assert(\\n        faction === \\\"Silhouette\\\"\\n            || faction === \\\"Slum Snakes\\\"\\n            || faction === \\\"The Syndicate\\\"\\n            || faction === \\\"Speakers for the Dead\\\"\\n            || faction === \\\"Tetrads\\\"\\n            || faction === \\\"The Dark Army\\\"\\n    );\\n    ns.singularity.goToLocation(\\\"The Slums\\\"); // Increase Intelligence XP.\\n    switch (faction) {\\n        case \\\"Silhouette\\\":\\n            await silhouette(ns);\\n            break;\\n        case \\\"Slum Snakes\\\":\\n            await slum_snakes(ns);\\n            break;\\n        case \\\"The Syndicate\\\":\\n            await the_syndicate(ns);\\n            break;\\n        case \\\"Speakers for the Dead\\\":\\n            await speakers_for_the_dead(ns);\\n            break;\\n        case \\\"Tetrads\\\":\\n            await tetrads(ns);\\n            break;\\n        case \\\"The Dark Army\\\":\\n            await the_dark_army(ns);\\n            break;\\n        default:\\n            break;\\n    }\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/home.js\\\");\\n}\\n\",\"filename\":\"/singularity/faction-crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c80bdff5-a63b-4094-a8c7-8fb9bb0d47d9\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3e8bb452-4a7b-4ccd-b514-0492c6503aef\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/118ba143-604c-4252-b6e6-efe88aa439e8\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ff4f10e5-7643-4142-b5dc-e71b18d2916b\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3cb7d446-b480-49a9-a092-63e65be65c46\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fe2cf0ba-16b0-4014-9538-d10dfa5623e0\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7748a9ac-5782-4f43-83b0-7b4e4ada5a86\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1d276662-1e1c-4809-8ea0-703d9b1ab4ac\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3c0373ca-7fdd-41d0-8f86-03926cc9a1e2\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/146aea53-37c0-4f5d-a992-3fb08a7a88c9\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/78822685-81b6-4764-9627-c0bc4762c6f8\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a47a200d-08e9-411d-9b63-626feea7f661\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/98f944ae-6bdc-4ece-808f-e3dbe83874e6\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/faecbaee-3160-495d-88f5-74a1e72abd1e\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/79096e93-9500-4883-be22-e969e2699e19\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d451fc1a-8eb6-4e98-8636-27b476689acc\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/be6aba8c-bbd0-4410-b76b-5addda3ef906\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f462c350-d0b1-41e2-99ad-081ddb79545c\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7f7a95c1-2f16-4a14-be94-27a4dbe3e96a\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6d1070f9-4078-4286-9c3a-33102c7cc769\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/72e7783a-4c44-44ad-ae7d-31b7a8367ba8\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d12242bc-868d-4b6f-b663-70aecc463c10\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d7dfa493-b26c-4b0c-8ad2-051541987a02\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f2cdc59a-1287-4936-8ecb-252d6c6a13d9\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/66d60934-a918-40ed-8ed0-0b1da67ecef9\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0c42e1a7-83a6-4141-8f36-ca171e2201ea\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c34aa591-6e3d-4f03-b338-d7d03cf34f88\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5f6becdf-7fdc-4918-9dd3-1e6ce474ade3\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/37ba1548-be45-42b3-aecd-c87e46bad65f\",\"moduleSequenceNumber\":48859},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/248cabfb-fe51-4ecf-b9fe-806c7af0752f\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/29466d3e-4217-47f5-9d60-1b7ec61d621a\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/1742dd91-f5ff-4366-a29f-10353e079ee0\",\"moduleSequenceNumber\":48878},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/28f37f7c-daf1-4ffe-a9bd-d4858a27c950\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c6fbd6fb-8607-48a9-a78d-56393aaadfe1\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4466e535-b083-4662-9e72-65728332cdce\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/50c133f2-38f2-45ae-b799-278565fa2f42\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c47992e5-bf51-4185-ad64-522ce2080d85\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c8d0efdd-e5c7-49e5-aaaa-2050cb3b219c\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/de3fa65c-5772-4d3c-b321-a89ec844e1c8\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/df1a8d12-e56f-415f-8e9d-a63af2e250cc\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e06145b8-8ec9-439f-ae15-f1cd0db6cb0b\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/63c572ee-e0c3-4d53-becb-322488e2114e\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5bfe7a10-8180-4617-8a7f-c27809b6adfd\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e35127a3-d058-4b9a-8d60-b4d325435eab\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/24bf277e-1bbb-497b-80fe-e611ee1239a2\",\"moduleSequenceNumber\":48869},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b8a4a60d-097f-4a46-b067-1130f8001794\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6799f88b-ec19-4bb9-9e3c-b2bcf8311a4e\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/03da47c0-3ea3-4c18-b861-299a8ceb9afb\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/621c7611-1c9c-4e55-8e55-5c34afb5a7ee\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/96974380-09ff-430e-b983-4243d9aec7e7\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a3847fef-9c51-4d5a-a45d-b6193ae1387f\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4cce6109-1c7d-4881-808e-cb25b6c96929\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/07db8161-614b-4363-a459-5d09129069b5\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a75c4c04-2030-428b-abf7-ef895bfdae0d\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/995a8f6e-3a27-46eb-bb91-c336d4dec8fc\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/2fdf77f7-6d93-44db-88ea-2f5d3877b7b4\",\"moduleSequenceNumber\":48866},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/7d66f665-4915-4665-bfeb-382f692a9198\",\"moduleSequenceNumber\":48861},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/842c78eb-f875-4729-a79f-ce8310e7f4bb\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/24909bb8-b1ce-49d6-a31b-c693831905a7\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d4f6a263-331d-4636-a98a-a4c0081483a1\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/d33fbdc6-2b6f-4553-bb96-7b5dc2c60c02\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/43540b2e-84cd-4a50-bb2e-33e8df646829\",\"moduleSequenceNumber\":48880},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/279936c8-3c90-4449-9be2-88d055175535\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/21234585-263f-4975-8b66-bd2e39b3d76e\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/904b62d2-679b-4e94-ac8e-75000c25f030\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d66d1b97-e7c6-4e8b-9411-a232a9cb66a4\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bb9f4c4a-9183-4e8a-a823-4508c7300a47\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8b0244ef-0af1-4c90-ab4a-65a68832fa7f\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6738f816-f94b-43bc-88bf-faa24e49aff0\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2115ca5b-f744-4973-b96a-f5779c2016e1\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/525f8d65-9bce-4150-8bf0-2bd7d2e4f8d0\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a7c4ec79-3cbf-4a79-9a56-4d94e2b80dab\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/21065ac3-b2ef-470d-ab47-ce067b6b3170\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/01324ee1-9ba7-4790-9a2a-63b4abd7904a\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0cce5fd2-19e7-4514-8989-0d9215479a57\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3fd7191c-309b-4d3c-90fb-0feeb5d18fa1\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6a5906c8-5d72-42fd-b461-e9738699a682\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/30ceaf2e-354a-4f3c-9683-06cc830a5589\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ee8b4306-32f0-4e6f-ab96-9a9df20b8fc6\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/faa81188-1c81-4db1-b898-bfe622d37603\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d955386a-9e68-45a1-b173-c65757d6d7f8\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7ef6b150-a2b4-4902-8a37-f96cd41da89d\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a8a649ac-3a1d-401c-ae3d-3b85cb5a4c11\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/ee91d61a-f359-4afc-aa1a-e3a2248c6b3c\",\"moduleSequenceNumber\":48872},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4be1ac20-2290-465c-bfcb-409fed1fa815\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2bcff833-0e3d-4773-8dcd-b89e20d331ab\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2ef32a92-a154-4c8e-81de-edb93baab822\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/79db5d86-dcae-4e16-b601-013814b57ede\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6e3a4221-68a3-4b01-976a-374780c996be\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f4e4b617-1e36-4120-ac4a-28c5cb86d7ec\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/aa41a0f0-9f52-43c2-97bd-20cb8eb51c8f\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/974cfe65-1efc-4cf0-af73-42c27557e8ee\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c7a798b4-681d-47d2-82f3-e388d9e7743c\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/09dcb98c-1fd1-4187-902d-95bd65fe97ba\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9ae90fce-98a1-4f48-91a8-7c9abbc58504\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6210e812-a82d-43ab-8e96-85b9df5d4ed5\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/548440b9-8392-4d9d-88cd-7b0acb069beb\",\"moduleSequenceNumber\":48869},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4a13efef-8020-4149-b407-ce1c326ba7c2\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6f28fe71-2bcb-44fa-9896-53d0961e7780\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/eb0e0815-f0ac-4113-837e-d55f7108fd84\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ff9bd774-11bb-43ff-a3c6-212c851aa86b\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d2f37924-948d-41e0-88e7-13e15a81367a\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f507fa7c-66b1-4589-bd33-dff98d6d45a1\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d4ad7aab-19b8-488d-9931-8aa4861d372e\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3e123ab0-6841-4c70-a1cd-2446aadd496a\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8dc9f127-3b09-4920-9efa-6c6be9288784\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f360ccee-5123-4b1c-9fa2-3a6c3b2281cc\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a784180e-608e-442c-b478-664b3ce0137a\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/5f9aa212-b6ec-4d38-9479-39f492195032\",\"moduleSequenceNumber\":48868},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7e8f51fb-bbfd-43ea-b209-ba4fe31edf23\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ac38919a-2fcc-41f0-970d-a6715427b65f\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/dce12ff3-4f73-4560-9e52-1b03d505a84d\",\"moduleSequenceNumber\":48876},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3ead7e83-d986-44db-9e8d-f9a8b6eba7a1\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6ac1ec8d-9134-4db4-b384-e1bbab63633b\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/069b5380-70a6-4918-9d20-965d9714c280\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7255137e-3b15-4c9f-8eb0-ccc2e6730d94\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1021a86d-5854-4893-accb-9c6309505ba4\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f7f59c69-074d-4b49-a29a-3505c682c160\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/846e3382-1bac-453d-ac9b-343338804aec\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/55cc8a82-b45d-4273-aa8b-c0c62acbc3e8\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/71da4b3b-f316-46f8-b8fd-065be6e896a6\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8e5d2a79-5e27-43bc-a101-0e4ac4489268\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/661f8b03-c8b2-4846-86d0-8ae4601a4318\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8b1a9c6e-b615-4fe8-b263-1454e18cd597\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9960e47a-05da-4bb8-bfbc-4f540332f3d7\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bfc7144f-621c-4c3f-8f39-e20aac34d472\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c4842b7d-f222-464e-ae88-d234d8651f0a\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ba942e4a-3c82-4785-a243-ac8d34327b66\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/34d505eb-d177-4283-8d94-e896a3b5bcff\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/862b65a0-c9ff-4f49-a6d6-8fedf6a71afd\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b934709b-153f-477a-8294-eea78512f114\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/a875611c-a97b-427a-a949-5ff8c7c1289c\",\"moduleSequenceNumber\":48859},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/29daf1aa-c4ae-4c55-a62a-8c94d7852b0b\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/81fc3fee-0909-4179-86bb-50b3a115e023\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/b9662a40-8f57-482b-9628-78af59092c04\",\"moduleSequenceNumber\":48878},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f0d1b130-d46f-456e-a1e2-b3be706a08b5\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/87662ea0-c073-45df-835f-e48c8034fc58\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/911952e8-8c2e-45e4-a8cf-21a386af5c1b\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/22fa6844-a119-43e7-8d25-77e4c2d93640\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fccf5ff8-fae0-4e1e-96fc-e44696fd6841\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0dcafcb0-536c-4215-8b68-db5b8b3c9b75\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/be0aaf5a-7adb-4ce4-bedb-ef8a2840a193\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f8741a6b-44df-4df7-b29f-2db2a4772a71\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/27566b2a-89ab-455a-a091-3668309cc447\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/438e2726-4cb2-41d8-a6d2-fbafdabb6a20\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/168d2b41-4316-4e63-ae18-d5debf734431\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/023c80d3-3314-449c-ae69-d2353886538c\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ab760df0-8eb4-4de4-8867-2621bb4fb367\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/11088bd4-19ec-44d3-ab18-5d068215e1c4\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fbe44e22-38e7-40ae-a6dd-bf38c949658d\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b7d34e6f-0f56-43e9-a6ed-dde667b88093\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cdaf28b1-490f-4c1d-9854-b099014b706e\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/534b8ed6-2cc7-4acf-b0a9-3dd04f33ce9f\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e0cc8e80-8f79-4e51-8a17-e88a8858d657\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/08dc7097-0ae5-4cd7-a820-0df768eaa1c0\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9e6998bc-7047-4d6e-abc1-39f9dc9479ec\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/ac5b9427-03e0-400e-b4a6-c241978bf4ac\",\"moduleSequenceNumber\":48872},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d6d5e290-471c-4cff-b41c-180bbcbe7a2f\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/700dc3a1-8c41-41ec-a393-addeaa726e97\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1ba8564d-4293-4c34-8495-bb95bf0f1e5d\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a4a8df45-f9eb-45ef-8122-a4ef6250143c\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/53170780-a388-451f-bf99-cac616dbb66e\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bd3f6591-d14c-46b6-b74f-9af4447ac442\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/be015606-38c5-4086-9f80-de7e9c677bee\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/64748e06-66d7-4a3b-b962-f105c3413aa5\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/46782a9e-e2f7-454e-b5df-c2a78b15041a\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/93239ba3-47cf-492d-8ea7-f742a60a3d1d\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4319927b-17b7-45e0-b58a-47e97d947030\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/88ebb400-34e2-4aae-a66d-8ee9fc8d4d7a\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/ae73fc15-1db7-41b5-be15-5f8675816f9b\",\"moduleSequenceNumber\":48869},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3ffa7b11-cb87-44f1-8cbc-e4eed9e71ef1\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ec7c2b47-5fe1-4574-ab00-c93695e13e24\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f2a84b24-cb7d-44ce-ad8d-106bbae7c0db\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e5c0b116-ec6d-49da-8984-868b59356163\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b6088b41-86a0-4ef7-bada-766e417e8f1d\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8c8fe22a-317f-42f4-a6be-b57369ab1083\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b69a2bc0-efe3-4587-987f-cdc25eadf6bc\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a6e500ed-a5f8-40d2-82a2-12b6eccca73e\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/304dce9f-dbf3-447a-a7fe-cce006f8fda5\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/16cc9fa1-d33b-4dda-9cce-36f9f98df37a\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/e6aab01f-dabb-4c5a-9226-a8c5f73c3e12\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/8769da41-d5a9-4fcb-8e41-2812121f29ca\",\"moduleSequenceNumber\":48868},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ce8600dc-2409-4c93-bbb8-7da08fe0ffd4\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0caf265f-7f64-46bd-b4fc-98447f3965f4\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/b6a9d13f-a02d-41cd-98df-5e1c04683628\",\"moduleSequenceNumber\":48876},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/072c8744-2fdb-4b09-a279-f76a8be8bbe4\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8854af97-658d-4f00-b331-99875a4e8c7f\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5759d53d-8a60-4f9c-be06-89f436df5f2c\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cb0eff5e-b0df-4afc-bbe3-1208af55cace\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9cd0c576-acd7-432a-b51e-254cf7d5b4e9\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0455b3fc-a695-4bb7-8227-7499b26990ee\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/54ddbca0-5672-4924-8c8d-d94713c44eca\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f352f9cc-ab32-4bed-89b5-d2b98771477b\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c198b855-7d31-41ac-9165-57a7ebba026e\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/01f1d7ac-6e4a-42fb-9a3f-2056da92ab87\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6a541f7d-3140-4776-8dd0-d0e59a7ad8cf\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/abc0839a-5086-461a-b1c9-3390cadb2f34\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9b2acd42-37f9-498a-9e1a-6bd6f2be9b23\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/46aa9fb8-6e15-4448-90cc-2ecc5bf3872e\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/733a1f52-3a2f-4345-a297-50d78169f8ee\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a931c099-9c5e-4e7b-97d3-06796f988628\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5173f04e-c64b-4180-b010-cd6fdbd52bc9\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3723c607-9b1d-4662-9452-3010f349926a\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/049855ec-39ec-4209-9d1d-dacb6c5dee91\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/566ae362-fed7-464a-8a65-9141e1db7138\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d6069985-45be-4c88-b726-c489a4feca35\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cc054c05-327e-452d-88d0-716e5e330912\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/da8b9d3a-3cee-471e-91ca-5e7313f955c0\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0d38c7aa-c0a7-428a-81fb-209bdac04c5e\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bc3fc490-a85c-442a-bec7-f80586dcec0c\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f9182711-e59a-45c2-aa3c-a73aef2e4730\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9e424853-54c7-4ba6-a5d9-fe2b50268d2a\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d2c0277b-8de3-4f8d-ac92-9066f8421fb7\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/4309e050-0e90-4551-ac94-7d7601bd7ce1\",\"moduleSequenceNumber\":48859},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8d2ad3d0-b98f-43e1-9584-da10cef130e2\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/417453cb-eac0-45a8-8f24-eafb7010a529\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/551a4146-6d5b-42d1-a187-13d950f60f7c\",\"moduleSequenceNumber\":48878},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/bd3909c5-636f-44f5-9d61-b121d7438272\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0b070969-83b6-456f-a4bd-fbf6a2838f90\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/50ddb385-28e1-48a4-9826-87a061a9b873\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/deb9d1bc-2b68-4044-a74c-b921b924ecbc\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f213c26b-799d-4aeb-9cb5-3ec605303cb9\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/13362dc7-5bfc-4ef0-8ca2-947b32f7eb23\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/70fdc82e-9fcd-4cc9-ae6a-e20eaa643cdd\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ee2efafc-de82-41f7-af54-b9712b1c78c1\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8f140270-2b6b-4e99-96d2-327c59822e91\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/df2a10a9-e7d9-4b5c-9fc5-ad8168b85d78\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e8f24e72-4ba2-476d-9a1f-c229ab6d2c4a\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1d6bec4d-4465-4f1c-82df-37164c39ed89\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/c047b3f7-0bf8-4189-813b-482af3b8820c\",\"moduleSequenceNumber\":48869},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d3184fbe-ef57-424d-9e15-c23bff2ba080\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4769f431-5e89-435d-a569-923f5fb3a344\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6c9f554d-69bf-41e7-ba0f-fbdcd2536f52\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ed224d9f-f9ba-4c70-84a5-3bec890e55c6\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d0fa4659-184e-44e4-91e4-c751dd394ac7\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b2935106-751c-46df-b9c5-1a7f10f66fc6\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/69d4ae69-3684-4fd8-91d9-89643df03093\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/12ac6948-3bb2-4107-8eb8-99f78bef3f4a\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7d248473-69cf-4585-a08f-f18430c7e65c\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0872b10c-7c3a-427b-a497-420b4677ba83\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/b2ecbd27-7a74-4b6c-828e-9afe54cdb387\",\"moduleSequenceNumber\":48866},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/05710c5e-bc41-40d6-b520-2f9af4e1490f\",\"moduleSequenceNumber\":48861},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4441226e-e0b7-46c9-8eb8-6bd5c631407a\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a2326527-edd4-4b74-a97b-7fd0c99e7fb4\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6814aeeb-74c5-4b54-aa57-a60f177905ca\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/01630d62-5eac-4109-8cc7-3a97a8512b69\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/29f06ca6-c737-466b-a1db-42f4a8737054\",\"moduleSequenceNumber\":48880},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f32b117d-edcc-4328-b0ce-39867058340e\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b9c52ba6-260e-499b-b7ad-ab33fc7b91ab\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f2b48bf4-eefd-400e-b173-23b95c61e909\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b419ec36-b2ad-42b6-863a-d5e420d613fb\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/78543f39-276a-4da0-9dc7-532bfe337877\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0482f014-eb0a-4a9f-a371-317aa76bada5\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8254df59-e421-4b14-984a-2dde80f553f2\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2bcf7dca-8b86-4e73-bf5c-6a3fa99357c0\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/60648f7f-83c1-4454-984a-d77184d2f845\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5a9cb6f6-a0b0-46f2-972a-1f60bccd1868\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/eb2ba1fc-c1c0-49c0-b60f-2e0e5e2b7975\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f43ce5a2-2eab-4013-8a8b-3ad0ab207ae0\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/91bc973b-f1e6-4d5b-80c8-419ab96d6a2d\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/900ed152-70b8-4e32-bfa3-64f991c9301f\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/558fb21a-6b11-4e86-afd8-9939112149dc\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6223219e-3304-4f8b-9124-76e315ac347d\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4849cea4-1308-4219-9e0f-a54f9bf3dc10\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/49a084b5-7a86-4f37-8886-17c58141e6b4\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/31113682-0429-4366-9ac4-64bdcaf08c06\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0ab753e2-60d4-45fe-97e5-f579c15a9049\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/57b1e2f5-9d2f-4dcf-9af0-06c5ed092752\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/c41c0424-9e8b-4daa-a9b0-cccbede5c87f\",\"moduleSequenceNumber\":48869},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f57a007a-6722-4504-ab66-890b518be770\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/78d1acc8-2238-4fdf-8683-669e84c278aa\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d50d794f-f0ca-4f45-873f-7a908f83b146\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/06a7b779-5a20-43ae-86ac-6fa5b012c2f2\",\"moduleSequenceNumber\":48848},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/3be06bca-2774-4a11-942a-c9a653ad4e2d\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/3b9100ba-4724-4384-9e32-68e579cb94f6\",\"moduleSequenceNumber\":48874},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/59d7db7b-374c-48e2-8ff9-096fc54cf8a8\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5fce154a-6633-457a-8ccd-65750c8fc31f\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a532214f-4c3a-4931-9581-33e62a24feb6\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a952c6a2-1a82-4959-8c9e-e534c90fcbc7\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9d75f51c-cda5-4f17-b4c3-34d577f776b3\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/aaff6be2-9cd6-40cd-92c8-3e4116dd7b23\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a79dec51-58cb-4f6f-aa5e-80dd65d4ca6d\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3073bcb9-ea08-41a3-9df8-c6536318057e\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ad8fcb40-8524-44d0-9a5f-c44f64fc4116\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f7bc5e91-1752-4b3a-a5fe-4d7cc89c1574\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/dd1c5eb2-322c-4284-a903-530c77a5578f\",\"moduleSequenceNumber\":48866},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f64ad8cf-7c42-4dbc-aff1-372de56ce886\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/80889868-2f9f-4886-91c4-bb29b302ec32\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/71640230-fcaa-436d-b792-5083ad169c20\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4f3aa634-6c5a-4d3d-99f8-dadd743fb7a3\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/897c77b1-3e31-494e-9278-4e9c3e5374ed\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/24ee42ed-5745-49ac-881c-0ab0632ad9d1\",\"moduleSequenceNumber\":48873},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a3ff383b-2d4f-4dfd-bac0-523e24eaf46a\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/13b1d759-0fc7-4b43-90d8-e09334f6e9f0\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e43d10fb-6cf7-4ab5-bc73-ade32e7a4866\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/18378ea4-f43c-4707-8424-7867e27b6ba3\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/75b82ee9-5fa1-4d4c-a8d3-4ff39c7f9eaf\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8ef996e6-00d4-4129-a62e-1b9b4f5d7a9c\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5e0ebf5f-48b0-4412-ae02-946cebde3b91\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/452330f1-f04b-4d0e-9e69-91c368a5d701\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bd87e78c-1cbb-4ebb-993e-9d1cd0efb0b8\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b2a17f98-b9bb-4e63-83f0-c9b391c22380\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/508ca851-948b-4ebf-8236-1640bb0a48c3\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/bab88394-25aa-4a0f-b1d1-6e1f2e482d81\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/b8b37ad5-9fc8-40e3-a8e1-0d3a5121c370\",\"moduleSequenceNumber\":48872},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/498110d1-6e6c-4fbf-a8a0-cefb2f849137\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a9dd27db-b2f7-4cde-b936-5c28be1d80a1\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c2b7a055-3fb3-4694-a36d-649943e15db4\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b16b73a7-98a6-40b4-a933-45e219f109f4\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e59f2b69-c585-47d3-ba97-79649d1a19c6\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/86885ea9-88e3-4e38-9211-905b9a2e4618\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/cab55e5f-c8b6-448d-962a-6d3d8f89a9e1\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/407b76f8-33a5-41a6-a2a6-cfb102f7d773\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a3a0d291-4600-42ba-8213-4da4966f402d\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b13794de-2a33-42c5-bbd8-a09472d67551\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4b6fe9f8-4129-4f72-82b2-5f65b5fcd657\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2caad241-1594-41d4-8993-2973ba1cee39\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/d04264f8-7acb-4b49-bda4-67d2c618a249\",\"moduleSequenceNumber\":48869},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2ee85f45-447b-4208-aaab-7ae0090398be\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e9acd76b-863d-4b78-ba9f-0255b5651fb6\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3fba75e8-029d-4e1e-a02f-41206c9b540f\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ba6a57f5-e8c9-49b6-a6ef-d20b672af23c\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a8606cbe-ed86-4fa1-b47f-0ae43352df41\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1da93215-96c5-4be1-95a4-9b9afed58431\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c7f84f64-6a4c-411a-b14d-39f7dbfb986a\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/59e69f6f-b7fa-4d0f-950a-f13d564245f6\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a1a49a6d-935e-435b-bca0-72f1948b8153\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/944590d1-8ea7-4778-b8a0-cd9cf106f420\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/a7e790e3-f087-41db-a2ab-1c9ccb1f4ef0\",\"moduleSequenceNumber\":48866},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/b8c5eb10-dd3a-4cfc-8190-df40d1b29237\",\"moduleSequenceNumber\":48861},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1e4d6158-75b6-4bb5-97b6-e29127858838\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fa895d45-ce0e-4ab0-9d8d-63bd3106ce36\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/04f4f75f-058e-41c9-a6e9-8e1bc258c6c2\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/f91d3fca-7b09-4ddf-ba9b-81ea06eca0ae\",\"moduleSequenceNumber\":48848},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c54765d6-8b3d-47f7-b7c8-d6f690d53bbb\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0059e72c-3312-4ff7-9de9-0537256bed11\",\"moduleSequenceNumber\":48875},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/08618efa-0a7f-4ccd-a69f-1daad2667b10\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e9b5467b-a810-44d5-9c09-2a1f5f582e53\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1965d361-dc9e-4d01-9188-9824f0e14a53\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e05c74f4-fda9-4957-bed9-05ca22636421\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1af0ce05-6bb2-46c5-b7f8-98e65d2619d9\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c7715653-9bdc-47f0-81f8-1b19915d21c6\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/75a20a4d-5595-47f3-9b85-f022c1f23e7f\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ec0a6561-4c6c-4ecc-b21b-741edcde5e88\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/02234939-570c-4a07-a095-49bfae4b4576\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3f2f4c69-d1c5-4589-afc7-544ea04bbdde\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ef09669c-8c3f-493b-b97c-fa0f3e258553\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f28c4631-3cfc-4386-8180-7c61eeb34359\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ee1b4725-45e3-4fb4-853d-f75fd55a1719\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c0f20842-5c86-4e03-97f3-052807033034\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f5e6a310-9582-49d3-96ad-f167cbd73529\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6ca50b16-95d2-4b0b-89f7-1149c4155ca9\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3c1208f9-18d2-4faa-b48d-dce2bb5ae90a\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f237c6b7-58f0-4f39-a98d-cc940abbff16\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ea262901-024f-4ab8-b8da-0425665d2117\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/536e3d09-f6f4-496a-8f6e-d1a95f954bdd\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d7480a28-092d-4856-a868-b0890aa7da7b\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/968db937-58fb-4a85-a550-65e841c4da8d\",\"moduleSequenceNumber\":48869},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/60c43510-aa44-463f-adfc-433680232711\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7677e413-1983-4dee-91c0-7c7bf722cc59\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/003fec1d-9b71-46fa-9faf-6e38742d55b3\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/2560a7ff-2968-4c07-a7fa-c22770f86af4\",\"moduleSequenceNumber\":48848},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a22fd3fb-6446-4175-a71a-1417c8d40c2f\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/aa4b2327-5d2b-4fef-9392-404c3512098d\",\"moduleSequenceNumber\":48874},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/53c7b591-8708-433d-a3fd-2f89f5443e9d\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/faf6d3b0-e3ef-4c85-a83f-a70f421b96ac\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1e215c11-771c-4954-86c5-8b520bc9a983\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2fa35636-2082-4824-b720-929bcfc5c83e\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1af4f20c-51da-4860-b0d1-5339a8d06a41\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4a783a08-f2c2-497d-bd09-83bb4c32e00d\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ed92457d-012c-4a2a-8cd1-9e8114d607eb\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2e9f3fd6-d24d-4b23-98ea-6e04d225522d\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f9051035-1a5a-428b-a0b9-f990aa07d323\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6296122c-a1aa-4d05-9744-d4412f4a711c\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7005d82b-aed6-40c8-bc3a-0daaa63641c6\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/99db31bd-7d36-456f-b4d6-2326f9d842c9\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8f5a06f9-a119-4e9a-b844-df8c0ba590a2\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/83c5a8a6-b10d-4b0a-852b-50d054831cb4\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7ef327aa-aacf-4efd-9282-7c9f3148cad6\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4244688a-7a40-4220-8ec4-abff7e8621c1\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b7bf7f43-3f49-43ad-966d-b7d1dcb35822\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/559cc5c5-27ed-4a8c-988a-ef5ffe5e5dbb\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e390eb4b-d161-4842-b643-548d9e5e2480\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/415b2474-3ae0-47f2-909b-2f85ebc3226b\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/12c263bd-9dbe-4a35-be37-e849d3bb7115\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/28a991c0-2d6e-4216-bd91-1b503cabd58a\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b0ce37ae-fde6-44af-83fe-c6d31f10a2ba\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4a06dd1f-008d-4768-8668-2e192a072183\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3edd5ae9-7392-403d-9978-ceeb3a513d4a\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/51afc290-5057-4dcf-9b0b-51541718137c\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e84ad765-021b-45bc-a0d5-d10ece72a6d4\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9183563a-fad1-444d-ba5a-0bc0fced0976\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/7fa28599-99a6-4bc5-ba46-d01852e4ea17\",\"moduleSequenceNumber\":48859},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9bcaf981-7321-416f-b8da-9996917f5f70\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9fa5239c-0c9f-4bfb-a1dd-eb662af7f64a\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/7c0c8864-e778-4ccc-b25e-21cd3b25ed65\",\"moduleSequenceNumber\":48878},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9fc038fd-0be6-4a38-b353-7e789f1d61fc\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2d20dfe7-1acb-40fd-892b-dfbee267e14f\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/39ff4637-6126-488e-9aee-549f85828dd1\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2a7afec8-3797-4983-a439-b2ebc5c5fb91\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/11de9d94-6494-48c8-832d-183a98abd893\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/afa14122-aad5-4292-bcfa-a529487594e0\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bbc1e85e-ad3b-4dd6-a3b6-eee33ebc52e1\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c70e5d76-2188-4128-a552-87ecfc6839c5\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2aa6fdc0-baad-4e6a-930a-e04056aae68f\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/709bcc06-23b4-4e50-81f3-a7111d6f5f53\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b70d837d-4f8e-4108-8f62-3311ac7ba004\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/820559ba-3a72-4161-95eb-400e406b04a5\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/347489e3-16b2-4197-b24f-900882021540\",\"moduleSequenceNumber\":48869},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2f66aaba-e979-4344-9075-cbf0f1f20510\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1622d5f7-9065-4894-92fa-0c00ae7404b4\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3d88df5a-c7f8-4595-a49f-1da533e2ff7f\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6a03c722-173c-4a49-aaff-5ac832528aad\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fbcf5d3f-9518-4dc7-b8fd-ec95c4b31786\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/06f5f875-8ed9-468e-9548-b65a6a203027\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6afbe535-0c41-4e8b-b130-4aeb38f066a7\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/69adcf7e-a020-4739-a416-58dd233ac4ee\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fb7187dc-aefc-4612-8119-4afbbf148289\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3b75ed35-16a5-434f-b437-7cb491a2f6a1\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/d13f1340-515e-449d-87cb-4f644bea34a5\",\"moduleSequenceNumber\":48866},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/f9eebb57-93eb-487a-a745-4a5e9bfa81d0\",\"moduleSequenceNumber\":48861},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/425138e8-2de2-4cde-b15e-5dfd84eabc6e\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/602788a2-b4dc-43a6-8dae-17a2e9be6bd0\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4c7efce2-31b8-481e-86aa-1f5692cbd4d4\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/d7a4bde3-95cc-44bf-bd2b-5b1db46e9821\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/f983c63a-a634-4753-8cb2-9ee012a42c88\",\"moduleSequenceNumber\":48880},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6a60640d-e9b5-4873-ad13-fa5bfc831962\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7ae812a6-20d4-4201-8536-c9263c954530\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ad14b9e6-0ad6-42e0-bd4a-85956ea7a33d\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1ae7fa92-8aa3-491b-893c-2de7704f04c7\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/02a90363-eb76-4364-a681-2abb2a53a5aa\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/25d3ba38-c99d-40e6-8134-e6980bac1e0f\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/075e8676-1ba0-42ba-8927-38add1444beb\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bca78363-31d9-4249-a63c-f2628bfd1879\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e42b16d5-ba74-4473-a8cf-6f5440ca8a9f\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6fe9f6dc-984a-4a7f-964c-c8ad20362ff1\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a7959daa-51e5-4d11-91f3-c6b4b8b1ab20\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/146b1a8e-49f8-4373-a857-5ba407836d20\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/92f56d57-c69f-4bbb-b084-840f7083805f\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/846864a1-fdfb-424a-a05d-883c1bd62a83\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/af48019d-ec51-4134-8a95-e33e35379ae1\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8c0bbfe6-4730-4f55-aa8a-6a48b7576941\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/da57d8b1-de14-49f6-bbc1-7a65cce0c53a\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/085bfe37-84e0-42ea-b82a-73038aa1fa62\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/33615b19-3a8d-45a6-aefb-a126af623931\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cb55184b-b18e-4883-ae37-0b0688ad9c35\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4e433deb-e13a-4deb-9c9f-3a935a61a18c\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/52b637ef-0d74-414d-9076-3142c42e2bfd\",\"moduleSequenceNumber\":48869},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/278b1374-c2a0-4ed7-8f15-03c94b8cab00\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bef6efbc-8d56-4c95-8a79-c6a333e6ddc2\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9bd24634-72cd-4cde-b54d-7850c268b5eb\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/beb4386d-35f6-42d9-abb2-6995718a0124\",\"moduleSequenceNumber\":48848},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6a6bf66e-e001-4629-ad70-9c4063447e53\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/81e6e62a-fe4b-48d6-8bd3-3b6c5f3f0deb\",\"moduleSequenceNumber\":48874},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/37b0e6cf-ee84-4e53-be36-c13bde675876\",\"moduleSequenceNumber\":48862},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4738f3df-a75f-4ef7-b37d-46ea60b35223\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/590a5745-3468-4882-b5d2-ce6825d43bb2\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5b3c562b-a628-4e0c-9ded-7f95cf5dc435\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fa9aac92-9795-442b-8189-001bc7ae9ef4\",\"moduleSequenceNumber\":48854},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/89262f82-1c84-457a-9352-d896052e1d4a\",\"moduleSequenceNumber\":48853},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1c791914-b54d-4b28-949f-36f8a9e5a71d\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/404a5048-6fc1-48b2-acb0-d42d247f22b9\",\"moduleSequenceNumber\":48849},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5c782655-6b87-4b78-b95e-36e00300f2fe\",\"moduleSequenceNumber\":48884},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4129a250-5845-419b-9dc9-329530c0a30f\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/cf7d3e06-215d-4fbd-bc9e-174f433be62e\",\"moduleSequenceNumber\":48866},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/38f3ab0d-ccac-47e3-b0b5-c589abfd6511\",\"moduleSequenceNumber\":48860},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6d60bb28-e513-4a9c-9bd7-22a8c2be5a45\",\"moduleSequenceNumber\":48857},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6d4a4383-ed2f-4aa7-8290-f828e1c44307\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e281e914-0736-48fa-8f8e-5692eecc201e\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/693976b2-3f8e-4b40-a951-ff894215ae5f\",\"moduleSequenceNumber\":48845},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/29454d1f-0815-4cb3-87f9-baaeaabc96d5\",\"moduleSequenceNumber\":48873},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/56fa81d7-7485-4d6f-be90-42430e427283\",\"moduleSequenceNumber\":48861},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/71a5d1d5-4779-4b33-9f63-a1c53ea898ee\",\"moduleSequenceNumber\":48855},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/738151fc-e440-4f62-a3d8-d56ff737558d\",\"moduleSequenceNumber\":48850},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/6c0f841b-3fe0-43ec-aea1-1aff2c683da4\",\"moduleSequenceNumber\":48848},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f493f572-ddf9-48b6-a5d1-1162bfc86bf9\",\"moduleSequenceNumber\":48845},{\"filename\":\"/singularity/faction-crime.js\",\"url\":\"blob:https://danielyxie.github.io/863aafba-3318-45dc-8d54-68b7e709bfeb\",\"moduleSequenceNumber\":49231}],\"dependents\":[],\"ramUsage\":79.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":783,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { work_hack_lvl } from \\\"/lib/constant/misc.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { purchase_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport { commit_crime } from \\\"/lib/singularity/crime.js\\\";\\nimport { join_faction, work_for_faction } from \\\"/lib/singularity/faction.js\\\";\\nimport { install_backdoor, visit_city } from \\\"/lib/singularity/network.js\\\";\\nimport { raise_hack } from \\\"/lib/singularity/study.js\\\";\\nimport { work } from \\\"/lib/singularity/work.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Join the CyberSec faction.  The requirement for receiving an invitation is\\n * to install a backdoor on the CSEC server.  The requirement can be broken up\\n * into the following mini-requirements:\\n *\\n * (1) Have at least the hacking skill required by the target server.  This is\\n *     usually a low-level server, typically requiring a hacking skill between\\n *     50 and 60.\\n * (2) Gain root access on the target server.  As this is a low-level server,\\n *     it requires between 1 and 2 ports to be opened before we can nuke the\\n *     server.  We need some time to acquire the port opener programs.\\n * (3) Manually install a backdoor on the target server.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function cyberSec(ns) {\\n    await visit_city(ns, \\\"Sector-12\\\");\\n    // Ensure we have the required Hack stat.\\n    const fac = \\\"CyberSec\\\";\\n    const player = new Player(ns);\\n    const server = new Server(ns, faction_req[fac].backdoor);\\n    if (player.hacking_skill() < server.hacking_skill()) {\\n        await raise_hack(ns, server.hacking_skill());\\n    }\\n    assert(player.hacking_skill() >= server.hacking_skill());\\n    // Ensure we have root access on the target server.\\n    while (!server.has_root_access()) {\\n        await server.gain_root_access();\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    assert(server.has_root_access());\\n    // Install backdoor, then join the faction.\\n    await install_backdoor(ns, server.hostname());\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the early game faction Netburners.  Requirements to receive an\\n * invitation:\\n *\\n * (1) Be anywhere in the game world.  Stay put where we started,\\n *     i.e. Sector-12.\\n * (2) At least 80 Hack.\\n * (3) A total Hacknet Level of 100.  This means that all of our Hacknet nodes\\n *     have a collective Level of 100.\\n * (4) A total Hacknet RAM of 8GB.  All of our Hacknet nodes have a collective\\n *     RAM of 8GB.\\n * (5) A total Hacknet Cores of 4.  All of our Hacknet nodes collectively have\\n *     at least 4 Cores.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function netburners(ns) {\\n    await visit_city(ns, \\\"Sector-12\\\");\\n    // Ensure we have at least the required Hack stat.\\n    const fac = \\\"Netburners\\\";\\n    const player = new Player(ns);\\n    if (player.hacking_skill() < faction_req[fac].hack) {\\n        await raise_hack(ns, faction_req[fac].hack);\\n    }\\n    assert(player.hacking_skill() >= faction_req[fac].hack);\\n    // Join the faction, provided we are currently not a member.\\n    const joined_faction = player.faction();\\n    if (!joined_faction.includes(fac)) {\\n        // Upgrading our Hacknet farm requires a huge amount of money.  Commit\\n        // crimes, or work at a company, to boost our income.  Continue to\\n        // commit crimes (or working) as long as we have not yet received an\\n        // invitation from the Netburners faction.\\n        const factor = 1.01;\\n        let threshold = factor * player.money();\\n        let invite = ns.singularity.checkFactionInvitations();\\n        while (!invite.includes(fac)) {\\n            if (player.hacking_skill() < work_hack_lvl) {\\n                await commit_crime(ns, threshold);\\n            } else {\\n                await work(ns, threshold);\\n            }\\n            await ns.sleep(wait_t.SECOND);\\n            threshold = factor * player.money();\\n            invite = ns.singularity.checkFactionInvitations();\\n        }\\n        ns.singularity.joinFaction(fac);\\n    }\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the early game faction Tian Di Hui.  Requirements for receiving an\\n * invitation:\\n *\\n * (1) Have at least $1m.\\n * (2) At least 50 Hack.\\n * (3) Located in Chongqing, New Tokyo, or Ishima.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function tian_di_hui(ns) {\\n    // Ensure we have at least the required Hack stat.\\n    const fac = \\\"Tian Di Hui\\\";\\n    const player = new Player(ns);\\n    if (player.hacking_skill() < faction_req[fac].hack) {\\n        await raise_hack(ns, faction_req[fac].hack);\\n    }\\n    assert(player.hacking_skill() >= faction_req[fac].hack);\\n    // Travel to Ishima and wait for our income to be at least $1m.\\n    await visit_city(ns, faction_req[fac].city);\\n    if (player.money() < faction_req[fac].money) {\\n        if (player.hacking_skill() < work_hack_lvl) {\\n            await commit_crime(ns, faction_req[fac].money);\\n        } else {\\n            await work(ns, faction_req[fac].money);\\n        }\\n    }\\n    // Join the faction and purchase all of its Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join an early-game faction.  The early-game factions are: CyberSec,\\n * Netburners, Tian Di Hui.  This script accepts a command line argument,\\n * i.e. the name of a faction.\\n *\\n * Usage: run singularity/faction-early.js [factionName]\\n * Example: run singularity/faction-early.js CyberSec\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Join the appropriate faction.\\n    const faction = ns.args[0];\\n    assert(\\n        faction === \\\"CyberSec\\\"\\n            || faction === \\\"Netburners\\\"\\n            || faction === \\\"Tian Di Hui\\\"\\n    );\\n    switch (faction) {\\n        case \\\"CyberSec\\\":\\n            await cyberSec(ns);\\n            break;\\n        case \\\"Netburners\\\":\\n            await netburners(ns);\\n            break;\\n        case \\\"Tian Di Hui\\\":\\n            await tian_di_hui(ns);\\n            break;\\n        default:\\n            break;\\n    }\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/home.js\\\");\\n}\\n\",\"filename\":\"/singularity/faction-early.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b0705a15-d03f-45fd-afa5-cc5c4c61fee2\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/933ab02d-6cb8-4760-9216-d77b64fa695c\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7f023187-7101-4153-90ae-cbab847081c0\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a64665d1-6dc9-40e5-baf4-071126e4d5bf\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a8b6465e-a935-4898-b6ce-e97999d3a561\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/34d94368-5756-41ed-a6ba-a74bf8a02168\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/11d802a1-4ce9-4651-8bf3-7146b17ddd70\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/22f16c61-ca87-435c-ba60-c1bec6c2157c\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4f9bd45f-905f-4e13-b769-fb1d98828e45\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/39c2fa24-66b1-4644-a273-ac6caf2e04a5\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b5f0498b-9361-4cfa-9088-41817a1c4df1\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1c17fc16-3dc3-4c8b-98c0-c2be5b1e1e8c\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c5d5196e-1799-4bb0-94b8-7a10b239876a\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9afdb5f3-14c6-4f85-a6a7-9cd9cc16d400\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5cb1f7fa-57e1-439c-a5ac-0e35f3726666\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e4015f4e-f1a5-47e5-9f9c-5be8416a271e\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9f13dd1c-492d-4a69-86c2-ddce9fd710c3\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/40a59c04-f074-4596-a31e-2d2a130df765\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3a9438c0-02c3-4bae-a0ff-09314aea26bf\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5b646e8d-a3d3-4167-83e0-eeaf838ce2b5\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dcfca298-3407-4f9c-a7e9-b8f10495c1e6\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2a7c1521-3b99-49de-903f-adcbb1a83407\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ba815d05-1b88-4daa-a4b0-642c168b083b\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cd3e2058-c3cb-47bc-8162-49b7a7670b1b\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2c1fae7e-9561-4c9e-bc7d-4461d02c5048\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/40640520-01b6-4c18-8138-f9ad6afb02b6\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a3187d66-d562-4bd9-853b-2459da8a50b2\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f2a6dccc-3299-44bf-bf15-5185e4255659\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/1e190ff5-967f-429e-aec1-44429c05b638\",\"moduleSequenceNumber\":70474},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0a2f64e9-b9aa-4b1f-b197-b6036cbf682f\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8c55f295-c53e-4387-85b2-f0c2452944a4\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/60768dae-450c-4f10-b67b-6a1f68c21099\",\"moduleSequenceNumber\":70493},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c4cf642f-2531-4691-a4f6-cff4981a62c7\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c2d534a3-f9ee-4f8e-952f-2db3852131c7\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bf3ab3fb-7e87-4541-ae25-b0da122d66e4\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/29cac432-c191-4aeb-86b4-2e77f8303951\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9770fd49-349d-40f0-bb72-60d213e462ad\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f035e5bc-a4a0-4dbf-9675-448168341954\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5fb8e4e1-a44f-4044-8e70-277aa64b1186\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a840acb6-9539-4624-86db-cd69909e3f06\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e808880b-b241-45ca-b1c7-217a53e7a4c0\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3dc04432-8180-4bf5-9147-8608434c642f\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/468b167e-ae60-4af7-b7c8-c355ae2dab03\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/45b48831-01db-4bf0-bc16-4472dae9e518\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/f523f6d8-ceb0-41f2-8949-ab75b4def3ea\",\"moduleSequenceNumber\":70484},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ac385837-bda6-47b8-b154-b78589501eae\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b7a05159-97c3-489a-8219-5b72bd7629f2\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f52221a8-99a5-408b-850f-585df7a87fe5\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/89ef6116-158b-4f03-89c2-fa51b11de70b\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c58b73ae-fcee-4cc0-9b3b-9bb10ed788c6\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ba848de2-c2c3-425d-8b85-0998257b666e\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/84074a30-cc9b-43a1-b918-0045601a6f5a\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/200e0a55-dd58-470d-b934-50ae57416666\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/02041d98-f9d8-43a0-a637-1e42bc5f67d6\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/91d5a0e0-ed48-4c17-b331-8eb70400cf7c\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/64496e2b-6c03-4e46-8066-0b8fd8457585\",\"moduleSequenceNumber\":70481},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/81f1e242-8098-44e2-a627-8f50184c8461\",\"moduleSequenceNumber\":70476},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a847a0b8-9342-404f-b2e6-c10fc4867480\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b0269b48-5b3b-4f18-a0eb-da84d13cc8b5\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/25bcf5d8-af49-408f-af5c-498d8364688f\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ff563f08-1c9e-4c9e-bcbc-081a849280d1\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/2d83eb40-c480-43fd-8130-b9ec366b9054\",\"moduleSequenceNumber\":70495},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7dfa90d8-7334-4084-a95a-3fa1c38e291d\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d795d937-4935-42e7-8f36-ec1c3e8165c2\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5e15f707-8a87-40ed-b1c0-5d4a49ba1666\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7c443b0a-0431-4467-9de8-b83240a8ceca\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c9347a6f-bec7-4413-ad19-f085df587d03\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7e7d23d3-0328-4e4d-bcf4-72c9e89db180\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8c95f3a4-c276-4eb2-9db5-9ae377f2f75a\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5fe297ba-f195-4095-9be0-f7204e48144a\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d5db369d-e100-4e9c-b8d1-c0eea4d747ff\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/af82ea28-ea53-4aff-94df-afd9d4e2e325\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/2ee173d4-2fed-4cf1-ac80-4fb9afebab12\",\"moduleSequenceNumber\":70474},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d84de6a2-24e3-4d06-8816-64cb2fb68a81\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/d56a51eb-1dd6-4410-9ced-1ac93e19ffc2\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/26118ae6-936b-4913-84b0-6610ba9f9052\",\"moduleSequenceNumber\":70493},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ae774379-144c-4f6c-a231-01b680edd80a\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/76d78fa6-d501-40a7-b22c-91ed827ab926\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/25880026-1f27-4754-bc51-3067e3661c1b\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/908d2ef2-faa0-4959-8735-170e921274e6\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/de32521b-8206-4ca2-b54f-2b27b531d3cd\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5a6c2ed2-9526-45c8-baa4-517920a5a808\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5be7de6e-59d6-48f8-aa45-17ae9cda49d0\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b226f079-d8e8-4a92-ad19-b02d04ede5f7\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e4f947f3-4205-4aa4-9f7f-62abceb9d1db\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9b12b3ad-18ac-4d5b-8780-73846da1f69b\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3b34298d-6b32-4c5c-a3aa-59960c57b477\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/866b3f37-5cf6-4c63-b476-8a95634f0996\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7640dacf-4888-42cb-b2a8-c9ca088d4f17\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d065ced0-2d01-4ed0-95e3-09beebf72d52\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/39ce4b8c-f23e-4e8d-81a5-69f72a0a9238\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8c02f1e5-fb62-45df-be96-f6aac086e602\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f0910157-6c9c-426b-8b06-8440baa416cd\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0673d126-f89d-4c47-a365-8230bf3b8648\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c575b16f-f7ac-4133-bd92-4f379bc5dfc9\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/67dfde60-a4cb-42b2-898f-e948a5679b33\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/3805dd78-03b7-4167-8149-883aed160bb5\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/a5927a01-a5f3-498c-857e-13a7c9e9b4a5\",\"moduleSequenceNumber\":70487},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5f6e725d-16ca-4259-89b0-9cada7c95fb5\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5b262f3d-d30a-431d-8d89-52da74db1b7c\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1eed8fce-d8bb-45ad-beee-b6a83a7c0dac\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3721b1a9-7bcc-4c9b-9526-2807cf40367b\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/fe485338-e6ab-432d-8247-ca9e8c5b09b4\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c8a2a43b-c3e7-49a0-993d-42cb792d02fb\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/808c74e9-c8c3-4ef7-9379-189c7a18dbdc\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b04a2bd5-e4d2-4e03-a509-7c2fecb3d4fa\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/475f6084-245d-455c-a2f8-eeb9f3b5ff6c\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4b25dddb-d9b5-4b41-98b4-553ee79862aa\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/65755557-afcc-4412-af94-a0b2f3473b40\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2e9785fa-7e9e-48f6-a933-22d2c9eb8570\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/6179828c-c38c-4888-96ec-90e92742547c\",\"moduleSequenceNumber\":70484},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2a390d06-a6ce-4a09-ab62-e252defba3bf\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a44034b2-67e4-4028-924c-a46f37132cfa\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/056944ea-eedc-47da-95a8-4fda0006cdb4\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c71ca0c7-d77c-4b57-afe4-aed6abfd0e18\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b5d38fe5-ed78-42cb-914f-ebed082708d1\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c3b31be0-d853-47e8-a88a-01a68481c183\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/533b1c9c-6879-4175-b3d5-087ae0622280\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b064efa4-d3b1-43f8-a86b-5e1e355e47d3\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e48f2ed2-b47a-4c65-a8e2-e0af06cb5284\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9d227929-d5ca-470b-8f3e-dd499000a827\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8131cb6f-0c8a-4c8f-9493-aa8dd2bd1502\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/0c79e690-da08-4173-bf74-af21809f6777\",\"moduleSequenceNumber\":70483},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ee7fdab4-2d58-44f2-ac7d-dab50b007f54\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/13f6e894-c641-42dc-9cde-7ead5ad0c7f9\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/3756ae29-9486-48e8-9f0a-65761d3d1c66\",\"moduleSequenceNumber\":70491},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a45c1906-ef6f-4e3f-8d4b-cab7044451c2\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/330a83ce-0d4a-4b05-a8f3-8c53a03136d1\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1f10e2a9-2dc6-4401-9783-022d77b2caf3\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bdbf1e56-474a-4dc0-8de7-86231c1143e3\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6db7bca1-7fda-4c05-ba99-080cbe80a88e\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e19ed90c-2806-41cb-8387-dab47571b668\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/49e31fce-75a2-4f91-8611-0aaae3ad142e\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/071d7bc6-f6d3-4fe4-bbbd-c89634b02f25\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/074cf57a-46ab-4589-8ab5-02e4a23eaf2b\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/78397a06-5fa5-42e9-b2b7-2e3308a8c840\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6a7b97e2-bf78-4c06-a3c5-cf369bddb55e\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1f124cc8-81a3-4661-9fc3-6922f90d5d14\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/573d3723-1180-4b9d-b10f-ae125c64104f\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d4c73d77-8a50-454b-91a6-658a1335b874\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e722687e-7324-4998-b0e4-686e7804d734\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/983e0cbe-f605-47df-964a-9cd0bdc6e310\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e52445c6-b5a2-439b-8f7f-b080cabbb2a4\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ee8fc221-3c93-419c-93ef-624e119b9031\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3056cacf-5f78-4863-8c82-c88382e932ea\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/0461f54f-b1f5-45e0-9f8b-ee7c5d58cd19\",\"moduleSequenceNumber\":70474},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ee04cb9a-8893-4212-a631-5de6a4c57987\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f566b16c-b0d4-49a3-9001-206fee7e7c0f\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/eacce983-6c6a-4c79-b128-793509e97eb5\",\"moduleSequenceNumber\":70493},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e1851a1e-0c09-432b-ac27-3c2b21556f64\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ee6837ca-9e34-4328-8e9b-ffc349ebb8ee\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/365f656d-96c9-487a-8b6b-ad097dc6e137\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/242fba12-b46f-49ad-a490-d07a549501a3\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/aa7c240c-9d6d-4bfe-8dcd-f877e343f8f8\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e1bcabbb-9cf2-44fa-89a9-73bbf8268fd9\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/032c47b4-6a26-49e4-a1c1-0054b0eb4758\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/74d94975-d82b-4a82-8fdb-edbdaf56fba7\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d8a1407e-785d-4c62-858c-172dee983e26\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e827f563-c129-456a-a1d7-e4e5500d2fea\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e23bb280-f536-4219-bf64-62409c69fda5\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3f88f509-3863-44aa-a1d4-009a6db5f5fa\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/525c07d6-2dd0-4b9a-90c3-883324d0b947\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/27756d23-3155-44b7-832b-701cab148d06\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f314dba0-d5b7-45ba-a974-d77f95461fbe\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e01a4d28-6da4-4f0f-94dd-09fb0afa70e6\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2f548e96-14c1-4fd4-8b13-4a1c2ce4a7f2\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3abe1b52-5b6d-41e5-9c4f-bed2357acbcd\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8c1bac5f-90fd-40c1-bed4-03310c8d19f3\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/25d85c90-5886-4b05-baf7-eff3f5d32c10\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/0e78b733-2b85-45af-9eb2-f9f4e470e873\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/62999b62-ef07-4807-a44c-c86357b64755\",\"moduleSequenceNumber\":70487},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1da201c8-3b3a-4f27-a180-4c325a41da45\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/63adf97c-6912-4972-9916-b54f0d0722ff\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0ea67760-3aa8-4c3e-8a64-41975f31beea\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/173b54e6-61bd-4756-b67b-755669948e65\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/87a3ab35-8615-4ec3-a20c-755df0136e01\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/75cbc136-a27c-4667-9b03-7d607358d5e5\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/04c1449a-31cf-4c08-b732-2a57e9e5f540\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/67b861b0-f068-4b72-a38e-e72c7f327c2a\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/28147230-6025-4a12-b335-4d6705f46857\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ed4947d1-c0d2-44ec-be55-42268063d9ff\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3e91e71e-3ae7-48fa-b706-5f6b1d9e4421\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4bfb5b07-8b0b-4566-a577-3ac5457b5083\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/1e74e26c-4955-4410-ad41-27dcb114ad2a\",\"moduleSequenceNumber\":70484},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fdcaae0e-8d5a-4dfb-b709-1e93a16384b9\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e32fe747-93c3-4824-98a0-373018630cfe\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/65997523-70ea-4255-b6bb-4aaa6ad1c925\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1df5ee7f-972d-4ddb-a011-88bbde194320\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a6a3fd27-9a95-4767-b318-6f5e1bec13cc\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/849a1fe0-41a8-458c-987f-a047669ae1a9\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a729c983-cda9-43f1-9ec8-70b729d1901f\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e095a201-ee8a-4045-b82d-a53efcaed8df\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/60ad1ef3-c709-4514-bce9-cd43e3e64521\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d11e9acf-e54c-4161-9e3b-dc68933f09cc\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/841082ba-939d-4977-98cb-4aa1b34c05b7\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/e36c7ba9-345d-4c39-99ca-c15153c16eff\",\"moduleSequenceNumber\":70483},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/75d422ad-3603-4325-9b7e-15dcdfc52c8e\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/41c43829-862b-442f-8f9b-86be4fd373b4\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/597bf642-3633-459a-9d81-081f529f8ac3\",\"moduleSequenceNumber\":70491},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/85e1ddba-ba3b-4cb1-95bd-c27e79ce9590\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4d74e2de-8cce-4415-9f0b-784376ae1299\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4cf185db-a346-45a4-909d-8261d8f2107e\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5dcce7cd-5e6b-41b6-9053-5f4a55e9c97e\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f08490a7-82d7-476a-a760-8f34039f2391\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8606f0ac-a746-4f3c-8cbc-1ee440f7ca33\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fb1e2a48-4bca-4534-b711-fd19afcbbd65\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f062ca1b-563f-4e45-9c82-12da05983e3b\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4b8beac4-9d50-415e-a7e8-56fe88aca0ce\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/55ec2fea-2ca3-41e1-944f-d1973923a8d0\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/938c551d-eb07-479a-af3c-9e62396cbfb2\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b710d567-4bb7-47eb-a0fe-3df11a44ba1e\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9cb7138b-8056-4eef-91e7-58c3d4ae6cbb\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6c01d74b-5a28-4af5-b057-accd635a05fc\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a4a70ac1-f534-4f42-9b11-85317d3709b5\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e4d8efcb-fce1-47e0-bbec-71980155223b\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8644ed37-e06c-4328-a649-dcabc02ca5d9\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3b4942c3-7f36-44b9-8fd7-42785b25509f\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e84db4c9-933d-4767-99f7-4939bb67f391\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/779127d4-9ed3-43ed-a10c-5b507d6d22fd\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bb466795-f0a9-4fc8-bdf6-8352228d3290\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/600da25f-ac87-42ed-ac28-643f250f860b\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/aafc9876-6b00-42c3-aa1f-0303bc89d6ef\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/59339d9f-f118-4f40-bb7b-a48410de9902\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8040b047-9ed0-4d8a-9e61-a042384bb723\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5330235c-fa1e-4c8e-9695-0cdf34338d04\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b1dd10b9-d26d-4955-8bb0-4f746b118fd2\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/784e5132-70ba-485a-a76c-a10154d4f2d3\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/78dfb20e-57d4-4205-b60e-5dea0c3ea078\",\"moduleSequenceNumber\":70474},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/10cd2fc7-7f8a-4029-8538-1922dad95ab3\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/94a00559-c1d7-45f9-bbff-1dc7f727fde2\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/d1c4789f-4d75-487f-aa52-5ae32d473263\",\"moduleSequenceNumber\":70493},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/556780aa-657b-46c5-8f17-014cd7c1b65a\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8d059a8f-74be-43a6-b8e1-2a6ce570c9e9\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8ceaf3b9-1c56-421d-9c8d-899bc64b0c3c\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/79b565ae-b4d9-4bce-a3b1-19b0c8235ed3\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d27a05e6-021d-4fe4-8eef-7f00070988bc\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d809659a-b1ea-42dc-aafd-ceb08de2a3f4\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/18c96c44-b732-4a77-bad6-bc9c2e559b8e\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e1b1e3a3-82e7-47dc-ad17-6459ee451de3\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fc376a05-f3ac-42fe-b703-55783891f737\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b8844055-0d00-4c7b-853f-dc123f24c35b\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f4e3aaab-2cad-493d-8f3c-f667b7f4b6c0\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d5cc6ba2-9522-416e-9c34-45d4763b059e\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/fe4ed57f-7568-49c2-b7bb-1f538629c590\",\"moduleSequenceNumber\":70484},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/dbf4c950-05bd-43ea-bfea-82e43129439a\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e7e93ef3-4ad0-42b7-93e7-9aa9a9ec45ce\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/80300771-0fcb-413a-89af-78f7ed7b29c5\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bbe51c59-a8ec-4e51-bb64-9b313ba49c95\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/69245864-f0be-485d-a8d8-cdaca7e4a9a4\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d9a65bae-1080-4bc3-b96f-913d12c75b03\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/46d9d3bf-d90a-4ea3-bfe1-1f49bbe43256\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5179ab18-ac1a-4f33-9e3c-9d10b8ca5a57\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/815756a1-dd8a-4def-b340-162966b403de\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0a28819d-6702-450e-8ed9-815e71a738f7\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/f5c777f7-03a2-4646-83e2-8bd334237228\",\"moduleSequenceNumber\":70481},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/4765d2b5-22b6-4beb-b8d5-eadc414947f6\",\"moduleSequenceNumber\":70476},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5b47c4ed-28e7-4026-bb9d-b4726335dccf\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ac8a6966-2284-4014-aa9e-97f1795b3ec6\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d3c411df-93f9-4a97-a7dd-f21cbd93396b\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/d1e5f69a-e9a0-40f1-b600-3d113fca9077\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/a0d4726b-225a-42bc-8e97-3afc5f785907\",\"moduleSequenceNumber\":70495},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6b33f28f-8d96-4fdb-a121-14017ceb87ef\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/669f3c52-c8a4-4586-bdd3-2702cd343401\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6e59e08d-c6c0-4aa2-b1f5-9f3230bebf11\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b018395f-bbcc-4d9d-b12c-2b5c4e980b2d\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/acd5f097-b88a-47c3-98ed-9837185b210d\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/839d4f38-00ed-44e6-a312-bfe52c60375a\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fddd2980-4fb3-47e8-9e8c-c2e8e914cc87\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/15c08d6d-155d-4bc6-9f57-1dd56c493196\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/636f1996-dc43-41df-8ccf-e1832c279baa\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/dbffce2e-aa84-45bd-b54a-c8e08a1c9d9f\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/de7d30c2-e073-495e-b7bc-96f6a2595db6\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a7b4ecaf-4342-4038-b59a-bc6df71b1aa7\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/42cbc8d0-3267-4137-a5b2-ed4e6afb4ef8\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/68d5797a-137f-4cb4-aca0-7e43e6d9d8b1\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3081807a-0600-47b1-8746-c18afc3f3c5c\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b3680925-530b-4c87-bf59-a1c31ee721ee\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/59c980fc-81cd-46bf-9840-885721773c7c\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1e9329ed-cceb-4fb8-b800-ba8a36f254fa\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b644e5bb-a627-45f6-b3ed-44cdb48529f3\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/81979bd1-cdaf-4aa0-98e8-e63c1c84337b\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0bb873bd-01fe-4e57-a106-0f2c3c4edd4c\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/2b150b9b-7340-49af-ac56-9e5c1e0fd365\",\"moduleSequenceNumber\":70484},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/eaaf2957-9183-4ba7-bd49-1b0f8e9ae867\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e43af467-be4b-49a7-a66c-e3227d215259\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/56d4010f-2a11-471a-9668-23757cfe8d08\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/7563b6f3-9065-4525-9b81-d5401dafaf59\",\"moduleSequenceNumber\":70463},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8aef0bb4-e1d1-414b-8cfd-ebc114875cab\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/ec3e73e9-9147-4389-8b44-1db6e28850d7\",\"moduleSequenceNumber\":70489},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d2cf823e-f805-4d65-83e3-f802d079a499\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6deaa850-dd86-4d75-ac3d-146417dc1c16\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dcb29ce5-2d64-43b5-a10a-d52c88bc8152\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3a3bbf11-0559-4258-84e4-a927633b4156\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f14ca2a0-6e9b-496c-a395-cfac1e1a41f5\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ae6665ac-ea77-48df-bfb3-bc910ab48513\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/41065613-d25e-4e4f-b96c-201ae706251b\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/89a69b3f-4b33-44c6-b4c2-ec62cfd2a421\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/679daa84-7956-4abb-bceb-e96b5394a30c\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2e2c7904-6512-4656-8c6e-ec0220078146\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/4ed808e3-c05a-44fd-8ddd-f8f7261274cc\",\"moduleSequenceNumber\":70481},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/38671796-9b45-47b6-bd28-08b3b5bb6a3c\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2174662c-5a97-448a-a741-deb416d5a823\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2c9b7281-45fc-41fb-8044-a06cfe020eb2\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a6b81100-bbc2-4843-ad94-db7f146470fe\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/2bc3904a-dc6a-433f-a08a-319cc7afd114\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/63eb9d5b-24b9-4f01-ad69-9b48df2627ea\",\"moduleSequenceNumber\":70488},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6a6b3133-7c29-42fd-8373-965b7c0c1706\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/377b10af-6223-4ac6-821b-6b9086b85e72\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a17124dd-f2e5-497f-ace9-8650684983ee\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/39fe924d-a4c9-4638-8923-84c4b772e3ee\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c551b5c5-91b4-41d5-b3e4-86738fb177f9\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c0d8a60b-17c7-414b-b9cc-da8e2bfc6a63\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/05fa5cd2-c89c-453a-a09d-b9ba92d81450\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/42f2b567-ea40-4639-8fa5-2055051ff9a8\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e76c182d-bd82-428a-88ea-61e3486977c0\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e2c6d61e-f182-4981-98f7-91d88aba6356\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f89e6f66-b9a5-4368-87cd-1b6ac270d00e\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f0b168ad-d303-4f8f-8bd7-e3abf9ae0d66\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/cd8b58c9-7cc9-427e-9f8c-8e13f5ac982f\",\"moduleSequenceNumber\":70487},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/448abdcf-4def-49bf-a43b-3e824c965893\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/717f85f6-5af3-4e13-b4ef-7531749ec4c4\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/190e9beb-b97c-4d73-9173-dbd03242bfbd\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/91d238bf-11c5-4492-8bd6-fba01212125b\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/300f1fcc-4f1f-4548-ba57-42d4d1b41e67\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/430e07d4-fcf3-41d5-9389-74ac49c1924b\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d8113af2-597c-440f-8455-a01522b4d1ad\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/74d0f3fe-906c-414e-8115-02809efae4ae\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/22ff32bb-e40b-4c1c-940b-9856d95a3e82\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a2031d82-f3b8-460f-9681-81518a344bf6\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/372ae4ed-872d-439b-b755-c3ded14f91af\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/645c36a2-92e8-4fb3-9ae4-2138d4fa955a\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/cdb1cc1a-ff77-4a1b-acdb-f62ff2339750\",\"moduleSequenceNumber\":70484},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/922d5f84-b942-48ed-9e86-e4d0379b903f\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e2686c93-c0a8-4ad7-b636-7f3406cc0c72\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/76d14dd6-3105-4299-ae63-6a16030cb160\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c3ef8dd8-c37f-4f62-b339-174e7bd218c8\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/aa3d564a-dd32-4cad-9468-9ec04a877e56\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/17616317-4c2a-43ea-9f11-0fad05205226\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b5f9bda1-c1b6-41b8-b07d-8aa57a4e5fdf\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/61e9decf-a3ef-4511-8b20-ee264f152ade\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dd684e2d-e29a-4a08-91d8-24fa9446453a\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d8fdee61-3c00-4259-b019-67412dcd9e8a\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/43277f6c-2fa5-4ab7-9a81-c611cb102c1d\",\"moduleSequenceNumber\":70481},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/23a11882-e4e2-43dc-9630-c6e889cf7c22\",\"moduleSequenceNumber\":70476},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4ad29297-016e-4a16-8deb-b781bcd2e22c\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/77736a0f-ccea-44ed-a132-a13d382d5c12\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3007d9b7-1719-4f2a-9588-81b7eefdcdd9\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/ad00abb4-bae2-416c-9465-4c279d3358a5\",\"moduleSequenceNumber\":70463},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/51c128a9-6195-4c00-99b7-e7c559ac12d2\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2f15774c-6f55-4e76-8895-7d2fb59fcceb\",\"moduleSequenceNumber\":70490},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/11166a51-1c8d-4a89-8e6f-3c308165aedb\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/52ac566e-0504-44fd-b4fc-5c603abd8b58\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ce59bd6a-ce33-4771-94da-025e5d7ddb7c\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a6fc127c-6c03-4d69-88d7-664991022411\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/aad9d993-9408-489f-a54f-4a08095e5867\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2e4b4960-14c8-455c-9511-93f77fd12c44\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/537138f3-7ac0-451a-8078-20dfb46bb00c\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/68203386-48df-4ffb-9e62-cc092e08211e\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/47bf2230-5481-4620-9719-747b66b9dd60\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c900c6ad-b353-46b7-99ff-e4cd7ab416ad\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a32abcec-6094-46f9-9115-cf7d85a646d6\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/487b521d-3ea7-44d4-b6ce-c33b5a6687e8\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/31793fc8-949d-4c6a-813a-6a61b5f8f433\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b3306e11-336b-4c04-8bf6-91a4ba9d8e4f\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6ab22fc4-11c9-4e4f-aeed-f0d4129714b3\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9a1b86f5-15ac-4f88-93e4-d6000c83880a\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5e1da67b-b683-4831-8e04-9b56d870fd45\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/57fcbca9-b575-48c0-8a77-1a486787cae8\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8faafbfe-737c-43e8-b8be-15a1007788b6\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/420428e6-a769-4afc-bb4e-8b496f35ce56\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d51e0fbe-b1e8-4641-ac0f-cd0cec22233e\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/f9416dd4-1c7c-4206-a901-c19d72e7f5f2\",\"moduleSequenceNumber\":70484},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/156cbcde-f12f-43f4-80e3-d8e10b2c4d61\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9b80bccf-9dd5-49d7-9dc7-c16b5ac5d85e\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3882730b-4db7-4cfe-bb7c-64e6b64a8c0b\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/df1c0709-6947-499b-9a6b-a43cebf3af2d\",\"moduleSequenceNumber\":70463},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/faaf6b71-5e42-4397-bb62-fafc5b5bbdc3\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/8fd31f06-d44f-489a-ad33-249546fe0d66\",\"moduleSequenceNumber\":70489},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6a41846b-b833-40c9-bd8d-12bcb1200d37\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f83f6748-047e-454d-b7a7-85fa3ac70d5a\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dac3dfc1-93a6-4791-a72d-bd76e5cb3ff8\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d992190c-b607-472e-b294-e6ab5fc5f34d\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/54331637-7ecf-436d-97ef-7ad7fdd764cc\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2a48a955-e18a-44e1-87f4-57843ea627b3\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/eb029541-5a5d-40b6-88c1-e0fe4774bfee\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/eff8d31a-f4dd-4f4c-a9cd-13e5c15202cd\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4dd05a0a-bd8d-4a28-8e41-482069aa98de\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/957813ba-a72b-4b26-8ab6-75609066e5e8\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fc5a1497-bb89-4158-9114-43f167e73212\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/db033df0-bc1c-412a-be58-5108b4a5292e\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ab2232a0-2c66-44a0-b78f-24a3451f6164\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/32ae0c11-dfc1-4e07-ae66-a3d71744f213\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/273c53ee-b21d-42d0-844b-c144a7dc37af\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9ef2756d-fce8-4369-aeec-86e390ff0cc2\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1cc86d5d-6c03-477a-9398-858fdf035c3b\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2eae786b-263c-466d-9b56-c7c4112d385e\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c50f6c91-09a9-4e65-bc60-a09a78ad85ea\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2600cc4a-9efb-4523-acfc-b4565610c9e5\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a65e11a3-0821-4ee3-9eb0-bec0413e390e\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a9f586ba-2f60-40b6-9c59-6a4e97b6396b\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/34930751-9d3c-454a-9140-b31f0b3ec279\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/118aeaed-90dc-4c61-a0d0-c0e5b0601b7a\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d91039b8-d9e3-4fcb-bd8b-c31fa9170ad7\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5eb4db48-629d-4132-a193-8eb167b59d5a\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e16cd5f4-b2fe-41be-a3f8-538360f8e811\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/33515872-cc11-47b8-85eb-561494b1d712\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/0d1999a5-fc3b-47fe-9270-2c1cab9b8bc7\",\"moduleSequenceNumber\":70474},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/99754d70-8ac3-457c-86f5-54836f48f4a6\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/cb0fa225-6e62-46b4-a665-ce5420d13f26\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/fdc2f1e9-996b-499b-acc3-8b72ca8e4199\",\"moduleSequenceNumber\":70493},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0ac90e1b-873f-48a8-892b-43aa17ddc6ae\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d59325a7-46e2-40ae-9deb-81c11cf774cc\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9c734a9f-a404-4c99-9b4a-9507496a15e4\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/795f7283-f0ab-40b8-8ded-c31a0e8c7723\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/eb277ba4-59f1-41f1-bb0c-4b191303874e\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f9f8617b-3b84-4354-b196-98d871dce056\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0b6ed1b6-beb7-495b-891e-a2a91355715c\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d0fba916-31d4-4280-b2c5-2b335cbb5106\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0eddfdb9-bed1-4755-9d89-9bc351318222\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3f422b8a-f2d1-43f0-bfaa-a8bc38336c77\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ce4703dc-494f-4958-a344-1d22d70fe188\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/20f0eb9d-5480-49b7-a4ba-864c46453705\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/190ae8e2-e0f7-4a84-b6ca-5d2501163135\",\"moduleSequenceNumber\":70484},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a339eeb9-7f31-4556-96e8-7125bcd7ac39\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/32e6b1da-23a3-40d7-9ce5-adf25e35c651\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9ca32a93-61a7-4ba0-95f6-a1f23119ec7e\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d91f440d-3c0e-4f4c-88c3-78b7cbf513a4\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/df86c57f-8a85-4064-8d57-93c4377ae4ce\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bf466b59-4dca-4483-b53c-a4fb6e25e070\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3be4ea84-8549-4a5a-97b5-e9b5ee94f86f\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d187ea42-aaec-46f5-b414-b068f013205b\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7c0deb0f-29b9-451b-acea-c10a57b61f10\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/773f2165-7f02-4bd8-9518-84cbe65ea051\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/05bf5f36-5c00-4a11-bcb7-b94e6a5fa328\",\"moduleSequenceNumber\":70481},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/32eccffe-b180-4309-ae1c-204419e648d2\",\"moduleSequenceNumber\":70476},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8fa36b70-0e8f-424d-a50d-61dfce98ec05\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/64fcb735-81f8-4d82-a468-e4c767c16070\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/10917f92-54ad-4038-b865-b41fc437dafe\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/35120c46-6802-411a-a902-167faca9d12d\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/91878ae2-61ff-4ed5-bbc2-bf9eee3a9872\",\"moduleSequenceNumber\":70495},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f44528ce-ec84-4d7d-8fcf-6ef386fa6d97\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9b91af7b-bf1f-44d5-882b-8364fe3701cc\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fd05b63e-59ae-4329-8da0-7bc0de8c049d\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a2a56e39-5648-42f1-af03-761297a5b940\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/dd763d43-b024-4275-b88e-62c5cd2d82c9\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5c4e9c89-dd7b-4fa4-b288-aa431297bbfa\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b8d273e5-50a0-4e78-9db2-d83cc9ffc0c7\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c41c88b4-e28a-4bac-8885-ee1dfd753076\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e663094b-be0d-4f57-93b0-e74d2a3f74ad\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b509db9e-0b48-4141-a45b-3b9bf8b3d07a\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1d605c1b-d59f-4a49-9799-aefa0d89ae65\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/35b011bb-dcdf-4f22-810a-f29e0c14609e\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cec9f340-09dc-4cb4-bc65-c942d1fbb251\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/52038b9f-2578-47ce-bf78-43f999f13528\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/caadfb29-9ac1-4069-8fba-1abe3f6cf92b\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/01b1c3c2-6567-490f-a4a7-07de7a7a9fd7\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e260054c-4862-45d2-a5e3-9ea15d53fca5\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/93dd5184-fede-4e36-a720-9ee35aecc21d\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c9a1e21d-8c65-4343-89b6-2f7455391fe1\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4baca468-ab00-480d-9c6c-b8fe61a819ed\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0a3f4a0f-d68f-4f8d-b36b-26a18fecbb97\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/7cbfc7f5-f3c7-4b75-984e-600c71163967\",\"moduleSequenceNumber\":70484},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1202ceab-9519-4dc4-8a2a-b8276ae651d3\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/52b86757-ca8b-49ec-9480-c1edd1897f32\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0fd84e43-419f-4566-a8ef-e1c7efc4885d\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/b4618e63-e56e-48c0-bd2f-8ad02ffa5f7c\",\"moduleSequenceNumber\":70463},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/2f6e935c-c832-4db5-98b8-9a8ea00bc9c7\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/0e7377fa-5972-4e27-8af4-55e397b052b1\",\"moduleSequenceNumber\":70489},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/00089ce7-21ea-47a6-bbd7-1ad7defeb5b3\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d1b6391c-acf7-4ec3-bb59-64c3ffd1eac0\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8b3d8e7b-c62a-4c8f-a94d-21026cd5cc07\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/28f4d3eb-6603-475a-a60b-440542d45a3d\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/42fc896e-4c06-4927-b875-b32e132a5a7a\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/be79e465-9a2d-4839-9296-6d49c03916c2\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ec7e00ab-32c5-4c86-99af-139431996b97\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bc9f2868-550f-4240-a235-349c1ee195d0\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/166355f9-8063-4598-8147-d38926994f42\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/32452ac5-3f26-498c-aa90-3c05e3c2b95e\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/d47cdee9-5216-476c-9e8e-8e326b89ff73\",\"moduleSequenceNumber\":70481},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d6c8c974-3815-4dba-8154-fc94946ce852\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4eec2e7e-bfc2-4417-b8c9-bca021bd4882\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b67009cc-9dcd-4f3e-a08b-a1fd66a153a2\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6afab88f-577d-4cf3-b2db-7130238a05db\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f6880a6a-76ff-4378-8eba-ee6f5f4751b1\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/aece8274-6fff-496b-b510-95ba9e68b12f\",\"moduleSequenceNumber\":70488},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/56191dfd-d22c-481e-846f-64fc5275b767\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9357b2f9-a452-43d6-88a8-287a43b4c5ac\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/49da7508-7f3c-42fb-8bde-25c90ca2e492\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/814c1a73-13b4-4378-ae75-d0b05a047de5\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6f7ac62e-ebda-4e5e-ae9c-6ecb0dc026a8\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4b2ad94d-573c-414a-89e0-9c9d30a615cc\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/be1d4a5e-5785-4207-b210-d3cc15acadd5\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3cab6a64-8a01-4d07-985c-650d4523a7f7\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/84782262-337e-48c3-8ffa-f633c80b3b62\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cb6e099c-4072-4371-b8f4-ebc4dd5e22c2\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e975c75d-032b-4629-b38d-465d5f96b206\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/afee0c80-8d9b-49ac-a2cb-9e7e2ba5078a\",\"moduleSequenceNumber\":70460},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/1e452441-db2d-4047-be00-e54dc40a9fae\",\"moduleSequenceNumber\":70487},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/27a20833-6e0c-4a1b-846a-c5a3b732df4a\",\"moduleSequenceNumber\":70477},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/162b170b-27be-4d08-af9f-ba0dd3b26087\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b972d84f-2010-4fbb-8258-2f5e0baf9a84\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/75985cdb-981a-4ca2-b44a-4fb189181f7e\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c46a9b0e-c486-4c1e-b2bb-7fc2786060b3\",\"moduleSequenceNumber\":70469},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/aaac8e20-d61d-46aa-a963-358f6f600f56\",\"moduleSequenceNumber\":70468},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/984e18ed-017c-4ae8-b8ae-eef2827f8803\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/52108c26-d5eb-4168-8ea3-452ec836e725\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6f6e0455-b779-4cac-a0d2-54f6b9dedfc6\",\"moduleSequenceNumber\":70499},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0c39f4c4-2a9f-4b2d-aaec-aa2fb10bf1d9\",\"moduleSequenceNumber\":70472},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f19669df-550d-4a11-a09b-130532dad031\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a33a020c-223e-437d-952f-22da88e072e8\",\"moduleSequenceNumber\":70464},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/7a142871-9e17-4445-87eb-d7e34bc541f0\",\"moduleSequenceNumber\":70484},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/d3dba33a-6986-4eee-b654-439ebc0c217b\",\"moduleSequenceNumber\":70476},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4346936f-3f7b-4393-a9a3-8d9d1013091e\",\"moduleSequenceNumber\":70475},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5dd61fd6-b7bd-47b3-b1cb-70c0af64c7d3\",\"moduleSequenceNumber\":70470},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/35b9fba5-b378-492a-a036-1b031734690d\",\"moduleSequenceNumber\":70465},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/dd32077e-4862-4b44-b503-aaabe12b9d36\",\"moduleSequenceNumber\":70460},{\"filename\":\"/singularity/faction-early.js\",\"url\":\"blob:https://danielyxie.github.io/12786aa8-7a13-4429-840f-f5a7a6671a3f\",\"moduleSequenceNumber\":75134}],\"dependents\":[],\"ramUsage\":75.9,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":784,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { owned_augment, purchase_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport {\\n    join_faction,\\n    raise_combat_stats,\\n    raise_hack,\\n    work_for_faction,\\n} from \\\"/lib/singularity/faction.js\\\";\\nimport { work } from \\\"/lib/singularity/work.js\\\";\\nimport { has_ai_api } from \\\"/lib/source.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Join the endgame faction Daedalus.  The requirements for receiving an\\n * invitation:\\n *\\n * (1) Must have installed at least a certain number of Augmentations.  This\\n *     number varies.  It can be accessed via the getBitNodeMultipliers()\\n *     function, under the DaedalusAugsRequirement property.  The function is\\n *     available after the destruction of \\\"BitNode-5: Artificial Intelligence\\\".\\n * (2) Have at least $100b.\\n * (3) Either of the following:\\n *     (a) At least 2,500 Hack; or\\n *     (b) Each combat stat must be at least 1,500.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function daedalus(ns) {\\n    // Ensure we have already installed a minimum number of Augmentations.\\n    const augment = owned_augment(ns);\\n    let min_augment = 30;\\n    if (has_ai_api(ns)) {\\n        min_augment = ns.getBitNodeMultipliers().DaedalusAugsRequirement;\\n    }\\n    assert(augment.size >= min_augment);\\n    // Raise our money and Hack stat.\\n    const fac = \\\"Daedalus\\\";\\n    await work(ns, faction_req[fac].money);\\n    await raise_hack(ns, faction_req[fac].hack);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the endgame faction Illuminati.  The requirements for receiving an\\n * invitation:\\n *\\n * (1) Must have installed at least 30 Augmentations.\\n * (2) Have at least $150b.\\n * (3) At least 1,500 Hack.\\n * (4) Each combat stat must be at least 1,200.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function illuminati(ns) {\\n    // Ensure we have already installed at least 30 Augmentations.\\n    const augment = owned_augment(ns);\\n    assert(augment.size >= 30);\\n    // Raise our money, Hack stat, and combat stats.\\n    const fac = \\\"Illuminati\\\";\\n    await work(ns, faction_req[fac].money);\\n    await raise_hack(ns, faction_req[fac].hack);\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join the endgame faction The Covenant.  The requirements for receiving an\\n * invitation:\\n *\\n * (1) Must have installed at least 20 Augmentations.\\n * (2) Have at least $75b.\\n * (3) At least 850 Hack.\\n * (4) Each combat stat must be at least 850.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function the_covenant(ns) {\\n    // Ensure we have already installed at least 20 Augmentations.\\n    const augment = owned_augment(ns);\\n    assert(augment.size >= 20);\\n    // Raise our money, Hack stat, and combat stats.\\n    const fac = \\\"The Covenant\\\";\\n    await work(ns, faction_req[fac].money);\\n    await raise_hack(ns, faction_req[fac].hack);\\n    await raise_combat_stats(ns, faction_req[fac].combat);\\n    // Join the faction, earn reputation points, and purchase all Augmentations.\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join an endgame faction.  The endgame factions are: Daedalus, Illuminati,\\n * The Covenant.  This script accepts a command line argument, i.e. the name\\n * of a faction.\\n *\\n * Usage: run singularity/faction-end.js [factionName]\\n * Example: run singularity/faction-end.js Daedalus\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Join the appropriate faction.\\n    const faction = ns.args[0];\\n    assert(\\n        faction === \\\"Daedalus\\\"\\n            || faction === \\\"Illuminati\\\"\\n            || faction === \\\"The Covenant\\\"\\n    );\\n    switch (faction) {\\n        case \\\"Daedalus\\\":\\n            await daedalus(ns);\\n            break;\\n        case \\\"Illuminati\\\":\\n            await illuminati(ns);\\n            break;\\n        case \\\"The Covenant\\\":\\n            await the_covenant(ns);\\n            break;\\n        default:\\n            break;\\n    }\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/home.js\\\");\\n}\\n\",\"filename\":\"/singularity/faction-end.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/23071077-5535-41df-a00f-afeb43502cdd\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a7037210-3319-4096-adbb-d574a305b397\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/492e623a-d2a7-4e7f-be8b-1e2f2e774c04\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/435ffb7c-80cd-4ab6-ac9c-db42bd2d6d5c\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/625046ea-da83-4fb1-bc38-390643c8c87b\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0d58fe0c-d9c4-466e-9cff-6d049c73fe90\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a539a7f8-1773-45b3-ac53-67fdbfa26f4c\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5f4e7261-24d0-4a4b-a7b9-b4a8ef961b7f\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/867564f1-32da-4c66-ac2d-82def8ec3849\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d0355375-75ed-4c42-889c-0a55984255b7\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/38cd8bdd-4ab7-4fd5-88e8-efc684e6d902\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6d1ed5c8-4d8f-452b-91ce-8303c53aee77\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/29b0335f-0870-49e1-afab-fa148ed933e4\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/28509ceb-c407-4a75-968a-310f68bd8a20\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d997f707-3fa2-4b63-944c-b1c08a578399\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/da03645c-4bdb-4883-ac93-bf97066512c1\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e070d5b9-0ec7-4c5d-b9bd-cf3821f518cb\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6f66810d-0edf-4145-acb3-7088ddf07fdf\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b2c62aa8-8453-403e-b3d5-90a3fa951865\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/2b9ad0be-06e3-4b00-bc8f-5fde961114d3\",\"moduleSequenceNumber\":63527},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/6f407a15-ff55-4b86-99d1-83b822800c83\",\"moduleSequenceNumber\":63566},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8c90467c-a905-4a83-9ebb-3e064491343f\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8af7b94f-863b-4e85-b168-29ffa8e781df\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/890b9841-945e-4cf4-a1c2-6b57e677093b\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b4d90ef7-a8d5-41ab-854b-8c8104ab7743\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ecdb3eb7-94d4-4e54-b6f7-8d3410845b16\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/de05cd66-136c-4238-98a6-60b5e66c93a4\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5b84772b-d43e-427e-8c6a-05fce54b7974\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d386c8ab-03e8-421f-b22a-5b85dd58f578\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5ac3e5c3-3763-496d-90a8-e219c98ce096\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f7d56b1a-992e-49c5-ad7f-0655cd0ba476\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3da51765-1136-4245-862a-48d0083af3e1\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0742a673-b39e-48bc-82a5-d526ec51e6bb\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a516f838-5c95-4bb3-a0c2-7de14b72227a\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/510799ea-4f55-4aae-b489-b78c590aa3fa\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1dd6e17a-a8f8-4545-90d0-e57f9758735a\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f9e48dd0-ac28-4a14-8e74-68d63f1cd0cd\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bb29bb31-d31d-44a9-8dda-825c3acb53e7\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c3a96bab-8f97-4a1b-a751-af31e15657ee\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/03ac25de-5fb8-4465-a199-6f7814c0ab32\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/f7f7d5fa-0f0c-4271-b885-81d9fd5e5010\",\"moduleSequenceNumber\":63542},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5caa0c45-751b-4fe3-b547-44b7393895a5\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a7a225e7-d2fd-4359-8ff6-5082178b4fbd\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/f9bbf460-2439-43e2-9eec-4ae85003487b\",\"moduleSequenceNumber\":63561},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d62925cf-df19-46a2-818e-e88cc9f5a653\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cb43e7fd-a3eb-4e91-b049-bc32e7f89195\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ecbacc7a-befb-4e22-9662-2cb1ec013a97\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a95d4a7c-ef38-440f-a6d6-2112fc7b2eaa\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1ee0eed2-e2c3-41f0-9400-74f68a79b1a6\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/750086b4-4d71-49be-8f6c-8e0de3131e4f\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/df778f35-0dd5-44d5-a1de-c3711677722d\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/437746bc-dd93-4956-8ee6-3e8477779e17\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e956aad0-a508-47d4-af83-068c8f81d5ef\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e618185d-d00f-4261-860c-86fc93ad9e91\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/350f1b78-6ac8-4f37-9e9d-983019b7437c\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0137b560-334f-459e-9c1a-1fb5744896a6\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/bbf087d5-3624-42a7-9fcd-437a579795cb\",\"moduleSequenceNumber\":63552},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/bb93f4c6-ac80-40f4-b72c-489fe5d9c621\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a7364a14-aebe-4884-9780-99508d1dad15\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9102237d-5c9f-4f66-b50c-83541dbfd7a2\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a08cb983-7fdb-4c5e-ada0-9c48d7d6a4dd\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b59e3daf-7beb-400f-832d-01a537a6aa40\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7b07ac0a-fa57-4c3e-baf9-d017d14e27c1\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/373d62b5-0184-4874-9120-6171ea8216d7\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a9493b07-d267-499e-94a5-1e309cf6303b\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9db779f0-9d5b-499e-86a5-e544b8ad2dbc\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7023f139-5421-46c6-b6be-6d5c4ff82ee1\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/7cf8040c-2205-44a1-8e29-3ecce3d08ed3\",\"moduleSequenceNumber\":63549},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/891a4b29-7ace-4691-97b1-d24fe7ac8f77\",\"moduleSequenceNumber\":63544},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4887d2db-12a7-47e4-915d-3fe4e99df6c3\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0ea6d182-217f-4601-ac24-a5cd01eabb88\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cee4921e-240f-47a6-83a2-7fc7cd36aaa0\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/e992400d-ccf6-48dc-afb1-82bb0139b342\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/766c7b04-01a0-4805-845c-80947a9b54e9\",\"moduleSequenceNumber\":63563},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e5784760-5430-4aa3-896c-bdd0b79f7e9d\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d608d2b2-9f19-4952-bd79-718f20721721\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3928e697-604c-4ac8-80a9-6d223b1c41c8\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5dacaf03-5a54-45e7-a8d3-a28a73475995\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a94d6b93-65dc-47c0-a195-a186dc776881\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2ea8b0ce-19de-4dbb-b01f-048a6150561c\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/619733a9-7b42-47c9-8e0d-825534ebfc0d\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2ac633d0-cbf5-4da4-86ae-9594a8062290\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e94ddcb2-65ca-4d26-a951-868a2044436c\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1bb67beb-faa2-4de4-84e3-b191c5f67faf\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/562c6d9c-aee5-492c-8871-a31bd2dcda3d\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5a15b073-70fa-49cc-9d40-e7f8fa0e078a\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e8e52011-ac11-4d8b-a313-4d00084b3ab5\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f1528e0c-7baf-4ad8-9bb4-7cd043cc2f03\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/283e7062-6ef6-466e-beaf-2816cb7a1d4b\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b6415ed7-73a5-484e-90e5-b1c8b3d93bae\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/35252cf0-1627-40f0-abc3-2643f5676046\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8f1d32cc-1a6b-4b71-a0ee-8874839a4ec1\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3a224635-c154-4e7c-a94e-e2bb452fa356\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/1673b0d9-059d-480a-b62f-6f53d3f7312d\",\"moduleSequenceNumber\":63542},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2b55eb80-f4f9-4ced-a42a-601820f791f6\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/2129efb6-3cd2-4d20-bf93-c61b5760173c\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/c402cdf4-5246-45fc-bdc5-b4caab5eadf5\",\"moduleSequenceNumber\":63561},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/644bc5f0-d8b8-4195-b21e-ff88a7e6cf24\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4833a3a2-30c1-4d06-bc06-c230e5fc68b7\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/81cc888d-04c0-4454-a28a-a03a04763c65\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/45b764e3-3142-44d0-a309-5481052e491c\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ca1dcdc0-0175-4de6-a5d3-b2bc533ee66d\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d3078436-dd2b-4489-9c50-59bd151ed983\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6c731c8c-770d-4970-80f0-428c9d92d5c8\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/085e1750-f7dc-44cc-b3fc-ebe83d762ec8\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/67844ef7-e0f4-474e-8e80-bbafbc0e6b84\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b0c1090e-1480-47a6-a3ef-cea505ce211d\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dbcd5ced-f634-4190-8d99-34824ef2cca8\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/aa9bbde1-9aad-43c9-9d88-722106e54d20\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/03c1e6cb-1ebb-43ba-b860-73ffe9f57792\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7f7b47db-58b9-4eeb-af02-c1e546810576\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e6e9b6c9-7f99-41d8-b22e-e14578383f1f\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0329e41e-9989-4fb7-a802-9858a6578364\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8c771d78-e6e7-4b0d-8846-e463d853e4b3\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/99912f4a-b1b6-4f19-834b-1d58466fd692\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/25bfbbd6-78e3-4390-b679-46d5bdd528d1\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c01b80fa-7782-48d7-b349-e8c4967331a6\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/24e8d6f7-4818-4a8e-8536-46496be7390c\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/410a2a67-7068-4bff-848a-d649fb450be5\",\"moduleSequenceNumber\":63555},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/71cf77c3-7e5d-4dbe-9001-447b186a3549\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cb9d80a5-7e30-4daf-b2f6-7bbfdf5097a0\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/35657e99-ff58-4477-baeb-ca6019221041\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a0c2a1cb-821e-49fd-95e7-c599159e848a\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9b261f5e-c75a-4163-8d7b-5607f14c91c9\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cac7b380-e5c5-4da5-b15c-a1294287d34e\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a2b34703-0a0c-407d-9cef-cf0afc748369\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/589f73eb-828e-42c8-9c82-82a99cbcc404\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b8694c51-22db-403d-a673-acbcee2a55a3\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2241a12a-e578-4d9e-9701-2ea0765d6185\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c1d1154e-a38c-490a-8718-aa158caeffee\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/41704db3-d12b-4b32-91f2-0678ea8fda92\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/6e788e43-59c4-4ada-a44b-399b8cf15f0e\",\"moduleSequenceNumber\":63552},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fa380cd4-8924-4500-a5d7-ee1a5df966ff\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/99087803-cf25-49ad-8904-c59f95feb09a\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/feb5fded-3f8e-48e2-9d50-966cc3c64e98\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4ad1cd70-3f63-4f53-80aa-baff8435c6b4\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/614de940-74a2-41f1-8d41-e679a2dcf286\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1af661e6-00f8-470e-9650-e525a9f5fe69\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/767b71c4-5f79-4452-959d-e1536e76807e\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a4c7f194-a13c-46a5-954d-0675074bdeab\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/41619ffc-eb67-4f33-83bd-786a25f6bf9f\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e1353596-19d3-448a-88fd-5b85436a9761\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/dc1c0cd1-69df-4f7d-aaed-f663db0e297b\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/36832485-76e9-40e1-ae64-0d9c16987c17\",\"moduleSequenceNumber\":63551},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/89098214-3099-4eff-a643-57c6ddbbd6f1\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f06340cc-40df-4901-8a44-a60a326987d4\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/8f7a871b-50b9-4f0d-ae7e-de8676f53276\",\"moduleSequenceNumber\":63559},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6da2ff0c-bc10-4941-ab4d-4bc9d001da1b\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dfd9aedd-b8af-4d44-a021-09b7b4899a43\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/81d3e8e9-e77d-4876-9777-b038c7a68150\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cdcc4867-ac74-4203-8dd8-424aa512d690\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3836b8ef-1287-4468-9c41-c9f62f9c3d1e\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d09676f6-26e4-4461-b4d8-b88878fc5601\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/81c84cd4-dc28-4ec4-ae94-fd91065fcf61\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8eba83bf-787d-44d1-9da4-541cee3353e8\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/776f697d-433e-489b-bbe1-bad242defd50\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a306d81c-235b-4e05-a1aa-ee8dd2e527be\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/86c38beb-84d4-49e9-bbcd-7a07e41c6511\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0511980e-4708-4480-8078-82d3c6eb283b\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/286abec5-3f99-4ee5-a919-c46e6c7cc770\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/99c53141-c7b7-4c94-8fc4-ce8b26b713a9\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2e245da2-89a8-4861-864a-dd0ac205c0d3\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/60b04204-032d-489b-96a5-78564f836e2a\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c4cdfe16-873b-40ed-b419-65181ace8d82\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/52439f4c-ec76-4ca6-9a4b-a3f98d6e2774\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e591f579-5ef6-4402-b0a2-2580f84de99d\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5851ed44-01aa-43ed-b5b3-da88dd0c6a01\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/395aa8d4-1679-4057-9d5c-f01c5a0302bb\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1afb1bf9-73c3-4755-8ac9-68e234c37946\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b4e14757-6335-46e9-b8c3-97f075532d77\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0e022907-5356-4886-af3e-92405c97ed4f\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/79b1b110-009f-4454-bf88-bb257ee9510f\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/660dbe2c-e19a-4a34-9a51-da959b2d9838\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/126ab484-286e-4ace-a878-8dd9df0db50a\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/eaa13279-9a83-4441-87c9-903ac7966b86\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/af1bf5be-304f-4058-9858-cabf56fc709c\",\"moduleSequenceNumber\":63542},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0862c812-3fa3-418b-a99e-28d8cbe6e501\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/20aca0a8-27b5-47ae-8fed-36737e37bef0\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/5595f27b-5622-4f37-a7e8-0a8aeedaed7a\",\"moduleSequenceNumber\":63561},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7700ecdf-331d-40f4-9c1a-186da650b4f2\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0fd58478-b495-415a-805b-1e841d606759\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9fbcaa7e-ec05-44ef-abc7-55794a52bd7e\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c85aba63-64ba-4c5c-a21d-3ea12922b583\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3e43486c-420c-47aa-b542-04a6fb227143\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a311fed7-f0c0-4262-a648-97500b4f5b15\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2d324f71-2ec1-4f04-8262-2f01ca8ce433\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4bec349a-6ddc-48ce-af73-22f77e290ba3\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/de8eee6d-ccdd-4348-aeae-4040dd8c627b\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/95ca00cb-53c6-490f-878f-a9f1039ac6e9\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/faef0a3b-766b-48b8-9c87-9b1372722261\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/36d6b50d-d1c6-47b3-a6fc-1ea27b105302\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/ba8f95c2-4020-4c7a-8559-de0995eca932\",\"moduleSequenceNumber\":63552},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b4cf9df1-17c7-4c62-90fc-414b52d7fb48\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f2016819-5525-4154-8808-c8efa484b8a5\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5a73609e-fe9e-4588-bf6e-c92eed1aac5a\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fca098d0-39e0-4a90-9163-1a03a0202516\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/64e4dd98-19c9-468e-91be-41d66dc50378\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b7842fa2-3b80-4b3a-9129-84417d024f34\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/408b952a-c1cd-4ed4-a420-4e561fde2fb1\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5f2fce75-8e02-44d4-a833-441f47688b31\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cec601b9-7642-4828-be0f-88e1dba11570\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/eaf2e687-bf4b-4bb4-ba46-bed36ef3cdd8\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/13b9dad2-dd4c-477b-bc64-997454775933\",\"moduleSequenceNumber\":63549},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/08fc9263-c400-4c90-90e7-aa51b4c3d525\",\"moduleSequenceNumber\":63544},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c72d0424-15b4-417d-891c-df830e31dd57\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/244a9306-846a-4b89-8a9f-509b7329f2e5\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fa0da294-ffc9-419f-9ac5-96c9ef843e72\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/4c7a2873-7347-4f54-b328-226df7b6db6e\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/cfa3c353-7905-4ae5-b3b2-7ce1fe0d1440\",\"moduleSequenceNumber\":63563},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fe63b569-12a7-4cea-a4b7-35209893cda1\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dc6c7358-5247-475e-a714-6391673fa8a6\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a1bba231-2115-425a-9333-9bc3db4700a8\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f3b63dea-a579-4104-8d67-7673e6c53b68\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/399bf1da-5003-45b5-ada2-99ba23f746a2\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9038ba76-8d83-4251-a208-a97970fe0a3e\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c7a871b4-f8fd-48dd-b1bf-4f11e4a9e260\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/71d4cbcf-85bf-43eb-9c34-29af631ef922\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5dfd78f7-9ff2-4e6c-9c65-29b3574f80b9\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/17d628bf-e592-4222-92c2-bf84e85f8db1\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cde51279-0acf-4fe3-a2a6-66710d4b0caa\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/52b69532-b7f0-40a3-a706-8c3736f2d0d7\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b685e5f8-6478-49d7-b41c-ac9f1321c4b5\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c5e3bc5c-da75-4936-849b-b8f9a26246e9\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6552df34-b0a2-4950-8eb3-26bc4e25034d\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e474957c-eca3-4ca8-b4e8-43306c241ee7\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cab05cf7-41d0-405f-ae74-4c9793c2e49a\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1e2b3ef1-99da-435d-82cf-dfbfcb62da7e\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/659b0884-076f-4e00-8ae9-ca448bf969d8\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dd76e11c-8102-4872-a778-67e056dc5589\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b1198ed8-6073-42dc-9d59-f7475241b7fe\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/a791e8fe-ca83-419a-86b1-76316aef5348\",\"moduleSequenceNumber\":63552},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/eaf58408-efbc-4614-8747-05c8ac5de704\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4a5c1f32-792e-4810-adeb-d2f494f7d505\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/99b2c923-0794-493e-9ccf-eee8bd72ed91\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/21c986fd-8f9c-4b50-969d-96de7cb227c1\",\"moduleSequenceNumber\":63531},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/3c7fd625-582c-4fce-8169-ccab7f834228\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/ec168ad3-f004-48cd-a661-779263565dac\",\"moduleSequenceNumber\":63557},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8274d6f1-3cc0-4adc-bfd4-fe5c829ee916\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/79e096f7-f5d2-4e34-a944-b13614d1b356\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0947a0b8-9c5e-47ef-afe5-271937734d36\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/95210b22-1b70-4134-afe9-1cf1edcde8fb\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/43c78ed2-2df2-4d76-a145-b35841540173\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cb19d951-b7a8-4b46-850a-ecb62d7a3a12\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e0cf54bb-f2bc-4964-9ea3-034d81c78dac\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c36ac7bc-6921-4327-9cac-f3aefc40c1d8\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b95967f6-5977-48a0-9deb-4a8444d94f0c\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6414ae24-bdb6-4ab8-8108-d6e78a0a5869\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/e6aa5131-324d-4be1-be28-d589e9d15fae\",\"moduleSequenceNumber\":63549},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e43565c7-d7c9-4fb4-a67d-5d8bcd93f241\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a70df92f-f6c8-4369-955c-130b91fead5b\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5bef7154-d40b-4f1b-997d-4dd7cf87902e\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/27bdc69a-d711-420f-84db-c421436f5a63\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/2833526f-ec5a-490a-9030-5ab553f1c1ab\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/f5c95e36-c1b4-4693-914a-1f6ca4506eb3\",\"moduleSequenceNumber\":63556},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5aab704f-b2b1-4a2b-b9a4-3065ae34a721\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1b6c5416-224f-48d0-a857-44d113ab9d09\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5427f325-27c8-47b1-9bb2-6a47210f48d1\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ed517ae7-4834-4c20-b0d2-2be40b0af58a\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bd3497c4-bb94-43c0-bc06-f519d3e7a521\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2af04ffa-72b1-4b95-a65c-cd5650fbf67c\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1398bb5e-cf81-4954-85e7-5ad077079cc2\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2bc450a7-9189-4047-b5b3-67862151caca\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8275d962-2fc0-442c-bedf-d85c53ed77ed\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cc147622-f9a5-407a-ab1c-154e92eb1a1f\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2d334f0b-48ba-4367-b9ec-b78bf204a304\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6e5a88b7-d1ed-4b8d-8e61-800e8aaec994\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/f1d447cb-3c4f-41d1-ac0c-087e1a2e35d4\",\"moduleSequenceNumber\":63555},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b4e42af6-a787-4dfe-b07c-b4dfe97d14b1\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/64817c31-d0af-43d2-bb8c-40bff5d3f205\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/df4119de-c6f2-408f-8fe7-310aeb487097\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/77b94069-05f6-44ee-991c-68d3bc9adda5\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f37cd3c9-44d6-4ca4-8eb6-2b034936c767\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3eb4bbc7-cfb8-4d1d-8871-d0e28009a88c\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0edf8151-2473-49ca-8918-e92735830805\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/763dbe39-2620-4195-8ad6-6902ad434297\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3e5db767-a97e-46f1-be76-1ff52e90c3a6\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2bf08fdb-0510-405b-a705-4dcd014e537a\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7a23e79a-a818-4e7f-8491-0cd93629a414\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a3a6605c-08cc-431a-9d1d-ab4b8161b1f9\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/a8f8f863-172d-4c80-bf8b-7da239c6bbb3\",\"moduleSequenceNumber\":63552},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/40e7cddc-41c4-4354-b750-56319c6bc761\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0da1d7cf-a5e7-4d7c-9cc7-8f8db1f6a2c6\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/890df6f8-67c5-443a-b303-8b804a1dd87f\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f8ebefea-0d14-4a4e-ac7a-2d1e177b6469\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1f3dedda-3b74-49e2-a37b-7e046413442b\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d1d24346-fee4-484e-b507-f7c4f9196315\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/16edc7cd-a07f-49b1-8089-eb66d6937172\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d6c2a65c-c336-44d2-96ab-564a9361a39d\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6e4b697f-9f8b-42c6-bf5f-d2c7b190b805\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9da5a08d-9542-4c83-b9cf-efd451358998\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/dfa0e1ac-566c-4e26-8530-8be963c4b238\",\"moduleSequenceNumber\":63549},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/16ed54b5-bc5f-4b37-a9ad-e511afe632a2\",\"moduleSequenceNumber\":63544},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5a126128-07c1-4d81-8f11-9a08a4bed528\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b27d372e-fe62-4ada-a1c2-ac91de6e4b65\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/232e96d1-337c-4512-aba5-261441ba7739\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/dd71540a-2a23-4e13-928d-683c08a8c42c\",\"moduleSequenceNumber\":63531},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/0be73f3d-2a5d-4ca6-b3ca-f46c9ac818fd\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fc043292-b09b-4621-bbdd-b3f454b38c29\",\"moduleSequenceNumber\":63558},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0b12e466-e627-4e87-9bab-b7b4632e3a60\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/01ac6cda-1c90-45f7-932a-477c8afbf90e\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a81fb2a4-9451-454c-933a-8fdba37af3c3\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/45aaabea-198f-4da3-8d4d-fca29911084f\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/85627c64-3e16-496d-9826-0231d41cff9a\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d2a518c4-da33-40f5-a48b-e524c08d2f0f\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/65a9be82-15b3-4884-8b65-153a2a2ec5a1\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6ae5d078-c69c-4d91-9940-11ea8f6f7ad8\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/02526507-dd86-4a6f-a54d-5a330136245e\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ef41650d-2e2f-4336-9bc7-09a133335261\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2a0b0c4a-3e3d-4b7f-840a-6412f034f263\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/21ebe1a4-8e2c-4147-849f-10a7991bcc3b\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d88c8fd9-58d5-48c1-9ca1-7be36021540d\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/71df709b-2966-48ec-ae94-297cc0fae532\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f6ab7765-89a6-4253-b28b-17b30e6b79f2\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1cf6fdcd-c097-40dc-b8cc-f009553c4132\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7a27d124-a551-4527-bb64-ad72dbb198e2\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4cfa03dc-49e8-4a4e-a867-64d561d358f9\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/88dc9c33-16f9-499b-9d3f-4f0a96f349c2\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0b015a15-0a8d-4373-8745-079d09d45985\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6ac38893-2dac-43f1-8414-fcfe0ca8503e\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cb7c9bcc-ef58-4a54-a3a7-d75829ba75bf\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3c8380c7-412f-4e52-9624-bd7061d0dc51\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1d534180-1531-4f1d-9ba1-f51928f09033\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/4ef00d14-1f83-4523-b611-b7e66082f2fc\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e78ca631-378a-429e-a44f-f957001929c7\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1f1afdcb-85d0-40f1-8424-38fe0760d782\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/de6ab223-75bc-42cd-b9c0-9c2a296f1c9f\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/d4e7d318-0838-40bb-9258-fd802562a7a8\",\"moduleSequenceNumber\":63542},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0ba21911-35f5-4b83-b2ce-3617805e4963\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/4a8323cd-9449-4b0c-bab7-d60e8d6d2add\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/c6f2e672-8a3a-41fe-a429-b3ed5738d4fc\",\"moduleSequenceNumber\":63561},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0414ae00-8044-4580-be5a-2b08e6adb5e9\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6d59074d-890d-4b1d-86f5-54c0e54b4c2e\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/73e80fa2-35c6-4ea3-a4a6-5394f9a76136\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a3f12a86-6cab-4d30-95ec-dc349691486f\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e1e7ce00-9ad5-4362-b0b4-d642875da78e\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/fcde3150-4102-40cd-aba7-0d69a972faf7\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e16df2e0-ebb7-4fa1-940d-24e1ea9b07a0\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e384e526-5650-40dc-9dde-0de9e3152ada\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/aca53a8f-b3e0-47d8-8dc6-ca3770df5088\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/254a55f2-5fa3-4760-bec9-e5be1e64ea7b\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b4bf6610-597d-4de9-9371-3ab90fa33743\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/af7f356e-ee28-4d12-9bcd-d0577a22c53a\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/893f402c-df65-411b-b92d-3137c621e435\",\"moduleSequenceNumber\":63552},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ce272a87-4c7d-4a6b-907c-ab80b6f6b291\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/69cdde02-cf67-4b9f-a94e-1145c467d7ab\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/007a5b2f-9dd0-4211-b791-674c8995cfe1\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5342c4ef-4b7d-4846-bffd-bbca64001707\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9cf39356-8f52-44f9-bfb7-aa7990979521\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a384d0bb-21c0-42dd-83ce-7209cd25ad8e\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0a2e7fcc-18e1-4f04-82c1-d1d2d14f6d73\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/59294825-4603-45a4-91e0-3a9fe9fa402c\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d355f5cf-0806-4a7e-9c8c-f7a3b5dca0d5\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8357c2e2-f262-4687-9e3e-1f513f2a31b7\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/ee5362ef-228b-4cee-b917-70bac196b807\",\"moduleSequenceNumber\":63549},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/edd427a8-385d-4898-8ae5-f126b75f84d9\",\"moduleSequenceNumber\":63544},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ab11eeca-d49e-45d9-bc94-d27f63e5c778\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0dc9517a-653a-4c51-8df0-267ed25bbbdd\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f6e024f1-5cfa-468c-8828-7338396f116b\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/48713fe5-9ccc-45e8-9644-ce577dcdda92\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/c9ea86e9-fc6c-4cca-a2aa-2e1c0e695a94\",\"moduleSequenceNumber\":63563},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/49e4ce3f-fc85-4baa-b25b-41bba0338cf7\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/33f3d8b0-1d49-4b35-a55d-0b8c6a74c8ad\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/86face1d-61d0-45a9-a453-2a4e9a011204\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a671ff2c-a15a-4e2e-a567-acd04c46f1cf\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/25c99329-ce31-421b-a602-83af390e9c94\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1afdc3c6-5b22-48df-bb5b-a96ce7e93d49\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/abe0c85e-d2c4-4c12-9d11-ad137309ddcb\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a93b9fd1-0631-4570-8648-c1b241cbd848\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ed7d85fd-0bd0-42b6-bb74-3623ee718985\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/131af3db-2957-4606-ae17-03cc7958c61a\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1b679e8c-3355-44f2-92a7-e40790ffce59\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f2ff04c2-5b5f-429c-9eaa-ad09a8050d7b\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/607fe84d-25df-4bd6-884e-0781e875e4b6\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cf62b3af-1673-4e07-b7b5-52783ae744e4\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3d36ed68-fe6e-43ce-a5f4-4daffffa1bfb\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d8d31850-9111-44e2-a2ce-862eb1de9d0f\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/59d97496-c1da-4a90-b5de-25ce478ae458\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/daf203a2-660f-4c4c-a2fd-cb3e9cab3f4b\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bf298b1f-7c79-4d66-8b62-f132f0f32f28\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/651f331b-3398-4bcf-9542-29a180ecee4c\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/715b8f68-df15-4de5-b497-0db43dd1908e\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/56a09380-56dc-42ec-8171-9bc16e019235\",\"moduleSequenceNumber\":63552},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/578d37c9-0d4c-4813-91ab-b370ff26bd45\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e906d9db-eecd-4b85-b64c-14c7ccf0a817\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/01980422-ddae-49b8-a7b0-8b0e0cb8361e\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/192ae711-1aa1-4d92-98be-e2e6f62d1e1f\",\"moduleSequenceNumber\":63531},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a8cae1d7-8164-4780-8ccb-2a7b6b80436d\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/c31769bc-89a0-4a3e-9ddb-658075521fdc\",\"moduleSequenceNumber\":63557},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ca261dbd-0754-40c4-878a-6c392b01b8e7\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/125c98fa-d1bf-46a2-8f6e-3ca430d05969\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/206406db-b7ac-4669-806d-f739242db708\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0d468a0d-1a37-4272-915b-79176f4f2353\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0429a0e6-4c5e-429a-9ca4-2cc6f26aceaf\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6cae9b61-a7fd-4bda-8949-71267612a408\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/cc1212c3-8bd2-4480-a6e0-0b0622f2316f\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/aaa52a02-002e-47ca-a119-2c90743a930f\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c2467302-5388-4638-9d5c-4e75db9a09ee\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6c2c6942-83a4-40ea-ba9d-74aa33a046bf\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/8621898f-c69b-4bf8-a0b5-48989f299fe3\",\"moduleSequenceNumber\":63549},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dea0d774-2ab5-4954-a405-ce590be6db5a\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/88b17a1c-efac-43f6-97f1-637dbfa13211\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3fe6c707-a7d5-4fe5-a62e-242727795157\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ff1036b2-a4e5-4300-8f2f-bd574fdd798a\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c4c01cda-bb8f-4e45-ac45-4981f43981ab\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/4f5c8248-dfce-40f9-a1c4-2355dfc4d0bb\",\"moduleSequenceNumber\":63556},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/45d95317-6fb1-4d88-b4eb-929124891b80\",\"moduleSequenceNumber\":63544},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5ddc8187-af4d-4130-84ee-a9a13267dbf5\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/fa05e5d7-9eba-4d12-a8ba-82b3f9ec9c39\",\"moduleSequenceNumber\":63528},{\"filename\":\"/singularity/faction-end.js\",\"url\":\"blob:https://danielyxie.github.io/2c15a7b0-8afc-43f3-80e0-747ad3e18781\",\"moduleSequenceNumber\":63761}],\"dependents\":[],\"ramUsage\":83.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":785,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getBitNodeMultipliers\",\"cost\":4},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { faction_req } from \\\"/lib/constant/faction.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { purchase_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport {\\n    join_faction,\\n    raise_hack,\\n    work_for_faction,\\n} from \\\"/lib/singularity/faction.js\\\";\\nimport { install_backdoor, visit_city } from \\\"/lib/singularity/network.js\\\";\\nimport { raise_hack_until } from \\\"/lib/singularity/study.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Join a hacking group.  The requirement for receiving an invitation is to\\n * install a backdoor on a target server.  The requirement can be broken up\\n * into the following mini-requirements:\\n *\\n * (1) Have at least the hacking skill required by the target server.  This is\\n *     usually a mid-level server, typically requiring a hacking skill of\\n *     several 100s.\\n * (2) Gain root access on the target server.  As this is a mid-level server,\\n *     it requires between 2 to 4 ports to be opened before we can nuke the\\n *     server.  We need some time to acquire at most 4 port opener programs.\\n * (3) Manually install a backdoor on the target server.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to join this hacking group.\\n */\\nasync function hacking_group(ns, fac) {\\n    // If possible, we want to perform Hacking Contracts for this faction in\\n    // order to raise our Hack stat.\\n    const target_fac = \\\"Sector-12\\\";\\n    await visit_city(ns, target_fac);\\n    // Ensure we have the required Hack stat.\\n    const player = new Player(ns);\\n    const server = new Server(ns, faction_req[fac].backdoor);\\n    if (player.hacking_skill() < server.hacking_skill()) {\\n        await raise_hack_until(ns, server.hacking_skill(), target_fac);\\n    }\\n    if (player.hacking_skill() < server.hacking_skill()) {\\n        await raise_hack(ns, server.hacking_skill());\\n    }\\n    assert(player.hacking_skill() >= server.hacking_skill());\\n    // Ensure we have root access on the target server.\\n    while (!server.has_root_access()) {\\n        await server.gain_root_access();\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    assert(server.has_root_access());\\n    // Install backdoor, then join the faction.\\n    await install_backdoor(ns, server.hostname());\\n    await join_faction(ns, fac);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    ns.print(`Buy Augmentations from ${fac}`);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join a hacking group.  The hacking groups are: BitRunners, NiteSec,\\n * The Black Hand.  This script accepts a command line argument, i.e. the name\\n * of a faction.\\n *\\n * Usage: run singularity/faction-hack.js [factionName]\\n * Example: run singularity/faction-hack.js BitRunners\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.donateToFaction\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Join the appropriate faction.\\n    const faction = ns.args[0];\\n    assert(\\n        faction === \\\"BitRunners\\\"\\n            || faction === \\\"NiteSec\\\"\\n            || faction === \\\"The Black Hand\\\"\\n    );\\n    await hacking_group(ns, faction);\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/home.js\\\");\\n}\\n\",\"filename\":\"/singularity/faction-hack.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8e47bc44-bea0-4350-b9ef-6bfd8c8a0846\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e900e07b-38c1-453f-8000-3e320ff267c7\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c17893eb-b3df-4f8c-af31-8a7bea7f1dd2\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f4b1716c-85d3-468c-9648-f29f955b53fb\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d7cb8893-2af8-4545-8293-25e5e5caa0dc\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b545a57c-865a-467c-b57d-270162d4acc0\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/22bf0e90-d694-4873-87fc-111dcf82c29b\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0e17a54b-0a96-49a0-80a8-c731b58305ca\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2c212a8c-5414-4e1c-8757-fcdb46c62c2d\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1b503b1c-4a57-4f27-a3e0-222493bf6fad\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3c090a70-7120-4690-9ef8-ef2c623d28a2\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dfbaa110-74f6-4eee-a1d8-dd4e284a8bfe\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0bfb73ea-40e1-4260-be93-b87b27fe7a96\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/55492fce-28fd-45be-a709-62238dbe433b\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7d633f74-a8e7-4707-857e-669934ca4cc7\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/416e88d5-47a6-48c2-9b67-4a1fe6b98117\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/42a7627d-e9d1-4e5f-8517-765e2f5f436e\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/29951b5c-2246-431a-b576-76b227261301\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/07683317-fb07-4792-afb2-afcf4f452b11\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/714a677a-bb15-433c-ba0b-82270baef88c\",\"moduleSequenceNumber\":411632},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3181b301-cd83-49d6-8e96-ea90f6fa5597\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/fe6e930c-479f-4b48-b4a8-34966bad49ae\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/b0b63d1b-eec1-4837-9baf-60eb3bd8f8f5\",\"moduleSequenceNumber\":411651},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d68a2004-46d6-4c3c-9fa8-b66c07c27d71\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c0ee242b-d904-4fcf-a92e-676dc2bd5758\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/85f7c7b5-a738-4e2f-96fc-1a9ad625f786\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bc9d4062-dd66-45f6-b3ad-4eb7f87db915\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c6ee9f26-8824-4c13-82bf-59e3ffc89e9c\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2253a60a-8481-4dac-8f71-b30fa0b1b765\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ce2bf613-e095-452b-aa72-a4c6733a2ba2\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e5e103a0-4d5a-4e33-9e20-57c59020469c\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c1c12e33-917e-485c-a87f-6e394f8b1cff\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2b8ccc04-ec6c-4a43-ae85-91942634b10e\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b9da0326-f389-4c62-a0ef-aabb1d962a64\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a3361347-991f-45e2-af00-c7aa80359784\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d1e18b3f-84ad-4607-bcb5-b22d9a609072\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/23bcd5dd-f55d-422f-80df-3ac94730c114\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a5bc14ed-8cac-4423-b6f4-af7949265af7\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d8e1cc45-806d-478f-96a0-d0b47cf5365e\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5943e6ed-b8a5-4db1-905d-f55e595ce04c\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5eedf6a8-5752-4974-a2ff-80a584f2d684\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0766cfa4-77f1-4df0-b885-a82584308972\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0f255fde-1b3a-4d85-aec1-8028caa0214b\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/467156cf-8029-4e60-be54-a3eaad394ce2\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/e2ca263a-2cce-45d1-956a-bc3fb9122e7a\",\"moduleSequenceNumber\":411645},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/67b69cd3-40f9-4fdb-ae6e-8958ee30b22c\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dc12b8bc-3509-4a49-a8a6-b3c645ae09fb\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fdf24e38-c272-4f63-afaf-8873df0102fb\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7fee3c24-22ea-4fd1-96d1-a5b5507e5daf\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f681e75f-6a13-475b-a62b-013ce4d0cb31\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/723eebcb-67b3-4af6-9562-14e4280992da\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9b95b8de-6e5c-43f1-b306-c172f48c5697\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/93bd57ae-7f12-4189-ace8-72e6f6ff6b10\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3054ba40-2e3d-424c-a0bd-1830ce1bb27f\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/65c2f30c-c617-46e5-9292-995f042d842f\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/eed77f7d-782b-4d76-8b5e-7dad8724bee3\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a461796c-87cf-447f-b32a-9761a472a290\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/d5d81757-1476-4efc-9349-d82ce99a06b2\",\"moduleSequenceNumber\":411642},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/88de947e-1ca5-445a-a8bb-afd924b8a6dc\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/50b132f5-e0b1-4e77-866a-31faf530e9f0\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9fb1327b-58dc-4ef4-a052-909103b99bc7\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1b6c2e92-4623-4f1b-b1d7-cf31df6a7f9c\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/90e8df61-5a9f-4b33-8f35-902303795dba\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bfaa9c9f-b460-4603-8198-a3d544a48ef6\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/34155f7e-7e08-49a5-b6ee-ea44b4fdb8e3\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4d296a02-77f2-43fb-a0f7-26cc7f05f16d\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5a7f4753-b712-450a-9988-092615a5fbfb\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6f08554c-ca55-4b3e-b4de-4a96db07e234\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/cabd94df-4e8a-4713-a4b9-0a0eddac5147\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/4f7a5238-674a-47e9-821c-49bf4e8843a7\",\"moduleSequenceNumber\":411641},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/79e046d8-5bc0-4dc1-8b84-63109973e1af\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/745adea4-bcdd-4861-941d-96a630264fc3\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/d6c572d1-0fe2-4ff2-b2c6-eade4337fcdc\",\"moduleSequenceNumber\":411649},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/eb9fb1f9-f99c-41ad-ad39-57d72979779f\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e0c616ef-c82a-40e1-8a7a-f66429752080\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6a3d1b72-d6d8-4ba3-99e2-6fb6f717a718\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/792deba5-fc45-4b08-a6c6-1cb99ffe1fa1\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f6a90850-1a40-4298-b9e3-f669e505bcbd\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e7e3a097-d9ef-4639-825a-c18da3cbda5d\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8c6df779-a592-48c2-aa7a-b9c834246c75\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6bbc35b2-f97b-4151-8d0c-802ef643f00e\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a5044432-2c68-4db3-94e2-e2a0359499aa\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2e59d00b-e655-4cfd-aac9-5df3c10466aa\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f2c6a895-0db9-4751-bfd8-e1e69f5ee8f3\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/838cea55-9830-45dc-a6f7-c8b19c0feabb\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4890e985-cf2c-4c66-b4e2-a9d3f1fa1e9a\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5221b958-3f8f-4fe2-9794-c564cd39c04a\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3c6b5390-f2a5-4284-b416-fcae73a5ef0f\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/42080103-f388-4926-8081-98f65b4de7be\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5e341a70-3f30-4c38-bf73-12eb49c5d5ca\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0b0f7d93-6719-44a8-88d9-fe2d6c01fbf2\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9a273d1f-1ca6-4034-8013-fca4bf612505\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/3a6c3dac-d8c0-41cd-a44d-674f54413ca8\",\"moduleSequenceNumber\":411632},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f984840d-5b8f-4f37-b0bb-efddfdb7084c\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/0673df87-d242-4875-83e0-0dc828654430\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/e9ed8e33-2424-46de-8f4b-b3d74d6fd10e\",\"moduleSequenceNumber\":411651},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f9bb9115-34e0-4d65-9318-cfa0698667fe\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/90414f3d-16f4-4150-b3fc-cb7a1c04ddf2\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e1a0688c-d8fb-45ba-b1ce-3ebf29992875\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c45e066d-2bcf-4934-8c3a-3e00fb2655ed\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/592998ad-f40e-4da5-a675-a3f8a9fee277\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9e953945-3cba-4ac8-acd3-936008143c10\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e1401e3a-807e-4ed1-be03-c8e45a1d16b6\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f5a3289e-a414-4c6b-b3e9-6dd8903c5604\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c2d993e2-17de-4aec-a070-06211c0e4a76\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d1808ebb-1ca9-40f4-82db-c1570a06c1a5\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6da2d916-a5f0-4900-ab48-fdfb2265dd3b\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/841b137e-45a6-4bed-915f-bd5cc03b974e\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/aa677e66-c9eb-4e17-b887-c98e19d241c6\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/11649abb-99df-4fbe-96dd-eea5177da1d5\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3ee6342a-2b3b-4204-a859-9454fc84ff97\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1938eb5e-e103-4fb1-b80e-5f8945ed24c4\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/969fc2d3-b5da-4485-bc2e-449bbcfc02db\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d5d6b55a-3f88-427e-9706-afab8cae8785\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b00e8dba-6b1b-4ea4-b58e-f5b66dbb686e\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f727d90e-648d-4820-98c1-001aefd83952\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/3eabbb9e-e6ef-431c-804c-bf60dab3cc3d\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/327843b4-a295-412b-a09d-7a7db04e3d03\",\"moduleSequenceNumber\":411645},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6469415e-6a92-432d-9f2f-7b63c0878116\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/df945dc4-8d7e-43c9-857e-90dc4116e366\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c6a810f2-798d-4d25-97ae-c5a00ae6b900\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/379712a0-ab2e-4676-bd39-69e94515730d\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/eb4bd396-efad-4790-91d6-1767cb1229e1\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/055800c9-7335-4b32-85fc-292d708c33c6\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dc3744bf-efe1-43b7-b4fd-408b0a088590\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3e1ceaee-7ed6-47c0-b45c-2bd407e10909\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a1ee50ec-11c6-454c-9d51-0f4745dca5a0\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ecc543f8-6a6c-44f5-bbe8-b30e47fe0df3\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/61653835-bdb5-4e6e-9df8-1525b363b752\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/947bde7d-60b4-4bd5-862e-4639cfc44b7a\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/c4cd9c9d-6ec6-4f5f-84ae-e82c7fb02d4e\",\"moduleSequenceNumber\":411642},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/89e3c725-73ab-49e9-aaca-0900135ae5d1\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9579dc84-2fd7-4143-beca-b2a132836122\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/76b8dc31-75f2-4412-8665-a2605bd7ca22\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fec68965-2133-436c-a6bf-25b81cbd5db9\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6dbc4329-1c48-4c12-87ff-e36e11688ea9\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b7c4f0b9-47a0-4d7b-a286-7fddf0fb2946\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/393309ab-fcbb-438a-a53b-8c5dc67060e1\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cd4ebffc-3cfe-4f38-a8d8-cc4cedaea628\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a1fae16c-60ee-42ea-bdf2-89e56ca71414\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4960aea8-d491-4f12-b8a1-af16b4b2d902\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f6018478-287e-4f0c-840f-54df0ac8a1ad\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/15b41427-5976-4b72-8335-0e6b67df1b23\",\"moduleSequenceNumber\":411641},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/111f1a93-b2f5-4394-b90e-60dfdd465499\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f7a00c8e-1052-4e23-9aab-8e2022282b4a\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/6c578022-ed32-42ba-9a98-e39e018d0c3d\",\"moduleSequenceNumber\":411649},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d70d4560-93a5-42fa-ae7f-3344ea9c7071\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/395cbfd7-1659-4de0-9a50-cd5bf6d18613\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/482675cc-e959-4e15-98e4-f84cb744ca3c\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0c6f5a77-5684-454b-abf0-8a34f0e82aed\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/74f7599c-eefd-4541-a1c9-cc5da9d34410\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/13c048d7-a639-40a5-8caf-374ca708cb0f\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9af368a1-b440-4570-8965-0e6b161f88b0\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/54eab68c-0dd3-4f53-8baf-fd1c7f16b3cf\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/97b6b1cc-fc47-4fae-8479-65ff439814ef\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9ae876a8-fbab-4ee2-8bf5-96955b535bc4\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ad31e1e2-dcf9-4ebd-b8e5-470fce36c72f\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e119505a-fdc7-4c46-a736-5850a009397d\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/aaf450ce-927c-4b1b-9950-eda4b170ec42\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ad80e2d0-83d4-486c-87aa-581a9f8d175e\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9f8c3af1-2b55-4696-b9ee-099806e35155\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f1468fa2-6864-4f66-baaa-20c99f3dfa09\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/23814744-8c8f-487e-ad7b-1a5df251f920\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6dc49eab-685d-47ae-a1eb-8490f93d4b48\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a3bba5c1-c1a5-43f7-b45c-5294804fe0ab\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a8bbbf5a-ad9e-431f-92bf-2ea0d51595b3\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3580a516-80e4-453d-be60-6e97b4d2773e\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c951d91d-863c-4a16-8411-3286a906581e\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6c3c214d-07e2-46ba-afac-a6752e89e24f\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/334ec907-99fd-4948-bb96-160573e516dd\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/355ab1c3-4300-4e4a-9b0f-9bc6d6daa40d\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7fc247d7-5ac6-45dc-b787-6fcad33be28d\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d2857bbb-5436-4d96-8944-e629900c3b69\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/01812df0-be3c-4f63-b575-310de7294239\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/33b8fcf7-ceac-422a-9052-f53d0d9544fc\",\"moduleSequenceNumber\":411632},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/81da73c1-e4bc-4812-90fa-95000d31dc9f\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/36e80a18-0e2d-4e4d-842a-2a44c8fa7afd\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/bb5d2168-1005-470b-9a7d-d61eeb1f575e\",\"moduleSequenceNumber\":411651},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cc28707c-7e3e-4e9b-8416-711086fca654\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3c09d1a4-0253-4440-8b6f-8128b971eb77\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bce7675b-4030-44b2-af77-760696b8d8bf\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/637f20c2-0b8f-435c-81f7-c1daf2d44a76\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/990fe86e-c7ad-494b-aa5c-dabf42c2dca7\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5de98daf-0c93-46f5-ad9f-b7b74bded40a\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3bfe1a05-7b51-4872-9d2f-1d0d3f242124\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bae6858d-aa7f-4df1-bc4a-923b45cba4e6\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c81749fe-c4be-44ec-a8a1-6e89d67612a3\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/412f2d2e-d775-482c-a39f-f2ec7852361e\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/57f25be7-e2e0-47a6-8a83-ea24011def02\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/34b480b1-a0a6-4d19-b2c7-b513670651c1\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/4a7eed04-686f-45d4-bef1-49d8a696f456\",\"moduleSequenceNumber\":411642},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/82c514ec-29fb-43dc-96dc-ff622a80d031\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a2017d6c-db8a-405e-81bf-4138976b39c0\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/aa16dfde-3819-45f4-b871-92b0e4dfe92a\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/62cd2bdb-f46b-49fb-8ff3-1754b3aaa4a7\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/87aab798-7438-4904-a7a4-d95877ddc2a8\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8fbaf711-5366-4455-ad64-a37e172a92d9\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e3f2c164-5286-427c-bbca-c94c1ae10fbc\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/680b0df4-bfbb-4bc7-9851-ee28cd311755\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9efd18d8-6495-48dd-95cc-04a43e8f33c5\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/588e2387-822b-463e-9f36-5e4ed029561b\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/93343fb5-2ba1-4d0e-a4b4-8e3961803aef\",\"moduleSequenceNumber\":411639},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/d26d4817-719a-4c3e-9b7a-42cbd34e5fe8\",\"moduleSequenceNumber\":411634},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c7b04fd3-933e-45a8-b4af-3f50c2115450\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1c63ee3d-5c7a-4157-97c3-b2fd92af7d01\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c113d0b5-0880-4ce6-8bad-8ac2efa0960c\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/4ad54c23-fa91-4430-8850-9c1ec8ba187e\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/48234d6e-688d-4739-860d-ccd2c751c687\",\"moduleSequenceNumber\":411653},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fc904440-7179-45c1-bc41-51ea60dbf035\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/69248a20-9263-47f6-b590-cc496505d5c8\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e4923c3a-80ba-4aff-af4a-df0848bcff3d\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c70928bc-a331-4b1d-97ce-e0e5fae82e93\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e829d298-ca27-451a-93aa-1c7c270a5f93\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/404a5523-ebc8-4524-923c-c0fbfac600ca\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f84948d9-2645-4caa-b6d7-2483ba0bb7d7\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/683d5a2d-40c0-4ffb-aa86-3715ec3c8773\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/195b4a69-5df5-40ad-9382-de739f73a062\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3e0555b9-3852-4cec-b6fa-abc0c1536c3a\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5fbd174a-21b4-4d43-bf01-458d0ce031b4\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d91036fd-b3dc-4e56-98ea-8ef486fd9c2d\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b57a4032-07fd-436d-9916-b8101acb0156\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/45935452-57f9-48fc-b24b-2ed80704e45b\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/28296e64-1141-4b8e-994a-402e1e72cdc7\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d6acaa61-cbf5-47f6-b647-b884f460309f\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3e4ee854-0744-42b3-b38c-ac8685f815ed\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bad38d8c-31f9-4ec4-ba0f-26e7e6b3b48a\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a38c0c94-8df1-45fc-8891-38d23a6719f3\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/77e0fdb4-efad-455f-bb21-92092628cd7e\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/889f9777-841f-4225-a55b-12b675e99396\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/fd7d31d8-0547-442f-a19b-744f4a4dff63\",\"moduleSequenceNumber\":411642},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/57d297e9-2350-48a5-b441-b1ac487e1fa5\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/88850e2c-c044-489b-a722-99aa8b0f7215\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4300b22e-a0e4-478a-bef2-6fb5c9753743\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/2258f0d6-ff1b-490b-9482-109e88533bd1\",\"moduleSequenceNumber\":411621},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/e3e2d443-7b30-4235-8b8f-7a907e4e8b87\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/784ff640-c721-4274-8ddf-a2c205b8cdeb\",\"moduleSequenceNumber\":411647},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0945e28f-8fc1-4bc6-89ab-0b1d0fa4305d\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d42bf2cd-586e-4499-b749-e270f57e1ad4\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4e0303de-286e-418d-9e68-9c859932ef79\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8cd4a866-8c99-4213-8a10-b60baaaee01a\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8e75f753-5817-4910-87c3-45883b20bcfc\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/38317fe4-a868-43c7-8f41-a5c1b41b2281\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/953c77e6-a2eb-4120-9156-550466b97939\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ed66aeb5-a4dd-42ad-921b-650104ff7da0\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e69cae44-4d16-4bdc-972c-a4f1c60e702f\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/aa320e3b-5d9e-4eeb-a989-04f91079464e\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/e4e47df9-35ff-4fba-9a0b-446eb2f93ba2\",\"moduleSequenceNumber\":411639},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0bc1436d-3ad0-45a6-8296-8af9898b0702\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3b5e6bb2-da76-461f-b1b2-7379efadbc38\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/907b0227-5e5a-4049-9dc8-13956c66817d\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7352fdcc-d0dc-4956-8f0c-9c0b219f9990\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9e5ca46a-d54a-4d94-82e1-4eba19480eec\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/2d0ee9e5-40c9-46d3-9eb4-b7b8ee5fa79d\",\"moduleSequenceNumber\":411646},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9e2f9898-9d21-453b-9064-1816ec5051ed\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f90e59ce-2560-4414-add6-9655358a2bf0\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/27573111-213f-423e-8ea3-b1d6f7d14afb\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b3700c0a-e632-4e22-b458-0ebe0b1024b6\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b93b3611-521d-43bd-99cd-fa96a2f8352a\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cb234e04-cece-48a3-a3e5-445d7b3ba66c\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/198c060e-66e1-4daa-9364-bd426575ce7d\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/264e162f-8b3b-4f1f-bcf7-382c4986f07e\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2c46c07c-c804-4e8e-bf27-a64c88b331f0\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d125bd78-9aef-4bdd-8e10-725bd23e689c\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ceac1aa0-94d8-443a-b619-e60077170e7c\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7d46316b-ac8b-4de3-8d5b-18b3a44e8ac1\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/d0051fe1-07fd-4e86-a7ec-8b4796f9f649\",\"moduleSequenceNumber\":411645},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/95486096-47b3-41eb-a648-b38a2c4c9aa9\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3f25c9ea-7e9d-4383-b9ff-dee1f3632065\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8a02b6a2-93f5-46a9-a6b7-7e2727fa4dc0\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/953f5194-c98e-4e06-8732-a7827fabe743\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f57a7e7a-3f1c-43cb-9a42-cf5f5add2fa7\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6aef7e7e-a378-487d-aedf-00d055f55e95\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/69c0c6f4-1a9c-43c1-9e4f-13d80f6a9bf6\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2000aca5-9046-430e-839e-0963ee8d11e8\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/45a7cc1e-19eb-43cb-9501-8bc92e9137c5\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9ec6e849-dac4-4eaa-bff3-a374bc3b8c95\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ac5da67c-113c-4aa2-93b5-cd41242cfce3\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c5d7af4c-e10e-420b-a97d-d4a90fbde51e\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/0b3a2092-1d9f-43fa-b276-108d7c7807bd\",\"moduleSequenceNumber\":411642},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3ec265ff-de73-47c2-bc9d-5f4b213a274a\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4744fcbc-dcf8-48bb-9b58-d62bfd45ef3c\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8e5f9b54-b07b-4480-ad1c-283b30f1a3c0\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4e8047db-6d11-4c7b-bf06-cd72e69422d6\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4b45c128-d1bf-470d-ba09-2a75853f52dc\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/51f8a751-9982-4fad-819d-8a5cf40a9953\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/077c1ceb-1425-45b6-bb77-1f9c8fa243ab\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/18c27827-0eaf-48c3-9afa-59cf864a9267\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dc4c11da-e898-4f95-9b1b-1c47de27e9c8\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/39b91504-f517-4975-af3d-b58772e4c93e\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/6c1afe2d-e61c-4393-8a69-515efe5ead00\",\"moduleSequenceNumber\":411639},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/b3a90210-9c63-4cee-bcd1-819b5d537189\",\"moduleSequenceNumber\":411634},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9d55b337-c020-492f-8e3c-1dda3ed4d575\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c0de4455-0922-481b-8fde-d88840814d5a\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/50111c07-d179-481c-a0ca-9048ceaeacfa\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/ed0a7937-506a-4ea0-8b30-5e6df707ee2e\",\"moduleSequenceNumber\":411621},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/dc84b90d-5688-4d11-a087-b970f42ec3fc\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/26b92383-9e71-4c48-b979-a8850850ecd9\",\"moduleSequenceNumber\":411648},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e893e928-e3fd-4a41-a6b7-1742fb226513\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c465e7a9-7279-4e85-9dda-825d23ba73b8\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9cb26466-daa5-46e0-8872-6269a73c10d7\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/35fa5cfb-6b85-4141-8609-e7ce6af49506\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ec0c71d4-b35b-4d61-b5e5-50d013620a5e\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9e553e28-2107-433c-b000-22019e9293d9\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/122c4e09-8e20-4144-9ae4-65430cad9c7d\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/32388a84-a7e0-4ce6-9758-1c6c472f60f4\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/097d8452-8072-47aa-91f8-71449f6d16a2\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e398d40a-00d8-4107-b887-4ad38ec5cf5a\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1a287410-e146-4beb-8827-cea7f40ecec5\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b9fdbf3e-466f-4782-b59b-97d7110831af\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5fe3ab8e-5636-4e06-ac76-a12bd96b057b\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e7c2fc57-e5a7-4c92-9158-19df69af20d6\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0dd6adac-2561-4043-92bb-758fe3c4e4d3\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7b951f42-9e15-4ca7-b92e-25b02ea4e6ed\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f6897cc0-8731-40b6-98b8-1c8d581032e3\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/201510cc-0f8d-470e-b2fa-1ec8b98f3e7f\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/da0d177f-f35a-4011-9cbb-07ccc843bbb9\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0457614f-16dd-4920-a2d5-fc41d89518ac\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9c758641-7015-42e2-9a0f-3809f6e4252f\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/707e5f08-1601-4c9d-b1df-48dde9090172\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/43fb1337-826c-4d0f-a7d1-deed3a5c521b\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/107beade-6aef-4949-ac69-d293af41a6db\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/488092ab-0ee3-4287-ad41-9d393180e1b4\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c42dcfe4-e792-4284-9553-8287acd9e423\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4296bc9c-8d71-4b4c-8de1-2f44bd2dd9d6\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cbbab245-fe94-4433-8ebf-eb0555416904\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/ba960abe-706f-40fc-9491-9ff0031c8c4e\",\"moduleSequenceNumber\":411632},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ef79a7e8-17f4-4dd7-9879-f247518264c2\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/92cc84b0-0a76-4479-9063-f5bea0c76655\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/6cc0512e-4166-4e6d-be10-408a94d5c2aa\",\"moduleSequenceNumber\":411651},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6e978f3a-419a-4aa1-93b5-0b6caf49a281\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cd3c6587-0e46-4e79-8ba3-829042f79643\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b1624672-b362-4011-8121-8fc3fefd6f92\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8a4dcd2b-e51c-4062-a2ee-fa232612dcd5\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/127d7fb7-c0b7-4017-8803-6b2685889d1f\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/2e91833e-275f-4de3-957d-9c878e65bdbc\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f0e0d763-29a4-4bd5-9655-c61c74d39fac\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/31d50f39-61c9-4f27-bf5d-45685976308e\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6f62acac-3402-45c5-9640-2e73f4976af2\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/101831d1-9a6e-42f2-a2a1-10c519b4a5e7\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cfe689d0-504b-4b13-8223-2008e99f251e\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f9260014-dfc3-47d0-b187-51128c0c6621\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/172d5242-fb17-4c2b-90d5-e092aeb529e5\",\"moduleSequenceNumber\":411642},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/dc64dd83-ea1f-4599-8d4c-7fe3804f3d32\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b1b9cd20-8b26-4197-92fd-2d5657b89e46\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3dc7c216-3bf1-488f-99ea-94e09783c9df\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/984c90b2-f500-4afe-9110-32542d2f42eb\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/719523fa-4936-4155-9340-8e2c31ad9f8a\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/66e6fd05-c217-48e1-9739-e88bc687131f\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/33911838-d180-4921-84d4-2ea87b69427a\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/396f45b5-5bd9-439e-94d8-e8b240a9dc2f\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e0498ad0-04ed-4663-8516-060e4ba46d8e\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/60974daa-37c4-4984-b2ae-42d12cb5c82d\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/c9a2ce24-444d-4c6c-8d0a-32ec06ba27c7\",\"moduleSequenceNumber\":411639},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/26de3bbe-cc58-468c-8b10-c5f4805937c5\",\"moduleSequenceNumber\":411634},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c9079b2b-6755-43d5-9de1-8058b6f0f9e5\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2aef25e8-d38b-43e8-8747-ec06680800f7\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/33e29359-761c-4e9b-9b12-562125708f32\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/1db7640a-2b43-46ec-ae04-d3ddc6fef788\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/f6025a57-e365-4fa4-9364-e01f41e74b91\",\"moduleSequenceNumber\":411653},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/22a60761-61e2-4714-847c-a43365a82864\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4ffead7b-1107-45f0-a68c-2f2a7e753989\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/377dc265-f045-45bd-9f4e-a18b9f45ad23\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/94e78cbd-f065-4f0b-bf97-1d034d3674bb\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6e1f2046-f18e-4688-b94e-02ae9c810352\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/58a2cad0-50a8-40f9-8271-8af92e00a2d6\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/96d21124-c49f-4ce3-b9de-77104881e137\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1b1657bd-8bcb-43a5-83d7-9a225345d42c\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a26e9079-4298-47b9-9508-c1d100e62a89\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c9e8c739-96f9-412b-8dff-933ae12a6bbd\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d316897d-536a-48fb-b6b6-0016b699fd1e\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a4c1582b-4524-450b-95b6-4b882ab7e05c\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/16475385-5f8b-490f-8fd6-ccae4cd83921\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d8d99510-3f1f-49e3-9b72-3d3d8ff2355d\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8944e4cd-92ff-41e3-befa-b42822d9c83e\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/87eee056-5b44-4d6f-ac82-aa8aa237297a\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fdbd6570-b805-44be-bf6f-b06307f7e901\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3da75276-6a71-4841-8570-84422a040d0c\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0c7c5cfa-6930-4b8b-b683-3efec38ad8d4\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bd3e9803-ade4-45a0-a14c-7897c1e7e9f3\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/72255590-ef3c-4115-a9bf-bfae8aea496b\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/5010bb48-1bf8-4f48-890a-4857b54659cb\",\"moduleSequenceNumber\":411642},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/009d76db-9758-4d95-86a5-811aa1e143e1\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/81df4f37-ca33-4142-be4f-1d0672a0ce6f\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d80d3af5-1e08-4a15-a056-63809ef7df9d\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/8c1054be-f54d-4aee-bceb-6b1493d0452a\",\"moduleSequenceNumber\":411621},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/65d1cbb3-bc58-44a6-8b21-c293e5333ba5\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/5b92a169-e89a-4caf-9469-db036af759a1\",\"moduleSequenceNumber\":411647},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a3043d6e-4546-4085-8dae-5563469f23cf\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/05b671c1-8f2d-4a77-aa03-b60aef712f75\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bf49383b-901c-4a56-a1d2-f903d08cfc3c\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/72d05832-3603-44a2-865d-9f5f46873977\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/35bca09d-6042-4f02-bdc1-49a60c959015\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/12770c93-5d93-439f-a62b-23e1b5cefa79\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d671a24d-8f98-4e49-b44a-add6e1c921c5\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ce44a6cf-808d-4161-bc2f-e0d38c736332\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8a0f272b-1ad6-43b7-9fd5-b33e3aa70c48\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3bbf2e38-e4f9-45d5-a31e-bedd309050ba\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/3e37acf9-9347-47c9-8677-a111131721ae\",\"moduleSequenceNumber\":411639},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ea6ab2a1-fcf8-4a00-99f8-8141dcd9c2ab\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/63e59fd0-dd6a-439b-a197-ac99d37dff32\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5696ccf9-d17f-40b8-b1ae-459e6eb711a4\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7fd5d071-314a-411f-912e-c97f41afaeca\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ca13a990-25a2-4834-b864-59e7616c254e\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/a9a3b8ad-c8c8-4938-b82e-1d138b24722b\",\"moduleSequenceNumber\":411646},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e475e53b-11c7-4743-9e97-3a624e0b9017\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/56701543-1123-44e6-9728-5680c2ecec92\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/74f1176b-3188-440b-90e6-3a2d1bbd1a9c\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/339397e9-5c94-456d-91f5-6f47f43dd0d1\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0ba0d481-c014-4076-ad97-75b12b542c5e\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/50f3404d-f6f8-44d4-b9b3-85077dabd78b\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a6f82a51-a940-45b2-84e8-5dee85930203\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/511dbd81-ae2c-4e1b-b2bd-0b19723589a3\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8b7da782-a99f-47f1-a4a7-d219ab10a3f8\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2968a89b-cb6d-4bad-bb45-784c8933d16e\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a54ed150-0d7a-4587-8a3e-b9ca6b654322\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a178f732-ddc4-4c2a-bd2c-09a1f7972c42\",\"moduleSequenceNumber\":411618},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/f3cfc7d9-2a2f-4ffa-8fd0-0cab80ba4697\",\"moduleSequenceNumber\":411645},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/bad2f772-c861-4da0-b037-485191f26c12\",\"moduleSequenceNumber\":411635},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5d4d5ec1-21b7-44aa-9e4a-a85f3535a483\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/89b54ba0-435c-4dca-bc1a-9268b35d12b4\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/555c1d02-f8ba-4fd5-bc9a-beb02617025d\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/711be521-f9c4-450a-a368-6d1c206cccad\",\"moduleSequenceNumber\":411627},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3b59a53c-4ff1-49a5-ad9e-1170dab6208b\",\"moduleSequenceNumber\":411626},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/07685971-15b8-4801-9474-4ebe955b8aa6\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/aec8de43-3440-4c47-983d-8fbe727fe8f3\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/774289e2-2fd4-4d8f-9290-d5f22e3a909e\",\"moduleSequenceNumber\":411657},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6a58dfaa-b582-40c6-9c0e-6b2168d9f40f\",\"moduleSequenceNumber\":411630},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6e4565d4-4939-4b27-8dda-c64c1fa6ac94\",\"moduleSequenceNumber\":411628},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0d1271ad-9100-4d4d-970f-857d55b5f1de\",\"moduleSequenceNumber\":411622},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/65dd2f3f-fb34-4671-b404-d16c448ca8a3\",\"moduleSequenceNumber\":411642},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/a5d9b827-f62e-41dd-8a81-73b52ab11b98\",\"moduleSequenceNumber\":411634},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5573893e-da0a-4051-b1bc-3908c895fa1b\",\"moduleSequenceNumber\":411633},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2e141731-f6e0-4c57-ae53-97f2844ff264\",\"moduleSequenceNumber\":411623},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/cc96de4e-a150-45ff-97bd-5f48c6d16e40\",\"moduleSequenceNumber\":411618},{\"filename\":\"/singularity/faction-hack.js\",\"url\":\"blob:https://danielyxie.github.io/90c363fb-1528-4be1-96a1-bc10047b54dd\",\"moduleSequenceNumber\":412764}],\"dependents\":[],\"ramUsage\":75.9,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":786,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { faction_req, faction_t } from \\\"/lib/constant/faction.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { job_area } from \\\"/lib/constant/work.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { purchase_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport { join_faction, work_for_faction } from \\\"/lib/singularity/faction.js\\\";\\nimport { install_backdoor, visit_city } from \\\"/lib/singularity/network.js\\\";\\nimport { raise_hack } from \\\"/lib/singularity/study.js\\\";\\nimport { choose_field, work_for_company } from \\\"/lib/singularity/work.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Install a backdoor on a megacorporation server.  Since version 2.0 of the\\n * game, we must have at least 400k reputation with a megacorporation as a\\n * pre-requisite for receiving an invitation from the corresponding faction.\\n * Installing a backdoor on the company server would reduce the reputation\\n * requirement to 300k.\\n *\\n * @param ns The Netscript API.\\n * @param fac The name of a megacorporation faction.\\n */\\nasync function install_backdoor_on_server(ns, fac) {\\n    // Ensure we have the required Hack stat.\\n    const server = new Server(ns, faction_req[fac].backdoor);\\n    const player = new Player(ns);\\n    if (player.hacking_skill() < server.hacking_skill()) {\\n        await raise_hack(ns, server.hacking_skill());\\n    }\\n    assert(player.hacking_skill() >= server.hacking_skill());\\n    // Ensure we have root access on the target server.\\n    while (!server.has_root_access()) {\\n        await server.gain_root_access();\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    assert(server.has_root_access());\\n    await install_backdoor(ns, server.hostname());\\n}\\n\\n/**\\n * Join a megacorporation faction.  The requirements for receiving an\\n * invitation are:\\n *\\n * (1) Travel to a particular city where a megacorporation is located.\\n * (2) Work for the megacorporation to earn a given amount of reputation points.\\n * (3) Continue working for the company until we have received an invitation.\\n *     Even if we satisfy the above 2 requirements, we would not receive an\\n *     invitation if we are not currently an employee of the company.\\n *\\n * The exception is Fulcrum Technologies.  In addition to the above two\\n * requirements, this megacorporation also requires us to install a backdoor on\\n * the fulcrumassets server.  The invitation is sent from Fulcrum Secret\\n * Technologies, not Fulcrum Technologies.\\n *\\n * @param ns The Netscript API.\\n * @param company We want to work for this company and raise our reputation\\n *     within the company.\\n * @param fac Our aim is to join this faction.\\n * @param rep Must earn at least this amount of reputation points within the\\n *     company.\\n */\\nasync function megacorporation(ns, company, fac, rep) {\\n    // Relocate to raise Intelligence XP.\\n    await visit_city(ns, faction_req[fac].city);\\n    ns.singularity.goToLocation(company);\\n    // Work for the company to earn the required reputation points.  Must\\n    // continue working for the company until we receive an invitation from\\n    // the company faction.\\n    await work_for_company(ns, company, rep);\\n    ns.singularity.applyToCompany(company, choose_field(ns));\\n    ns.singularity.workForCompany(company, bool.FOCUS);\\n    // Join the faction, earn reputation points, and purchase all\\n    // Augmentations.  Ensure we remain an employee of the company.  Wait until\\n    // we have joined the company faction, then quit our job at the company.\\n    await join_faction(ns, fac);\\n    ns.singularity.quitJob(company);\\n    await work_for_faction(ns, fac, job_area.HACK);\\n    await purchase_augment(\\n        ns,\\n        fac,\\n        bool.STOP_TRADE,\\n        bool.BUY_NFG,\\n        bool.RAISE_MONEY\\n    );\\n}\\n\\n/**\\n * Join a megacorporation faction.  The megacorporation factions are:\\n * Bachman & Associates, Blade Industries, Clarke Incorporated, ECorp,\\n * Four Sigma, Fulcrum Secret Technologies, KuaiGong International, MegaCorp,\\n * NWO, OmniTek Incorporated.  This script accepts a command line argument,\\n * i.e. the name of a faction.\\n *\\n * Usage: run singularity/faction-megacorporation.js [factionName]\\n * Example: run singularity/faction-megacorporation.js MegaCorp\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"scan\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Join the appropriate faction.\\n    const faction = ns.args[0];\\n    assert(\\n        faction === \\\"Bachman & Associates\\\"\\n            || faction === \\\"Blade Industries\\\"\\n            || faction === \\\"Clarke Incorporated\\\"\\n            || faction === \\\"ECorp\\\"\\n            || faction === \\\"Four Sigma\\\"\\n            || faction === \\\"Fulcrum Secret Technologies\\\"\\n            || faction === \\\"KuaiGong International\\\"\\n            || faction === \\\"MegaCorp\\\"\\n            || faction === \\\"NWO\\\"\\n            || faction === \\\"OmniTek Incorporated\\\"\\n    );\\n    // Since version 2.0, we need at least 400k company reputation to join the\\n    // corresponding company faction.  See\\n    //\\n    // https://github.com/danielyxie/bitburner/blob/dev/doc/source/changelog.rst\\n    //\\n    // However, the reputation requirement is reduced to 300k if we have\\n    // installed a backdoor on the corresponding company server.\\n    await install_backdoor_on_server(ns, faction);\\n    let company = faction;\\n    if (faction === \\\"Fulcrum Secret Technologies\\\") {\\n        company = \\\"Fulcrum Technologies\\\";\\n    }\\n    assert(company.length > 0);\\n    assert(faction.length > 0);\\n    await megacorporation(ns, company, faction, faction_t.CORP_REP);\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/home.js\\\");\\n}\\n\",\"filename\":\"/singularity/faction-megacorp.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d6fbe979-b34c-4f4d-9269-70cf7258beba\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/073204f5-b14d-4eb9-a71e-14599575e2cc\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/522e3766-56cf-4332-bf72-b70c576daf34\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a5ca29a3-6f2e-42fc-a0e5-36c351659b22\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a8b73870-ffb7-4f72-9966-42ff3dc5b445\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0eda0cfa-60f4-4afc-9d21-aad08919e56c\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3346e74f-462c-4c0d-88ca-ee9c1bbe0d86\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/125c43f5-337b-43aa-a53c-d22c7f685784\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9ad111ed-0dd6-4a5e-8a15-c4ef738a5316\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f86c6670-a38a-45e7-a8cb-8e150b4f19e1\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7040e751-db33-4e16-b6ed-c4f88923f3e1\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/275f39e8-27b9-4bfa-9aa5-3980b6f4bb16\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c8c8503f-8e25-4556-b120-9354feb88737\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6838d742-34c6-4e6e-a018-23469ebfaca3\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/46fe0e37-6412-4ec0-8e50-f1e8dec5b9ca\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1fb06e4e-be2f-401b-933c-74c0f3655b4a\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2092b3cf-6254-43d0-a135-66026536a45b\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/658d6484-b23e-4469-9776-2a4b8d57196f\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5e2b5155-9382-4750-8171-c069410084ac\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ae851d47-017f-45d9-87a6-6e932becf617\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0c9c7025-79a0-447c-87ba-ec3576076330\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c9c2114f-dacd-4f45-8379-f000e109275e\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4f7bc6d4-a01a-4c25-8495-325848e608c6\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a96a7ed9-8bdf-41e7-9122-82ec884f6ea7\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/02116a34-9d0d-419d-aa92-619d4a05d090\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8b0c9693-fb04-4b7e-a9f7-aaa2f9302804\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/22ff17cf-d8da-4b58-8012-8b1f2235d238\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/caa12e88-7156-4c95-b14a-858ce0b40017\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/97b6a61a-4352-46e7-8986-7843127aad65\",\"moduleSequenceNumber\":39303},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6e0626ed-aa29-4abc-bf96-928ecd8d8e77\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/afe182c0-9784-4ae5-a12a-b055665c3027\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/a5d83aad-b7c3-45b6-ae1a-ae453368a6d8\",\"moduleSequenceNumber\":39322},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/15c14c19-1c8d-42c6-b015-30c6759b9e24\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1dcc7d89-16d2-43c7-9eb0-35c40123b7b2\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/67ca5364-b770-4880-9ac7-12fea00f5ea6\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1e7ebc0b-01ee-41fe-a847-e0f9e3b902cc\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/11eb00a1-6678-4290-8044-4a9c16ea16ea\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/d2bfb478-91c1-461d-a580-c5a82de1a830\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b4631030-0b18-486d-b261-39157d32818a\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4d8edb7c-3bce-4040-8cc1-25c9234bcedb\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0a86f400-45e1-40b7-affc-c787ff970adb\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c902bf33-4bc0-4656-91be-88e2f2426134\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5dd999d3-5a2e-47f7-a0f8-d0ef78ad069d\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1b73723c-6054-4ee4-81ef-28f282c0f831\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/dd3e6bbb-1f57-4784-b615-0a4e6e92053b\",\"moduleSequenceNumber\":39313},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/96924d89-0cb1-4056-8bcc-8d688f8c5918\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/54ecc909-98f9-46b1-a3b4-decf4d8bc86c\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2d157173-c57d-46c1-90fc-e59a00f2b6e5\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/98ac9bb8-c76c-4f32-8f04-9906bb91c082\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7a593bff-d665-4a16-8444-2f305923f09f\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a1d74c9a-f72f-42ff-a54c-c1b96955cd2e\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dedbee5a-f1e0-4339-8d60-2c10acc7b954\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f71f6c89-6f0e-4d31-81c3-6de686c42e95\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1f909d3c-ba5b-4941-95bc-eaf1e23e7ebf\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dfbebc45-1a72-4a96-baf7-7ac9c727eba4\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/cdab3f3a-8783-462d-8517-14161c16cac9\",\"moduleSequenceNumber\":39310},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/cd8a8d70-1bd9-49b5-8b55-1db5c32c843e\",\"moduleSequenceNumber\":39305},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/71ff0ce1-786a-4c6a-a2c7-83b704db2ee5\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b1ea2173-cf52-4f76-a886-4e090567220a\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a594f2ae-e974-4d1f-8f87-b0c6d4cfa24d\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f470c36d-41b8-43c6-a4c6-e5388f7233cb\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/fcecdc83-1403-47dc-be8e-ee71492c2be7\",\"moduleSequenceNumber\":39324},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c692bc6f-4566-4009-a0ea-a56ed461eb19\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dff1074e-0cf6-4150-9226-2027962b5dad\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/96a0eb3c-5442-4dab-8f74-08363a9895e8\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/da789670-44d8-498a-a794-073af76a8242\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/db22be83-6891-4e3a-8877-8763549f33a2\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ff9221a9-fff0-4bb1-a3fc-f04dd4758f5e\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b9a6c557-c7c0-470e-afe0-87bae42deb2d\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c4155c2d-57f3-4c42-8a91-97b6f1317197\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a59fc9aa-fc7d-4ef7-b679-6e77594239da\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8ee9ac00-ff93-4c5f-acff-c3eb7df1a59a\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/cc13f94c-ac07-43e8-ad90-6147f4e55305\",\"moduleSequenceNumber\":39303},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/aae56a32-8b3b-43b7-8a8c-2b486abdb75b\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c6a9e002-dbca-42c1-ba1e-ef9f8216f76b\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/c4f03876-dc87-40d7-880e-2a1fee10b0aa\",\"moduleSequenceNumber\":39322},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8f15c09f-1727-45f6-8173-f2f248129eef\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e1c24fab-77fc-4a77-81ca-d80acd639d21\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e0552a88-a574-4bb4-b68f-55ba1ee280c8\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1c0d751d-6131-4583-bb3d-c4d0c0250a06\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/06cbe5b2-9ebe-4eb2-bdc3-e2b22ca775fd\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1c7fbbfa-afc0-45ad-b3aa-04f21ee8e52a\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/07578904-40f0-4be7-bbf1-7b0527a20068\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ff9e18ec-6d9c-4049-8742-37f876653010\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/67a578f3-a0a3-4cbc-9f08-d5ba915f0064\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7a18e4c9-95b4-454b-86de-69d569af17a5\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9d9a6165-66b0-4e64-a840-64d6a5b42591\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/40bb3983-cf70-4814-9d3c-e5fd429cd7f6\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/900d8cd2-8f7d-485a-bc40-c469a65da8e8\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/12518d2f-d852-4a6c-98b6-ec27ed1daf30\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3709793f-9929-4c58-be13-123e2992ae98\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5eb0b58f-f162-4b6a-b6f6-3a53f7e4d316\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6e3f6a94-fccd-4d42-adfb-d89d3b005410\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6dbdc0b8-b9f9-4c47-aaa3-1624dabe3f17\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/91eba9ea-2929-4583-9b84-6e01d5a22b7f\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0b90e7be-6639-4e3a-bde7-9d3981050506\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/abc83fb1-7b5a-4cc6-bacd-80e6a33c9c85\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/13f55407-fd78-4197-875d-d5741a5ddd7b\",\"moduleSequenceNumber\":39316},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/29e8987d-10db-4181-bdb3-ab11c8333fff\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f8f3ff21-797c-44b1-a1e9-504a8e211507\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1e0469c7-e20f-4ff0-9b7e-84eb429bca44\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e31e465d-f388-44ed-b46e-b509fde04105\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8a4188ee-cff8-4c7c-9093-d419e533b2eb\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9ee82f45-fc90-4942-a6c3-cdeabac0c579\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d5bc922f-6f7b-43a0-82fb-7a0f72662651\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bdd6213e-be97-44e4-94b4-6851425c63c4\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/34cd0909-603f-4906-be75-f72590ac2f64\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4b3bf1ed-c5e0-4fcc-87e8-aceb591f84c9\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/52dc7fe5-3e29-4b69-84c7-07da0bde863b\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/60096a8f-d982-4fdc-aa8d-c94f03d3bd22\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/055d87e2-75b2-48fb-97b7-dc4e5c9f4c7c\",\"moduleSequenceNumber\":39313},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/53f9ac53-2562-4036-a42a-49231cd68d56\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/eeea9871-e7dc-4f17-a99b-333cb78833e3\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/312c1ee3-72cf-4e5f-95ae-7517afcb2a51\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7de0e508-955c-422b-b3aa-43e41a21d66c\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0be872c4-72fc-403f-921a-6982eb64b686\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e8984656-80b6-416e-be8d-f4fead051078\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/95e6f903-e138-4afb-8ab9-07cb25e13b74\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5d7b9370-abf1-4083-a6f5-037d53c27222\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1635b556-7013-445a-b690-51b1dd1fe3de\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d89e87eb-4a34-439c-93ae-a666e21e97f2\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/33b10b2e-4bec-4c3c-98bc-9c9c645a33f9\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/6821a4f6-3790-426b-b1e3-02e4f3ee4243\",\"moduleSequenceNumber\":39312},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1c53a796-2a49-4f89-b80b-8d38ee79b7fe\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0232767e-951c-44de-8872-85f9ee8c5e17\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/d89c081b-05e9-4ecc-a7e4-401f4b6c1f64\",\"moduleSequenceNumber\":39320},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5e70ca0e-0361-4e3f-9d25-29176c1bedab\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/571024f8-ddcc-4ecf-93e3-a84c78b703bd\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cf994e74-fff4-44ef-9c38-908731608d03\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/59cf1cae-7782-46e3-a86e-0fc8889faeb3\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/934e2325-0913-420e-87c1-e4134946b691\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7a395fae-7af9-4be3-9261-5e31f79e2a6e\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3149e972-75d7-45b7-80e8-034473a68f13\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1d87cb02-a79a-4710-8f5d-f0ab6f6040bb\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/332b7234-527e-401c-a132-3a1a4fa3fc3d\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d2b9f1e7-8c97-4cd4-bc01-426885db968a\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a5d05fec-a3df-489b-a7c4-0f4aef20865d\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/39163266-d533-4df4-b468-f5a228bb50c4\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/378d8511-2d39-4560-9b9b-15a20c56caff\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c380d164-98e5-46c8-8e8f-f9858be25c1e\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9ccf3419-6eae-41b5-b283-18c17178c459\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bbce5231-342b-420d-869b-e9c2d6fa1d0e\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b3d49e7f-0723-45f2-b397-ae5645aa7422\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2c7d21c0-972d-42a2-8044-19ab3aac1135\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/364a90be-51a1-45f3-bf3c-f1eff5d9dbae\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/7b833165-7034-4368-9180-c672b5ec0c12\",\"moduleSequenceNumber\":39303},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/63b0d890-81f3-497e-be5b-08a2d0471cf6\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/bab48952-3e8f-45ba-8c2d-fde473584802\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/e4a482e7-d29e-40e1-9bb1-a9423e92d317\",\"moduleSequenceNumber\":39322},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c58a39e1-04b7-43b5-9cbe-8e87df0c0b2d\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/35a6b15e-6229-48c6-8a49-8eea29991d0f\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/02ccec57-a476-4f90-bc72-91469d500980\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/18e3b01a-31fd-4c9d-a728-0e56f01bf6f8\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5829d68f-dbd8-4500-8612-eec89576291d\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/494c244f-995d-4a60-89d7-de3c2624aa8c\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bca04e90-58f3-490c-ac8a-ae9bfeb519eb\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cf833e1e-27d0-4822-9a72-5e56764d31c2\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/59dce9a1-9c8f-4634-b5c6-64e214ac56ac\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4b2d3dfd-ad1c-4e47-8bac-f37fec97a61e\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/af44b1a8-0af8-4a4d-8b92-d56b9147b3c3\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a876be15-7722-4d2a-aa7c-10e162ee426b\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/854b6b20-a6a5-4848-8026-e90a93cf536d\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/a6bafed0-4ece-41f5-a592-257ed8010a16\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1d664b68-f91b-4745-a9bb-20549875cc1e\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b975df0a-cdbe-417c-96e9-f1999c00742e\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/03a06a80-a907-4554-a249-d62436297944\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7d3b27ce-23ec-447f-a952-7b3a5eabc72c\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ca440a3f-4946-45d9-8b64-f0026cd7c205\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/64db206d-05df-4913-a45a-55ef0a73d68a\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/1e7a34ef-ab3f-4c68-b4c7-efd002d428fb\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/a2434c5a-0499-46da-bd5b-c44c02b55ed0\",\"moduleSequenceNumber\":39316},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/560e1656-0f6d-4adf-b3de-cd720adc401c\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6d644c4c-5e16-4743-b2d7-f5d30793bebf\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bdc85632-b2fd-4d00-8319-1257802b34fd\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/44ac9558-5d55-4c75-a38a-68a6820d1d3c\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ea777b15-8625-4abe-a40b-668bdb17a3dc\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a4fceb14-5164-49c6-8059-2b4e5a2498ec\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f3d97350-491f-4e21-9962-85cc41239a0b\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3deb8bf7-b52b-4a9e-9379-4e9ec1730425\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a96fff50-8cc1-4642-8fe2-46f8395cdef3\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/564326d6-0c63-40c2-8cb5-d7dbe0ff8942\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fa62a459-1de8-402a-b026-9ccd366c8efe\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1c97a26e-4178-4c8e-b6bd-d758d593375d\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/99d3c54f-cdba-41bd-96fe-3bf0cfb6354f\",\"moduleSequenceNumber\":39313},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d75df8eb-91c8-407e-954f-3120222be2b8\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8f9da1d7-07d4-45bf-a956-36d1039f36b0\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/93a3f735-b876-4371-8021-aa2d7a361031\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/918647a9-dac6-4116-b4b0-619357be6fd1\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2dfbb065-395a-4b1b-ae36-f44edb27e4c4\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/054a14fd-eb42-49cb-b721-f5a1576f2625\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/543220cd-9ee1-4ce2-9d68-34a828d0f685\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/271aa483-f125-49c7-96de-6b0c17aa8d2f\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9c95ef36-7719-4b79-ae8f-6432f85148cc\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6362aa42-b650-4251-ac76-567c37b5fed8\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f7d7cdb3-e47e-49b0-827b-dd4caf40a947\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/13878eef-3ece-4f73-bf49-bb781c1e1024\",\"moduleSequenceNumber\":39312},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dfd37874-afc5-4fa6-87e4-1574504c89ed\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ed89816d-a824-454e-8204-cb6262f82c85\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/17d0f471-0192-4f15-856c-024ceef365b9\",\"moduleSequenceNumber\":39320},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7926ed9f-f9ae-44c4-9fde-855e110d9ec2\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/43e5fbbd-5c8f-4c0d-83d2-faa6d745e240\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0a88bb7c-2de3-44de-8d41-ae7a56a1bd8a\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0e0aff09-0640-4842-bf4b-9b1ae4eab826\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b267b3a4-89d1-4962-9350-bd02c00e6924\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/826dc4ad-0ec6-404b-a775-ab10a65a60d1\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bd2d5c1b-e0a2-4c21-93cf-971deed2889a\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/71bbe8ba-9f36-4145-ba97-7e2cdab601e0\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cccdca43-253e-4ecd-b5bb-f8d0e528c84c\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/59f1797d-ca65-484b-8071-89a287ed4393\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b7b1b620-02c2-4615-ae54-6a618a18d07f\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/26a52efb-ec93-43a5-998e-95922e9f9727\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d4d180b6-0036-4337-b8d1-c605bc4c344e\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d58da7e2-297a-4d2a-a554-02c7fdfab3f9\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bd9cef77-0cf8-449d-9582-5fb46a816a40\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d99cc451-579d-491c-942b-8eee4bbbdf98\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/18b29de6-b7ed-4ebe-af7c-3c0174688f23\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b89b7c6b-70b3-41a9-b8c2-437b76f5289a\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/21f14271-ce80-4b95-b604-4b2977bf503b\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5ef30e5a-9bbf-4b37-a9bd-22aa28241755\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/86656ab7-82f1-443f-a647-b5583dc2cf6c\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9d494de3-2e94-4902-8eb0-d643c4dd54ed\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e1062ae5-fe08-4d85-addc-fab8e1627b0e\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/75eec9ed-f179-41f9-8800-511b9180b94e\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ad267ba4-b472-4216-b79c-86389112cad5\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/51ae448d-8739-4d6b-8de4-8fdb807f7d94\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d4839168-ed5d-4913-b49b-867a893b293b\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f97a1e7d-76cc-44d1-9af5-7438d8806baf\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/4989596a-d7bc-438f-b2f9-4c23dcdf3327\",\"moduleSequenceNumber\":39303},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/79d910ef-b48f-4819-ae50-16145f3a16ec\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c12d3166-a403-4e51-a44c-4917e9263ca1\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/16c8e0a4-41aa-41c2-a436-2a9ba9f2b2d7\",\"moduleSequenceNumber\":39322},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/836f211d-fd40-47bf-a1e6-c005ed8ccfd9\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1c94a935-c107-4ac2-a827-3811ebd96cb1\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/13eba57c-2067-43eb-9b8b-3676d7aa3acc\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e497a2b6-8062-485b-82c2-17803eca5ce0\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b2fc5586-933b-4363-8e3c-cf733d06e963\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f8c2523f-11bf-4a13-954e-e7c7fb5e4fc5\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/928709a1-d545-42b5-af5f-9a24ed874eea\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d3552d91-aff9-4b2b-b425-d8a474beef4b\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b0c5e170-bd15-4082-b607-d287ad0f7bc3\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b6a02df6-2e39-4bda-974a-041f13315ba8\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d564cb91-a769-461a-8dff-7eec6a30634d\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ae7fe01b-99c9-417a-9a7e-b89b36d78207\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/2ffac0b9-4378-47e9-980c-9b0419f7e4e3\",\"moduleSequenceNumber\":39313},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/76d219cd-ecb6-40d7-8029-a142f8467ce2\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e97e31a7-622b-4b3b-a69f-ef68762303de\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6322ba9e-7f74-4a88-b2f5-2241b7e9d3b3\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e4e5d297-fad9-40f0-9fa1-a21cc03f4745\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/07518a8f-ae7a-424f-9cda-7a283befe6df\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5d5baa2a-bebe-4250-aee5-c1594153315b\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7d46e7b1-a9ab-466e-a222-4bb713985805\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3759f7b9-7cfc-4cab-986f-08b255b1c052\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f31719fd-752f-40e8-91b4-714b180f61e5\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/daab3892-c456-41b5-9c5a-752c54f15a75\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/8e781a8e-4153-487d-aeb1-5fcc7a82783a\",\"moduleSequenceNumber\":39310},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/507f0741-04f7-4413-91de-c2c62e3dd142\",\"moduleSequenceNumber\":39305},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8b3a22b2-507c-4569-8ded-377f43f307ee\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9ab3329c-6be3-4168-a00d-5b57d16b0c5b\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fa116a34-6aa1-4704-ad49-1f1ad3cc8c04\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/3f69f443-595b-46aa-99ab-2ba5be0f5fcf\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/524d07ad-8165-416e-ac22-645d8ed25fbb\",\"moduleSequenceNumber\":39324},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ad752eb6-1d84-4e24-800b-43792b8ccd4c\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/68a269b5-eda8-4fb6-8d99-d7c3167e9b8b\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4f2d6e1c-6987-4d56-8f1a-5be08eb21ea8\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/454d08cb-7e95-4d74-850f-01511ad85057\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/77dab68e-d9a7-4830-a170-e5bee7c205b6\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bb454f03-7277-4941-a40f-49f6b102d583\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/74b03179-7396-432a-a659-71aecbba4a37\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/740210d5-3f89-4203-a866-2acd1adfd11f\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d615dbab-d741-4099-a29f-55c62e70da7c\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/acbb781b-6fca-49ae-a7a0-37d8e9765785\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8859a873-f9cf-4976-accc-18d1311a03bb\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/70b8cdc4-95dc-4d56-b2ce-af7c8edffc3f\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/98ba30b6-1022-4487-84db-7cd9ffda9421\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f429d74a-a350-46d0-bf69-3136c7b4d521\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/34e20ebc-c3cf-414b-9a5c-21201bc9ba1c\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fe3548a8-87c9-4d77-9a81-f524fc9c8814\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d036d812-5f95-4e2b-b909-c3c0a9a78bf7\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e43c396c-f79d-44e4-99fb-57229db58b2f\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1c80963f-ef73-4e48-b6d7-25824b571eb1\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a15a33b4-5e3e-42fc-a377-2278e89c51cd\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2a107219-6924-4b5b-982b-cb0f7dd2eb2c\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/85cb2c22-59d8-424c-9d0c-fe4a77298c36\",\"moduleSequenceNumber\":39313},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1194c21f-a273-4f9d-a28d-df910c9363a0\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d50e23d5-aab5-4230-bec0-899b27f8e1d9\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4c99947a-19d5-486a-a80c-707ca63f360a\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/6e87c4ab-4f36-4264-b4c2-36f39ec2d046\",\"moduleSequenceNumber\":39292},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/df299a99-4990-4951-844c-c086c15b9797\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/bbb8724e-355c-48c4-9415-5967c5acf207\",\"moduleSequenceNumber\":39318},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d5479738-61e3-459b-b16f-f8e760c2e28b\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/06a48103-0499-4f7e-a652-847b0a41a21f\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9f324791-a441-44e0-930c-47cf07d2c30f\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f0fc65a3-fc35-4412-81e2-1a407791ec95\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1a926530-f176-4264-acaf-365223415664\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bef77b0b-d3a2-4857-99b0-5fd0f201e094\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/965d249d-b355-4fa1-a08b-49d6c0ef195e\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dbfd6b1d-2906-46a7-bc42-d3acc82d6dc6\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/133cb85b-2ad3-48fb-a464-905333a57fa9\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/66ee5154-07c8-4632-9be6-03ceea1c72fc\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/7d1aaeb1-6187-466f-98c8-c9810e5ee923\",\"moduleSequenceNumber\":39310},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5b106dfe-9637-4746-ae69-07ea1f6116a1\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b100eff8-b229-4940-87fb-d87d57561cea\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8eda654c-469e-4abe-88f6-b94827f73741\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/bb47c0f0-391f-40e4-b168-0493a5eda669\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/80484896-079f-4f4a-aac1-e91c34501085\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/294395a5-ee2e-4c6a-b8da-2e9dec0a9d8e\",\"moduleSequenceNumber\":39317},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/71f407f1-f04e-4ccf-b30b-2e44bc72cc9d\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/99b3fcb2-d0c3-4488-b0c6-233217d5ea2a\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/01c9f927-8d99-4626-ae86-0ecc3c147039\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5d53d32f-bdf1-4206-8477-140fce84dac3\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b48c319c-417e-445a-ab58-36d373c612e6\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/be135231-5bdb-4073-8d18-f2717f6cb768\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7409ebcf-5d0c-4d97-979a-3a26cdf8adc2\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/640d9709-053b-4826-bbe3-71c459fb350e\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/53097ab6-7b90-4c93-97b5-74259272f93f\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c2ba0330-04e6-421a-9d0d-1d3f77d152bc\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/30e4619c-5281-4e35-adb7-b6282236fc7a\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/da69158e-dae6-4dad-8fd9-a1c4d9e68746\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/06a17a1c-f6e1-46e8-971d-4aa3219bb748\",\"moduleSequenceNumber\":39316},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a3bd82db-b613-4637-8dce-e24428b70060\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ecebbf88-9df0-4b15-9c95-e6b883c1267f\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ec7f526c-62fd-4a43-9c11-1091f6f36519\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dbfef155-39a8-4ef9-a558-bc16a8d12f00\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1a730ab6-ddbf-47a1-919f-6ee8a0f5d0b1\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a70c0a94-4f2d-4749-954e-27fb10143efa\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b93c8aaf-270f-47f4-bb8b-1ecf1c0a7560\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cefd2800-446e-4b09-a6b7-8309e3646349\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c5ccb1e5-7456-4b5e-98e3-bc99bfba88de\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4b9d8cf4-ecbc-48cf-8a73-b301b02fa1a9\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/88a55d70-da2b-4572-9e9b-f253fc5a2390\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2ef1ebaa-7632-47a7-85bb-8763bc88980f\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/bae89143-429c-441a-ba8a-2dc58ac74bea\",\"moduleSequenceNumber\":39313},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/995e74fd-d496-4531-977c-828d6948cb15\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/480985fd-ad32-40f3-bb35-56d27e9c02b4\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7a6f2b00-55e9-4254-a1dd-0b0b6a74789c\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bb3416c2-a2a3-4e47-af52-2a74ca32a3ba\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/69e4eb77-b940-4aae-a6e4-eba936893df8\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0b0303cb-3e25-40a4-8f6a-162792257a1a\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2c4df847-4773-406b-8424-1250a239a085\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/81a42920-0d8c-49f6-af7c-ce94da9688c0\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e52c65fd-af9a-4a49-968b-6fa84356d032\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4f574da1-09fe-45a6-bfc2-3d3fdc1fb140\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/d2d92f70-d768-4074-8afe-8a7af7127374\",\"moduleSequenceNumber\":39310},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/2a4ed0bd-d02d-4117-8c38-aec28348447d\",\"moduleSequenceNumber\":39305},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ddf55dea-6666-4f46-97e8-8ef922071184\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1735dc6d-eb25-49c9-b2eb-99c487b6ce4d\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a75c1fab-238e-4332-9ef7-eba9a5197acb\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/2bc5ed34-da55-4108-9c99-ec22878e797b\",\"moduleSequenceNumber\":39292},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8a67b8cb-da98-4b4c-a596-0bcb84f80f79\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/90adb1f2-aa24-44d2-81e6-60d7c4099fd4\",\"moduleSequenceNumber\":39319},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a198e1e2-7555-4919-b76b-cf81e94b7e48\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e622d559-cae2-4bfe-b9da-d23e1a7da537\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2fa9cdfa-b0c4-4b8d-aa2a-b3bce88c5f6a\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ed12ef69-c872-4a86-aa39-b398a34a2893\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/6adbc8ca-59e6-4fe5-8932-a097105fcfb2\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f706652b-5218-444e-aaf1-db71aa21aabc\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7085f0b5-edc7-4fb4-be49-8997e820981e\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7f699dde-6d06-4fda-a2cd-520b3d3f770f\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a11196de-fb44-4417-8f6e-8aaa40b78148\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0358ef9c-db0f-4d35-8d15-75835494e3f5\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f353bf3f-2e2f-4dcb-86b0-2079ffa7e4a5\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e1f84316-daa8-41ba-85e5-07af23651dcb\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8b4ecc3b-400e-4a57-bf08-eed76df1f3fc\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d2d2d767-1d80-405c-ab7e-7353027334a2\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ec2c2f9c-c89f-43ae-a238-b70ca779c2fb\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/dd003ecf-d4bf-4f47-b4ed-106afbb2d976\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/57bce2cb-e21b-4ddd-9fd1-c2c0149d47b4\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a1d7447e-1500-495f-bc4f-1d39ab6a2dab\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9a28e2c6-26d2-4b92-b436-30f9b656f974\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cd938137-0b2d-49dc-8f92-74197bdae512\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9346cc42-9aae-4684-b6e6-1843f5910c10\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/57f5a4d0-3bb5-488c-a813-e270eb7ab928\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/622db93b-c605-4aa4-8277-623d79d956ec\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7987af4f-8b80-4aaf-918f-9d77fd925c3f\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e71c8717-fe2e-4181-9c0d-b219a3cbdbb8\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/337067b5-7407-4ea0-bfe9-62a21051fa7e\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/72fd7f3e-4aea-4bb5-8af1-c0decb2013e6\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3a121730-0e68-41b8-b23c-30c399c229b1\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/836149f3-61c4-4979-ad8d-104c4f5c6dfc\",\"moduleSequenceNumber\":39303},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3c86c5c3-918e-4075-bd78-8bdea5bc3625\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/23875b2f-7bcc-472f-9f97-ec37e449bf0c\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/b3f4d044-e2ab-4b78-b391-c9383cb2365e\",\"moduleSequenceNumber\":39322},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c4967d4c-27e6-403f-b31a-909245fd1c7b\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/78a0e541-d24f-414f-b250-6a15521e75ae\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9ca2dce3-e690-47a4-9a84-d8a215b5fd0c\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4b1968ae-e27a-4c71-8634-b3259b64fb51\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/114e844c-4e7c-4f8f-a226-cddf53aa9bb8\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bcc33be8-fbcd-4b34-acb9-1194499d7af5\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f264041e-f390-4a15-94c3-83c9c780bb42\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/81945ec9-c67d-46bd-a4b6-ea73679e7d95\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/64817662-a08e-44ca-a437-95aa69ad873b\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ba28edbb-c2f8-4ae7-bb2c-592f5b37e801\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/093d370a-77bd-412d-ad18-6d79edef48f2\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1a00e6ab-8e62-4143-8c55-2a978149cbf0\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/e0570af8-c7f6-4c58-a7f9-c13e60062868\",\"moduleSequenceNumber\":39313},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/608cbfa6-4649-4618-9225-7aa85eebe28b\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/12f6c662-2eef-4e77-869f-a994cbcab9f5\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ea58aa55-84d6-445e-b891-1cd3a7a09236\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/984594f3-63ae-415e-a783-6b5ee924c4f9\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/72e9210d-0862-477f-ba8a-6855cba63099\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a60cf22e-a04e-4177-ad48-8050bfeb7f76\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ec5545e7-4590-4124-a675-657516d95ed8\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/00812d2a-9832-44be-a88f-0552cebaf9f5\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ea7155be-0489-4a1c-936d-321f2c90ddb2\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cd25b332-c956-4552-ba46-7f40461eb11f\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/64d68dfc-2416-4d00-933d-572f0820d289\",\"moduleSequenceNumber\":39310},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/514c6c15-0a1b-41d6-8ec7-839b9ada709d\",\"moduleSequenceNumber\":39305},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c3db4439-a251-4fba-9886-8790bfc35adf\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1daa8877-0a11-4ee2-b492-9283a2ed004a\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/81117872-c0ba-45cd-a304-13b36b16ae2d\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/cc220ee6-5023-4771-995e-575c3ae34803\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/f37c523d-8dc3-42a5-ac8a-cd1ff4142a7d\",\"moduleSequenceNumber\":39324},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ca6f32bb-2896-4635-b3c0-3e66f279b755\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ca2777ba-b6e7-4656-acf1-405ff5fbabbf\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/881eeb50-6571-4704-87dd-292ddc242998\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/872c921e-6eac-4210-871f-88aa587a6ae3\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c201ce8d-aacb-4a18-b7f1-5da59a2d4448\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/65fc96bb-759b-4e24-af6f-362139086432\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7ea17e9a-926b-44b5-90a2-7e43cd1397f0\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/87aac8e2-edc5-41ff-93e9-42baf3c0d675\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d8d18d17-21c8-48f2-a16c-e4542171e5d5\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/01d0631f-54b2-4f3c-875e-3f81a2e8e1be\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/14633480-7acd-43fd-8116-65b5d5f19015\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/44a244bb-399a-40ae-91dc-2e7e3df75131\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8e4bfd99-5b23-4479-a130-d6122be96f84\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9208f0ab-79d6-4cb8-bf1f-ce4b88c41ba1\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6cc4220c-ccc9-428f-8167-51b83eb24d75\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/06325b6d-3d19-4717-8779-e30733aa2f98\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/32780288-473d-4d5a-bb59-032468a00eae\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d83115ef-cbb2-4512-8117-0d9184813d2a\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/bc878935-cbde-4346-996e-8e1888297493\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/abb8ae26-8db8-4848-ac35-6dceab5552e4\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f86db882-c481-4225-ad21-1d643b937186\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/21bc5588-7609-4ea1-888b-ece7bbc8cb05\",\"moduleSequenceNumber\":39313},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c33de146-3018-44d7-b736-226736f67c2d\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/92c5c117-0b8e-4c88-bf80-7f93e500d9d8\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/32a7c068-10df-46c8-afba-634b61f3d3e3\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/6931c71f-e356-4d8d-80a4-a10de1e32a32\",\"moduleSequenceNumber\":39292},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/c7036c74-7c8f-4393-968b-bf7171ab6c51\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/a7f8d46e-6d95-47f0-8c85-740d580a7ccb\",\"moduleSequenceNumber\":39318},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9892d238-c223-4f3e-83f3-9bf4ceac99ae\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1e148bd9-adb1-4580-8a9b-f73355c12397\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fc312f81-46fb-40b1-9fc3-28d7cb013967\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/58e51cf5-7129-4a5d-8c79-36cb1b95e828\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bf823255-e824-4f0d-a61b-10777ef8dcf1\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/59045b6f-42fd-47df-9454-611a607afe9f\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/322b7de3-d3ac-4ef3-82bf-4801ecba5033\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e53922c9-d65b-476d-b166-a119f59d7cb0\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/759cd465-b61e-44a0-91e1-f04e97d01eee\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/72971640-6ff3-4197-9333-4369f928b632\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/affaf68e-f752-45c8-bb4a-100ebed365cb\",\"moduleSequenceNumber\":39310},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/760efb99-94a5-4fc5-9460-06102b77f91e\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/393c7124-d058-4cf5-96db-13c0887edf26\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2e302525-b9a1-4992-95fb-70665da9520b\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/64c52143-051a-455a-9364-646405f7dbd8\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/963a8e5d-3e04-4200-9ab9-313c1fafbbc1\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/b5dab094-3692-4b81-b583-613000d7feb0\",\"moduleSequenceNumber\":39317},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cf20e0dc-4518-4f9e-9d79-fdfcab3883dd\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/14f3e8c1-11d2-4761-961d-d3a2235e8490\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ed13b164-0d60-451b-8d9c-66c75d8d222a\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e95551c4-e6c9-415c-b78e-6cb82b881733\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e0408917-07b0-4d80-b01e-6448a7d8874c\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bc911a85-1b5e-4332-862c-33dd5a9ffbd4\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1a5add91-7254-4b14-bedd-a7f7bd90e0fa\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6d73c2d0-2a2f-4991-9e77-e2d9404a7308\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/86a32dfa-035d-46ce-a18f-7ac3a19d65aa\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8eec3f97-1a9f-40ac-8a47-4d2fd98c9eba\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e22233f7-3fb4-4dbc-83f8-715a5eac188a\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/37f20ad1-f0b8-4e14-a97b-52afdb5f7cb9\",\"moduleSequenceNumber\":39289},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/d70c10ca-5e5d-48f4-bbc5-3b065a34b35b\",\"moduleSequenceNumber\":39316},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b5f83587-fba0-4fd4-9a39-324c3e8b2049\",\"moduleSequenceNumber\":39306},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e8999287-065d-47f8-abd1-0c6129ecb3ce\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9882f397-5f08-4a70-89c7-d0aa9be466ae\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/96fcfb76-138b-4939-ab24-ba7506f10d02\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7da2c3ad-823d-436a-8ac0-fa45d45f78d6\",\"moduleSequenceNumber\":39298},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f08c8c24-7906-4c7c-a034-2695d832c548\",\"moduleSequenceNumber\":39297},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/99ce4472-4084-43d5-8188-3fc4525c1074\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bdc46103-d3e1-42ef-a26f-9123d650738f\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bf62d961-14dc-473a-8086-8c2ef3d70d89\",\"moduleSequenceNumber\":39328},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/03c152f1-87d2-4fe5-88c4-58947c0c2110\",\"moduleSequenceNumber\":39301},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cbb302aa-0b67-4354-befb-61ab659cf069\",\"moduleSequenceNumber\":39299},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c82fce5b-83fb-48b1-837f-8b56f914daff\",\"moduleSequenceNumber\":39293},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/3a51732d-c949-483c-9b6a-63b20bf466c1\",\"moduleSequenceNumber\":39313},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/859486e0-ff84-4b5d-9dfa-479ccca585c5\",\"moduleSequenceNumber\":39305},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cbd78c1b-0169-44f5-ad51-7ddf5ff27c05\",\"moduleSequenceNumber\":39304},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8ba19154-c7a9-4f3d-bfb1-24384870cfec\",\"moduleSequenceNumber\":39294},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/05904ae7-6650-48ef-9dde-bc78a9d6b444\",\"moduleSequenceNumber\":39289},{\"filename\":\"/singularity/faction-megacorp.js\",\"url\":\"blob:https://danielyxie.github.io/6fc1510d-2cd5-4a9d-a524-3dfadc6237ae\",\"moduleSequenceNumber\":39531}],\"dependents\":[],\"ramUsage\":76.9,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":787,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"installBackdoor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getCompanyRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"donateToFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"connect\",\"cost\":2},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationPrereq\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"scan\",\"cost\":0.2},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { factions } from \\\"/lib/constant/faction.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { owned_augment } from \\\"/lib/singularity/augment.js\\\";\\nimport {\\n    assert,\\n    hram_resume,\\n    hram_suspend,\\n    is_valid_faction,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Choose a faction to join and join that faction.  Work for the faction to\\n * earn enough reputation points to allow us to purchase all Augmentations from\\n * the faction.  We typically choose a faction for these reasons:\\n *\\n * (1) We have not yet joined the faction.\\n * (2) We have not yet purchased and installed all Augmentations from the\\n *     faction.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction choose_faction(ns) {\\n    // Determine which faction to join next.  First, consider factions on our\\n    // fast track.  These factions have Augmentations to boost our reputation\\n    // multiplier as well as allowing us to start with various port opener\\n    // programs.\\n    let faction = \\\"\\\";\\n    for (const f of Object.keys(factions.fast_track)) {\\n        if (join_next(ns, f)) {\\n            faction = f;\\n            break;\\n        }\\n    }\\n    // In case we have already joined each faction on the fast track list,\\n    // consider the remaining factions.\\n    if (faction === \\\"\\\") {\\n        for (const f of factions.all) {\\n            if (join_next(ns, f)) {\\n                faction = f;\\n                break;\\n            }\\n        }\\n    }\\n    if (faction === \\\"\\\") {\\n        return;\\n    }\\n    // Join a faction.\\n    assert(faction.length > 0);\\n    let script = \\\"\\\";\\n    switch (faction) {\\n        case \\\"Aevum\\\":\\n            script = \\\"/singularity/faction-city.js\\\";\\n            break;\\n        case \\\"Bachman & Associates\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"BitRunners\\\":\\n            script = \\\"/singularity/faction-hack.js\\\";\\n            break;\\n        case \\\"Blade Industries\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"Chongqing\\\":\\n            script = \\\"/singularity/faction-city.js\\\";\\n            break;\\n        case \\\"Clarke Incorporated\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"CyberSec\\\":\\n            script = \\\"/singularity/faction-early.js\\\";\\n            break;\\n        case \\\"Daedalus\\\":\\n            script = \\\"/singularity/faction-end.js\\\";\\n            break;\\n        case \\\"ECorp\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"Four Sigma\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"Fulcrum Secret Technologies\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"Illuminati\\\":\\n            script = \\\"/singularity/faction-end.js\\\";\\n            break;\\n        case \\\"Ishima\\\":\\n            script = \\\"/singularity/faction-city.js\\\";\\n            break;\\n        case \\\"KuaiGong International\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"MegaCorp\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"Netburners\\\":\\n            script = \\\"/singularity/faction-early.js\\\";\\n            break;\\n        case \\\"New Tokyo\\\":\\n            script = \\\"/singularity/faction-city.js\\\";\\n            break;\\n        case \\\"NiteSec\\\":\\n            script = \\\"/singularity/faction-hack.js\\\";\\n            break;\\n        case \\\"NWO\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"OmniTek Incorporated\\\":\\n            script = \\\"/singularity/faction-megacorp.js\\\";\\n            break;\\n        case \\\"Sector-12\\\":\\n            script = \\\"/singularity/faction-city.js\\\";\\n            break;\\n        case \\\"Silhouette\\\":\\n            script = \\\"/singularity/faction-crime.js\\\";\\n            break;\\n        case \\\"Slum Snakes\\\":\\n            script = \\\"/singularity/faction-crime.js\\\";\\n            break;\\n        case \\\"Speakers for the Dead\\\":\\n            script = \\\"/singularity/faction-crime.js\\\";\\n            break;\\n        case \\\"Tetrads\\\":\\n            script = \\\"/singularity/faction-crime.js\\\";\\n            break;\\n        case \\\"The Black Hand\\\":\\n            script = \\\"/singularity/faction-hack.js\\\";\\n            break;\\n        case \\\"The Covenant\\\":\\n            script = \\\"/singularity/faction-end.js\\\";\\n            break;\\n        case \\\"The Dark Army\\\":\\n            script = \\\"/singularity/faction-crime.js\\\";\\n            break;\\n        case \\\"The Syndicate\\\":\\n            script = \\\"/singularity/faction-crime.js\\\";\\n            break;\\n        case \\\"Tian Di Hui\\\":\\n            script = \\\"/singularity/faction-early.js\\\";\\n            break;\\n        case \\\"Volhaven\\\":\\n            script = \\\"/singularity/faction-city.js\\\";\\n            break;\\n        default:\\n            break;\\n    }\\n    assert(script !== \\\"\\\");\\n    const nthread = 1;\\n    ns.exec(script, home, nthread, faction);\\n}\\n\\n/**\\n * Whether to join a given faction.  We exclude the faction within which we\\n * created a gang.\\n *\\n * @param ns The Netscript API.\\n * @param fac The name of the faction to consider.\\n * @return true if the given faction should be joined next; false otherwise.\\n */\\nfunction join_next(ns, fac) {\\n    assert(is_valid_faction(fac));\\n    // We have a gang within the given faction.  Must be in a gang in order to\\n    // get information about our gang.\\n    if (ns.gang.inGang()) {\\n        const gang_fac = ns.gang.getGangInformation().faction;\\n        if (gang_fac === fac) {\\n            return bool.NO_JOIN;\\n        }\\n    }\\n    // See whether we have all Augmentations from the given faction.\\n    const owned_aug = owned_augment(ns);\\n    for (const aug of ns.singularity.getAugmentationsFromFaction(fac)) {\\n        if (!owned_aug.has(aug)) {\\n            return bool.JOIN;\\n        }\\n    }\\n    return bool.NO_JOIN;\\n}\\n\\n/**\\n * WARNING: This script requires a huge amount of RAM because it uses many\\n * functions from the Singularity API.  To reduce the RAM cost of this script,\\n * destroy BN4.2 and BN4.3.\\n *\\n * Join a faction and purchase all of its Augmentations.\\n *\\n * Usage: run singularity/faction.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Try to free up some RAM on home server so we can run some scripts.\\n    await hram_suspend(ns);\\n    choose_faction(ns);\\n    hram_resume(ns);\\n}\\n\",\"filename\":\"/singularity/faction.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/21d00175-d404-4887-9ac0-e3146bd39db7\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/53b80f0b-559e-4a99-a7ff-da104b72ec48\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/19b44cce-9b40-4ea2-80d9-72c504ef22e7\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/46c59e3c-32e1-4d3b-a854-caa375d98e99\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/007e53ae-8866-4890-b0a1-b3fc49aa2742\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c15cc3fd-cf04-4ee2-8ff0-86282989c5bf\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/88193a53-1896-4edf-b6a3-9e9baa7e00cc\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/36e6ae8e-9c17-48db-a7e6-a5ec5d2225b2\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/98d65139-4468-4592-b6aa-1dec74ea1913\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ef685225-aeb9-4aa4-8264-2a5640c564f1\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/58b41fde-05bc-40a4-8956-2e67717d16ee\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8f0f9964-3727-4ab7-a129-346474c77fbf\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3fe61bac-ad16-4fb0-80d6-c7892826d187\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bc056e8e-d2b3-4b76-96ed-c73be14267f1\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/83610ce9-6c44-41cd-a61d-ba81a1962602\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/de048796-a6ec-4c31-9846-95efc027dc87\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/219de9fc-dc27-48c8-8bae-bf22f2e42d32\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/65cd678f-74a8-45ef-95be-3fa51c034ce7\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/65060023-fa8b-4ed8-9795-b989686e39f8\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/2d4a4f44-864f-4ff0-aafa-43a7e9a38ec0\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d5c94906-8532-42c8-b4d6-70468af64a42\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9aee3c5f-c4fe-4890-8f19-3d23dfd4122a\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1bb4f66f-3f89-4c31-bfa9-d78c31efe53e\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6e165720-471e-41f1-bcb3-3b1ad2e29a24\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/acd60ea0-5cb9-48a3-bcbc-83d5f34bf9e2\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d186accb-a745-456a-bfe5-85c09c40290e\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/d085eb32-da2d-4e02-bafe-1d5c995ed765\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/2fd4a0fe-194e-4bbe-975a-2963d18ac888\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/17482d25-cb6b-489d-b1cf-904d7b901d9d\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c8ccea5d-f7e6-4975-adcf-99ba0ba70481\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fd604871-de5c-4290-9104-43c725b56e3e\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ffe5bd72-798b-4bdc-8f65-9d04d99d4d8f\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f7c94be6-640f-426c-896b-67ea9e30d7f1\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/2f68c8df-0ba8-41bc-940b-b6b158b2d8ec\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/03d0cd3f-0ba7-4010-844d-2413efc566dc\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c0cd8632-50c7-496c-acb9-91e2baa6bf90\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dd8a589d-a47e-4f62-bbcb-bd0ba8730503\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/e4aaf6ab-17bf-4d21-8487-64779ae82bd1\",\"moduleSequenceNumber\":68976},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/62f6be05-2af3-4f21-b893-943f2922bea1\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6e2bba47-48cb-47eb-aece-06722169ff01\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/2b3f3bbc-0f8f-40c3-9272-0c664934aa02\",\"moduleSequenceNumber\":68995},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/82667de0-84bf-4b32-9029-f1994889f077\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7b95815c-bb1a-4dc5-82d8-0ab206e0fa0c\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/95cf8352-3652-4b0b-a7eb-0226d62a4b8d\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6c6f6456-4039-45f4-9424-48541e7c5549\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/4dfba1ff-ff7b-4924-b11e-61e6358418e8\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/88a4e822-ada8-4d8b-868e-dd62012634c0\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9df06527-a87b-4059-a991-a70e18fc3adb\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d9a9368b-db6f-4dd0-9c49-f91484525b02\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0c09f982-2f63-4a88-8b4a-dd9621f7e113\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/387979ec-f727-4b79-bc3e-eeb1185e758e\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/006f42f4-7c60-4333-bd3f-619fefae19ff\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/137ecd00-0f86-4742-9b12-442bb40fb4f0\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/f8b32973-6143-4d7c-9e8e-eda2ec008313\",\"moduleSequenceNumber\":68986},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cfcfed22-5299-43fc-b5ea-824e471d80d0\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/02107a7a-8be0-406d-bd18-06d1a44a0c19\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/15abc191-bf47-4704-bf4e-396679f19118\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/20b5727f-3f9a-469a-8498-4eb3c103e1b2\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ac495393-67a3-43e4-8820-f1eaa79aab69\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4f17665e-106e-4887-973a-4552663d8d1e\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8bf800d8-3c90-4fe4-bfd4-3e3ff587b41c\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/76149f9a-0021-40c0-9fbc-90be324cf07b\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b1af8ca1-cb32-4c13-ac32-f2a8a25017d2\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dabe0470-1440-4acc-9db7-4e67dd10cdfc\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/e4cf5943-4f06-4c9d-aee5-913d16db625c\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/12dc545f-4692-48fe-a98b-1afc271046c6\",\"moduleSequenceNumber\":68978},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/68582d07-0d66-488f-bc00-9ffd18f63909\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c0d77908-962f-46d0-8fdd-beb32a736f9f\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c5a562cc-9398-4d42-825c-fd9c6a330414\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/54de0699-868d-4fcf-b022-5a7ef0ae0e5c\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/28a1f3a7-f710-4f9a-bf82-097b2aa7514b\",\"moduleSequenceNumber\":68997},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/823e1ffb-c96e-4350-95b1-184174f4bdfa\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/567cd7f8-2839-473a-97e0-463c4757868e\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d39fbc2c-36a5-4304-aa68-938d702fea57\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6699cad6-07fa-4113-9cdd-bdebd4b824bc\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/81d14c10-3bc1-47ed-8863-733e7ff1d966\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/9487f082-745b-48f5-8971-a5db572770cb\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/ca244fd4-f873-442c-8db6-265ffc5e32de\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e03b866b-0e4c-441c-8ac5-112290ad808e\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7fdaf94e-070c-45a4-97de-44351bc7cfe7\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e3d8d8b9-7c8f-4f5c-84b3-349c95f727a7\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d55411f5-d667-4896-92ab-7c1b55557901\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/038188e0-940c-448a-b086-aaf38b52ca71\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4de8b233-1288-43ca-90c7-aa93847af128\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/47575d42-158c-4fbb-a39f-7d2764b5f0fc\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ea933b9d-6451-4c49-b85d-02933f514221\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/84d6d934-0d1f-4a0b-a175-15e30930aab9\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3e4823c8-e4c1-4ee7-a7ce-904074a2ed91\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/35d83ad8-eaf7-48fa-8331-8aa20e78f250\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2192d279-39ea-49e7-9f90-5901904944ab\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b7b56784-ae13-4a72-bfcd-2825f9ee0568\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/43aea75e-31b3-468b-823b-24a1f2168202\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/9373bc12-9a25-426f-81ca-297da81a7069\",\"moduleSequenceNumber\":68986},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3611af6c-621b-4663-9cad-f4f1ce24f824\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6f171ef7-5056-44dc-8d56-f03df9ece62f\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9014979d-e70a-4d4c-ad24-ab9b1946377e\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/ec7c7caa-bc12-4ca2-b443-51b02a7947cc\",\"moduleSequenceNumber\":68965},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b056a95d-f8df-436f-9437-e72652df19e3\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/b8b8dad9-dfc2-4c42-b9ba-87070035c8ab\",\"moduleSequenceNumber\":68991},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8fe9a07d-82fa-4507-b3b2-b326ff7d6795\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c6bc5b89-28f3-4a83-8346-aacc1dc4a1c6\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/66750da7-74e8-4964-aa5b-8aa59065d9b3\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/97d6e48d-f47c-44c5-8e28-c0cf67d81722\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/93e1642c-65cb-480f-97e5-9233bdfa128c\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b93d3e6b-0268-4827-8549-a0f133dee2ab\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/93b89afb-3d7a-406a-bee5-146ac571aa21\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/49a3968b-0b8e-489e-a75f-5d5602ebe720\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5a6503d7-0d89-4473-907d-6fce6df531f1\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9c862b0b-a8b0-48c4-bb74-0a8fe58c94df\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/497d0e2c-409d-418c-9220-f4590f847ba9\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/592b5f36-e2f3-444d-97eb-fc8eb8035392\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1a8e8cf8-e3c4-49d2-a957-5d05ea5a0c57\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ba50c665-148d-40b3-823a-e088b0b88a9c\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/caaae294-e129-43f7-9ca4-7374583baccc\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/4efad0ac-0e1a-47d3-aac7-e911310a68bf\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/7e073c5e-e2bb-4b08-95dd-954d9f9c73f6\",\"moduleSequenceNumber\":68990},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ca54654a-b681-41b0-870c-a3d8e3a4e5db\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e15a61fa-5a9f-4a25-bf69-6c9ae15c1ca5\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b2c24804-150b-43a2-825a-b7a2198aa9cf\",\"moduleSequenceNumber\":68962},{\"filename\":\"/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e4e325af-0670-439e-9a88-db4bddd2ff75\",\"moduleSequenceNumber\":69194}],\"dependents\":[],\"ramUsage\":20,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":788,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { choose_hardware_company } from \\\"/lib/singularity/util.js\\\";\\nimport {\\n    assert,\\n    exec,\\n    trade_bot_resume,\\n    trade_bot_stop_buy,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Determine which to upgrade on the home server: Cores or RAM.  If the script\\n * \\\"share.js\\\" is running, this means that we are sharing our home server with a\\n * faction.  In this case, we only need to upgrade our RAM in order to run\\n * \\\"share.js\\\" using more threads.\\n *\\n * @param ns The Netscript API.\\n * @return A string having exactly one of the following values.\\n *     (1) \\\"Cores\\\" := Upgrade the Cores on the home server.\\n *     (2) \\\"RAM\\\" := Upgrade the RAM on the home server.\\n *     (3) \\\"\\\" := The empty string, meaning do not upgrade anything on the home\\n *         server.\\n */\\nfunction choose_upgrade(ns) {\\n    // Do not upgrade anything.\\n    if (is_at_limits(ns)) {\\n        return \\\"\\\";\\n    }\\n    // Is the script \\\"share.js\\\" running on our home server?\\n    const server = new Server(ns, home);\\n    const script = \\\"share.js\\\";\\n    assert(ns.fileExists(script, home));\\n    if (server.is_running_script(script)) {\\n        return \\\"RAM\\\";\\n    }\\n    // Upgrade the Cores.\\n    const core_cost = Math.ceil(ns.singularity.getUpgradeHomeCoresCost());\\n    const ram_cost = Math.ceil(ns.singularity.getUpgradeHomeRamCost());\\n    if (core_cost < ram_cost) {\\n        if (server.cores() < home_t.CORE) {\\n            return \\\"Cores\\\";\\n        }\\n    }\\n    // Upgrade the RAM.\\n    assert(ram_cost <= core_cost || server.cores() === home_t.CORE);\\n    assert(server.ram_max() < home_t.RAM);\\n    return \\\"RAM\\\";\\n}\\n\\n/**\\n * Whether the Cores and RAM on the home server are at the artificial limits.\\n * Even though the Cores or RAM, or both, are at maximum, this does not\\n * necessarily mean we cannot purchase more Cores or RAM for the home server.\\n *\\n * @param ns The Netscript API.\\n * @return true if both Cores and RAM are at maximum; false otherwise.\\n */\\nfunction is_at_limits(ns) {\\n    const server = new Server(ns, home);\\n    if (server.cores() >= home_t.CORE && server.ram_max() >= home_t.RAM) {\\n        return true;\\n    }\\n    return false;\\n}\\n\\n/**\\n * Upgrade the Cores or RAM on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function upgrade(ns) {\\n    // Relocate to increase Intelligence XP.\\n    const shop = await choose_hardware_company(ns);\\n    ns.singularity.goToLocation(shop);\\n    // Suppose our home server already has the greatest number of Cores and\\n    // RAM.  This does not necessarily mean we cannot purchase any more Cores\\n    // or RAM for the server.  We place artificial limits on the Cores and RAM\\n    // to avoid having to wait too long to accumulate sufficient funds.\\n    // Initially, we are willing to wait to upgrade the Cores or RAM up to and\\n    // including the given limits.  After the limits on Cores and RAM are\\n    // reached, we do not want to wait to accumulate money for upgrading Cores\\n    // or RAM.  We simply upgrade if our current funds allow.\\n    if (is_at_limits(ns)) {\\n        if (ns.singularity.upgradeHomeCores()) {\\n            log(ns, \\\"Upgrade home Cores\\\");\\n        }\\n        if (ns.singularity.upgradeHomeRam()) {\\n            log(ns, \\\"Upgrade home RAM\\\");\\n        }\\n        return;\\n    }\\n    // Wait to accumulate funds to purchase upgrades.\\n    const attribute = choose_upgrade(ns);\\n    assert(attribute !== \\\"\\\");\\n    if (attribute === \\\"Cores\\\") {\\n        await upgrade_cores(ns);\\n        return;\\n    }\\n    assert(attribute === \\\"RAM\\\");\\n    await upgrade_ram(ns);\\n}\\n\\n/**\\n * Upgrade the Cores on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function upgrade_cores(ns) {\\n    log(ns, \\\"Upgrade home Cores\\\");\\n    const success = ns.singularity.upgradeHomeCores();\\n    // We are willing to wait some time for our funds to increase.  After the\\n    // waiting period is over, try to upgrade the Cores again.  If we are still\\n    // unsuccessful at the second attempt, then move on.\\n    if (!success) {\\n        await ns.sleep(wait_t.MINUTE);\\n        ns.singularity.upgradeHomeCores();\\n    }\\n}\\n\\n/**\\n * Upgrade the RAM on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function upgrade_ram(ns) {\\n    log(ns, \\\"Upgrade home RAM\\\");\\n    const success = ns.singularity.upgradeHomeRam();\\n    // We are willing to wait some time for our funds to increase.  After the\\n    // waiting period is over, try to upgrade the RAM again.  If we are still\\n    // unsuccessful at the second attempt, then move on.\\n    if (!success) {\\n        await ns.sleep(wait_t.MINUTE);\\n        ns.singularity.upgradeHomeRam();\\n    }\\n}\\n\\n/**\\n * Upgrade the Cores and RAM on our home server.\\n *\\n * Usage: run singularity/home.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n\\n    await trade_bot_stop_buy(ns);\\n    await upgrade(ns);\\n    trade_bot_resume(ns);\\n    // The next script in the load chain.\\n    exec(ns, \\\"/chain/install.js\\\");\\n}\\n\",\"filename\":\"/singularity/home.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/85ae3115-104a-43f1-a05e-fc23a5331b8a\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bbfb6a46-2308-4d54-96d3-2033d02f0af9\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ccc303a6-41bd-4d3e-8ca5-8c223e1b2d9e\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c82af228-a0e7-4258-abee-640e324224bd\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/aa0f6c4b-4b57-4400-b822-2ba7d2f67ae6\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5ad0ec78-1f30-450d-8f9b-d5f7eb31dc73\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/fe6ecb6d-6c3f-4109-ae24-346a7da88d60\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9286a05e-dc8b-4b31-bc6d-53f660880363\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/97db673f-27e1-401e-9508-ceec8b84d200\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0be9cc6d-9baa-4ba7-9b32-947e1f69d1e0\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f20acc3c-5525-45b7-8280-44aac3940fb2\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/singularity/util.js\",\"url\":\"blob:https://danielyxie.github.io/df5edfd4-7c56-4c8b-b82c-f3e2ee13c7d1\",\"moduleSequenceNumber\":63562},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/544eb2de-fbb8-4106-8f91-9c0d6d19ffd5\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5abee96c-1d75-4d0b-af64-9cc53a75eceb\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/5efe4eca-13f3-45da-a8d9-f1a8566d3cf0\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ee258d02-4486-4b86-96d7-46131297a506\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/489e6012-2319-458b-a945-6ebb7a1779f9\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6304fddd-482d-4b46-85ea-76c100c0ca3b\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/81e0d0c0-edae-410e-8283-ec018dfb70e4\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/98fa9e1f-1f04-4b06-924f-45a512780d17\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a1a596dd-66c9-470c-80eb-c383a1fc1d64\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/3eb414f2-ee4a-4df7-bd7c-3559c4cc9555\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/da2be5ab-dd56-4022-b454-fde3303dd424\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/b601e235-e3bf-4498-9e75-8b4a5c2d534e\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/5edcb7d4-33f4-4f82-a453-8667bb6432d7\",\"moduleSequenceNumber\":63555},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/fe142953-f029-4033-9d90-d171deee1166\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c523faaf-2415-4b65-98d4-a65af23c0b7a\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4e553a97-f70e-4b49-bab9-92c1ab9361fb\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7df880ea-5d7e-4357-9095-e0782b79107c\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b51b8b62-7aa4-4027-a10f-fe7f3d640a96\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/7f997910-ac36-41cf-b61b-8f15a56453ca\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/1c601849-4692-4c39-bee8-f99a9256a5d9\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a69e0611-a808-44aa-ab13-cc08478b3160\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/bb4a3049-899c-47ac-b1a0-1ff7739efc09\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/822ce140-842c-4dd5-a47f-7a923f65d578\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/17a137c1-73fc-414c-9c84-7a17d042815b\",\"moduleSequenceNumber\":63549},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7a7d5b7f-e2f5-4919-968f-d34a8bac806f\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d7081b83-6036-4533-acbb-820f51f693ab\",\"moduleSequenceNumber\":63540},{\"filename\":\"/singularity/home.js\",\"url\":\"blob:https://danielyxie.github.io/93b916de-f24b-422a-87cd-8982a68f76a0\",\"moduleSequenceNumber\":68697}],\"dependents\":[],\"ramUsage\":25.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":789,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getUpgradeHomeCoresCost\",\"cost\":1.5},{\"type\":\"fn\",\"name\":\"getUpgradeHomeRamCost\",\"cost\":1.5},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"upgradeHomeCores\",\"cost\":3},{\"type\":\"fn\",\"name\":\"upgradeHomeRam\",\"cost\":3},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { cheapest_program } from \\\"/lib/constant/exe.js\\\";\\nimport { exclusive_aug, augment } from \\\"/lib/constant/faction.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { wse } from \\\"/lib/constant/wse.js\\\";\\nimport { Gangster } from \\\"/lib/gang/gangster.js\\\";\\nimport { reassign_soft_reset } from \\\"/lib/gang/util.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { join_all_factions } from \\\"/lib/singularity/faction.js\\\";\\nimport { has_ai_api } from \\\"/lib/source.js\\\";\\nimport {\\n    assert,\\n    cleanup,\\n    trade_bot_resume,\\n    trade_bot_stop_buy,\\n} from \\\"/lib/util.js\\\";\\n\\n/**\\n * Purchase Augmentations that are exclusive to various factions.  If we have\\n * a gang within a faction, the faction allows us to purchase Augmentations\\n * that are exclusive to other factions.  Exploit this feature to speed up our\\n * progression through all factions.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction buy_exclusive_augmentations(ns) {\\n    if (!ns.gang.inGang()) {\\n        return;\\n    }\\n    // The faction within which we created our gang.\\n    const gang_faction = ns.gang.getGangInformation().faction;\\n    // Attempt to purchase the exclusive Augmentations.\\n    const player = new Player(ns);\\n    const installed = new Set(installed_augmentations(ns));\\n    for (const faction of Object.keys(exclusive_aug)) {\\n        for (const aug of exclusive_aug[faction]) {\\n            if (installed.has(aug) || aug === augment.TRP) {\\n                continue;\\n            }\\n            const fac_rep = ns.singularity.getFactionRep(gang_faction);\\n            const aug_rep = ns.singularity.getAugmentationRepReq(aug);\\n            if (fac_rep < aug_rep) {\\n                continue;\\n            }\\n            const cost = ns.singularity.getAugmentationPrice(aug);\\n            if (player.money() < cost) {\\n                continue;\\n            }\\n            ns.singularity.purchaseAugmentation(gang_faction, aug);\\n        }\\n    }\\n}\\n\\n/**\\n * Use our gang faction to purchase any other Augmentations we can.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction buy_other_augmentations(ns) {\\n    if (!ns.gang.inGang()) {\\n        return;\\n    }\\n    // Sets of Augmentations to exclude.\\n    const installed = new Set(installed_augmentations(ns));\\n    let exclusive = [];\\n    for (const fac of Object.keys(exclusive_aug)) {\\n        exclusive = exclusive.concat(exclusive_aug[fac]);\\n    }\\n    exclusive = exclusive.filter((a) => a !== augment.TRP);\\n    exclusive = exclusive.concat(purchased_augmentations(ns));\\n    exclusive = new Set(exclusive);\\n    // Buy other Augmentations available from our gang faction.\\n    const { faction } = ns.gang.getGangInformation();\\n    const player = new Player(ns);\\n    const aug = ns.singularity\\n        .getAugmentationsFromFaction(faction)\\n        .filter((a) => a !== augment.TRP);\\n    for (const a of aug) {\\n        if (installed.has(a) || exclusive.has(a)) {\\n            continue;\\n        }\\n        const fac_rep = ns.singularity.getFactionRep(faction);\\n        const aug_rep = ns.singularity.getAugmentationRepReq(a);\\n        if (fac_rep < aug_rep) {\\n            continue;\\n        }\\n        const cost = ns.singularity.getAugmentationPrice(a);\\n        if (player.money() < cost) {\\n            continue;\\n        }\\n        assert(ns.singularity.purchaseAugmentation(faction, a));\\n    }\\n}\\n\\n/**\\n * Purchase programs via the dark web as many times as possible.  At this\\n * stage, we do not need any more programs to help us with our hacking and\\n * faction work.  We buy the programs over and over again to help raise our\\n * Intelligence XP.\\n */\\nasync function buy_programs(ns) {\\n    const player = new Player(ns);\\n    assert(player.has_tor());\\n    // Try to buy at most this many times to prevent the script from hanging.\\n    // If our income rises faster than our spending on programs, then it is\\n    // possible for this function to hang and buys indefinitely.\\n    const maxtry = 1000;\\n    const p = cheapest_program.NAME;\\n    const cost = cheapest_program.COST;\\n    ns.rm(p, player.home());\\n    for (let i = 0; i < maxtry; i++) {\\n        for (let j = 0; j < maxtry; j++) {\\n            if (player.money() < cost) {\\n                return;\\n            }\\n            ns.singularity.purchaseProgram(p);\\n            assert(ns.rm(p, player.home()));\\n        }\\n        await ns.sleep(wait_t.MILLISECOND);\\n    }\\n}\\n\\n/**\\n * Whether we have Augmentations that are purchased and yet to be installed.\\n *\\n * @param ns The Netscript API.\\n * @return true if we have Augmentations that are yet to be installed;\\n *     false otherwise.\\n */\\nfunction has_augmentations(ns) {\\n    const aug = purchased_augmentations(ns);\\n    return aug.length > 0;\\n}\\n\\n/**\\n * Install all purchased Augmentations.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction install(ns) {\\n    assert(has_augmentations(ns));\\n    log(ns, \\\"Install Augmentations and soft reset\\\");\\n    const script = \\\"go.js\\\";\\n    ns.singularity.installAugmentations(script);\\n}\\n\\n/**\\n * An array of Augmentations we have purchased and installed.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction installed_augmentations(ns) {\\n    return ns.singularity.getOwnedAugmentations(bool.NOT_PURCHASED);\\n}\\n\\n/**\\n * An array of Augmentations we have purchased, but not yet installed.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction purchased_augmentations(ns) {\\n    const purchased_aug = ns.singularity.getOwnedAugmentations(bool.PURCHASED);\\n    const installed_aug = installed_augmentations(ns);\\n    return purchased_aug.filter((a) => !installed_aug.includes(a));\\n}\\n\\n/**\\n * Prepare our gang for the soft reset.  After the soft reset, there would be a\\n * period of time during which our gang script would not run.  Set our gang to\\n * be in a neutral state during this waiting period.  At minimum, during the\\n * waiting period our gang should be doing the following:\\n *\\n * (1) Have some members engage in vigilante justice to decrease the penalty.\\n * (2) If a member is currently in training, set them to mug random people.\\n * (3) Disengage from territory warfare.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction set_neutral_gang(ns) {\\n    if (!ns.gang.inGang()) {\\n        log(ns, \\\"No access to Gang API\\\", colour.RED);\\n        return;\\n    }\\n    log(ns, \\\"Prepare gang for soft reset\\\");\\n    // First, kill our gang script.\\n    const script = \\\"/gang/crime.js\\\";\\n    const { faction } = ns.gang.getGangInformation();\\n    const player = new Player(ns);\\n    if (ns.isRunning(script, player.home(), faction)) {\\n        assert(ns.kill(script, player.home(), faction));\\n    }\\n    // Assign vigilantes.\\n    reassign_soft_reset(ns);\\n    // Put anyone in combat training to mug people.\\n    const gangster = new Gangster(ns);\\n    const newbie = ns.gang\\n        .getMemberNames()\\n        .filter((s) => gangster.is_training(s));\\n    gangster.mug(newbie);\\n    // Finally, disengage from turf warfare so members would not be killed\\n    // while we cannot run the script that manages our gang.\\n    ns.gang.setTerritoryWarfare(bool.DISABLE);\\n}\\n\\n/**\\n * Install all purchased Augmentations and run our bootstrap script.\\n *\\n * Usage: run singularity/install.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Tell the trade bot to stop buying shares.  Wait a while for it to sell\\n    // some shares.\\n    trade_bot_stop_buy(ns);\\n    const time = 3 * wse.TICK;\\n    log(\\n        ns,\\n        `Wait ${time / wait_t.SECOND} seconds to sell shares of stocks (if any)`\\n    );\\n    await ns.sleep(time);\\n    // Raise some Intelligence XP.\\n    if (has_ai_api(ns)) {\\n        log(ns, \\\"Raise Intelligence XP\\\");\\n        join_all_factions(ns);\\n        buy_exclusive_augmentations(ns);\\n        buy_other_augmentations(ns);\\n        await buy_programs(ns);\\n    } else {\\n        log(ns, \\\"No access to Artificial Intelligence API\\\", colour.RED);\\n    }\\n    trade_bot_resume(ns);\\n    // Set our gang to a state where it at least is working to lower the\\n    // penalty.\\n    set_neutral_gang(ns);\\n    // Install all Augmentations and soft reset.\\n    cleanup(ns);\\n    install(ns);\\n}\\n\",\"filename\":\"/singularity/install.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cd14eb62-354a-414e-bbd8-a3ab39dcc0ae\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/26eef795-9564-4a0b-988b-32853bfc75f5\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1c655561-dc59-4a6b-9192-0555a11e522e\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a9c699a2-e0b7-4112-a355-47d7b0d55839\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/11f24b78-11e6-4de5-aa73-f0a9849518b7\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6431d2a4-41ae-43fa-91df-e0527bae67f2\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8bf5797b-12f3-4455-b7cd-e331cc0fd38b\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/42d2d8d3-a052-43fc-b0fc-fd319f9603e9\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/533556dd-b1fd-4d70-a740-0b72984fb6ff\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7bfedbf7-c8a5-4b13-bc03-40408a8296c4\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d0e8ad0d-ffaf-4e11-b241-5da473bed26e\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/1ba4dd4d-4a39-4d51-8a1a-7c7709ae52ca\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9c1bc36c-4bce-4c48-ad52-b9aae5f62dba\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d4060b98-73a6-44fb-bf73-e1600aa75ad1\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/15a38aed-2637-475c-94d6-6e8a48bc6067\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/60c444fc-d513-48b1-a9a7-77cf45432f0c\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3e420fff-5285-45bf-aadd-994cb4d6d898\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f37a871f-ef2a-469c-88b8-17722b48bc5b\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/294ccd1d-f956-4208-a84f-53da1e97fad9\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/2deb9282-ec53-4ce5-bf7f-fcec8b50488e\",\"moduleSequenceNumber\":63527},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/8a8de687-bf67-4bc2-8607-afd04bb3c89d\",\"moduleSequenceNumber\":63566},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5a165da9-f5a0-45ee-9454-72ac9c319168\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6767706d-9bd6-424a-ad55-a5b5b66d627e\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f8b362ae-e262-4e54-be8a-249fcce59bcd\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/33109693-ca0d-41dc-8a97-0622293388bf\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/39e23bb7-1155-4df2-85d3-2eddf68d16c5\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f08867cb-70ac-49ce-b541-3b8ce44343af\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d4ae4464-5e95-41a0-bbdc-cb5bcb0a7919\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/63e69256-2ad2-4ea5-905b-bbaddaf42d68\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dbe07803-d0d7-4635-9bfd-07c59af5a807\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/88645235-e74e-4d56-832a-315af4c17305\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7a8b708f-577e-4079-bfb4-cc5d3f0abf54\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9d0f7ef3-511a-494f-82f2-f163b0c7b2a5\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/30f45b1e-be40-4e98-8c26-9c494191fdc1\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9c3ddec8-ba96-4cf4-a972-c245a8f76ca4\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/98b4ea47-df17-4cd4-abae-a43e3c750323\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/34c431d3-eb64-4dbd-8200-602459c816fa\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/55b45be5-2d60-452d-aa39-956431eb5952\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e8b2e332-2508-4ffa-9092-fc52a70697dd\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/915d946b-84c1-43e4-b6fc-1cfb8b2c90d0\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/3656dab6-ef3d-4f30-a691-74aacf59074d\",\"moduleSequenceNumber\":63542},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e5400b97-252b-40b8-9a1c-2db4eda32160\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a2b1649f-2742-49ac-afec-487b5b6b9444\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/a1817b20-461c-47cc-8b60-1b25c7a901c4\",\"moduleSequenceNumber\":63561},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1189c7cb-b6e7-4942-8dfd-b46784fd64c9\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b542708a-f38c-45ba-b4a2-237c97affa48\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0b1bf802-20bb-4311-a1a8-b7137b61b12f\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/560b2763-81e2-4790-a407-66eb310b0ccc\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cbed997f-0fce-45ea-9ee7-79e20a935092\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/03f408f0-114d-4263-bdfd-564d7508e35b\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6cae3a14-f8cb-4bfc-8b91-9063e9ce74a9\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/41b1c89e-b772-483c-9ae9-524e790b5347\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ef5b717c-078a-4813-975d-686559b482ff\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/eb251bef-5167-4c92-b608-89304bdcc1fa\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/34d6383f-2edd-46e6-96ca-8e9062f42152\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/507436d2-7796-4683-93a0-b488b674d33f\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fcde419b-51be-400d-9c60-e3faff60d9a1\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bab0cbbb-ae17-4163-9ff4-e2cdf1987442\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c340928e-a133-4428-a37f-cd01662baad1\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/46fb078e-a175-429b-9f57-e30e673997a5\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/85b89fa0-7027-4c6f-b980-cbf8749036ec\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/17a10979-f7ea-49c2-99a0-26ed7e0e0037\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ac41963e-f4b7-485b-881b-2a697d05db73\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c7bee361-a824-4222-a3c0-65e449849522\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/8e61bb2a-a329-4ddf-9b71-9dd2e7179fd5\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/4f619ae4-3fbb-403b-b824-e4c5336a1c1c\",\"moduleSequenceNumber\":63555},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/e5ecb825-baf4-4a90-b4a4-ee662b476430\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/810f7bc4-64bb-4349-85e3-9576047a51e8\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ed69868f-9a57-42a5-8e9d-c38bab077aa1\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7d32296a-5a31-4d79-a19d-3a351ab542ac\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/96190383-df01-4476-b382-b66aa01d7fed\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/84ea341f-a6c7-4b00-aed2-9b4b6a36d3e2\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/781a7c12-4a18-40f1-8639-dd7e8fef0167\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/af570e11-30ea-47b6-861c-339fe6003599\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/19949203-031d-4431-9a05-a8048b2e5e7e\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/34617be8-0562-41f6-b959-4193ca886e24\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e7fc9498-0dfa-4c72-85d6-3d3fec8f0153\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a373bb79-73c2-4fb6-919e-7bbee205f8b4\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/e73d7525-b3ed-4259-a364-63cf85ba483b\",\"moduleSequenceNumber\":63552},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/62c26f38-4611-4568-b0c0-f4b854e2bb61\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/58cfe129-93e0-4231-8440-8a73d4c6e0b9\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/18eb6f70-f9a7-4678-966f-d765d214150c\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/62692644-6c24-4dcd-9253-7e18f00dcdb0\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9b05ddeb-7883-4eb2-96f3-616f256a523d\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cc7e6c05-0e9a-46bc-8a0c-88b0731ecad0\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/939c62b2-7077-49d9-9019-cdfd3788635d\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/491448d7-0169-4b11-a4d4-3395a41c483a\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a22aa270-bbc0-4e77-a459-0bd9dad04553\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/56f7da3a-a115-42ae-9bf3-7f19b51629c9\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/350517de-7bec-4cf9-a848-f587052a132b\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/network.js\",\"url\":\"blob:https://danielyxie.github.io/9fcdb5d4-4abd-422d-a0fc-7474620e3cd5\",\"moduleSequenceNumber\":63551},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/35e76c7c-d98d-437f-9c56-9003cafe58ae\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/dfe9d6e2-6cd9-4f8f-b3e0-023e4b45834d\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/singularity/network.js\",\"url\":\"blob:https://danielyxie.github.io/d711167e-887a-4226-87d2-b607bb84251e\",\"moduleSequenceNumber\":63559},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/dfd68436-e57c-431b-8938-5479de1f7778\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/24d02a58-211f-4e75-a25d-e9cadb95a8d1\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/dbaf8565-2399-4ddf-bc63-ee35fedd22ee\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/93496611-bc11-479d-b23d-4d5ad57eb255\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b9c58e45-3c8d-4491-a71c-9cf77d494ffc\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/01f81ab8-7fd9-44be-8fe3-f3d918a36541\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/31b07df9-75ac-4a40-b7b8-9c3c39bd4cad\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0f4cd54f-b303-4500-b016-d8913bec8a6a\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/6c452233-7cf0-4397-8393-53a4fb15e664\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/8e35d767-3833-4ebc-a4d8-30c5a1b27dd7\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d843c248-5f40-4eed-b1ac-b388ddc589ea\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fa27b5a2-5ed2-4943-be7d-cc1a3fc52e94\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f4f2b1ed-f416-4c0e-a6c8-375a39e38573\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/63ee3025-20ae-476d-8f40-b2ad2c28c81d\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/16f8aff3-3ed3-4e05-bf4d-871348dc760c\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/92320396-c69c-4654-927b-abbc58c441a6\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/a7c528dd-4e48-46f5-9a52-b33fdb19a54a\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8aa18b76-8305-4cf7-9153-9ddb689223ba\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/7f48a0f8-bee3-43fe-9914-083164786b0a\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/06b057d1-dd01-46ee-95f2-e11ee7ebea29\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6613d8c6-d9c0-43dd-8059-c624ae7b9497\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6b718452-ee37-4eaa-a870-850e79fbe852\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/926872a8-19b0-4c26-9be6-53ec9e4a6724\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f1e2b21d-1ac9-4ed6-8aca-d0e943441076\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6ffd8f31-3de2-44a8-81e8-1f424fa5b374\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4445addd-5faf-4d20-9b9d-08b1d7aa3d17\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/aefe44b8-77b9-4f9f-b4f8-86c91aa8c093\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0cac6b27-5aab-4775-9907-21d8713b6aef\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/a298f5f1-bd5a-4504-b5a9-0ac363338a50\",\"moduleSequenceNumber\":63542},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/37d21ae3-eab3-4392-a070-09b75f96fe0a\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/723cf27f-46ae-43de-b99a-90b81d64f43b\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/67a4f0e3-0def-4c9f-932c-398cb4fadb47\",\"moduleSequenceNumber\":63561},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/355bf07d-b1bd-4cd0-9365-200feea44fb1\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a8833166-2d13-42a5-95f4-c11e4f5e9ad0\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b6817c1d-7934-4d38-8310-7744b4d647c8\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c35245b9-b21e-4646-a87f-0e3c99524126\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ba02a73c-d5a8-45bb-a3fa-caa748713db1\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/5d9755b9-40c8-4030-bb80-7896d4e5cedd\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6c0c173d-8852-42b9-87d7-a07cfd38c5a0\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/12904298-b6d6-4175-b2f3-ed746cdc32e0\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0cffe68d-149d-4593-bed7-dcd01179267e\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/919cef7b-8592-4aa8-a91b-cd7947a31e65\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/41a60be6-5eae-4f3c-a750-566e269185c2\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/320441ee-33a2-465e-aadd-10470f6d13bf\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/bb6a62c7-e883-4abd-919e-ba207b8fc521\",\"moduleSequenceNumber\":63552},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9dcf61fa-feaa-4db3-8f01-c3309166e37c\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/f42c4031-94f4-4fab-8628-140d66e0e6f8\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/abd8d068-282c-42e3-88a2-4669cff53491\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/47d289cd-9dd3-4845-97d9-dff7399924fb\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cf1c931e-8ad3-4831-8b46-72db2407828a\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/36b6a6e7-274e-44ca-9a18-1219ac90df4f\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/32df58e1-da76-4063-84b4-74b7d1c519a9\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fb913f40-62c4-4931-9f78-d980c606f1b7\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/eef8c7c3-333d-4996-927b-04498800f0db\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/6c130917-3cdc-458e-b143-ee8558582d0d\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/fbded09e-8bc9-4661-ab3e-56727570ce60\",\"moduleSequenceNumber\":63549},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/e6d533da-a693-42a8-ba81-7273ddc77dd0\",\"moduleSequenceNumber\":63544},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/fbaae404-6532-40bc-81a9-7cfac23ae571\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/373ed159-c71c-4961-848b-d3e8ee756585\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e8317911-45a7-41e6-be90-8c42fc65264c\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/4d2e0bc2-425b-4f69-840b-43931199b646\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/fb62c675-66f3-4395-a44e-a5d7c3b0f595\",\"moduleSequenceNumber\":63563},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/b546ee49-23af-43f3-b769-850c2e1673d1\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e13b27e4-81eb-42c1-9240-cdcfdd3be72e\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d4a55d24-d811-433b-8e6e-d2c361533d66\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9c70ceed-7caf-46bb-aca8-a9f01cd250da\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/02e2fa04-1a0a-4370-9761-cb7a60c5845f\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0f95ab07-3179-4c82-874f-ffa651dfa839\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9c8ab079-5810-42c1-a56d-7306c25c4361\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/def1d9d5-3771-441e-861a-bca4999192ba\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fb0ff803-77fc-46fe-b152-a4f40436f93c\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/373a76e6-3df3-4199-ae3b-2d26a8fa1cb4\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/48cea08c-d532-458c-acf7-ff5ed5d107cb\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/03ecff3d-82e5-432a-a227-338e31fb1276\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5f2036c2-fbbf-4ca7-93ba-f5399b44ec57\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/18244f2e-1520-4e0d-92e8-9b37776c2448\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e25b8019-6abe-4d41-83c9-1e6eb602dfa7\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/83632c78-7892-4666-a077-fbda3e56eb6e\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/075493aa-897f-4e9b-8c0a-c0cfc71565b4\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b8f518bf-b981-4aea-95a7-12a379c789c9\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/969e08ab-13d4-43aa-9e1f-56137dabec38\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/71b37ca8-29d0-4dc9-81f3-9c1c9841c2cd\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/484fe140-5ce4-4999-b8fa-7f51993925ec\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/107c079e-5a81-4565-a70d-6b7dd40979d4\",\"moduleSequenceNumber\":63552},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/3689b852-5c43-459e-a39b-450986c9f821\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7be79a64-e3dd-439c-a493-e11b6e571e8e\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/919a1ea1-84b9-4c23-8989-92805ee57482\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/fe047360-3d03-433f-a05a-8d5ed2fce8a6\",\"moduleSequenceNumber\":63531},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a40c0c5c-78d8-42c4-8305-14b5bf55d71b\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/crime.js\",\"url\":\"blob:https://danielyxie.github.io/ba13da9e-dc5c-40db-85fe-0020331d89af\",\"moduleSequenceNumber\":63557},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/4afebf3e-09c1-4637-9ae2-86de2c4634a3\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0e523bd7-3c1f-47c7-8af3-5d934c528737\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/84c5fe0c-4712-4c49-8142-90c93c0d57b1\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b98c1c0d-e053-494f-865a-76f51478d313\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/84453388-b17d-4df3-903f-5239e47cc132\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/71bc7a9d-27cc-4a72-af04-6cefc5217d8d\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f41ae04b-fd7c-486c-812d-fee92896fd38\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/807981b1-dadc-414e-ac26-41486365c612\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/adf2b3c6-4123-4850-95be-67ac2a7ffdf2\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a78f0f7c-e7be-4635-aa5a-b2354732f019\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/8a4efc38-086d-4718-87f6-4f256035ea10\",\"moduleSequenceNumber\":63549},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6da72c1a-0caf-4bd4-9d5b-928dfb87624c\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7d261876-f4f8-433f-b24b-66b25c27238d\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f5fa31bf-ae08-48a8-a35d-f86b1f13f605\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/cddf3ba0-90b5-4ae7-bba6-390780d36bb9\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/5cd7b8fe-87c0-4c12-9912-cd49ac866634\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/augment.js\",\"url\":\"blob:https://danielyxie.github.io/6fdb084f-f04e-4a9a-8c13-0916990b6699\",\"moduleSequenceNumber\":63556},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6c131d03-94f4-4df2-b5d3-49559a0311bc\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b2cbec5e-0a41-4f24-99de-e25eb59f1ff0\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4c673e3c-c793-4858-bec4-215e389de149\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e30a1af0-50fc-4cdb-9fc9-0b166321aeda\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/9613e0e8-ead0-41cd-9800-c29072fed1f6\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e52190c9-f9a7-421b-a350-c4c7459d0bb6\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/48a027de-bf98-439e-aed8-b062db49bf61\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/5e8d5539-69dc-4492-944f-c27722f43017\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1b0f1856-d15a-4236-9678-6f471c3bb97d\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8dae8e2a-0bbf-4edf-9914-ff2350e514ae\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a207364f-f623-42a7-9f3f-d058908f2e58\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ad33faf0-b3f8-4f7e-9bad-20f8af654366\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/server.js\",\"url\":\"blob:https://danielyxie.github.io/d2bf8dba-ee5f-4c82-9eec-b296676bc933\",\"moduleSequenceNumber\":63555},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/54f21c13-31f6-491f-bff4-ade8406a47f8\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/97c7983a-498d-44f2-8a58-8d5d1c0a60f5\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/cd40cdc5-c9c3-4cb4-a69a-c2a8dc265c1e\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8ba8e128-655d-42f8-ae5c-759fa2da969e\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d6b50521-460f-4ee9-9102-650115c19264\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e59185ff-e090-4ac3-9966-bd4be1ac064e\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d9f5790a-b034-4b62-a41a-38df5cebb65c\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/19574852-1a6f-46ab-8b57-bffde9370333\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a9e46873-6fe2-49e3-876c-e23703eb8326\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/29c4fbd2-39af-40b3-9616-c6becb02bdc5\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/ab90d614-3cf2-4cdb-98e5-027a5b57a721\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4d691cdf-84f9-46e2-9395-bdc64e347e06\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/c311644f-32d0-467e-b595-d93aa5175e47\",\"moduleSequenceNumber\":63552},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/852d94b7-3489-4a06-860b-88d5171baa97\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/606a4084-d078-4f11-8a4c-32cdd14915a1\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/91ce35ae-edb0-4048-a386-e8bed4dd5cf8\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b742296c-7a8c-496e-8a07-c567aa2f4296\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/813b4a6b-80fd-4e4a-82d5-c65601bcf288\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/43462a3d-5753-4ddc-b8bc-f7835affcbe9\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/7473aa7d-609c-44ea-95fc-1640524e78a1\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/76b7c2e7-a96c-4500-9d27-874ff9520dce\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/5a5db133-363d-4b8f-bb21-b05ae7d3ac5b\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8aa9fb50-2bc8-4c06-b184-c2779a626bdc\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/8adef601-c0e0-4a26-ae60-a1efc9bcc30b\",\"moduleSequenceNumber\":63549},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/f2b6c386-6afe-47b7-91ef-c7847c7495a4\",\"moduleSequenceNumber\":63544},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/19f30587-d19e-400a-a0d5-51a88d2636b5\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fef23192-6d1e-47b2-8a8a-0f24579b15e5\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/aeb0d740-9efe-4bf9-9ad8-df7db1786e78\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/3f0e034a-1146-4e8c-83f0-0ee5f7801ef0\",\"moduleSequenceNumber\":63531},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/dd5eb7be-8d94-4e52-8591-3a9c478d2bd0\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/singularity/faction.js\",\"url\":\"blob:https://danielyxie.github.io/8646967b-443a-410d-9b1f-2f1537675dec\",\"moduleSequenceNumber\":63558},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f1597344-0701-450a-924d-ac1c7a920e44\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/1bcfd2b8-8dd6-44a8-8cac-78285b13567d\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/86e1939d-e09b-4505-b484-46c5f25d924e\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9f515760-b538-4182-b195-c7b8430b6d84\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/cadd56f4-3759-4cf3-b89c-068ef696775c\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8760cdb6-c2d6-4f55-b8c1-a6dfb3189547\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/81bc6674-ce61-449d-ae28-fc52fdb4aa97\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2e7c7cba-df22-473c-a875-d1a112a7b61c\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/2f604aee-aeba-4a75-a2ec-7cea5ece5626\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9433996d-e236-4b34-8719-458aff175ab0\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5fa10088-0c98-4d40-98bb-aee83780df83\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8c11104b-db85-448b-ab91-190ff28d51b0\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/da26b6db-0d92-42b5-9dd0-504d6a9200fc\",\"moduleSequenceNumber\":63552},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/c46bcaca-ae10-420b-b464-b404f8a7ea82\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8d07404c-d6e4-48ce-88f6-16e242e4c8b1\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0b4d6968-ad81-4086-89d1-aa05c958fbcd\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/36f7b4e2-7896-411a-a34c-0f4ceee94031\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/0a605bf6-1c98-45ca-a6f1-05d416d3f628\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/de34323b-7b6c-47c7-9b0b-1bd1896c71f3\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5e0a20f8-5352-4890-bf2c-e127dd2b8cf0\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c0ecf12d-9d90-4fea-ae9a-755d0f4c26f4\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/0d38a087-540b-4932-a66b-5910be111ca3\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0f2c46a4-5d74-4828-b87b-714378b79959\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/51404099-fcff-41d4-b57e-6e81724d8e5e\",\"moduleSequenceNumber\":63549},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/d2d892f7-5791-4c7e-b41d-e159a36991a0\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b042c91d-96c2-4335-b3ba-9b9c57f8117f\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/20091cbf-5a3f-4c85-969f-eec76a06430b\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/049ea3c8-e24b-4479-88f7-f00255660958\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/ca93b1c2-945e-4000-938b-48b9879f6440\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/12afb942-33de-4c4b-8f0a-978edac7d1d1\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e083159e-4516-4357-a883-b581e73f10d5\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/6b2bb4d5-6444-4727-bbda-ad939d64a00b\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/539676c8-ef90-4208-be87-ac1058c4f5f7\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ba8a7654-0505-4306-81f4-5c73cd61055f\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8f12180f-a9ea-4def-a05e-0befe684809d\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/8ddb581b-675a-4a64-8932-1ddc51bd95d0\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bfcfbb89-82b2-4be7-9b17-8cc109fe7f6c\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d499f94e-8e07-480a-a3a4-f9cbe9e531af\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/390c57ab-cbda-49f1-afe1-33d60380170e\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d88c316b-6f9e-4d5c-b067-b53d92cfbcba\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7c6c3449-9849-4d8b-b3dd-e1d66b1b71fa\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/77413338-254f-4265-9fa7-1c711a1a3b0e\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6843036a-68f4-48ec-8cce-46961e960f2b\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/57de2de2-6ca1-48b3-8a90-675b47e258d0\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/51e48a27-74dc-438c-9b2a-cd4c4a7b30f6\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fcbf1fc4-969b-46a3-a585-033107ec1541\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/64b2a45b-35ad-48f7-89ec-486c9027d3a3\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/1470ef56-25ea-4770-b1e3-a3433f66bede\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/6e96ea65-56f4-4cf2-99b5-09258852efd1\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/cb4e665f-37b2-4109-b664-c6f03439c63c\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7bf5088d-fdce-4253-8fa5-5a8cd3836b46\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/random.js\",\"url\":\"blob:https://danielyxie.github.io/89d49217-00fd-4291-8044-c2a4f7b4841b\",\"moduleSequenceNumber\":63554},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/019331b2-b74e-4117-b011-006343416e3f\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/524533ee-b8d0-4510-a6cc-7ae614f471cb\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/gang.js\",\"url\":\"blob:https://danielyxie.github.io/e47b4be7-02c8-47dd-8dde-33dcdfd80534\",\"moduleSequenceNumber\":63534},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ddfe2ff2-5bba-4f4a-9672-131b390f3567\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/gang/gangster.js\",\"url\":\"blob:https://danielyxie.github.io/b0c0a8fe-0420-4293-a416-9710864744d3\",\"moduleSequenceNumber\":63547},{\"filename\":\"/lib/constant/gang.js\",\"url\":\"blob:https://danielyxie.github.io/d64bcf17-9dd9-4ef7-a1a9-b75214e054c3\",\"moduleSequenceNumber\":63534},{\"filename\":\"/lib/gang/util.js\",\"url\":\"blob:https://danielyxie.github.io/c9f5dfa0-a03f-42b0-a20f-780590272a6b\",\"moduleSequenceNumber\":63548},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/bc048ceb-9050-4926-9cc0-7f70c688a9cd\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/210faea8-ec2b-46a4-8870-14b68090b348\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9f857f84-532b-4b2f-85db-6875387325d2\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/764d8362-d712-4b25-9139-f6c50cc17c3d\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8c1eb65a-82d1-4f52-b953-72ac509d36f0\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/99acf006-17cf-40e8-8573-24eb020a5abb\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/575e6838-64e0-42a0-a53e-cd7bd46f40e7\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/56cefa7e-5061-4e55-bcc5-22631d4ba67d\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9e234c17-6290-4f3f-8b2f-d77a3fcde0b9\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ac367e4c-a5c7-4cdf-83cc-cac1faddc2d3\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/c89c23ff-a9ed-4e42-af61-b79b1d1ee93c\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a52b6201-6a79-455a-b949-28108c28e872\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2091bfce-6351-4f93-b32a-2ba043f46a26\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/3567013d-f717-4743-8c25-0b44b46771be\",\"moduleSequenceNumber\":63537},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6b03f227-0208-49cb-a6b0-810f97b7422c\",\"moduleSequenceNumber\":63536},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/52757dfc-0cdf-4e61-a684-ed531701a42a\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/581d6113-df24-4afe-a4a1-67d0e2b5922e\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/854782e8-eac5-49a7-9230-b6baf40cc577\",\"moduleSequenceNumber\":63567},{\"filename\":\"/lib/random.js\",\"url\":\"blob:https://danielyxie.github.io/667b7e86-4c79-41c9-953d-ee0bae35799d\",\"moduleSequenceNumber\":63554},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e798d907-e456-424c-a131-b68d476c0972\",\"moduleSequenceNumber\":63540},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e5af6c6f-80de-43a0-bd15-8a66cc41bca2\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/gang.js\",\"url\":\"blob:https://danielyxie.github.io/54181b26-16ed-4c3d-8196-5c9377acb854\",\"moduleSequenceNumber\":63534},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/660659b6-ec20-4ed4-8af7-d0609caea4d1\",\"moduleSequenceNumber\":63528},{\"filename\":\"/lib/gang/gangster.js\",\"url\":\"blob:https://danielyxie.github.io/7641d917-b783-4f94-b70d-aeee6910c121\",\"moduleSequenceNumber\":63547},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cb7a3834-8749-40bf-bf8d-f7a2141d980b\",\"moduleSequenceNumber\":63545},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/78f5a31d-3c01-4720-9455-97f7d8da183b\",\"moduleSequenceNumber\":63543},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dea9a6fc-2a1d-4780-8abf-5bc980c2a092\",\"moduleSequenceNumber\":63538},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a698feb8-1d05-44b8-9c1d-c318f4b8a262\",\"moduleSequenceNumber\":63533},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d9468ada-1960-49da-a4e9-1b6dbd6d5325\",\"moduleSequenceNumber\":63532},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9493ccab-a4df-492f-a6dc-61b58dd979c7\",\"moduleSequenceNumber\":63528},{\"filename\":\"/singularity/install.js\",\"url\":\"blob:https://danielyxie.github.io/66f776a7-885a-45c0-8476-683a9e7d256b\",\"moduleSequenceNumber\":68699}],\"dependents\":[],\"ramUsage\":75.1,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":790,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"gang.inGang\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.getGangInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getFactionRep\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getAugmentationRepReq\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"getAugmentationPrice\",\"cost\":2.5},{\"type\":\"fn\",\"name\":\"purchaseAugmentation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getAugmentationsFromFaction\",\"cost\":5},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"purchaseProgram\",\"cost\":2},{\"type\":\"fn\",\"name\":\"installAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getOwnedAugmentations\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"gang.getMemberNames\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.setTerritoryWarfare\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getMemberInformation\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getAscensionResult\",\"cost\":2},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.ascendMember\",\"cost\":4},{\"type\":\"fn\",\"name\":\"gang.setMemberTask\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.getEquipmentCost\",\"cost\":2},{\"type\":\"fn\",\"name\":\"gang.purchaseEquipment\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"gang.canRecruitMember\",\"cost\":1},{\"type\":\"fn\",\"name\":\"gang.recruitMember\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getBitNodeMultipliers\",\"cost\":4},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"joinFaction\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerUsedRam\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"getScriptRam\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"scp\",\"cost\":0.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"brutessh\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"ftpcrack\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"httpworm\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"relaysmtp\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"sqlinject\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"nuke\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"grow\",\"cost\":0.15},{\"type\":\"fn\",\"name\":\"hasRootAccess\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerSecurityLevel\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"weaken\",\"cost\":0.15}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { buy_schedule, cheapest_program } from \\\"/lib/constant/exe.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Money } from \\\"/lib/money.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { has_ai_api } from \\\"/lib/source.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Passively farm Intelligence XP.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function farm_intelligence(ns) {\\n    log(ns, \\\"Passively farm for Intelligence XP\\\");\\n    // The minimum amount of money we should have in order to purchase one of\\n    // the cheapest programs.\\n    const m = new Money();\\n    const min_money = 10 * m.million();\\n    // Must delete the program if we have it.  After purchasing a program,\\n    // delete it again.\\n    const player = new Player(ns);\\n    const p = cheapest_program.NAME;\\n    ns.rm(p, player.home());\\n    for (;;) {\\n        if (player.money() < min_money) {\\n            await ns.sleep(2 * wait_t.MINUTE);\\n            continue;\\n        }\\n        const [k, time] = purchase_schedule(ns);\\n        for (let i = 0; i < k; i++) {\\n            assert(ns.singularity.purchaseProgram(p));\\n            assert(ns.rm(p, player.home()));\\n        }\\n        await ns.sleep(time);\\n    }\\n}\\n\\n/**\\n * The purchase schedule, which tells us how many programs to buy and the\\n * amount of time to sleep between successive purchases.  Both the number of\\n * programs to buy and the sleep interval vary, depending on the amount of\\n * money we have.  The higher is our money, the lower is the sleep interval and\\n * the more programs we buy.\\n *\\n * @param ns The Netscript API.\\n * @return An array [k, t] as follows:\\n *\\n *     (1) k := How many programs to purchase.  We buy this many programs in\\n *         one go, then sleep.\\n *     (2) t := The interval in milliseconds between successive purchases.\\n *         We buy a bunch of programs, then sleep for this interval.\\n */\\nfunction purchase_schedule(ns) {\\n    // Low on funds.  Use a pre-defined purchasing schedule.\\n    const funds = ns.getServerMoneyAvailable(home);\\n    if (funds < buy_schedule.DYNAMIC_TAU) {\\n        for (let i = 0; i < buy_schedule.money.length; i++) {\\n            if (funds >= buy_schedule.money[i]) {\\n                return [buy_schedule.howmany[i], buy_schedule.time[i]];\\n            }\\n        }\\n        // Should never reach here.\\n        assert(false);\\n    }\\n    // We are filthy rich.  Use a dynamic purchasing schedule.\\n    const howmany = Math.floor(funds / buy_schedule.DIVISOR);\\n    return [howmany, wait_t.MILLISECOND];\\n}\\n\\n/**\\n * Passively farm Intelligence XP.  This script should be run in the background\\n * if our home RAM is high enough.  Every once in a while, it does an action\\n * that adds to our Intelligence XP.  The action should not require us to\\n * focus.  At the moment, the action we want to perform periodically is\\n * purchase one of the cheapest programs via the dark web.\\n *\\n * Usage: run singularity/int-farm.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    if (!has_ai_api(ns)) {\\n        log(ns, \\\"No access to Artificial Intelligence API\\\", colour.RED);\\n        return;\\n    }\\n    // Suppress various log messages.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n\\n    const player = new Player(ns);\\n    while (!player.has_tor()) {\\n        ns.singularity.purchaseTor();\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    await farm_intelligence(ns);\\n}\\n\",\"filename\":\"/singularity/int-farm.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/453b661a-155b-4c97-b5b6-bf7993897ebf\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/db4e10d0-97ea-4c4c-aff5-f0f9f71ce9e2\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4ee32f3c-2dc1-48bc-bb8d-87cbabc30c73\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cd95dc51-e32f-47f1-9171-b77ca59b20c4\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/647cb8e9-2d6f-4073-9b3c-5bd713129340\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f19b0972-20fe-40c7-a587-ebbebc77653a\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a7d7c76b-e313-4dd0-bfd3-07d2f920f33f\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2aa0d6be-8b5d-49ad-92f2-0c6b1bdee67a\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cb607556-b8a8-4f5d-8191-a68e22c7c104\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a759e206-ba3f-45ac-8ab9-df07c9fad0cf\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/dc19dc8f-10a3-4cef-a2f3-35efe933950f\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/989e6d9e-b273-4cc0-85ec-59feacf78a4a\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a9fb05bd-b24c-4675-93aa-5688173ed4ba\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f4607d23-bbbe-44ec-af4b-cb1bf0287718\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a3d85bc5-2088-4be7-9376-6e1031bf17dd\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/117f21c5-a083-4447-a574-9ee3eeddd80e\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/1f348bb4-0779-4255-b148-ec1c2926d985\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/7f9378cd-e36e-4c38-9cad-3fad1011aea8\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/f05ede5b-fa3f-4274-ada1-bfe75b1d8427\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/c598f5c5-0f77-4d4a-abbd-3bf6b657c3ef\",\"moduleSequenceNumber\":68961},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/fe37eb1f-6ce8-466b-9a62-b141ad235acc\",\"moduleSequenceNumber\":69000},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f0a26747-96ba-4dee-92d8-dccf64ec80d2\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bd784042-3f3a-4b95-863e-18964bd50a17\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/82e9ed69-2558-423f-859f-de0b9298b727\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/2414eee7-ba7f-4027-b1ff-8abd78b6ff15\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c8588cd9-d715-496e-8f88-51d936651ce5\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c388e2e2-fa94-4e2d-a328-ceb2347f3b04\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a5fd4527-41c1-43ea-b48c-2f138595265d\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/ef97d0ed-4938-43f4-b474-5d3178cd1c13\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/535617c5-cc25-47b8-a502-25aa5d3773f8\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/27121300-e95a-4039-9f1b-8d5a36ac49c2\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/809ee592-d894-4e51-9f73-a6f61a017d3a\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/eaa28879-30a8-4da7-879c-f95c36e831c5\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/59df2e28-c32d-451c-9a53-c5f606d515e2\",\"moduleSequenceNumber\":68986},{\"filename\":\"/lib/money.js\",\"url\":\"blob:https://danielyxie.github.io/96a23ea6-fdbd-4af8-9f83-9165e74ae5a6\",\"moduleSequenceNumber\":68984},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/76b07d10-cae8-4192-a965-640a22ef6e90\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/48f874fa-93f1-4a25-8ea8-e033e8270446\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/709b2fd9-5d81-4cdc-90f4-5224eeb43faf\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/15b617c4-9150-487f-8be1-bc735671b55b\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/91d330c3-b3d3-4926-a724-fe6d00ec77d4\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/369c390a-78d5-4d53-976c-8ecd06a14843\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/12eddc80-d4da-40a1-b932-42c321c92e77\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/67e7fef8-a409-4b9a-b2a7-0930893e0f91\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a406d301-a317-4977-92d1-fc218339365e\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/f4a9be56-1ba7-4d4e-9be5-2991347cb0ae\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/6dea8cca-f442-4c4b-839d-89754270449f\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/13cf6586-d824-4340-9a9a-c7daf51f7120\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/40bdb51e-a0ef-40ac-b0db-24cb3fe2ce27\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/20aea700-7897-46df-bdb2-95d13a0a1b56\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8ed4d384-20f2-4ca7-b9b0-e9241aeb5bf9\",\"moduleSequenceNumber\":68966},{\"filename\":\"/singularity/int-farm.js\",\"url\":\"blob:https://danielyxie.github.io/4d3908e1-e9a8-4248-bf99-bfee4e904237\",\"moduleSequenceNumber\":69072}],\"dependents\":[],\"ramUsage\":13.6,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":791,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"rm\",\"cost\":1},{\"type\":\"fn\",\"name\":\"purchaseProgram\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"purchaseTor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"getBitNodeMultipliers\",\"cost\":4}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Money } from \\\"/lib/money.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Choose the threshold amount of money to raise.\\n *\\n * @param ns The Netscript API.\\n * @return The amount of money to raise.\\n */\\nfunction choose_threshold(ns) {\\n    // If our server is not high-end, then the threshold is the cost of\\n    // upgrading the RAM.\\n    if (ns.getServer(home).maxRam < home_t.RAM_HIGH) {\\n        return Math.ceil(ns.singularity.getUpgradeHomeRamCost());\\n    }\\n    // The default threshold.\\n    const m = new Money();\\n    return 5 * m.million();\\n}\\n\\n/**\\n * Commit various crimes to raise money.\\n *\\n * @param ns The Netscript API.\\n * @param threshold Continue to commit crimes until our money is at least this\\n *     amount.\\n */\\nasync function commit_crimes(ns, threshold) {\\n    assert(threshold > 0);\\n    log(ns, \\\"Commit crimes to raise money and lower karma\\\");\\n    const script = \\\"/singularity/crime.js\\\";\\n    const nthread = 1;\\n    ns.exec(script, home, nthread, threshold);\\n    // Wait for the crime script to end.\\n    while (ns.scriptRunning(script, home)) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n}\\n\\n/**\\n * Whether to upgrade the RAM of our home server.\\n *\\n * @param ns The Netscript API.\\n * @return True if we need to upgrade the RAM of our home server;\\n *     false otherwise.\\n */\\nfunction is_upgrade_home_ram(ns) {\\n    const home_ram = ns.getServer(home).maxRam;\\n    return home_ram < home_t.RAM_HIGH;\\n}\\n\\n/**\\n * Run the next script in the load chain.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction load_chain(ns) {\\n    exec(ns, \\\"/chain/misc.js\\\");\\n}\\n\\n/**\\n * Commit crimes to raise some money as well earn negative karma.  Assume that\\n * our home server has 32GB RAM.  Try to keep the RAM cost of this script as\\n * low as possible.  Do not add anything to the script unless absolutely\\n * necessary.\\n *\\n * Usage: run singularity/money.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress various log messages.\\n    ns.disableLog(\\\"sleep\\\");\\n    // Commit crime to raise some money.\\n    const player_money = ns.getServerMoneyAvailable(home);\\n    const threshold = choose_threshold(ns);\\n    if (player_money > threshold && !is_upgrade_home_ram(ns)) {\\n        load_chain(ns);\\n        return;\\n    }\\n    await commit_crimes(ns, threshold);\\n    // If our home server is not high-end, upgrade the RAM on the home server.\\n    if (is_upgrade_home_ram(ns)) {\\n        log(ns, \\\"Raise money to upgrade home RAM\\\");\\n        // Upgrade the RAM on the home server.\\n        const cost = ns.singularity.getUpgradeHomeRamCost();\\n        let success = ns.singularity.upgradeHomeRam();\\n        while (!success) {\\n            await commit_crimes(ns, cost);\\n            success = ns.singularity.upgradeHomeRam();\\n        }\\n        // Reboot to take advantage of the newly upgraded home server.\\n        exec(ns, \\\"go.js\\\");\\n        return;\\n    }\\n    load_chain(ns);\\n}\\n\",\"filename\":\"/singularity/money.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3209813c-4f86-4d71-8439-68132ea603bd\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7d7bdf9a-f18a-4150-b3aa-fe434dc9d954\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/80124f5e-c6a0-4dc4-b767-131e2b014e96\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d7726938-3c39-4262-a877-e8762e39897f\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d692c2c2-74e2-4307-b421-434eeab7197d\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b49b88a0-be6d-4ae5-921d-c8ffe765f03d\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3911540f-b46a-4932-befd-6f3da52bb1a7\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e2c2ec49-d850-4e5e-bf87-45359e579c3d\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f7129243-5734-468b-926f-a171b7987b98\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/money.js\",\"url\":\"blob:https://danielyxie.github.io/bf383e7a-4454-4e91-93b0-b3632ea0dcf4\",\"moduleSequenceNumber\":68984},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0efc2363-52d8-43a5-9f14-75264fea10d1\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/aace2f1a-d4bc-4d51-a10b-c73962a93c86\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/33d293c9-5973-4ec1-8a2d-83bd96fbc980\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dcd62b0b-72c8-475d-a4e2-b9e31cf1f793\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5fd081de-44c2-4adc-97e9-dd7ddfe4d77e\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/6a117c67-659a-4c67-b99b-364f62624323\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/9b4d369f-a5b8-4e54-9d7f-d2bf1d054e84\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7d71a1e8-ba3a-4a2e-8f15-4ba50194b754\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/cdcbb8df-8cc8-4368-a013-5a796f475566\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/53874f13-f884-4497-af40-7f39233592fe\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/c33f0727-699e-44c7-882f-93db74f192d0\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ea12c6ab-0dba-4a95-b4b0-7d7be37f6ed8\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/ceb3f168-ac0b-4410-8f28-94caf860fcf6\",\"moduleSequenceNumber\":68974},{\"filename\":\"/singularity/money.js\",\"url\":\"blob:https://danielyxie.github.io/c030692c-9636-42a1-952c-ba0dc6dfb74e\",\"moduleSequenceNumber\":69068}],\"dependents\":[],\"ramUsage\":10.5,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":792,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"getUpgradeHomeRamCost\",\"cost\":1.5},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"scriptRunning\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"upgradeHomeRam\",\"cost\":3}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { buy_all_programs } from \\\"/lib/singularity/program.js\\\";\\nimport { exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Purchase various programs from the dark web.\\n *\\n * Usage: run singularity/program.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Suppress various log messages.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"singularity.applyToCompany\\\");\\n    ns.disableLog(\\\"singularity.workForCompany\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n\\n    await buy_all_programs(ns, bool.VISIT, bool.WORK);\\n    exec(ns, \\\"/chain/faction.js\\\");\\n}\\n\",\"filename\":\"/singularity/program.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/32edf4f2-193a-4e53-93c7-74d022c4948c\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5308dd42-21f2-47a8-86bc-0b080d5bc680\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e5ed5375-fcb8-4112-a730-236cde68a05a\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/56006b51-1e6c-47cd-a56f-7412933b7a4c\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/bad4c195-5e15-4430-a230-fb08f62e31d2\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/81a239dd-ed0d-4f31-936e-bf0713935366\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d291f400-44e6-4878-8641-e63623df8786\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d1b2ac11-0c89-4d4e-8c57-d42ce74f1330\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3d612501-8b72-4a5c-9e2a-4c186af03302\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/505158fc-381f-4476-aa5f-ce296e21b040\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/98c653ac-2b1b-4969-b35e-a6d11d0abec6\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/fa6e11c5-41e8-4c0e-a16d-240f7e4b5cc0\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bfca5c75-7dce-430c-b742-7f8a579a1a70\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d01e85be-ecfa-422b-822f-5d544876b631\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/cf242a83-3345-49d3-a77f-0aa3810a53e1\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c747ddd1-6f06-47db-a49a-5979989a696f\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2e2d27e6-ab68-4d66-a28a-c001b2d6edfe\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3c2ec25f-09b5-4bd9-94c4-1cc7a1ca66ca\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/da44003e-018b-4aed-b696-4fff6fde7e3d\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b940c073-3cf3-419a-9fec-51c2d25015c6\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/45272cb9-0be7-415d-a660-73d25f7279ea\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c809cc93-d930-43b6-a78e-c814d00ff763\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1ee861d5-9ac9-4ff2-8bf9-de8ef82a13a0\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/3593de23-1edb-41f7-b76b-e3fbe3abc1ef\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/a404cf58-362c-4727-95f4-1207470ed42f\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b50d0c2f-8286-42df-ad2c-83daa0c7b4c8\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/98508f86-3a66-4da3-8d10-2eb607de553a\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/6a9c6382-d60b-4b32-bfff-438c5df131ff\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/4c183be4-90e3-4533-86ed-f3059046fb27\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/61d73b57-e457-4d2c-8484-dcb7e66dee8c\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1bc755cf-5825-4114-9d8c-b15c7b8a38d3\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1eb83e67-c585-460a-8566-38c92394323c\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0de15e01-b03d-4408-899b-d85433e45439\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/3af5550c-8461-4c78-a595-a6a543c4d138\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e4b554a9-2e77-4a9d-b1ac-1b04a1a35183\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/e2b9bd39-d35f-462e-841e-0adcf629dd16\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b5e456fd-ead2-4592-96b7-b024fb26cf23\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/55fd1cd1-9e17-408b-a222-96b744d67b85\",\"moduleSequenceNumber\":68976},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c9a862de-4ff5-49e6-9eef-8562c21f8f5e\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7c3ba181-403f-435b-8978-8a09f0816f6b\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/65104088-0c76-4da7-a6f5-b42bd69393ca\",\"moduleSequenceNumber\":68995},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0a7c37f5-0755-45ed-93f7-e1509040b185\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6c9c1158-30ad-4885-bcf5-ebd563014778\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/c74af5f8-9f5c-4a17-ad3c-ab8f603d8a26\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/53b63b75-59f3-4958-a5ca-efbaca532115\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d797203e-a24b-42fd-b22b-f2b7ffbc8665\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/63c75260-0b5a-41ea-ac59-30cceb398dbe\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/35c971d9-7330-4ef1-a13d-6200ae0124b4\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/9e65dcac-6536-4e7b-a133-cddb63afd44d\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8463e458-4fff-4cce-b613-4f7e5c545cfd\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2f47e2d2-54f6-4df8-8f87-ae66b10c384c\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a54a9b41-531d-450b-90bf-6d493e461a42\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/fc965137-7e66-4ec5-9754-342bb4c01f35\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/9d49b60f-ea38-4780-9087-b5421102da42\",\"moduleSequenceNumber\":68986},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/f9e31040-59c4-49a8-88d0-578e2130de62\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/bb6320fb-cd27-45b5-aa65-bfa9eb7ac466\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6be34956-dbb1-428c-8040-fac2eb933976\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a090333f-7b19-4ddc-907d-01ce13ed799a\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/e80030a4-9697-487b-add5-c61afa8d7603\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/256e5ca8-ef3e-472a-81b7-4ff632f66221\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/0d984ebe-e648-42e2-8c6b-9aa23b11466f\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/dd5fb896-1fea-4087-b538-f79942f5c22f\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/92b7d9d4-e5f2-418f-a01c-9fd8a7a416eb\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5e7c8795-8c72-4a74-8155-1a784bbe8658\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/52f27a1a-617a-4247-a7c3-9e3c80c421fc\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/work.js\",\"url\":\"blob:https://danielyxie.github.io/8da90338-ed20-4128-9fa1-86d63c2fb27b\",\"moduleSequenceNumber\":68978},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/30023eba-584c-4c30-bc35-79f62e32438f\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/2a88c01e-d928-4957-82dd-b47e7b88b010\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/bb7bb5c0-ba80-48cd-ad5f-3dce267415b7\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/2e692248-b7ec-4e1c-9dc9-52058c9f6b90\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/singularity/work.js\",\"url\":\"blob:https://danielyxie.github.io/d7c8311d-02bd-427d-a18e-d7724c08f5a3\",\"moduleSequenceNumber\":68997},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/da24f9c0-3bf1-41c6-9af7-87d46f7e2459\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5046020c-4d97-4ca6-9c7c-8fe2b6bfa979\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/singularity/util.js\",\"url\":\"blob:https://danielyxie.github.io/c29c3754-71ad-4b70-bfad-0ec8a6606fe6\",\"moduleSequenceNumber\":68996},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/bc5ac177-5dd5-4bf9-afab-7eb2d1a3625f\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d3ddb3d1-d044-4c96-8c13-3ec4bb433d0e\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/932a273c-119d-425c-90f2-b3f07932b6d0\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/fc58bb47-b755-40cb-9a5b-7ee8b99c5c5b\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/b273275b-60de-4163-8700-c8d8d9ff1420\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/b1b2eacb-6809-45c9-8f90-133289688ea4\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/98f4a573-51ca-496f-b5fa-0d13336d8ee8\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/57b91c24-eb4f-46cb-ab3e-3aa91b1d7f8d\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3508d000-829d-4c1f-acfd-9ac7af468301\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/57f55376-55eb-4cf4-80ca-32866debd09e\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/67bd53ee-fab6-4c99-a844-188896a6d9f8\",\"moduleSequenceNumber\":68976},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/8310637a-2b8f-49f3-8ef4-3dd765096c60\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/04bffd51-cc0b-496e-af7e-bb0802409ece\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/874bc4ac-bce5-4d23-aad9-c1d5a678c3c5\",\"moduleSequenceNumber\":68995},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/a32ff29a-cc71-4489-8678-62a7409d1a06\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/5c3bc8f8-24f5-4044-bd88-44122693208c\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0a7925b5-ec6c-48d1-bc85-32a0a9edb762\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/cabab166-2892-45b2-95be-da71cda22d81\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/21cbfa53-fba7-457a-9376-b7598bc807bd\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/e19eab64-892b-412c-91de-24346ddf9f2d\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/e50dfe20-31f9-4c7c-a0cc-aaabe384f0c6\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d0927354-9f88-4408-8244-534294ef08ee\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/3bd0bbb5-27af-4e91-9cff-e5eeade8707b\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/08a5a8bb-f339-4fc1-bc74-2f700c9b9e37\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/4ebbf9b4-57f6-4c38-b72f-efce1828f2cc\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b03e9838-e55f-4814-a940-431aaa82709a\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/f77060ac-7675-4a8e-ad93-13bc6adb60f3\",\"moduleSequenceNumber\":68986},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1a92cdc0-f5e0-47ae-80d4-c8a7721e4b27\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/e281c30c-cdb9-4158-8d6c-1718404ce97c\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/0afa4342-94aa-4b5f-ae86-baeb39649800\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/30862f5d-f02b-411e-ba80-cef81c5d10c3\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/85c64043-188a-41b5-89a6-72729f98abb8\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0a7d509b-3690-41f7-b658-da943e98e61a\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/5d1c830f-4bd8-49a9-8fa5-26a955490973\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/c9e4eb90-0177-4976-a6e9-945c39764180\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/fce4cccd-f0e9-45f4-891b-cd9799549a59\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9fb8d10c-7171-4c51-a096-6fd76501f375\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/8ae51883-5d2f-4cc8-8d4b-a4393c42ac62\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/23c28b73-dc94-47ca-988c-8b13a632fea2\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/9183147d-8f3a-4b1f-b60b-0a6a93f7b455\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/146a18e8-4030-4255-91b4-6ca96dc15601\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/singularity/program.js\",\"url\":\"blob:https://danielyxie.github.io/72a93db4-8fb1-4c74-8126-31eee8cda520\",\"moduleSequenceNumber\":68994},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/6670f273-1f8d-4abe-ab66-8b7c106cfd23\",\"moduleSequenceNumber\":68962},{\"filename\":\"/singularity/program.js\",\"url\":\"blob:https://danielyxie.github.io/0240a39b-d58a-4bc8-9c2b-bb6f14cb2b31\",\"moduleSequenceNumber\":69075}],\"dependents\":[],\"ramUsage\":30,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":793,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"getDarkwebPrograms\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"travelToCity\",\"cost\":2},{\"type\":\"fn\",\"name\":\"purchaseTor\",\"cost\":2},{\"type\":\"fn\",\"name\":\"purchaseProgram\",\"cost\":2},{\"type\":\"fn\",\"name\":\"applyToCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"workForCompany\",\"cost\":3},{\"type\":\"fn\",\"name\":\"setFocus\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"quitJob\",\"cost\":3},{\"type\":\"fn\",\"name\":\"getDarkwebProgramCost\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { all_programs } from \\\"/lib/constant/exe.js\\\";\\nimport { home, home_t } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { study } from \\\"/lib/singularity/study.js\\\";\\nimport { assert, exec } from \\\"/lib/util.js\\\";\\n\\n/**\\n * If our home server is less than a mid-sized server, then run a script to\\n * manage our farm of Hacknet nodes as well as another script to compromise\\n * world servers.  Let each script run for a while, then kill it.  The reason is\\n * that it is likely we do not have enough RAM on our home server to allow\\n * multiple scripts to run in the background.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function bootstrap(ns) {\\n    if (ns.getServer(home).maxRam < home_t.RAM_MID) {\\n        const script = [\\\"hnet-farm.js\\\", \\\"low-end.js\\\"];\\n        for (const s of script) {\\n            assert(!ns.isRunning(s, home));\\n            exec(ns, s);\\n            await ns.sleep(wait_t.DEFAULT);\\n            ns.kill(s, home);\\n        }\\n    }\\n}\\n\\n/**\\n * Create a program.\\n *\\n * @param ns The Netscript API.\\n * @param program A string representing the name of the program we want to\\n *     create.\\n */\\nasync function create_program(ns, program) {\\n    // Sanity checks.\\n    assert(program.length > 0);\\n    assert(is_valid_program(program));\\n    // Do we already have the program?  We can have a program without meeting\\n    // the Hack stat requirement to create the program.  A number of\\n    // Augmentations allow us to start with various programs after a soft reset.\\n    if (has_program(ns, program)) {\\n        return;\\n    }\\n    // Ensure we meet the Hack stat requirement for creating the program.\\n    const threshold = hack_requirement(program);\\n    assert(threshold > 0);\\n    assert(ns.getHackingLevel() >= threshold);\\n    // Work on creating the program.\\n    assert(ns.singularity.createProgram(program, bool.FOCUS));\\n    while (ns.singularity.isBusy()) {\\n        assert(!has_program(ns, program));\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    assert(has_program(ns, program));\\n}\\n\\n/**\\n * The Hack stat requirement for creating a program.\\n *\\n * @param program We want the Hack stat requirement for this program.\\n * @return The Hack stat required to create the given program.\\n */\\nfunction hack_requirement(program) {\\n    const prog = all_programs();\\n    return prog.get(program);\\n}\\n\\n/**\\n * Whether we have the given program on our home server.\\n *\\n * @param ns The Netscript API.\\n * @param program A string representing the name of a program.\\n * @return true if we already have the given program;\\n *     false otherwise.\\n */\\nfunction has_program(ns, program) {\\n    assert(is_valid_program(program));\\n    return ns.fileExists(program, home);\\n}\\n\\n/**\\n * Whether the given name is a valid program.\\n *\\n * @param name A string representing the name of a program.\\n * @return true if the given name is a valid program;\\n *     false otherwise.\\n */\\nfunction is_valid_program(name) {\\n    assert(name.length > 0);\\n    const program = all_programs();\\n    return program.has(name);\\n}\\n\\n/**\\n * Raise our Hack stat enough to allow us to create various programs.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function study_and_create(ns) {\\n    const program = [\\\"BruteSSH.exe\\\", \\\"FTPCrack.exe\\\"];\\n    for (const p of program) {\\n        log(ns, `Raise Hack to create program ${p}`);\\n        await study(ns, hack_requirement(p));\\n        await bootstrap(ns);\\n        log(ns, `Create program ${p}`);\\n        await create_program(ns, p);\\n        await bootstrap(ns);\\n    }\\n}\\n\\n/**\\n * Study to raise our Hack stat so we can create various programs.\\n *\\n * Usage: run singularity/study.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Make the log less verbose.\\n    ns.disableLog(\\\"getHackingLevel\\\");\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n\\n    await study_and_create(ns);\\n    // The next segment in the load chain.\\n    exec(ns, \\\"/chain/money.js\\\");\\n}\\n\",\"filename\":\"/singularity/study.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/afd4272e-5460-47c0-b9d3-ad7ff998da9d\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ba478203-9882-428e-b36b-18976d7bf447\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/6ce17d4e-6a89-4a4f-a9cf-c16e5f925f85\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/60e01ad6-b506-4713-ac79-e3ff43cbc746\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/7e40df6a-fd16-44b9-b195-34a75dfc30a4\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/8e299c82-65bf-4e6f-b7c4-e5cc915e0094\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/57729e2e-ece5-4f53-9c8e-a326811629b8\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/40c02640-c384-4820-ae39-c4f5f3497025\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dff2d5ee-81a3-486b-9d20-726d4b121169\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/1e1a0bf1-e6eb-424b-ac1a-0367d38c0260\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/964043f2-9594-47cb-ae72-0326b81103b3\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f08bddec-1cb3-4df4-bcdf-e85e5a211824\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1a213c75-833d-4238-8bc1-0961b83dd450\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/da1b8ca2-3bdd-4d1b-b9d6-628aa913066a\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bee2a390-c073-493e-a19e-ba87de79ed06\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/59797316-a605-46d9-b639-67f4719ca8c5\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3c5544f8-cc52-4037-88b7-093271a5ba7a\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/b0be6cca-a102-4cc9-abd8-1b098a5ad31f\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/151cd98c-70ae-4eca-a8e4-32c8e9fe4d4d\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/c84e37ad-cfe1-4b5f-bedc-1ef7fcbe4ba2\",\"moduleSequenceNumber\":68976},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/2e3601a5-62de-4e65-8ac5-56170395a398\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/7d0a809f-a30a-42b1-ba70-0e834eafdcb3\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/80408e7a-b0ed-47d5-a3e3-ccb5fac1fecc\",\"moduleSequenceNumber\":68995},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/5a266746-036a-480d-a10d-bb479b4f2fe9\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/d4768987-23cf-49f6-a6f3-9c43ed85bf28\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/a5883316-13d5-4ad7-87d2-600cfc968501\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/a7898d39-2303-4a84-a91f-8c94ac6cdf48\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/af74aeef-5353-481f-b83d-d34c1aedc111\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0e916d34-4377-4ba1-8131-b752986ada7b\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c80531f2-6ef1-4118-aaee-109ddc21131d\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/8b40206b-20cc-4ce8-8342-6a92f6dc0cf0\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/f50e6543-c2ce-4bc0-8ba4-a25ac20a7ddb\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/0eb141cd-0009-40cb-bd7a-c3b70c06c48b\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/41a04731-7bba-4561-b44f-45e13ca0041f\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/91f03b10-05fe-4574-843a-3c5b594bf487\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/f48bec86-d58e-4eb3-b5c0-2be5117d84ba\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/d9f7638e-96e9-425f-936c-16b1f90a7d0e\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/84698386-b06d-45ef-853b-c3279a0b612e\",\"moduleSequenceNumber\":68962},{\"filename\":\"/singularity/study.js\",\"url\":\"blob:https://danielyxie.github.io/d34841d2-5da5-4958-a3e7-53b4b7e43432\",\"moduleSequenceNumber\":69061}],\"dependents\":[],\"ramUsage\":19.65,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":794,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"getServer\",\"cost\":2},{\"type\":\"fn\",\"name\":\"isRunning\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"exec\",\"cost\":1.3},{\"type\":\"fn\",\"name\":\"kill\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"createProgram\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isBusy\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"goToLocation\",\"cost\":5},{\"type\":\"fn\",\"name\":\"universityCourse\",\"cost\":2},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { cc_t } from \\\"/lib/constant/sleeve.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { has_sleeve_api } from \\\"/lib/source.js\\\";\\nimport { Sleeve } from \\\"/lib/sleeve/cc.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Purchase Augmentations and install them on our sleeves.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction buy_augmentation(ns) {\\n    const player = new Player(ns);\\n    const sleeve = new Sleeve(ns);\\n    sleeve.all().forEach((i) => {\\n        const aug = sleeve.cheapest_augment(i);\\n        if (aug.length === 0) {\\n            return;\\n        }\\n        const [name, cost] = aug;\\n        if (player.money() > cc_t.COST_MULT * cost) {\\n            sleeve.buy_augment(i, name);\\n        }\\n    });\\n}\\n\\n/**\\n * Assign sleeves to commit a specific crime.  There are two reasons why we do\\n * this:\\n *\\n * (1) Raise some money.  This is especially important early in a BitNode when\\n *     our stats and money are low.  It is likely that we need to raise money to\\n *     upgrade the RAM of our home server, thus allowing us to run multiple\\n *     scripts at the same time.\\n * (2) Lower our karma.  In a BitNode other than BitNode-2: Rise of the\\n *     Underworld, our karma must be at -54,000 or lower to meet one of the\\n *     requirements for creating a gang.\\n *\\n * @param ns The Netscript API.\\n * @param crime Assign sleeves to commit this crime.\\n * @param tau Commit the given crime for this amount of time (in milliseconds).\\n *     Must be non-negative integer.\\n */\\nasync function commit_crime(ns, crime, tau) {\\n    assert(tau >= 0);\\n    log(ns, crime);\\n    const sleeve = new Sleeve(ns);\\n    sleeve.all().forEach((i) => ns.sleeve.setToCommitCrime(i, crime));\\n    await ns.sleep(tau);\\n}\\n\\n/**\\n * Retrain the combat stats of our sleeves.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function retrain(ns) {\\n    // Train Dexterity and Agility by shoplift.\\n    const sleeve = new Sleeve(ns);\\n    let trainee = sleeve.all().filter((i) => !sleeve.has_shoplift_threshold(i));\\n    if (trainee.length > 0) {\\n        sleeve.shoplift(trainee);\\n        while (!sleeve.graduate_shoplift(trainee)) {\\n            await ns.sleep(wait_t.SECOND);\\n        }\\n    }\\n    // Train combat stats by mugging people.\\n    trainee = sleeve.all().filter((i) => !sleeve.has_mug_threshold(i));\\n    if (trainee.length > 0) {\\n        sleeve.mug(trainee);\\n        while (!sleeve.graduate_mug(trainee)) {\\n            await ns.sleep(wait_t.SECOND);\\n        }\\n    }\\n    sleeve.homicide(sleeve.all());\\n}\\n\\n/**\\n * Assign sleeves to shock recovery.\\n *\\n * @param ns The Netscript API.\\n * @param tau Be in shock recovery for this amount of time (in milliseconds).\\n *     Must be a positive integer.\\n */\\nasync function shock_therapy(ns, tau) {\\n    assert(tau > 0);\\n    const sleeve = new Sleeve(ns);\\n    const to_therapy = sleeve.all().filter((s) => sleeve.is_in_shock(s));\\n    if (to_therapy.length > 0) {\\n        log(ns, \\\"Shock recovery\\\");\\n        sleeve.shock_recovery();\\n        await ns.sleep(tau);\\n    }\\n}\\n\\n/**\\n * Assign sleeves to synchronize with the consciousness of the player.\\n *\\n * @param ns The Netscript API.\\n * @param tau Synchronize for this amount of time (in milliseconds).  Must be a\\n *     positive integer.\\n */\\nasync function synchronize(ns, tau) {\\n    assert(tau > 0);\\n    const sleeve = new Sleeve(ns);\\n    const to_sync = sleeve.all().filter((s) => !sleeve.is_in_sync(s));\\n    if (to_sync.length > 0) {\\n        log(ns, \\\"Synchronize\\\");\\n        sleeve.synchronize();\\n        await ns.sleep(tau);\\n    }\\n}\\n\\n/**\\n * Manage our sleeves via an update loop.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function update(ns) {\\n    buy_augmentation(ns);\\n    await retrain(ns);\\n    await commit_crime(ns, crimes.KILL, 10 * wait_t.MINUTE);\\n    await synchronize(ns, wait_t.MINUTE);\\n    await shock_therapy(ns, 2 * wait_t.MINUTE);\\n}\\n\\n/**\\n * Mange our sleeves.\\n *\\n * Usage: run sleeve/cc.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Less verbose log.\\n    ns.disableLog(\\\"getServerMoneyAvailable\\\");\\n    ns.disableLog(\\\"sleep\\\");\\n    // Sanity check.\\n    if (!has_sleeve_api(ns)) {\\n        log(ns, \\\"No access to Sleeve API\\\", colour.RED);\\n        return;\\n    }\\n    // The update loop.\\n    for (;;) {\\n        await update(ns);\\n    }\\n}\\n\",\"filename\":\"/sleeve/cc.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/760c0907-d772-4e9a-a824-5984a44fa961\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0ba2cd56-018c-4759-8913-54e2aa91a891\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/7cbb21d4-5d28-4457-af87-e7cfbf914e9f\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/395c7cc0-631f-4b0c-91a0-7e1516fbd290\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/124ac4ae-8040-4041-810a-8259027631f7\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/602ed112-1c38-472c-a32b-140179d118a9\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/671f7588-f6ed-4eb6-8b96-fec14efbe2e5\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/bc49bc38-9421-464e-a919-692602e6ce19\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ae6c63e3-b8a0-4a41-93c0-b889d2a4593f\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/29187f75-025d-4220-a964-22cab82af42e\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/014d5961-cd3f-4138-8a7e-b493e093cf3f\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/259d8361-479f-4e8b-a38e-2f536e42b3e1\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/c3c5ef9f-35e4-4899-8f3b-a316f249e08e\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/eb52eb06-ec17-4e7d-9c8f-21319d0e1553\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ce7b9abb-af25-45da-a359-35cc26248651\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/226b04a7-382b-467f-a6da-8a035626323c\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/b772ad6d-b723-4836-8af9-686f78b63f00\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/1bc914e4-827a-4860-b765-34eb03792854\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/sleeve.js\",\"url\":\"blob:https://danielyxie.github.io/657c84e9-ee30-473a-a923-ecb153c4b9bf\",\"moduleSequenceNumber\":276},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/56fdd0a0-f514-40eb-baf7-4ac0cc9972a7\",\"moduleSequenceNumber\":266},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9f98121f-2dad-4839-94ac-8938ef18cff6\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/cfd9bd68-b6ea-4909-bf7d-62cc0ce22d54\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/8a41ea06-7d88-4a75-8a78-ae69e1474f55\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/63fe8ab7-bd32-49b8-8faf-4b3e8d05b7f2\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/34ffda94-292b-4f09-9a37-aad006d28901\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/c3dae2cf-8534-4680-8146-b0f531a84cee\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/979cdd67-3d28-4562-969e-21dd73ba63fd\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/937ea523-16b7-4b21-8c8b-6b1ad1d07978\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2962e5d3-c030-4df9-97ed-f7ff5d5a2149\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/8ef617a1-4fd5-48cb-a9e6-a5a570a3422f\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/869a3994-6f60-448c-8f5e-81f9443624b2\",\"moduleSequenceNumber\":260},{\"filename\":\"/lib/sleeve/cc.js\",\"url\":\"blob:https://danielyxie.github.io/e9d6b654-b51d-4087-b912-2219d6f32fcb\",\"moduleSequenceNumber\":299},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/33c459ba-88ff-4c8a-b76c-31e1f50fc9c4\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/6cb4eaa8-fd61-4e7f-8195-2ab2da9c4ccd\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/166e039c-e8f1-48a9-a100-905121a3e31c\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/3eebe026-5552-40ed-88b5-dd430ebf8004\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/93dbaa1d-54a8-4567-85b0-c60184cea891\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/a1e484ca-2fda-424c-a10c-2f8624d8e902\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/d6d3c95f-0074-49ba-8400-cd072bc2fe12\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/eb16923b-b8ed-4f91-8f2b-505dad61acfb\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/4412dc79-a58f-4e18-b2f5-7dfba44dc663\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/676d8896-9d1b-4d19-a735-5ac20c132550\",\"moduleSequenceNumber\":263},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/b4765e46-08c1-4243-8486-60f2bdf2904a\",\"moduleSequenceNumber\":262},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/eac6f491-c5d5-49b0-be7e-503277bb3f8a\",\"moduleSequenceNumber\":301},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/99faa81a-5006-4396-a7e0-5d6ed8af2b36\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a2027c06-d0f3-49df-9d0a-b2953a587fb6\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/58825064-3ef9-4427-a187-df31a52230a2\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/15a10156-5127-4236-979d-56a2f4c2a69e\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/90a65d7b-b04b-4423-a004-7a320782517c\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/89156054-325c-4210-9508-5e9dbc3e4457\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/17085040-4c81-401e-82c5-d0f26d80f1e5\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2fe02a0c-dad8-4c70-b549-d8f56544a747\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/61f86903-5fce-4980-b5d8-2acc8b4cbf3b\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/b44c0540-52c4-4951-91e0-a1cef1fbe6c9\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b119d8a9-2fd8-4c67-a114-76be3b4cf761\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/68e33e1b-a2fe-4048-9871-f8bbecaafdb3\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/player.js\",\"url\":\"blob:https://danielyxie.github.io/af4a30ee-6d93-4874-866a-c8d58b1afc20\",\"moduleSequenceNumber\":287},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/35dc1dd4-ce40-45b7-8052-4ee2a35fc95f\",\"moduleSequenceNumber\":280},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/35f2f419-9a52-4ac7-8def-4e208e5bb831\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e256a00a-8b0c-4b6c-8dd3-73f3a632ad06\",\"moduleSequenceNumber\":275},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/5de540b2-2e32-4475-94ac-ff9aeab7040b\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/1ab3b1da-fb0d-4c99-b012-a3de53359e7f\",\"moduleSequenceNumber\":272},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0e99b774-7d54-4f39-a2b7-8d4659b4b25d\",\"moduleSequenceNumber\":271},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/49b2059e-ef99-437a-af8a-580ab1ffb314\",\"moduleSequenceNumber\":268},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/2b6ec476-04a9-41f1-b3e1-9a65bb06c93c\",\"moduleSequenceNumber\":267},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/c36d2f0b-9df4-4235-b429-da9e2cbd40a8\",\"moduleSequenceNumber\":302},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8c2bcb59-4815-490b-adf2-18294c237aa5\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/4a26e690-61f1-4b6d-a28d-441b0fb206ff\",\"moduleSequenceNumber\":284},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/14bde5f8-c520-43ca-9ca8-40f1bda4fbfc\",\"moduleSequenceNumber\":278},{\"filename\":\"/lib/constant/sleeve.js\",\"url\":\"blob:https://danielyxie.github.io/160fb3b6-b98c-459c-a810-bec7de43452c\",\"moduleSequenceNumber\":276},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/510c93a6-8e18-456b-96fa-95a81f1bff97\",\"moduleSequenceNumber\":273},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/d4d192b0-4f11-4ac1-bf38-c36d9a05e9e4\",\"moduleSequenceNumber\":266},{\"filename\":\"/sleeve/cc.js\",\"url\":\"blob:https://danielyxie.github.io/e4d8f998-91f8-4d00-a935-e16bdb5712de\",\"moduleSequenceNumber\":403}],\"dependents\":[],\"ramUsage\":37.7,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":795,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"sleeve.setToCommitCrime\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getHackingLevel\",\"cost\":0.05},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getServerMoneyAvailable\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPurchasedServers\",\"cost\":2.25},{\"type\":\"fn\",\"name\":\"sleeve.getSleeveStats\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getNumSleeves\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.purchaseSleeveAug\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getSleevePurchasableAugs\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.setToShockRecovery\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.setToSynchronize\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { has_sleeve_api } from \\\"/lib/source.js\\\";\\nimport {\\n    all_sleeves,\\n    has_mug_threshold,\\n    has_shoplift_threshold,\\n} from \\\"/lib/sleeve/util.js\\\";\\n\\n/**\\n * Assign sleeves to commit a specific crime.  There are two reasons why we do\\n * this:\\n *\\n * (1) Raise some money.  This is especially important early in a BitNode when\\n *     our stats and money are low.  It is likely that we need to raise money to\\n *     upgrade the RAM of our home server, thus allowing us to run multiple\\n *     scripts at the same time.\\n * (2) Lower our karma.  In a BitNode other than BitNode-2: Rise of the\\n *     Underworld, our karma must be at -54,000 or lower to meet one of the\\n *     requirements for creating a gang.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function commit_crimes(ns) {\\n    // Shoplift.\\n    log(ns, crimes.SHOP);\\n    all_sleeves(ns).forEach((i) => ns.sleeve.setToCommitCrime(i, crimes.SHOP));\\n    while (!has_shoplift_threshold(ns)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    // Mugging people.\\n    log(ns, crimes.MUG);\\n    all_sleeves(ns).forEach((i) => ns.sleeve.setToCommitCrime(i, crimes.MUG));\\n    while (!has_mug_threshold(ns)) {\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    // Homicide.\\n    log(ns, crimes.KILL);\\n    all_sleeves(ns).forEach((i) => ns.sleeve.setToCommitCrime(i, crimes.KILL));\\n}\\n\\n/**\\n * Assign sleeves to commit crimes as a means of earning some money in the early\\n * stages of a BitNode.\\n *\\n * Usage: run sleeve/money.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    ns.disableLog(\\\"sleep\\\");\\n    if (!has_sleeve_api(ns)) {\\n        log(ns, \\\"No access to Sleeve API\\\", colour.RED);\\n        return;\\n    }\\n    log(ns, \\\"Sleeves commit crimes to raise money\\\");\\n    await commit_crimes(ns);\\n}\\n\",\"filename\":\"/sleeve/money.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/08d7b68e-59aa-4750-b4f6-cb0a2c40a819\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/df7719e1-153e-4111-a3c0-f98a202dcd18\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4a44ec78-3e56-4478-8ab5-b493f1d6f7a0\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/410cdee4-cd0c-4ed4-9de9-cc4ca5455028\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/081c117a-2e51-42a9-86f6-287362728eb3\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/bbc3c586-8dde-4582-9bdc-a59ffdd10d8e\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/48976d2a-660a-468b-9b28-4bf0f82732b6\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e50b2ee7-f7d7-4e5d-abe8-06c355ee42ac\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/dc995a34-99df-4aa3-aa35-e8324a6dc7ae\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/sleeve.js\",\"url\":\"blob:https://danielyxie.github.io/9c1cbcd0-3922-491a-a190-27e649057754\",\"moduleSequenceNumber\":68975},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/ff86ace5-0af2-487c-b014-2eab6a1086f7\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/92f698aa-7e8d-4f6b-8800-bdca97197230\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/9a96467e-921c-475d-a48d-b7b97982123b\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/9a2b2d2d-7014-4804-8e76-c0e337b5454f\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1240f448-8278-4833-8203-9adcda7b9dc0\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/45e80b92-21a6-47da-a7c7-b83a0132a648\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/c8039b80-4f75-4b7b-a3ac-6866260c79c0\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/73eec321-3611-483a-8131-da7bf40565c4\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/3a58101f-845f-4665-95d6-d1d9e9affaf5\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/a8eb94ce-af91-4493-9023-80a9a6177a06\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/83903600-a6ce-4aff-954c-cee585501086\",\"moduleSequenceNumber\":68959},{\"filename\":\"/lib/sleeve/util.js\",\"url\":\"blob:https://danielyxie.github.io/765cc5cd-d35c-487b-a5fe-c71eb535dcbb\",\"moduleSequenceNumber\":68999},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/ead33cc6-6bdc-4806-8d71-a2c1d8d5dd09\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/7bbfad47-f461-49ec-8464-f483818f0c3a\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/548b39c7-7a5b-4d82-a615-2df9832c538b\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7856beee-7ed0-4918-a050-7a8f2f35071b\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/148d1761-6a51-4525-acd8-cae3ebaeffe9\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/71d75810-c47d-49a6-801b-f9c07306230c\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/c2178c7c-9692-4a27-b4ab-3374952ec120\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/f14a1fe6-2d7e-4823-a80a-1f139dcd0f1f\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/15d0ae27-d107-412b-b6be-ccec025c8571\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a545beaa-485f-4b04-99e8-7386edb748bd\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/c63a814d-b4b8-408d-8253-d47c9845b2de\",\"moduleSequenceNumber\":68961},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/75c685f8-0f96-4490-a7dc-44aa50f4019b\",\"moduleSequenceNumber\":69000},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/9a4f80af-1e2d-459f-bef7-ea0f6287b582\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/0ab12c2c-7ff6-4a10-918b-edf54ef4eae1\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/55e103cf-1fc9-403e-97f1-64b9a9c41737\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/1fd5f1e2-099a-49d7-bbb2-5496443b27a8\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f09fe065-1f84-46b8-9420-6cf070e0361a\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/ece0bbe5-9569-44b8-ad0a-14c88d9c4bee\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/b14543d5-d72c-4db3-bcb8-48a0dc15668f\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/0939f030-441c-41d0-b445-d5a0f6ee1f6b\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/9b7d3413-d0f7-4fcb-9f31-e06e0bcd5f72\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/595c3b47-1a12-45b4-9ab3-8f6de26860ce\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/355a8553-deae-4484-b84a-bdd349f4e05c\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/68bab4d9-c64f-4409-a26d-ab37cd74d2f6\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/17a8337a-5e31-4594-823c-67a43765b23a\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/crime.js\",\"url\":\"blob:https://danielyxie.github.io/65934cef-ab5e-4a7e-b7aa-920f98f8ffa0\",\"moduleSequenceNumber\":68965},{\"filename\":\"/sleeve/money.js\",\"url\":\"blob:https://danielyxie.github.io/fc6a7809-2d51-4509-9cce-efd3e09f3161\",\"moduleSequenceNumber\":69067}],\"dependents\":[],\"ramUsage\":19.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":796,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"sleeve.setToCommitCrime\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getNumSleeves\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.getSleeveStats\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { colour } from \\\"/lib/constant/misc.js\\\";\\nimport { course } from \\\"/lib/constant/study.js\\\";\\nimport { log } from \\\"/lib/io.js\\\";\\nimport { all_sleeves } from \\\"/lib/sleeve/util.js\\\";\\nimport { has_sleeve_api } from \\\"/lib/source.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Determine the university at which a sleeve should study.\\n *\\n * @param ns The Netscript API.\\n * @param i The index of a sleeve.  Must be a non-negative integer.\\n * @return A string representing the name of the university where a sleeve\\n *     should study.  An empty string if a sleeve is located in a city that does\\n *     not have a university.\\n */\\nfunction choose_university(ns, i) {\\n    assert(i >= 0);\\n    const { city } = ns.sleeve.getInformation(i);\\n    const { uni } = cities[city];\\n    return uni ?? \\\"\\\";\\n}\\n\\n/**\\n * Assign sleeves to study at a university.\\n *\\n * Usage: run sleeve/study.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Sanity check.\\n    if (!has_sleeve_api(ns)) {\\n        log(ns, \\\"No access to Sleeve API\\\", colour.RED);\\n        return;\\n    }\\n    // Study at a university.\\n    log(ns, course.CS);\\n    all_sleeves(ns).forEach((i) => {\\n        const uni = choose_university(ns, i);\\n        assert(uni !== \\\"\\\");\\n        ns.sleeve.setToUniversityCourse(i, uni, course.CS);\\n    });\\n}\\n\",\"filename\":\"/sleeve/study.js\",\"url\":\"\",\"module\":null,\"dependencies\":[{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/3ca13b7c-fce0-456e-813e-72a2884c3c97\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/ee122709-c5a4-44de-be6c-41d157f63c9e\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/84aab8c9-17ce-411f-a3d4-45b6ed94a747\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/e75fbf48-e0c1-43f8-af67-ddd281b6ffb3\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f0c30b78-1863-4e77-b982-57c1c3a398da\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/42d953a0-3969-44de-8bb3-5d44f3afe003\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/59aa80dc-54d1-4e8b-8398-ccaf63cf2004\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/4a62b826-bc57-4c49-bda4-0472060871b7\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/ad4b25d6-76e5-420c-867e-629c898e1b51\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/986b2ba0-0ae6-4b65-9902-21bfa58b3dd2\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/b6e94260-fdb0-4166-8330-7bbfffb6f203\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/4ba74a6b-a60e-4f03-87dc-9d1146ac715a\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/81d8a9cf-8e4c-4d9b-9f85-cd83697a80e9\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/d2650e9a-45b1-4e24-89c6-c5c6e3b5def6\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/0ab3b99f-a3d8-4ff0-8bec-b7fca19f8c26\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/04622271-6546-46e2-97cc-ec4ed8cdf6d1\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e8175d7d-ed4e-4c19-acf4-d11d5913acd6\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/70c6f4cf-c08b-4359-a0fe-2e018c353cb1\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/9ab7a206-00aa-41b7-9bb0-166880e47d05\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/bn.js\",\"url\":\"blob:https://danielyxie.github.io/ebcf54a6-746e-4fd5-983e-157df9bff045\",\"moduleSequenceNumber\":68961},{\"filename\":\"/lib/source.js\",\"url\":\"blob:https://danielyxie.github.io/8c963ab9-ebf0-4be6-aea9-21fd7c85ed13\",\"moduleSequenceNumber\":69000},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/56056aff-29bf-41f2-9d2a-2ae4aa3bc743\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/a04b9eae-5b96-407c-affc-8a7284237608\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/37c60d91-4108-41f8-970c-9fd815437366\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/b453ca7a-a653-4e77-8d31-873c666c462e\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/da91ae63-5aff-4dde-bbdf-7f76663a7afa\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/4838c067-798e-4f8d-8d15-d4034a87f3ed\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/adac8d0d-1327-477a-89bd-ba5591b71239\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e35c048e-c1e3-4387-8451-7599e4a98f3c\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/36e35fa9-3b4b-4c5b-841a-3ca493f26792\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/sleeve.js\",\"url\":\"blob:https://danielyxie.github.io/46023c0b-a042-4c43-8126-3f2a7854bb67\",\"moduleSequenceNumber\":68975},{\"filename\":\"/lib/constant/bool.js\",\"url\":\"blob:https://danielyxie.github.io/a2e68779-ccb1-4d7d-a69f-f89536940770\",\"moduleSequenceNumber\":68962},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/0ba1e597-51ea-4666-a9d9-94e30fa7ed4e\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/065b142e-6d39-4cf1-a54a-0bf1a6ef665e\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/d0288848-9e19-4b69-88e5-23dd2d66efbb\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/d992cb06-db82-4a80-a686-e095d463d83c\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/f62e17a9-6f67-48a1-99d9-be2a263f7588\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/765ab029-41bd-438e-8695-91685aa832b5\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/17ed540d-cc28-4e49-8c97-00ee450999ea\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/7a63eba0-775c-4e9e-a283-c7cb008a1ef3\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/21762514-c3a5-44ba-babc-d3ac75a9579e\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/array.js\",\"url\":\"blob:https://danielyxie.github.io/a5dee16c-ae26-487b-b92f-b0d17ac95b47\",\"moduleSequenceNumber\":68959},{\"filename\":\"/lib/sleeve/util.js\",\"url\":\"blob:https://danielyxie.github.io/16d16b12-bab0-40f0-be45-184a6aad2a84\",\"moduleSequenceNumber\":68999},{\"filename\":\"/lib/constant/wse.js\",\"url\":\"blob:https://danielyxie.github.io/19003ed8-4e8d-4ead-84d4-f09189bcc153\",\"moduleSequenceNumber\":68979},{\"filename\":\"/lib/constant/time.js\",\"url\":\"blob:https://danielyxie.github.io/cace2787-27e9-4d19-94a2-b7d5422bdd1b\",\"moduleSequenceNumber\":68977},{\"filename\":\"/lib/constant/server.js\",\"url\":\"blob:https://danielyxie.github.io/e4bc97ac-69f4-405b-9501-dce4d5a4fdfc\",\"moduleSequenceNumber\":68974},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/8e5f65b8-3359-4ab7-a023-114f542dfad3\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/01da98b1-c1e3-4fb1-98b2-929e040f4996\",\"moduleSequenceNumber\":68971},{\"filename\":\"/lib/constant/io.js\",\"url\":\"blob:https://danielyxie.github.io/f997ffd9-0ede-4210-b981-73287bd1b139\",\"moduleSequenceNumber\":68970},{\"filename\":\"/lib/constant/faction.js\",\"url\":\"blob:https://danielyxie.github.io/f06180f5-a99e-4c7a-9fb2-e40471ca518f\",\"moduleSequenceNumber\":68967},{\"filename\":\"/lib/constant/exe.js\",\"url\":\"blob:https://danielyxie.github.io/e9c16a46-ea29-4add-a4e2-5bfaa58f45fe\",\"moduleSequenceNumber\":68966},{\"filename\":\"/lib/util.js\",\"url\":\"blob:https://danielyxie.github.io/817f31ea-31af-4097-a3da-f281bbe3a183\",\"moduleSequenceNumber\":69001},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/7e7c799b-0e3a-40d7-900b-16e6e5005c25\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/io.js\",\"url\":\"blob:https://danielyxie.github.io/b4d7b647-0bba-4a56-9d67-8077e552a443\",\"moduleSequenceNumber\":68983},{\"filename\":\"/lib/constant/study.js\",\"url\":\"blob:https://danielyxie.github.io/fc524ede-5c30-466c-91c4-a9c244d7b284\",\"moduleSequenceNumber\":68976},{\"filename\":\"/lib/constant/misc.js\",\"url\":\"blob:https://danielyxie.github.io/dca293f2-fd97-45f0-b591-7be6ca53e636\",\"moduleSequenceNumber\":68972},{\"filename\":\"/lib/constant/location.js\",\"url\":\"blob:https://danielyxie.github.io/5f6a426c-cfdf-4b3f-ad91-a00cfb77f620\",\"moduleSequenceNumber\":68971},{\"filename\":\"/sleeve/study.js\",\"url\":\"blob:https://danielyxie.github.io/14d3e302-b3b1-427e-ab17-53fd5ddcb9ce\",\"moduleSequenceNumber\":69047}],\"dependents\":[],\"ramUsage\":19.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":797,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"sleeve.getInformation\",\"cost\":4},{\"type\":\"fn\",\"name\":\"sleeve.setToUniversityCourse\",\"cost\":4},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5},{\"type\":\"fn\",\"name\":\"getOwnedSourceFiles\",\"cost\":5},{\"type\":\"fn\",\"name\":\"sleeve.getNumSleeves\",\"cost\":4},{\"type\":\"fn\",\"name\":\"isFocused\",\"cost\":0.1}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Commit a crime for a given amount of time.\\n *\\n * @param ns The Netscript API.\\n * @param crime A string representing the name of a crime.  We want to commit\\n *     this crime.\\n * @param howlong The amount of time in milliseconds.  We want to commit the\\n *     given crime for this amount of time.\\n */\\nasync function commit_crime(ns, crime, howlong) {\\n    // Sanity checks.\\n    assert(is_valid_crime(crime));\\n    assert(howlong > 0);\\n    // Commit the given crime.\\n    const end_time = Date.now() + howlong;\\n    ns.singularity.commitCrime(crime, bool.FOCUS);\\n    while (Date.now() < end_time) {\\n        await ns.sleep(wait_t.MILLISECOND);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * The gain in each stat.\\n *\\n * @param start An object following the format of the function player_stat().\\n *     Values of various stats before some action.\\n * @param end An object following the format of the function player_stat().\\n *     Values of various stats after some action.\\n * @param d The denominator.  Each gained stat is divided by this number to\\n *     result in an average.  For example, if d represents the number of\\n *     minutes, then the result means the gain per minute.\\n * @return An object following the format of the function player_stat().\\n *     Gained values of various stats.\\n */\\nfunction gained_stats(start, end, d) {\\n    const denom = Math.floor(d);\\n    assert(denom > 0);\\n    return {\\n        agility: (end.agility - start.agility) / denom,\\n        charisma: (end.charisma - start.charisma) / denom,\\n        defense: (end.defense - start.defense) / denom,\\n        dexterity: (end.dexterity - start.dexterity) / denom,\\n        hack: (end.hack - start.hack) / denom,\\n        karma: (end.karma - start.karma) / denom,\\n        money: (end.money - start.money) / denom,\\n        strength: (end.strength - start.strength) / denom,\\n    };\\n}\\n\\n/**\\n * Whether the given crime is valid.\\n *\\n * @param crime A string representing the name of a crime.\\n * @return true if the given crime is valid; false otherwise.\\n */\\nfunction is_valid_crime(crime) {\\n    return Object.values(crimes).includes(crime);\\n}\\n\\n/**\\n * The player's karma.  This is an Easter egg, buried in the source code of the\\n * game.  Refer to this file:\\n *\\n * https://github.com/danielyxie/bitburner/blob/dev/src/NetscriptFunctions/Extra.ts\\n *\\n * @param ns The Netscript API.\\n */\\nfunction karma(ns) {\\n    return ns.heart.break();\\n}\\n\\n/**\\n * Various stats of the player.\\n *\\n * @param ns The Netscript API.\\n * @return An object as follows:\\n *\\n *     {\\n *         agility: // The player's agility.\\n *         charisma: // The player's charisma.\\n *         defense: // The player's defense.\\n *         dexterity: // The player's dexterity.\\n *         hack: // The player's hacking skill.\\n *         karma: // The player's karma.\\n *         money: // The player's money.\\n *         strength: // The player's strength.\\n *     }\\n */\\nfunction player_stat(ns) {\\n    return {\\n        agility: ns.getPlayer().exp.agility,\\n        charisma: ns.getPlayer().exp.charisma,\\n        defense: ns.getPlayer().exp.defense,\\n        dexterity: ns.getPlayer().exp.dexterity,\\n        hack: ns.getPlayer().exp.hacking,\\n        karma: karma(ns),\\n        money: ns.getPlayer().money,\\n        strength: ns.getPlayer().exp.strength,\\n    };\\n}\\n\\n/**\\n * Information on how to use this script.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction usage(ns) {\\n    const msg = \\\"Usage: run test/crime/crime.js [crime]\\\\n\\\\n\\\"\\n        + \\\"crime -- (string) The name of a crime.\\\";\\n    ns.tprint(msg);\\n}\\n\\n/**\\n * Commit a crime for a period of time, currently default to 24 hours.  Then\\n * calculate the amount of negative karma earned per minute as well as other\\n * stat gains.  This script accepts a command line argument.\\n *\\n * Usage: run test/crime/crime.js [crime]\\n * Example: run test/crime/crime.js \\\"shoplift\\\"\\n */\\nexport async function main(ns) {\\n    // Sanity check.\\n    if (ns.args.length !== 1) {\\n        usage(ns);\\n        return;\\n    }\\n    // Commit the given crime and calculate the stat gain per minute.\\n    const crime = ns.args[0];\\n    const start = player_stat(ns);\\n    const minute = 60;\\n    const n = 24;\\n    const howlong = n * wait_t.HOUR;\\n    await commit_crime(ns, crime, howlong);\\n    const end = player_stat(ns);\\n    const denom = n * minute;\\n    const gain = gained_stats(start, end, denom);\\n    ns.tprint(`Crime: ${crime}`);\\n    ns.tprint(`Duration: ${n} hours`);\\n    ns.tprint(\\\"Stat gain per minute.\\\");\\n    ns.tprint(`Agility: ${gain.agility}`);\\n    ns.tprint(`Charisma: ${gain.charisma}`);\\n    ns.tprint(`Defense: ${gain.defense}`);\\n    ns.tprint(`Dexterity: ${gain.dexterity}`);\\n    ns.tprint(`Hack: ${gain.hack}`);\\n    ns.tprint(`Karma: ${gain.karma}`);\\n    ns.tprint(`Money: ${gain.money}`);\\n    ns.tprint(`Strength: ${gain.strength}`);\\n}\\n\",\"filename\":\"/test/crime/crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":8.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":798,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Commit a crime for a given amount of time.\\n *\\n * @param ns The Netscript API.\\n * @param crime A string representing the name of a crime.  We want to commit\\n *     this crime.\\n * @param howlong The amount of time in milliseconds.  We want to commit the\\n *     given crime for this amount of time.\\n */\\nasync function commit_crime(ns, crime, howlong) {\\n    // Sanity checks.\\n    assert(is_valid_crime(crime));\\n    assert(howlong > 0);\\n    // Commit the given crime.\\n    const end_time = Date.now() + howlong;\\n    ns.singularity.commitCrime(crime, bool.FOCUS);\\n    while (Date.now() < end_time) {\\n        await ns.sleep(wait_t.MILLISECOND);\\n    }\\n    ns.singularity.stopAction();\\n}\\n\\n/**\\n * The gain in each stat.\\n *\\n * @param start An object following the format of the function player_stat().\\n *     Values of various stats before some action.\\n * @param end An object following the format of the function player_stat().\\n *     Values of various stats after some action.\\n * @param d The denominator.  Each gained stat is divided by this number to\\n *     result in an average.  For example, if d represents the number of\\n *     minutes, then the result means the gain per minute.\\n * @return An object following the format of the function player_stat().\\n *     Gained values of various stats.\\n */\\nfunction gained_stats(start, end, d) {\\n    const denom = Math.floor(d);\\n    assert(denom > 0);\\n    return {\\n        agility: (end.agility - start.agility) / denom,\\n        charisma: (end.charisma - start.charisma) / denom,\\n        defense: (end.defense - start.defense) / denom,\\n        dexterity: (end.dexterity - start.dexterity) / denom,\\n        hack: (end.hack - start.hack) / denom,\\n        int: (end.int - start.int) / denom,\\n        karma: (end.karma - start.karma) / denom,\\n        money: (end.money - start.money) / denom,\\n        strength: (end.strength - start.strength) / denom,\\n    };\\n}\\n\\n/**\\n * Whether the given crime is valid.\\n *\\n * @param crime A string representing the name of a crime.\\n * @return true if the given crime is valid; false otherwise.\\n */\\nfunction is_valid_crime(crime) {\\n    return Object.values(crimes).includes(crime);\\n}\\n\\n/**\\n * The player's karma.  This is an Easter egg, buried in the source code of the\\n * game.  Refer to this file:\\n *\\n * https://github.com/bitburner-official/bitburner-src/blob/dev/src/NetscriptFunctions/Extra.ts\\n *\\n * @param ns The Netscript API.\\n */\\nfunction karma(ns) {\\n    return ns.heart.break();\\n}\\n\\n/**\\n * Various stats of the player.\\n *\\n * @param ns The Netscript API.\\n * @return An object as follows:\\n *\\n *     {\\n *         agility: // The player's agility.\\n *         charisma: // The player's charisma.\\n *         defense: // The player's defense.\\n *         dexterity: // The player's dexterity.\\n *         hack: // The player's hacking skill.\\n *         int: // The player's intelligence.\\n *         karma: // The player's karma.\\n *         money: // The player's money.\\n *         strength: // The player's strength.\\n *     }\\n */\\nfunction player_stat(ns) {\\n    return {\\n        agility: ns.getPlayer().exp.agility,\\n        charisma: ns.getPlayer().exp.charisma,\\n        defense: ns.getPlayer().exp.defense,\\n        dexterity: ns.getPlayer().exp.dexterity,\\n        hack: ns.getPlayer().exp.hacking,\\n        int: ns.getPlayer().exp.intelligence,\\n        karma: karma(ns),\\n        money: ns.getPlayer().money,\\n        strength: ns.getPlayer().exp.strength,\\n    };\\n}\\n\\n/**\\n * Information on how to use this script.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction usage(ns) {\\n    const msg = \\\"Usage: run test/crime/crime-int.js [crime]\\\\n\\\\n\\\"\\n        + \\\"crime -- (string) The name of a crime.\\\";\\n    ns.tprint(msg);\\n}\\n\\n/**\\n * Commit a crime for a period of time, currently default to 24 hours.  Then\\n * calculate the amount of negative karma earned per minute as well as other\\n * stat gains, including Intelligence.  This script accepts a command line\\n * argument.\\n *\\n * Usage: run test/crime/crime-int.js [crime]\\n * Example: run test/crime/crime-int.js \\\"shoplift\\\"\\n */\\nexport async function main(ns) {\\n    // Sanity check.\\n    if (ns.args.length !== 1) {\\n        usage(ns);\\n        return;\\n    }\\n    // Commit the given crime and calculate the stat gain per minute.\\n    const crime = ns.args[0];\\n    const start = player_stat(ns);\\n    const minute = 60;\\n    const n = 24;\\n    const howlong = n * wait_t.HOUR;\\n    await commit_crime(ns, crime, howlong);\\n    const end = player_stat(ns);\\n    const denom = n * minute;\\n    const gain = gained_stats(start, end, denom);\\n    ns.tprint(`Crime: ${crime}`);\\n    ns.tprint(`Duration: ${n} hours`);\\n    ns.tprint(\\\"Stat gain per minute.\\\");\\n    ns.tprint(`Agility: ${gain.agility}`);\\n    ns.tprint(`Charisma: ${gain.charisma}`);\\n    ns.tprint(`Defense: ${gain.defense}`);\\n    ns.tprint(`Dexterity: ${gain.dexterity}`);\\n    ns.tprint(`Hack: ${gain.hack}`);\\n    ns.tprint(`Intelligence: ${gain.int}`);\\n    ns.tprint(`Karma: ${gain.karma}`);\\n    ns.tprint(`Money: ${gain.money}`);\\n    ns.tprint(`Strength: ${gain.strength}`);\\n}\\n\",\"filename\":\"/test/crime/crime-int.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":8.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":799,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"commitCrime\",\"cost\":5},{\"type\":\"fn\",\"name\":\"stopAction\",\"cost\":1},{\"type\":\"fn\",\"name\":\"hack\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence, intelligence_gain } from \\\"/intelligence/util.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { augment } from \\\"/lib/constant/faction.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport {\\n    choose_augment,\\n    has_augment,\\n    prerequisites,\\n} from \\\"/lib/singularity/augment.js\\\";\\nimport { assert, is_valid_faction } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Augmentations we still need to purchase from a faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to purchase all Augmentations from this faction.\\n * @return An array of Augmentation names.  We do not yet have these\\n *     Augmentations.  This array never includes the NeuroFlux Governor\\n *     Augmentation.  Cannot be an empty array.\\n */\\nfunction augmentations_to_buy(ns, fac) {\\n    // All Augmentations we have not yet purchased from the given faction.\\n    // Exclude the NeuroFlux Governor.\\n    const owned_aug = new Set(\\n        ns.singularity.getOwnedAugmentations(bool.PURCHASED)\\n    );\\n    let fac_aug = ns.singularity.getAugmentationsFromFaction(fac);\\n    fac_aug = fac_aug.filter((a) => !owned_aug.has(a));\\n    if (fac_aug.includes(augment.NFG)) {\\n        fac_aug = fac_aug.filter((a) => a !== augment.NFG);\\n    }\\n    assert(fac_aug.length > 0);\\n    return fac_aug;\\n}\\n\\n/**\\n * Purchase all Augmentations from a faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac We want to buy all Augmentations from this faction.\\n */\\nasync function purchase_augmentations(ns, fac) {\\n    let augmentation = augmentations_to_buy(ns, fac);\\n    assert(augmentation.length > 0);\\n    // Below is our purchasing strategy.\\n    //\\n    // (1) Purchase the most expensive Augmentation first.\\n    // (2) If an Augmentation has a pre-requisite that we have not yet bought,\\n    //     purchase the pre-requisite first.\\n    // (3) Leave the NeuroFlux Governor Augmentation to last.\\n    while (augmentation.length > 0) {\\n        // Choose the most expensive Augmentation.\\n        const aug = choose_augment(ns, augmentation);\\n        if (has_augment(ns, aug)) {\\n            augmentation = augmentation.filter((a) => a !== aug);\\n            continue;\\n        }\\n        // If the most expensive Augmentation has no pre-requisites or we have\\n        // already purchased all of its pre-requisites, then purchase the\\n        // Augmentation.\\n        let prereq = prerequisites(ns, aug);\\n        if (prereq.length === 0) {\\n            await purchase_aug(ns, aug, fac);\\n            augmentation = augmentation.filter((a) => a !== aug);\\n            continue;\\n        }\\n        // If the Augmentation has one or more pre-requisites we have not yet\\n        // purchased, then first purchase the pre-requisites.\\n        while (prereq.length > 0) {\\n            const pre = choose_augment(ns, prereq);\\n            await purchase_aug(ns, pre, fac);\\n            prereq = prereq.filter((a) => a !== pre);\\n        }\\n        await purchase_aug(ns, aug, fac);\\n        augmentation = augmentation.filter((a) => a !== aug);\\n    }\\n    // Level up the NeuroFlux Governor Augmentation as high as our funds allows.\\n    let cost = Math.ceil(ns.singularity.getAugmentationPrice(augment.NFG));\\n    let nfg_rep = Math.ceil(ns.singularity.getAugmentationRepReq(augment.NFG));\\n    let fac_rep = Math.floor(ns.singularity.getFactionRep(fac));\\n    let money = ns.getServerMoneyAvailable(home);\\n    while (cost <= money && nfg_rep <= fac_rep) {\\n        const before = intelligence(ns);\\n        assert(ns.singularity.purchaseAugmentation(fac, augment.NFG));\\n        const after = intelligence(ns);\\n        const action = `Purchase Augmentation ${augment.NFG} from ${fac}`;\\n        intelligence_gain(ns, before, after, action);\\n        cost = Math.ceil(ns.singularity.getAugmentationPrice(augment.NFG));\\n        nfg_rep = Math.ceil(ns.singularity.getAugmentationRepReq(augment.NFG));\\n        fac_rep = Math.floor(ns.singularity.getFactionRep(fac));\\n        money = ns.getServerMoneyAvailable(home);\\n    }\\n}\\n\\n/**\\n * Purchase an Augmentation.\\n *\\n * @param ns The Netscript API.\\n * @param aug We want to purchase this Augmentation.\\n * @param fac We want to purchase the given Augmentation from this faction.\\n */\\nasync function purchase_aug(ns, aug, fac) {\\n    // Purchase any pre-requisites first.\\n    let prereq = prerequisites(ns, aug);\\n    while (prereq.length > 0) {\\n        const pre = choose_augment(ns, prereq);\\n        await purchase_aug(ns, pre, fac);\\n        prereq = prereq.filter((a) => a !== pre);\\n    }\\n    // Having purchased all pre-requisites of an Augmentation, now purchase\\n    // the Augmentation.\\n    let success = false;\\n    const cost = Math.ceil(ns.singularity.getAugmentationPrice(aug));\\n    const before = intelligence(ns);\\n    if (has_augment(ns, aug)) {\\n        return;\\n    }\\n    while (!success) {\\n        assert(!has_augment(ns, aug));\\n        if (ns.getServerMoneyAvailable(home) < cost) {\\n            await ns.sleep(wait_t.DEFAULT);\\n        }\\n        success = ns.singularity.purchaseAugmentation(fac, aug);\\n    }\\n    const after = intelligence(ns);\\n    const action = `Purchase Augmentation ${aug} from ${fac}`;\\n    intelligence_gain(ns, before, after, action);\\n    assert(has_augment(ns, aug));\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from purchasing\\n * Augmentations.  This script accepts a command line argument.\\n *\\n * Usage: run intelligence/augmentation-buy.js [factionName]\\n * Example: run intelligence/augmentation-buy.js Sector-12\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const faction = ns.args[0];\\n    assert(is_valid_faction(faction));\\n    await purchase_augmentations(ns, faction);\\n}\\n\",\"filename\":\"/test/intelligence/augment-buy.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":800}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { io } from \\\"/lib/constant/io.js\\\";\\nimport { intelligence } from \\\"/intelligence/util.js\\\";\\n\\n/**\\n * Install a bunch of Augmentations.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function install_augmentations(ns) {\\n    const before = intelligence(ns);\\n    const file = \\\"/intelligence/value.txt\\\";\\n    await ns.write(file, before, io.WRITE);\\n    const script = \\\"/intelligence/augmentation-post-install.js\\\";\\n    ns.singularity.installAugmentations(script);\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from installing\\n * Augmentations.  This script shows the amount of Intelligence XP prior to\\n * the installation.  We must call another script to determine the Intelligence\\n * XP gain after the installation.\\n *\\n * Usage: run intelligence/augmentation-install.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    await install_augmentations(ns);\\n}\\n\",\"filename\":\"/test/intelligence/augment-install.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":801}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence, intelligence_gain } from \\\"/intelligence/util.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\n\\n/**\\n * Determine the amount of Intelligence XP gained from installing\\n * Augmentations.\\n *\\n * Usage: run intelligence/augmentation-post-install.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const file = \\\"/intelligence/value.txt\\\";\\n    const before = parseFloat(ns.read(file));\\n    const after = intelligence(ns);\\n    const action = \\\"Install Augmentations\\\";\\n    intelligence_gain(ns, before, after, action);\\n    ns.rm(file, home);\\n}\\n\",\"filename\":\"/test/intelligence/augment-post-install.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":802}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    intelligence,\\n    intelligence_gain_per_minute,\\n} from \\\"/intelligence/util.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { crimes } from \\\"/lib/constant/crime.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { greatest_chance } from \\\"/lib/singularity/crime.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Commit a crime for one hour.\\n *\\n * @param ns The Netscript API.\\n * @param c We want to commit this crime.\\n */\\nasync function commit_crime(ns, c) {\\n    assert(c.length > 0);\\n    const before = intelligence(ns);\\n    const n = 60;\\n    ns.singularity.commitCrime(c, bool.FOCUS);\\n    await ns.sleep(wait_t.HOUR);\\n    ns.singularity.stopAction();\\n    const after = intelligence(ns);\\n    const action = `Commit crime: ${c}`;\\n    intelligence_gain_per_minute(ns, before, after, action, n);\\n}\\n\\n/**\\n * Commit various crimes.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function commit_all_crimes(ns) {\\n    let crime = Array.from(Object.values(crimes));\\n    while (crime.length > 0) {\\n        const c = greatest_chance(ns, crime)[0];\\n        await commit_crime(ns, c);\\n        crime = crime.filter((a) => a !== c);\\n    }\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from crime.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    await commit_all_crimes(ns);\\n}\\n\",\"filename\":\"/test/intelligence/crime.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":803}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence } from \\\"/intelligence/util.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { io } from \\\"/lib/constant/io.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { connect_to } from \\\"/lib/singularity/network.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Find and destroy the w0r1d_d43m0n server.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function destroy(ns) {\\n    const server = new Server(ns, \\\"w0r1d_d43m0n\\\");\\n    const player = new Player(ns);\\n    while (player.hacking_skill() < server.hacking_skill()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    while (!server.has_root_access()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n        await server.gain_root_access();\\n    }\\n    assert(player.hacking_skill() >= server.hacking_skill());\\n    assert(server.has_root_access());\\n    // Now hack the target server.\\n    connect_to(ns, player.home(), server.hostname());\\n    const before = intelligence(ns);\\n    const file = \\\"/intelligence/value-daemon.txt\\\";\\n    await ns.write(file, before, io.WRITE);\\n    await ns.singularity.installBackdoor();\\n}\\n\\n/**\\n * Destroy the w0r1d_d43m0n server.\\n *\\n * Usage: run singularity/daemon.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const augment = ns.singularity.getOwnedAugmentations(bool.NOT_PURCHASED);\\n    assert(augment.includes(\\\"The Red Pill\\\"));\\n    await destroy(ns);\\n}\\n\",\"filename\":\"/test/intelligence/daemon.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":804}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    has_invitation,\\n    intelligence,\\n    intelligence_gain,\\n} from \\\"/intelligence/util.js\\\";\\nimport { factions } from \\\"/lib/constant/faction.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * The amount of Intelligence XP gained from joining a faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac The name of the faction we want to join.\\n */\\nfunction join_factions(ns) {\\n    for (const fac of factions.all) {\\n        if (has_invitation(ns, fac)) {\\n            const before = intelligence(ns);\\n            assert(ns.singularity.joinFaction(fac));\\n            const after = intelligence(ns);\\n            const action = `Join faction: ${fac}`;\\n            intelligence_gain(ns, before, after, action);\\n        }\\n    }\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from joining a faction.  We\\n * join all factions for which we have outstanding invitations.\\n *\\n * Usage: run intelligence/faction-join-all.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    join_factions(ns);\\n}\\n\",\"filename\":\"/test/intelligence/faction-join-all.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":805}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    has_invitation,\\n    intelligence,\\n    intelligence_gain,\\n} from \\\"/intelligence/util.js\\\";\\nimport { factions } from \\\"/lib/constant/faction.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Whether the given name represents a valid faction.\\n *\\n * @param fac A string representing the name of a faction.\\n * @return true if the given name represents a valid faction;\\n *     false otherwise.\\n */\\nfunction is_valid_faction(fac) {\\n    assert(fac.length > 0);\\n    const faction = new Set(factions.all);\\n    return faction.has(fac);\\n}\\n\\n/**\\n * The amount of Intelligence XP gained from joining a faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac The name of the faction we want to join.\\n */\\nfunction join_faction(ns, fac) {\\n    assert(is_valid_faction(fac));\\n    if (!has_invitation(ns, fac)) {\\n        return;\\n    }\\n    const before = intelligence(ns);\\n    assert(ns.singularity.joinFaction(fac));\\n    const after = intelligence(ns);\\n    const action = `Join faction: ${fac}`;\\n    intelligence_gain(ns, before, after, action);\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from joining a faction.\\n * This script takes a command line argument.\\n *\\n * Usage: run intelligence/faction-join.js [factionName]\\n * Example: run intelligence/faction-join.js Sector-12\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const faction = ns.args[0];\\n    join_faction(ns, faction);\\n}\\n\",\"filename\":\"/test/intelligence/faction-join.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":806}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence, intelligence_gain } from \\\"/intelligence/util.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { Server } from \\\"/lib/server.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Upgrade the number of Cores on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction upgrade_core(ns) {\\n    const player = new Player(ns);\\n    if (player.money() < ns.singularity.getUpgradeHomeCoresCost()) {\\n        return;\\n    }\\n    const server = new Server(ns, home);\\n    const cores_before = server.cores();\\n    const before = intelligence(ns);\\n    assert(ns.singularity.upgradeHomeCores());\\n    const cores_after = server.cores();\\n    const after = intelligence(ns);\\n    const action = `Upgrade home Cores: ${cores_before} -> ${cores_after}`;\\n    intelligence_gain(ns, before, after, action);\\n}\\n\\n/**\\n * Upgrade the amount of RAM on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction upgrade_ram(ns) {\\n    const player = new Player(ns);\\n    if (player.money() < ns.singularity.getUpgradeHomeRamCost()) {\\n        return;\\n    }\\n    const server = new Server(ns, home);\\n    const ram_before = server.ram_max();\\n    const before = intelligence(ns);\\n    assert(ns.singularity.upgradeHomeRam());\\n    const ram_after = server.ram_max();\\n    const after = intelligence(ns);\\n    const action = `Upgrade home RAM: ${ram_before} -> ${ram_after}`;\\n    intelligence_gain(ns, before, after, action);\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from upgrading the Cores and\\n * RAM on the home server.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    upgrade_ram(ns);\\n    upgrade_core(ns);\\n}\\n\",\"filename\":\"/test/intelligence/home.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":807}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence } from \\\"/intelligence/util.js\\\";\\n\\n/**\\n * The current Intelligence XP of the player.\\n */\\nexport async function main(ns) {\\n    ns.tprint(intelligence(ns));\\n}\\n\",\"filename\":\"/test/intelligence/int.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":808}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    has_program,\\n    intelligence,\\n    intelligence_gain,\\n} from \\\"/intelligence/util.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * All programs that can be created.  These programs can also be purchased via\\n * the dark web.  We exclude Formulas.exe because we permanently unlocked that\\n * program after destroying BitNode 5.\\n */\\nfunction all_programs() {\\n    // A map where the key/value pair is as follows:\\n    //\\n    // key := The name of a program.\\n    // value := The minimum Hack stat at which we are able to create the\\n    //     program.  This value is specific to the current save file.\\n    const program = new Map([\\n        [\\\"BruteSSH.exe\\\", 1],\\n        [\\\"FTPCrack.exe\\\", 24],\\n        [\\\"HTTPWorm.exe\\\", 424],\\n        [\\\"relaySMTP.exe\\\", 174],\\n        [\\\"SQLInject.exe\\\", 674],\\n        [\\\"DeepscanV1.exe\\\", 1],\\n        [\\\"DeepscanV2.exe\\\", 324],\\n        [\\\"ServerProfiler.exe\\\", 1],\\n        [\\\"AutoLink.exe\\\", 1],\\n    ]);\\n    return program;\\n}\\n\\n/**\\n * Whether we can create a given program.\\n *\\n * @param ns The Netscript API.\\n * @param program A string representing the name of the program we want to\\n *     create.\\n * @return true if we meet the requirement to create the given program;\\n *     false otherwise.\\n */\\nfunction can_create(ns, program) {\\n    const prog = all_programs();\\n    const threshold = prog.get(program);\\n    assert(threshold > 0);\\n    return ns.getHackingLevel() >= threshold;\\n}\\n\\n/**\\n * Create a program.\\n *\\n * @param ns The Netscript API.\\n * @param program A string representing the name of the program we want to\\n *     create.\\n */\\nasync function create_program(ns, program) {\\n    // Work on creating the program.\\n    const before = intelligence(ns);\\n    assert(ns.singularity.createProgram(program, bool.FOCUS));\\n    while (ns.singularity.isBusy()) {\\n        await ns.sleep(wait_t.DEFAULT);\\n    }\\n    assert(has_program(ns, program));\\n    const after = intelligence(ns);\\n    const action = `Create program: ${program}`;\\n    intelligence_gain(ns, before, after, action);\\n}\\n\\n/**\\n * Whether a given string represents a valid program.\\n *\\n * @param prog A string representing a program name.\\n * @return true if the given string represents a valid program;\\n *     false otherwise.\\n */\\nfunction is_valid_program(prog) {\\n    assert(prog.length > 0);\\n    const program = all_programs();\\n    return program.has(prog);\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from creating various\\n * programs.  This script accepts a command line argument, i.e. the name\\n * of the program to create.\\n *\\n * Usage: run intelligence/program.js [programName]\\n * Example: run intelligence/program.js BruteSSH.exe\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const prog = ns.args[0];\\n    assert(is_valid_program(prog));\\n    if (has_program(ns, prog)) {\\n        return;\\n    }\\n    assert(can_create(ns, prog));\\n    await create_program(ns, prog);\\n}\\n\",\"filename\":\"/test/intelligence/program.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":809}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    intelligence,\\n    intelligence_gain_per_minute,\\n} from \\\"/intelligence/util.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { random_integer } from \\\"/lib/random.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * An array of all locations in Sector-12.\\n */\\nfunction all_locations() {\\n    const location = [\\n        \\\"Alpha Enterprises\\\",\\n        \\\"Blade Industries\\\",\\n        \\\"Central Intelligence Agency\\\",\\n        \\\"Carmichael Security\\\",\\n        \\\"Sector-12 City Hall\\\",\\n        \\\"DeltaOne\\\",\\n        \\\"FoodNStuff\\\",\\n        \\\"Four Sigma\\\",\\n        \\\"Icarus Microsystems\\\",\\n        \\\"Iron Gym\\\",\\n        \\\"Joe's Guns\\\",\\n        \\\"MegaCorp\\\",\\n        \\\"National Security Agency\\\",\\n        \\\"Powerhouse Gym\\\",\\n        \\\"Rothman University\\\",\\n        \\\"Universal Energy\\\",\\n    ];\\n    return location;\\n}\\n\\n/**\\n * Choose a new location to go to.\\n *\\n * @param loc We are currently at this location.\\n * @return A new location.\\n */\\nfunction choose_location(loc) {\\n    assert(loc.length > 0);\\n    const location = all_locations();\\n    const low = 0;\\n    const high = location.length - 1;\\n    let i = random_integer(low, high);\\n    let new_loc = location[i];\\n    while (loc === new_loc) {\\n        i = random_integer(low, high);\\n        new_loc = location[i];\\n    }\\n    assert(loc !== new_loc);\\n    return new_loc;\\n}\\n\\n/**\\n * Determine the amount of Intelligence XP gained from relocating to a\\n * different place.  We only relocate within Sector-12.\\n *\\n * Usage: intelligence/relocate.js\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    // Relocate to a different place.  Constantly do so within one hour.  The\\n    // execution time is one hour, given in terms of milliseconds.\\n    const end = Date.now() + wait_t.HOUR;\\n    const before = intelligence(ns);\\n    let loc = \\\"FoodNStuff\\\";\\n    while (Date.now() < end) {\\n        assert(ns.singularity.goToLocation(loc));\\n        loc = choose_location(loc);\\n        await ns.sleep(wait_t.SECOND);\\n    }\\n    const after = intelligence(ns);\\n    const action = \\\"Relocate within Sector-12\\\";\\n    const n = 60; // Minutes in one hour.\\n    intelligence_gain_per_minute(ns, before, after, action, n);\\n}\\n\",\"filename\":\"/test/intelligence/relocate.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":810}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    intelligence,\\n    intelligence_gain_per_minute,\\n} from \\\"/intelligence/util.js\\\";\\nimport { bool } from \\\"/lib/constant/bool.js\\\";\\nimport { cities } from \\\"/lib/constant/location.js\\\";\\nimport { course } from \\\"/lib/constant/study.js\\\";\\nimport { wait_t } from \\\"/lib/constant/time.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Study various university courses for an hour each and calculate the\\n * amount of Intelligence gained per minute.\\n *\\n * @param ns The Netscript API.\\n */\\nasync function study(ns) {\\n    const n = 60;\\n    const { uni } = cities[ns.getPlayer().city];\\n    ns.tprint(`Study at ${uni}`);\\n    for (const c of Object.values(course)) {\\n        const action = `Course: ${c}`;\\n        const before = intelligence(ns);\\n        assert(ns.singularity.universityCourse(uni, c, bool.FOCUS));\\n        await ns.sleep(wait_t.HOUR);\\n        ns.singularity.stopAction();\\n        const after = intelligence(ns);\\n        intelligence_gain_per_minute(ns, before, after, action, n);\\n    }\\n}\\n\\n/**\\n * Obtain Intelligence XP by studying at a university.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    await study(ns);\\n}\\n\",\"filename\":\"/test/intelligence/study.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":811}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport {\\n    has_program,\\n    intelligence,\\n    intelligence_gain,\\n} from \\\"/intelligence/util.js\\\";\\nimport { all_programs } from \\\"/lib/constant/exe.js\\\";\\nimport { Player } from \\\"/lib/player.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Use the dark web to purchase various programs.\\n *\\n * @param ns The Netscript API.\\n */\\nfunction purchase_programs(ns) {\\n    const player = new Player(ns);\\n    for (const p of all_programs().keys()) {\\n        // We already have the program.\\n        if (has_program(ns, p)) {\\n            continue;\\n        }\\n        // We do not have enough money to buy the program.\\n        const cost = ns.singularity.getDarkwebProgramCost(p);\\n        if (player.money() < cost) {\\n            continue;\\n        }\\n        // Purchase the program.\\n        const before = intelligence(ns);\\n        assert(ns.singularity.purchaseProgram(p));\\n        const after = intelligence(ns);\\n        const action = `Purchase ${p} via dark web`;\\n        intelligence_gain(ns, before, after, action);\\n    }\\n}\\n\\n/**\\n * Obtain Intelligence XP by purchasing programs through the dark web.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    purchase_programs(ns);\\n}\\n\",\"filename\":\"/test/intelligence/tor-program.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":812}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence, intelligence_gain } from \\\"/intelligence/util.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Obtain Intelligence XP by purchasing the TOR router.\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const before = intelligence(ns);\\n    assert(ns.singularity.purchaseTor());\\n    const after = intelligence(ns);\\n    const action = \\\"Purchase the TOR router\\\";\\n    intelligence_gain(ns, before, after, action);\\n}\\n\",\"filename\":\"/test/intelligence/tor.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":813}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { intelligence, intelligence_gain } from \\\"/intelligence/util.js\\\";\\nimport { assert, is_valid_city } from \\\"/lib/util.js\\\";\\n\\n/**\\n * Determine the amount of Intelligence XP gained from travelling to a\\n * different city.  This script accepts a command line argument.\\n *\\n * Usage: intelligence/travel.js [city]\\n * Usage: intelligence/travel.js Chongqing\\n *\\n * @param ns The Netscript API.\\n */\\nexport async function main(ns) {\\n    const city = ns.args[0];\\n    assert(is_valid_city(city));\\n    const before = intelligence(ns);\\n    assert(ns.singularity.travelToCity(city));\\n    const after = intelligence(ns);\\n    const action = `Travel to ${city}`;\\n    intelligence_gain(ns, before, after, action);\\n}\\n\",\"filename\":\"/test/intelligence/travel.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":0,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":814}},{\"ctor\":\"Script\",\"data\":{\"code\":\"/**\\n * Copyright (C) 2022 Duck McSouls\\n *\\n * This program is free software: you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License as published by\\n * the Free Software Foundation, either version 3 of the License, or\\n * (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n * GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License\\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\nimport { all_programs } from \\\"/lib/constant/exe.js\\\";\\nimport { home } from \\\"/lib/constant/server.js\\\";\\nimport { assert } from \\\"/lib/util.js\\\";\\n\\n// Miscellaneous utility functions.\\n\\n/**\\n * Whether we have an invitation to join a given faction.\\n *\\n * @param ns The Netscript API.\\n * @param fac The name of the faction we want to join.\\n * @return true if we have an invitation to join the given faction;\\n *     false otherwise.\\n */\\nexport function has_invitation(ns, fac) {\\n    const invite = ns.singularity.checkFactionInvitations();\\n    return invite.includes(fac);\\n}\\n\\n/**\\n * Whether we have the given program on our home server.\\n *\\n * @param ns The Netscript API.\\n * @param program A string representing the name of a program.\\n * @return true if we already have the given program;\\n *     false otherwise.\\n */\\nexport function has_program(ns, program) {\\n    assert(is_valid_program(program));\\n    return ns.fileExists(program, home);\\n}\\n\\n/**\\n * The amount of Intelligence XP the player has.\\n *\\n * @param ns The Netscript API.\\n */\\nexport function intelligence(ns) {\\n    return ns.getPlayer().exp.intelligence;\\n}\\n\\n/**\\n * Print the gain in Intelligence XP.\\n *\\n * @param ns The Netscript API.\\n * @param before The amount of Intelligence XP before a certain action.\\n * @param after The amount of Intelligence XP after performing a certain\\n *     action.\\n * @param action The action whose performance might possibly result in a gain\\n *     in Intelligence XP.\\n */\\nexport function intelligence_gain(ns, before, after, action) {\\n    assert(before >= 0);\\n    assert(after >= 0);\\n    assert(action.length > 0);\\n    const gain = after - before;\\n    ns.tprint(action);\\n    ns.tprint(`Intelligence before: ${before}`);\\n    ns.tprint(`Intelligence after: ${after}`);\\n    ns.tprint(`Intelligence gain: ${gain}`);\\n    ns.tprint(\\\"\\\");\\n}\\n\\n/**\\n * Print the gain in Intelligence XP per minute.\\n *\\n * @param ns The Netscript API.\\n * @param before The amount of Intelligence XP before a certain action.\\n * @param after The amount of Intelligence XP after performing a certain\\n *     action.\\n * @param action The action whose performance might possibly result in a gain\\n *     in Intelligence XP.\\n * @param minute Divide the Intelligence XP gain by this many minutes.\\n */\\nexport function intelligence_gain_per_minute(\\n    ns,\\n    before,\\n    after,\\n    action,\\n    minute\\n) {\\n    assert(before >= 0);\\n    assert(after >= 0);\\n    assert(action.length > 0);\\n    assert(minute > 0);\\n    const gain = after - before;\\n    const gpm = gain / minute;\\n    ns.tprint(action);\\n    ns.tprint(`Intelligence before: ${before}`);\\n    ns.tprint(`Intelligence after: ${after}`);\\n    ns.tprint(`Intelligence gain: ${gain}`);\\n    ns.tprint(`Intelligence gain per minute: ${gpm}`);\\n    ns.tprint(\\\"\\\");\\n}\\n\\n/**\\n * Whether the given name is a valid program.\\n *\\n * @param name A string representing the name of a program.\\n * @return true if the given name is a valid program;\\n *     false otherwise.\\n */\\nexport function is_valid_program(name) {\\n    assert(name.length > 0);\\n    const program = all_programs();\\n    return program.has(name);\\n}\\n\",\"filename\":\"/test/intelligence/util.js\",\"url\":\"\",\"module\":null,\"dependencies\":[],\"dependents\":[],\"ramUsage\":5.2,\"queueCompile\":false,\"server\":\"home\",\"moduleSequenceNumber\":815,\"ramUsageEntries\":[{\"type\":\"misc\",\"name\":\"baseCost\",\"cost\":1.6},{\"type\":\"fn\",\"name\":\"checkFactionInvitations\",\"cost\":3},{\"type\":\"fn\",\"name\":\"fileExists\",\"cost\":0.1},{\"type\":\"fn\",\"name\":\"getPlayer\",\"cost\":0.5}]}}],\"serversOnNetwork\":[\"n00dles\",\"foodnstuff\",\"sigma-cosmetics\",\"joesguns\",\"hong-fang-tea\",\"harakiri-sushi\",\"iron-gym\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":true,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}},\"ecorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"ecorp\",\"httpPortOpen\":false,\"ip\":\"77.0.9.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"ECorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":32441060463,\"moneyMax\":811026511575,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1100,\"serverGrowth\":99}},\"megacorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"megacorp\",\"httpPortOpen\":false,\"ip\":\"36.8.3.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"MegaCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":40299747700,\"moneyMax\":1007493692500,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1184,\"serverGrowth\":99}},\"b-and-a\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"b-and-a\",\"httpPortOpen\":false,\"ip\":\"74.7.8.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Bachman & Associates\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":19922255436,\"moneyMax\":498056385900,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":982,\"serverGrowth\":62}},\"blade\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"blade\",\"httpPortOpen\":false,\"ip\":\"23.1.1.4\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Blade Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\",\"megacorp\",\"The-Cave\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":92,\"hackDifficulty\":92,\"minDifficulty\":31,\"moneyAvailable\":12616672763,\"moneyMax\":315416819075,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":957,\"serverGrowth\":83}},\"nwo\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nwo\",\"httpPortOpen\":false,\"ip\":\"95.7.8.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"NWO\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":31568342798,\"moneyMax\":789208569950,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1094,\"serverGrowth\":73}},\"clarkinc\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"clarkinc\",\"httpPortOpen\":false,\"ip\":\"75.5.4.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"beyond-man.lit\",\"cost-of-immortality.lit\"],\"organizationName\":\"Clarke Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":19434018969,\"moneyMax\":485850474225,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1078,\"serverGrowth\":65}},\"omnitek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnitek\",\"httpPortOpen\":false,\"ip\":\"54.0.7.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"coded-intelligence.lit\",\"history-of-synthoids.lit\"],\"organizationName\":\"OmniTek Incorporated\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\",\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":93,\"hackDifficulty\":93,\"minDifficulty\":31,\"moneyAvailable\":13578719098,\"moneyMax\":339467977450,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":927,\"serverGrowth\":95}},\"4sigma\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"4sigma\",\"httpPortOpen\":false,\"ip\":\"62.4.9.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Four Sigma\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"stormtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":68,\"hackDifficulty\":68,\"minDifficulty\":23,\"moneyAvailable\":16337077449,\"moneyMax\":408426936225,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1012,\"serverGrowth\":94}},\"kuai-gong\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"kuai-gong\",\"httpPortOpen\":false,\"ip\":\"43.1.5.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"KuaiGong International\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"vitalife\",\"blade\",\"nwo\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":95,\"hackDifficulty\":95,\"minDifficulty\":32,\"moneyAvailable\":21904642511,\"moneyMax\":547616062775,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1230,\"serverGrowth\":97}},\"fulcrumtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumtech\",\"httpPortOpen\":false,\"ip\":\"59.6.1.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"microdyne\",\"omnitek\",\".\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":86,\"hackDifficulty\":86,\"minDifficulty\":29,\"moneyAvailable\":1567717087,\"moneyMax\":39192927175,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1180,\"serverGrowth\":80}},\"fulcrumassets\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"fulcrumassets\",\"httpPortOpen\":false,\"ip\":\"76.3.9.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Fulcrum Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"powerhouse-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":99,\"hackDifficulty\":99,\"minDifficulty\":33,\"moneyAvailable\":1000000,\"moneyMax\":25000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1186,\"serverGrowth\":1}},\"stormtech\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"stormtech\",\"httpPortOpen\":false,\"ip\":\"60.8.2.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Storm Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"titan-labs\",\"4sigma\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":83,\"hackDifficulty\":83,\"minDifficulty\":28,\"moneyAvailable\":1133242431,\"moneyMax\":28331060775,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1025,\"serverGrowth\":71}},\"defcomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"defcomm\",\"httpPortOpen\":false,\"ip\":\"73.0.7.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DefComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\",\"infocomm\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":94,\"hackDifficulty\":94,\"minDifficulty\":31,\"moneyAvailable\":834813713,\"moneyMax\":20870342825,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":884,\"serverGrowth\":61}},\"infocomm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"infocomm\",\"httpPortOpen\":false,\"ip\":\"11.5.6.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"InfoComm\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"defcomm\",\"applied-energetics\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":886612599,\"moneyMax\":22165314975,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":878,\"serverGrowth\":73}},\"helios\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"helios\",\"httpPortOpen\":false,\"ip\":\"64.3.3.6\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"beyond-man.lit\"],\"organizationName\":\"Helios Labs\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"microdyne\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":93,\"hackDifficulty\":93,\"minDifficulty\":31,\"moneyAvailable\":732105603,\"moneyMax\":18302640075,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":845,\"serverGrowth\":79}},\"vitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"vitalife\",\"httpPortOpen\":false,\"ip\":\"6.7.9.3\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"VitaLife\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"applied-energetics\",\"kuai-gong\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":760926366,\"moneyMax\":19023159150,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":865,\"serverGrowth\":68}},\"icarus\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"icarus\",\"httpPortOpen\":false,\"ip\":\"18.2.1.5\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Icarus Microsystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\",\"taiyang-digital\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":996217501,\"moneyMax\":24905437525,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":898,\"serverGrowth\":94}},\"univ-energy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"univ-energy\",\"httpPortOpen\":false,\"ip\":\"53.5.1.4\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Universal Energy\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"unitalife\",\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":1146813207,\"moneyMax\":28670330175,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":900,\"serverGrowth\":87}},\"titan-labs\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"titan-labs\",\"httpPortOpen\":false,\"ip\":\"42.1.5.8\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"coded-intelligence.lit\"],\"organizationName\":\"Titan Laboratories\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nova-med\",\"stormtech\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":868496986,\"moneyMax\":21712424650,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":844,\"serverGrowth\":63}},\"microdyne\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"microdyne\",\"httpPortOpen\":false,\"ip\":\"83.1.9.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"Microdyne Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"taiyang-digital\",\"fulcrumtech\",\"helios\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":529570943,\"moneyMax\":13239273575,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":847,\"serverGrowth\":77}},\"taiyang-digital\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"taiyang-digital\",\"httpPortOpen\":false,\"ip\":\"50.2.0.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"A-Green-Tomorrow.lit\",\"brighter-than-the-sun.lit\"],\"organizationName\":\"Taiyang Digital\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"icarus\",\"microdyne\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":79,\"hackDifficulty\":79,\"minDifficulty\":26,\"moneyAvailable\":861344436,\"moneyMax\":21533610900,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":872,\"serverGrowth\":74}},\"galactic-cyber\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"galactic-cyber\",\"httpPortOpen\":false,\"ip\":\"10.2.6.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Galactic Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"alpha-ent\",\"omnia\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":56,\"hackDifficulty\":56,\"minDifficulty\":19,\"moneyAvailable\":778166876,\"moneyMax\":19454171900,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":841,\"serverGrowth\":90}},\"aerocorp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aerocorp\",\"httpPortOpen\":false,\"ip\":\"80.7.3.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"AeroCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"millenium-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":80,\"hackDifficulty\":80,\"minDifficulty\":27,\"moneyAvailable\":1043396587,\"moneyMax\":26084914675,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":853,\"serverGrowth\":63}},\"omnia\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omnia\",\"httpPortOpen\":false,\"ip\":\"60.3.8.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"history-of-synthoids.lit\"],\"organizationName\":\"Omnia Cybersystems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"galactic-cyber\",\"zeus-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":91,\"hackDifficulty\":91,\"minDifficulty\":30,\"moneyAvailable\":988422282,\"moneyMax\":24710557050,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":855,\"serverGrowth\":70}},\"zb-def\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-def\",\"httpPortOpen\":false,\"ip\":\"48.4.3.8\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"synthetic-muscles.lit\"],\"organizationName\":\"ZB Defense Industries\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"univ-energy\",\"run4theh111z\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":65,\"hackDifficulty\":65,\"minDifficulty\":22,\"moneyAvailable\":1046617763,\"moneyMax\":26165444075,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":775,\"serverGrowth\":71}},\"applied-energetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"applied-energetics\",\"httpPortOpen\":false,\"ip\":\"19.1.0.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Applied Energetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"infocomm\",\"vitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":64,\"hackDifficulty\":64,\"minDifficulty\":21,\"moneyAvailable\":768883125,\"moneyMax\":19222078125,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":794,\"serverGrowth\":74}},\"solaris\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"solaris\",\"httpPortOpen\":false,\"ip\":\"64.8.0.2\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"A-Green-Tomorrow.lit\",\"the-failed-frontier.lit\"],\"organizationName\":\"Solaris Space Systems\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"deltaone\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":77,\"hackDifficulty\":77,\"minDifficulty\":26,\"moneyAvailable\":741990238,\"moneyMax\":18549755950,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":814,\"serverGrowth\":78}},\"deltaone\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"deltaone\",\"httpPortOpen\":false,\"ip\":\"24.1.6.2\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"DeltaOne\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"snap-fitness\",\"defcomm\",\"solaris\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":82,\"hackDifficulty\":82,\"minDifficulty\":27,\"moneyAvailable\":1454401492,\"moneyMax\":36360037300,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":863,\"serverGrowth\":66}},\"global-pharm\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"global-pharm\",\"httpPortOpen\":false,\"ip\":\"60.6.2.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"A-Green-Tomorrow.lit\"],\"organizationName\":\"Global Pharmaceuticals\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rho-construction\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":84,\"hackDifficulty\":84,\"minDifficulty\":28,\"moneyAvailable\":1670226125,\"moneyMax\":41755653125,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":823,\"serverGrowth\":86}},\"nova-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nova-med\",\"httpPortOpen\":false,\"ip\":\"21.3.4.7\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Nova Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zeus-med\",\"titan-labs\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":75,\"hackDifficulty\":75,\"minDifficulty\":25,\"moneyAvailable\":1205564626,\"moneyMax\":30139115650,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":809,\"serverGrowth\":72}},\"zeus-med\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zeus-med\",\"httpPortOpen\":false,\"ip\":\"6.7.7.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Zeus Medical\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnia\",\"nova-med\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":90,\"hackDifficulty\":90,\"minDifficulty\":30,\"moneyAvailable\":1494176420,\"moneyMax\":37354410500,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":842,\"serverGrowth\":73}},\"unitalife\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"unitalife\",\"httpPortOpen\":false,\"ip\":\"58.7.0.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"UnitaLife Group\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"snap-fitness\",\"icarus\",\"univ-energy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":1032368116,\"moneyMax\":25809202900,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":790,\"serverGrowth\":71}},\"lexo-corp\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"lexo-corp\",\"httpPortOpen\":false,\"ip\":\"92.6.6.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"LexoCorp\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-institute\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":767106266,\"moneyMax\":19177656650,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":665,\"serverGrowth\":60}},\"rho-construction\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"rho-construction\",\"httpPortOpen\":false,\"ip\":\"35.9.3.1\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Rho Construction\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"I.I.I.I\",\"global-pharm\",\"snap-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":44,\"hackDifficulty\":44,\"minDifficulty\":15,\"moneyAvailable\":505099829,\"moneyMax\":12627495725,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":488,\"serverGrowth\":60}},\"alpha-ent\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"alpha-ent\",\"httpPortOpen\":false,\"ip\":\"82.1.3.0\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"Alpha Enterprises\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"I.I.I.I\",\"galactic-cyber\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":61,\"minDifficulty\":20,\"moneyAvailable\":694924077,\"moneyMax\":17373101925,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":559,\"serverGrowth\":53}},\"aevum-police\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"aevum-police\",\"httpPortOpen\":false,\"ip\":\"47.1.5.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Aevum Police Headquarters\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rothman-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":202897660,\"moneyMax\":5072441500,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":431,\"serverGrowth\":31}},\"rothman-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"rothman-uni\",\"httpPortOpen\":false,\"ip\":\"30.3.9.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"tensions-in-tech-race.lit\"],\"organizationName\":\"Rothman University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"the-hub\",\"aevum-police\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":53,\"hackDifficulty\":53,\"minDifficulty\":18,\"moneyAvailable\":244918190,\"moneyMax\":6122954750,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":388,\"serverGrowth\":45}},\"zb-institute\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zb-institute\",\"httpPortOpen\":false,\"ip\":\"89.2.7.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZB Institute of Technology\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"the-hub\",\"lexo-corp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":66,\"hackDifficulty\":66,\"minDifficulty\":22,\"moneyAvailable\":985585026,\"moneyMax\":24639625650,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":751,\"serverGrowth\":82}},\"summit-uni\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"summit-uni\",\"httpPortOpen\":false,\"ip\":\"55.1.2.1\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"secret-societies.lit\",\"the-failed-frontier.lit\",\"synthetic-muscles.lit\"],\"organizationName\":\"Summit University\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"the-hub\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":61,\"hackDifficulty\":61,\"minDifficulty\":20,\"moneyAvailable\":315488803,\"moneyMax\":7887220075,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":451,\"serverGrowth\":44}},\"syscore\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"syscore\",\"httpPortOpen\":false,\"ip\":\"7.7.8.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"SysCore Securities\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"computek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":72,\"hackDifficulty\":72,\"minDifficulty\":24,\"moneyAvailable\":461946291,\"moneyMax\":11548657275,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":555,\"serverGrowth\":60}},\"catalyst\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"catalyst\",\"httpPortOpen\":false,\"ip\":\"92.8.6.5\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"tensions-in-tech-race.lit\"],\"organizationName\":\"Catalyst Ventures\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"avmnite-02h\",\"millenium-fitness\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":70,\"hackDifficulty\":70,\"minDifficulty\":23,\"moneyAvailable\":437334872,\"moneyMax\":10933371800,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":431,\"serverGrowth\":32}},\"the-hub\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"the-hub\",\"httpPortOpen\":false,\"ip\":\"47.8.5.2\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"The Hub\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"silver-helix\",\"rothman-uni\",\"zb-institute\",\"summit-uni\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":36,\"hackDifficulty\":36,\"minDifficulty\":12,\"moneyAvailable\":181631364,\"moneyMax\":4540784100,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":296,\"serverGrowth\":55}},\"computek\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"computek\",\"httpPortOpen\":false,\"ip\":\"84.0.2.1\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"man-and-machine.lit\"],\"organizationName\":\"CompuTek\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omega-net\",\"syscore\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":57,\"hackDifficulty\":57,\"minDifficulty\":19,\"moneyAvailable\":237933895,\"moneyMax\":5948347375,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":391,\"serverGrowth\":48}},\"netlink\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"netlink\",\"httpPortOpen\":false,\"ip\":\"21.6.2.6\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"simulated-reality.lit\"],\"organizationName\":\"NetLink Technologies\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"neo-net\",\"I.I.I.I\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":71,\"hackDifficulty\":71,\"minDifficulty\":24,\"moneyAvailable\":275000000,\"moneyMax\":6875000000,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":403,\"serverGrowth\":71}},\"johnson-ortho\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"johnson-ortho\",\"httpPortOpen\":false,\"ip\":\"28.1.3.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Johnson Orthopedics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":44,\"hackDifficulty\":44,\"minDifficulty\":15,\"moneyAvailable\":73125073,\"moneyMax\":1828126825,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":294,\"serverGrowth\":53}},\"n00dles\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"n00dles\",\"httpPortOpen\":false,\"ip\":\"8.0.4.3\",\"isConnectedTo\":false,\"maxRam\":4,\"messages\":[],\"organizationName\":\"Noodle Bar\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\",\"zer0\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":70000,\"moneyMax\":1750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":3000}},\"foodnstuff\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"foodnstuff\",\"httpPortOpen\":false,\"ip\":\"56.3.4.5\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"sector-12-crime.lit\"],\"organizationName\":\"FoodNStuff\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":10,\"minDifficulty\":3,\"moneyAvailable\":2000000,\"moneyMax\":50000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":5}},\"sigma-cosmetics\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"sigma-cosmetics\",\"httpPortOpen\":false,\"ip\":\"53.2.3.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Sigma Cosmetics\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\",\"max-hardware\",\"CSEC\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":10,\"hackDifficulty\":10,\"minDifficulty\":3,\"moneyAvailable\":2300000,\"moneyMax\":57500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":5,\"serverGrowth\":10}},\"joesguns\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"joesguns\",\"httpPortOpen\":false,\"ip\":\"21.1.6.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Joe's Guns\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":2500000,\"moneyMax\":62500000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":10,\"serverGrowth\":20}},\"zer0\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"zer0\",\"httpPortOpen\":false,\"ip\":\"32.6.6.7\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"ZER0 Nightclub\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"n00dles\",\"neo-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":7500000,\"moneyMax\":187500000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":75,\"serverGrowth\":40}},\"nectar-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"nectar-net\",\"httpPortOpen\":false,\"ip\":\"66.7.8.9\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Nectar Nightclub Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"iron-gym\",\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":2750000,\"moneyMax\":68750000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":20,\"serverGrowth\":25}},\"neo-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"neo-net\",\"httpPortOpen\":false,\"ip\":\"25.9.0.8\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-hidden-world.lit\"],\"organizationName\":\"Neo Nightclub Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zer0\",\"netlink\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":25,\"hackDifficulty\":25,\"minDifficulty\":8,\"moneyAvailable\":5000000,\"moneyMax\":125000000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":50,\"serverGrowth\":25}},\"silver-helix\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"silver-helix\",\"httpPortOpen\":false,\"ip\":\"42.2.5.4\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"new-triads.lit\"],\"organizationName\":\"Silver Helix\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"nectar-net\",\"the-hub\",\"crush-fitness\",\"avmnite-02h\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":45000000,\"moneyMax\":1125000000,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":150,\"serverGrowth\":30}},\"hong-fang-tea\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"hong-fang-tea\",\"httpPortOpen\":false,\"ip\":\"57.3.9.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"brighter-than-the-sun.lit\"],\"organizationName\":\"HongFang Teahouse\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":3000000,\"moneyMax\":75000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":30,\"serverGrowth\":20}},\"harakiri-sushi\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"harakiri-sushi\",\"httpPortOpen\":false,\"ip\":\"26.8.1.1\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"HaraKiri Sushi Bar Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":4000000,\"moneyMax\":100000000,\"numOpenPortsRequired\":0,\"openPortCount\":0,\"requiredHackingSkill\":40,\"serverGrowth\":40}},\"phantasy\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"phantasy\",\"httpPortOpen\":false,\"ip\":\"1.2.2.6\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Phantasy Club\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"max-hardware\",\"johnson-ortho\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":20,\"hackDifficulty\":20,\"minDifficulty\":7,\"moneyAvailable\":24000000,\"moneyMax\":600000000,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":100,\"serverGrowth\":35}},\"max-hardware\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"max-hardware\",\"httpPortOpen\":false,\"ip\":\"85.6.4.0\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Max Hardware Store\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"sigma-cosmetics\",\"phantasy\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":15,\"hackDifficulty\":15,\"minDifficulty\":5,\"moneyAvailable\":10000000,\"moneyMax\":250000000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":80,\"serverGrowth\":30}},\"omega-net\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"omega-net\",\"httpPortOpen\":false,\"ip\":\"95.7.9.9\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[\"the-new-god.lit\"],\"organizationName\":\"Omega Software\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"CSEC\",\"computek\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":33,\"hackDifficulty\":33,\"minDifficulty\":11,\"moneyAvailable\":60578373,\"moneyMax\":1514459325,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":192,\"serverGrowth\":40}},\"crush-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"crush-fitness\",\"httpPortOpen\":false,\"ip\":\"87.9.4.9\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Crush Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"silver-helix\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":39,\"hackDifficulty\":39,\"minDifficulty\":13,\"moneyAvailable\":58555876,\"moneyMax\":1463896900,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":251,\"serverGrowth\":32}},\"iron-gym\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"iron-gym\",\"httpPortOpen\":false,\"ip\":\"88.4.6.3\",\"isConnectedTo\":false,\"maxRam\":32,\"messages\":[],\"organizationName\":\"Iron Gym Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"home\",\"nectar-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":30,\"hackDifficulty\":30,\"minDifficulty\":10,\"moneyAvailable\":20000000,\"moneyMax\":500000000,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":100,\"serverGrowth\":20}},\"millenium-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"millenium-fitness\",\"httpPortOpen\":false,\"ip\":\"22.0.8.6\",\"isConnectedTo\":false,\"maxRam\":256,\"messages\":[],\"organizationName\":\"Millenium Fitness Network\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"catalyst\",\"aerocorp\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":54,\"hackDifficulty\":54,\"minDifficulty\":18,\"moneyAvailable\":250000000,\"moneyMax\":6250000000,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":485,\"serverGrowth\":34}},\"powerhouse-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"powerhouse-fitness\",\"httpPortOpen\":false,\"ip\":\"79.6.5.7\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\"Powerhouse Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"omnitek\",\"ecorp\",\"fulcrumassets\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":62,\"hackDifficulty\":62,\"minDifficulty\":21,\"moneyAvailable\":900000000,\"moneyMax\":22500000000,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":987,\"serverGrowth\":50}},\"snap-fitness\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"snap-fitness\",\"httpPortOpen\":false,\"ip\":\"44.9.8.0\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"Snap Fitness\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"rho-construction\",\"deltaone\",\"unitalife\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":50,\"hackDifficulty\":50,\"minDifficulty\":17,\"moneyAvailable\":450000000,\"moneyMax\":11250000000,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":707,\"serverGrowth\":56}},\"run4theh111z\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"run4theh111z\",\"httpPortOpen\":false,\"ip\":\"2.6.7.1\",\"isConnectedTo\":false,\"maxRam\":128,\"messages\":[\"simulated-reality.lit\",\"the-new-god.lit\"],\"organizationName\":\"The Runners\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"zb-def\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":516,\"serverGrowth\":1}},\"I.I.I.I\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"I.I.I.I\",\"httpPortOpen\":false,\"ip\":\"58.0.8.4\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"I.I.I.I\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"netlink\",\"rho-construction\",\"alpha-ent\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":3,\"openPortCount\":0,\"requiredHackingSkill\":348,\"serverGrowth\":1}},\"avmnite-02h\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"avmnite-02h\",\"httpPortOpen\":false,\"ip\":\"38.6.3.5\",\"isConnectedTo\":false,\"maxRam\":64,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"NiteSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"silver-helix\",\"catalyst\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":2,\"openPortCount\":0,\"requiredHackingSkill\":204,\"serverGrowth\":1}},\".\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\".\",\"httpPortOpen\":false,\"ip\":\"7.2.1.6\",\"isConnectedTo\":false,\"maxRam\":16,\"messages\":[],\"organizationName\":\".\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"fulcrumtech\",\"b-and-a\",\"clarkinc\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":4,\"openPortCount\":0,\"requiredHackingSkill\":522,\"serverGrowth\":1}},\"CSEC\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"CSEC\",\"httpPortOpen\":false,\"ip\":\"96.9.2.5\",\"isConnectedTo\":false,\"maxRam\":8,\"messages\":[\"democracy-is-dead.lit\"],\"organizationName\":\"CyberSec\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"sigma-cosmetics\",\"omega-net\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":1,\"openPortCount\":0,\"requiredHackingSkill\":60,\"serverGrowth\":1}},\"The-Cave\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"The-Cave\",\"httpPortOpen\":false,\"ip\":\"67.5.9.3\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[\"alpha-omega.lit\"],\"organizationName\":\"Helios\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[\"blade\"],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":925,\"serverGrowth\":1}},\"w0r1d_d43m0n\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"w0r1d_d43m0n\",\"httpPortOpen\":false,\"ip\":\"83.1.8.4\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"w0r1d_d43m0n\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":3000,\"serverGrowth\":1}},\"darkweb\":{\"ctor\":\"Server\",\"data\":{\"contracts\":[],\"cpuCores\":1,\"ftpPortOpen\":false,\"hasAdminRights\":false,\"hostname\":\"darkweb\",\"httpPortOpen\":false,\"ip\":\"44.1.0.6\",\"isConnectedTo\":false,\"maxRam\":0,\"messages\":[],\"organizationName\":\"darkweb\",\"programs\":[],\"ramUsed\":0,\"runningScripts\":[],\"scripts\":[],\"serversOnNetwork\":[],\"smtpPortOpen\":false,\"sqlPortOpen\":false,\"sshPortOpen\":false,\"textFiles\":[],\"purchasedByPlayer\":false,\"backdoorInstalled\":false,\"baseDifficulty\":1,\"hackDifficulty\":1,\"minDifficulty\":1,\"moneyAvailable\":0,\"moneyMax\":0,\"numOpenPortsRequired\":5,\"openPortCount\":0,\"requiredHackingSkill\":1,\"serverGrowth\":1}}}","CompaniesSave":"{\"ECorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"ECorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"MegaCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"MegaCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":3,\"salaryMultiplier\":3,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Bachman & Associates\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Bachman & Associates\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.6,\"salaryMultiplier\":2.6,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Blade Industries\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Blade Industries\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"NWO\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NWO\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.75,\"salaryMultiplier\":2.75,\"jobStatReqOffset\":249,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Clarke Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Clarke Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"OmniTek Incorporated\":{\"ctor\":\"Company\",\"data\":{\"name\":\"OmniTek Incorporated\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.25,\"salaryMultiplier\":2.25,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Four Sigma\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Four Sigma\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.5,\"salaryMultiplier\":2.5,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"KuaiGong International\":{\"ctor\":\"Company\",\"data\":{\"name\":\"KuaiGong International\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":2.2,\"salaryMultiplier\":2.2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Fulcrum Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Fulcrum Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Storm Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Storm Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"DefComm\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DefComm\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Helios Labs\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Helios Labs\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"VitaLife\":{\"ctor\":\"Company\",\"data\":{\"name\":\"VitaLife\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Icarus Microsystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Icarus Microsystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Universal Energy\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Universal Energy\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Galactic Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Galactic Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.9,\"salaryMultiplier\":1.9,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"AeroCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"AeroCorp\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Omnia Cybersystems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omnia Cybersystems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Solaris Space Systems\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Solaris Space Systems\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.7,\"salaryMultiplier\":1.7,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"DeltaOne\":{\"ctor\":\"Company\",\"data\":{\"name\":\"DeltaOne\",\"info\":\"\",\"companyPositions\":{\"Chief Executive Officer\":true,\"Operations Manager\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.6,\"salaryMultiplier\":1.6,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Global Pharmaceuticals\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Global Pharmaceuticals\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.8,\"salaryMultiplier\":1.8,\"jobStatReqOffset\":224,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Nova Medical\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Nova Medical\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.75,\"salaryMultiplier\":1.75,\"jobStatReqOffset\":199,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Central Intelligence Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Central Intelligence Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"National Security Agency\":{\"ctor\":\"Company\",\"data\":{\"name\":\"National Security Agency\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true},\"expMultiplier\":2,\"salaryMultiplier\":2,\"jobStatReqOffset\":149,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Watchdog Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Watchdog Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"LexoCorp\":{\"ctor\":\"Company\",\"data\":{\"name\":\"LexoCorp\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Chief Financial Officer\":true,\"Chief Executive Officer\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.4,\"salaryMultiplier\":1.4,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Rho Construction\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Rho Construction\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Alpha Enterprises\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Alpha Enterprises\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Business Intern\":true,\"Business Analyst\":true,\"Business Manager\":true,\"Operations Manager\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true},\"expMultiplier\":1.5,\"salaryMultiplier\":1.5,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Aevum Police Headquarters\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Aevum Police Headquarters\",\"info\":\"\",\"companyPositions\":{\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true,\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"SysCore Securities\":{\"ctor\":\"Company\",\"data\":{\"name\":\"SysCore Securities\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.3,\"salaryMultiplier\":1.3,\"jobStatReqOffset\":124,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"CompuTek\":{\"ctor\":\"Company\",\"data\":{\"name\":\"CompuTek\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"NetLink Technologies\":{\"ctor\":\"Company\",\"data\":{\"name\":\"NetLink Technologies\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":99,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Carmichael Security\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Carmichael Security\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true,\"Network Engineer\":true,\"Network Administrator\":true,\"Security Engineer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"Field Agent\":true,\"Secret Agent\":true,\"Special Operative\":true,\"Police Officer\":true,\"Police Chief\":true,\"Security Guard\":true,\"Security Officer\":true,\"Security Supervisor\":true,\"Head of Security\":true},\"expMultiplier\":1.2,\"salaryMultiplier\":1.2,\"jobStatReqOffset\":74,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"FoodNStuff\":{\"ctor\":\"Company\",\"data\":{\"name\":\"FoodNStuff\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Joe's Guns\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Joe's Guns\",\"info\":\"\",\"companyPositions\":{\"Employee\":true,\"Part-time Employee\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Omega Software\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Omega Software\",\"info\":\"\",\"companyPositions\":{\"Software Engineering Intern\":true,\"Junior Software Engineer\":true,\"Senior Software Engineer\":true,\"Lead Software Developer\":true,\"Head of Software\":true,\"Head of Engineering\":true,\"Vice President of Technology\":true,\"Chief Technology Officer\":true,\"Software Consultant\":true,\"Senior Software Consultant\":true,\"IT Intern\":true,\"IT Analyst\":true,\"IT Manager\":true,\"Systems Administrator\":true},\"expMultiplier\":1.1,\"salaryMultiplier\":1.1,\"jobStatReqOffset\":49,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}},\"Noodle Bar\":{\"ctor\":\"Company\",\"data\":{\"name\":\"Noodle Bar\",\"info\":\"\",\"companyPositions\":{\"Waiter\":true,\"Part-time Waiter\":true},\"expMultiplier\":1,\"salaryMultiplier\":1,\"jobStatReqOffset\":0,\"isPlayerEmployed\":false,\"playerReputation\":1,\"favor\":0,\"isMegacorp\":false}}}","FactionsSave":"{\"Illuminati\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"QLink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Illuminati\",\"playerReputation\":0}},\"Daedalus\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"NEMEAN Subdermal Weave\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"The Red Pill\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Daedalus\",\"playerReputation\":0}},\"The Covenant\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib III\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"SPTN-97 Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Covenant\",\"playerReputation\":0}},\"ECorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"ECorp HVMind Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"ECorp\",\"playerReputation\":0}},\"MegaCorp\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Graphene Bionic Legs Upgrade\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"CordiARC Fusion Reactor\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"MegaCorp\",\"playerReputation\":0}},\"Bachman & Associates\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"SmartJaw\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bachman & Associates\",\"playerReputation\":0}},\"Blade Industries\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"PC Direct-Neural Interface Optimization Submodule\",\"HyperSight Corneal Implant\",\"Neotra\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Blade Industries\",\"playerReputation\":0}},\"NWO\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"ADR-V1 Pheromone Gene\",\"Neurotrainer III\",\"Power Recirculation Core\",\"Xanipher\",\"Hydroflame Left Arm\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NWO\",\"playerReputation\":0}},\"Clarke Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Neuronal Densification\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"ADR-V2 Pheromone Gene\",\"nextSENS Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Clarke Incorporated\",\"playerReputation\":0}},\"OmniTek Incorporated\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Bionic Spine\",\"Bionic Legs\",\"Enhanced Social Interaction Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"PC Direct-Neural Interface\",\"OmniTek InfoLoad\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"OmniTek Incorporated\",\"playerReputation\":0}},\"Four Sigma\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Enhanced Social Interaction Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"FocusWire\",\"PC Direct-Neural Interface\",\"ADR-V1 Pheromone Gene\",\"ADR-V2 Pheromone Gene\",\"Neurotrainer III\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Four Sigma\",\"playerReputation\":0}},\"KuaiGong International\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Bionic Spine\",\"Bionic Legs\",\"Embedded Netburner Module Core V2 Upgrade\",\"Speech Enhancement\",\"FocusWire\",\"HyperSight Corneal Implant\",\"Photosynthetic Cells\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"KuaiGong International\",\"playerReputation\":0}},\"Fulcrum Secret Technologies\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Graphene Bone Lacings\",\"Graphene Bionic Spine Upgrade\",\"Graphene Bionic Legs Upgrade\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Embedded Netburner Module Core V3 Upgrade\",\"Embedded Netburner Module Analyze Engine\",\"Embedded Netburner Module Direct Memory Access Upgrade\",\"PC Direct-Neural Interface Optimization Submodule\",\"PC Direct-Neural Interface NeuroNet Injector\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Fulcrum Secret Technologies\",\"playerReputation\":0}},\"BitRunners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Bio-neural Network Implant\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Embedded Netburner Module Core V2 Upgrade\",\"Neural Accelerator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"Cranial Signal Processors - Gen V\",\"Neurotrainer II\",\"BitRunners Neurolink\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"BitRunners\",\"playerReputation\":0}},\"The Black Hand\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Artificial Synaptic Potentiation\",\"Enhanced Myelin Sheathing\",\"DataJack\",\"Embedded Netburner Module\",\"Embedded Netburner Module Core Implant\",\"Neuralstimulator\",\"Cranial Signal Processors - Gen III\",\"Cranial Signal Processors - Gen IV\",\"The Black Hand\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Black Hand\",\"playerReputation\":0}},\"NiteSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Artificial Synaptic Potentiation\",\"Neural-Retention Enhancement\",\"DataJack\",\"Embedded Netburner Module\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Cranial Signal Processors - Gen III\",\"Neurotrainer II\",\"CRTX42-AA Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"NiteSec\",\"playerReputation\":0}},\"Aevum\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Synaptic Enhancement Implant\",\"Neuralstimulator\",\"Neurotrainer I\",\"PCMatrix\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Aevum\",\"playerReputation\":0}},\"Chongqing\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"Neuregen Gene Modification\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Chongqing\",\"playerReputation\":0}},\"Ishima\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"INFRARET Enhancement\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Ishima\",\"playerReputation\":0}},\"New Tokyo\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"DataJack\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"NutriGen Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"New Tokyo\",\"playerReputation\":0}},\"Sector-12\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"CashRoot Starter Kit\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Sector-12\",\"playerReputation\":0}},\"Volhaven\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Combat Rib I\",\"Combat Rib II\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Neuralstimulator\",\"Nuoptimal Nootropic Injector Implant\",\"DermaForce Particle Barrier\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Volhaven\",\"playerReputation\":0}},\"Speakers for the Dead\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Unstable Circadian Modulator\",\"Synthetic Heart\",\"Synfibril Muscle\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"Speech Enhancement\",\"The Shadow's Simulacrum\",\"Graphene BrachiBlades Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Speakers for the Dead\",\"playerReputation\":0}},\"The Dark Army\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"Wired Reflexes\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"Graphene Bionic Arms Upgrade\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Dark Army\",\"playerReputation\":0}},\"The Syndicate\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"Augmented Targeting I\",\"Augmented Targeting II\",\"Augmented Targeting III\",\"Combat Rib I\",\"Combat Rib II\",\"Combat Rib III\",\"Nanofiber Weave\",\"NEMEAN Subdermal Weave\",\"Wired Reflexes\",\"Bionic Spine\",\"Bionic Legs\",\"ADR-V1 Pheromone Gene\",\"The Shadow's Simulacrum\",\"Power Recirculation Core\",\"BrachiBlades\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"The Syndicate\",\"playerReputation\":0}},\"Silhouette\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Speech Processor Implant\",\"TITN-41 Gene-Modification Injection\",\"ADR-V2 Pheromone Gene\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Silhouette\",\"playerReputation\":0}},\"Tetrads\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"HemoRecirculator\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"Power Recirculation Core\",\"Bionic Arms\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tetrads\",\"playerReputation\":0}},\"Slum Snakes\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Augmented Targeting I\",\"Combat Rib I\",\"Wired Reflexes\",\"LuminCloaking-V1 Skin Implant\",\"LuminCloaking-V2 Skin Implant\",\"SmartSonar Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Slum Snakes\",\"playerReputation\":0}},\"Netburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Hacknet Node CPU Architecture Neural-Upload\",\"Hacknet Node Cache Architecture Neural-Upload\",\"Hacknet Node NIC Architecture Neural-Upload\",\"Hacknet Node Kernel Direct-Neural Interface\",\"Hacknet Node Core Direct-Neural Interface\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Netburners\",\"playerReputation\":0}},\"Tian Di Hui\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"Nanofiber Weave\",\"Wired Reflexes\",\"Speech Processor Implant\",\"Nuoptimal Nootropic Injector Implant\",\"Speech Enhancement\",\"ADR-V1 Pheromone Gene\",\"Social Negotiation Assistant (S.N.A)\",\"Neuroreceptor Management Implant\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Tian Di Hui\",\"playerReputation\":0}},\"CyberSec\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"NeuroFlux Governor\",\"BitWire\",\"Synaptic Enhancement Implant\",\"Cranial Signal Processors - Gen I\",\"Cranial Signal Processors - Gen II\",\"Neurotrainer I\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"CyberSec\",\"playerReputation\":0}},\"Bladeburners\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"EsperTech Bladeburner Eyewear\",\"EMS-4 Recombination\",\"ORION-MKIV Shoulder\",\"Hyperion Plasma Cannon V1\",\"Hyperion Plasma Cannon V2\",\"GOLEM Serum\",\"Vangelis Virus\",\"Vangelis Virus 3.0\",\"I.N.T.E.R.L.I.N.K.E.D\",\"Blade's Runners\",\"BLADE-51b Tesla Armor\",\"BLADE-51b Tesla Armor: Power Cells Upgrade\",\"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\"BLADE-51b Tesla Armor: Unibeam Upgrade\",\"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\"BLADE-51b Tesla Armor: IPU Upgrade\",\"The Blade's Simulacrum\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Bladeburners\",\"playerReputation\":0}},\"Church of the Machine God\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"Stanek's Gift - Genesis\",\"Stanek's Gift - Awakening\",\"Stanek's Gift - Serenity\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Church of the Machine God\",\"playerReputation\":0}},\"Shadows of Anarchy\":{\"ctor\":\"Faction\",\"data\":{\"alreadyInvited\":false,\"augmentations\":[\"SoA - phyzical WKS harmonizer\",\"SoA - Might of Ares\",\"SoA - Wisdom of Athena\",\"SoA - Chaos of Dionysus\",\"SoA - Beauty of Aphrodite\",\"SoA - Trickery of Hermes\",\"SoA - Flood of Poseidon\",\"SoA - Hunt of Artemis\",\"SoA - Knowledge of Apollo\"],\"favor\":0,\"isBanned\":false,\"isMember\":false,\"name\":\"Shadows of Anarchy\",\"playerReputation\":0}}}","AliasesSave":"{}","GlobalAliasesSave":"{}","StockMarketSave":"{\"lastUpdate\":0,\"Orders\":{},\"storedCycles\":0,\"ticksUntilCycle\":0}","SettingsSave":"{\"ActiveScriptsServerPageSize\":100,\"ActiveScriptsScriptPageSize\":100,\"AutosaveInterval\":360,\"CodeInstructionRunTime\":25,\"DisableASCIIArt\":false,\"DisableHotkeys\":false,\"DisableTextEffects\":false,\"DisableOverviewProgressBars\":false,\"EnableBashHotkeys\":false,\"TimestampsFormat\":\"\",\"Locale\":\"en\",\"MaxRecentScriptsCapacity\":50,\"MaxLogCapacity\":50,\"MaxPortCapacity\":50,\"MaxTerminalCapacity\":500,\"OwnedAugmentationsOrder\":1,\"PurchaseAugmentationsOrder\":0,\"RemoteFileApiPort\":0,\"SaveGameOnFileSave\":true,\"SuppressBuyAugmentationConfirmation\":true,\"SuppressFactionInvites\":true,\"SuppressMessages\":true,\"SuppressTravelConfirmation\":true,\"SuppressBladeburnerPopup\":false,\"SuppressTIXPopup\":true,\"SuppressSavedGameToast\":false,\"SuppressAutosaveDisabledWarnings\":false,\"UseIEC60027_2\":false,\"ShowMiddleNullTimeUnit\":false,\"ExcludeRunningScriptsFromSave\":false,\"IsSidebarOpened\":false,\"MonacoTheme\":\"monokai\",\"MonacoInsertSpaces\":false,\"MonacoFontSize\":20,\"MonacoVim\":false,\"MonacoWordWrap\":\"off\",\"theme\":{\"primarylight\":\"#0f0\",\"primary\":\"#0c0\",\"primarydark\":\"#090\",\"successlight\":\"#0f0\",\"success\":\"#0c0\",\"successdark\":\"#090\",\"errorlight\":\"#f00\",\"error\":\"#c00\",\"errordark\":\"#900\",\"secondarylight\":\"#AAA\",\"secondary\":\"#888\",\"secondarydark\":\"#666\",\"warninglight\":\"#ff0\",\"warning\":\"#cc0\",\"warningdark\":\"#990\",\"infolight\":\"#69f\",\"info\":\"#36c\",\"infodark\":\"#039\",\"welllight\":\"#444\",\"well\":\"#222\",\"white\":\"#fff\",\"black\":\"#000\",\"hp\":\"#dd3434\",\"money\":\"#ffd700\",\"hack\":\"#adff2f\",\"combat\":\"#faffdf\",\"cha\":\"#a671d1\",\"int\":\"#6495ed\",\"rep\":\"#faffdf\",\"disabled\":\"#66cfbc\",\"backgroundprimary\":\"#000\",\"backgroundsecondary\":\"#000\",\"button\":\"#333\"},\"styles\":{\"lineHeight\":1.5,\"fontFamily\":\"Lucida Console, Lucida Sans Unicode, Fira Mono, Consolas, Courier New, Courier, monospace, Times New Roman\"},\"overview\":{\"x\":-3,\"y\":4,\"opened\":false},\"EditorTheme\":{\"base\":\"vs-dark\",\"inherit\":true,\"common\":{\"accent\":\"B5CEA8\",\"bg\":\"1E1E1E\",\"fg\":\"D4D4D4\"},\"syntax\":{\"tag\":\"569CD6\",\"entity\":\"569CD6\",\"string\":\"CE9178\",\"regexp\":\"646695\",\"markup\":\"569CD6\",\"keyword\":\"569CD6\",\"comment\":\"6A9955\",\"constant\":\"569CD6\",\"error\":\"F44747\"},\"ui\":{\"line\":\"1E1E1E\",\"panel\":{\"bg\":\"252526\",\"selected\":\"252526\",\"border\":\"1E1E1E\"},\"selection\":{\"bg\":\"ADD6FF26\"}}}}","VersionSave":"26","AllGangsSave":"","LastExportBonus":"1672630073265","StaneksGiftSave":"{\"ctor\":\"StaneksGift\",\"data\":{\"storedCycles\":0,\"fragments\":[]}}"}}